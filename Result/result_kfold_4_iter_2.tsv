There	O	O
are	O	O
several	O	O
ways	O	O
to	O	O
do	O	O
this	O	O
.	O	O
Common	O	O
methods	O	O
use	O	O
recursion	O	O
,	O	O
memoization	O	O
,	O	O
or	O	O
dynamic	O	O
programming	O	O
.	O	O
The	O	O
basic	O	O
idea	O	O
is	O	O
that	O	O
you	O	O
produce	O	O
a	O	O
list	O	O
of	O	O
all	O	O
strings	O	O
of	O	O
length	O	O
1	O	O
,	O	O
then	O	O
in	O	O
each	O	O
iteration	O	O
,	O	O
for	O	O
all	O	O
strings	O	O
produced	O	O
in	O	O
the	O	O
last	O	O
iteration	O	O
,	O	O
add	O	O
that	O	O
string	O	O
concatenated	O	O
with	O	O
each	O	O
character	O	O
in	O	O
the	O	O
string	O	O
individually	O	O
.	O	O
(	O	O
the	O	O
variable	O	O
index	O	O
in	O	O
the	O	O
code	O	O
below	O	O
keeps	O	O
track	O	O
of	O	O
the	O	O
start	O	O
of	O	O
the	O	O
last	O	O
and	O	O
the	O	O
next	O	O
iteration	O	O
)	O	O
Some	O	O
pseudocode	O	O
:	O	O
list	O	O
=	O	O
originalString.split	B-API	B-API
(	I-API	I-API
''	I-API	I-API
)	I-API	I-API
index	O	O
=	O	O
(	O	O
0,0	O	O
)	O	O
list	O	O
=	O	O
[	O	O
``	O	O
''	O	O
]	O	O
for	O	O
iteration	O	O
n	O	O
in	O	O
1	O	O
to	O	O
y	O	O
:	O	O
index	O	O
=	O	O
(	O	O
index	O	O
[	O	O
1	O	O
]	O	O
,	O	O
len	O	B-API
(	O	I-API
list	O	I-API
)	O	I-API
)	O	O
for	O	O
string	O	O
s	O	O
in	O	O
list.subset	B-API	O
(	I-API	O
index	I-API	O
[	I-API	O
0	I-API	O
]	I-API	O
to	I-API	O
end	I-API	O
)	I-API	O
:	O	O
for	O	O
character	O	O
c	O	O
in	O	O
originalString	O	O
:	O	O
list.add	B-API	B-API
(	I-API	I-API
s	I-API	I-API
+	I-API	I-API
c	I-API	I-API
)	I-API	I-API
you	O	O
'd	O	O
then	O	O
need	O	O
to	O	O
remove	O	O
all	O	O
strings	O	O
less	O	O
than	O	O
x	O	O
in	O	O
length	O	O
,	O	O
they	O	O
'll	O	O
be	O	O
the	O	O
first	O	O
(	O	O
x-1	O	O
)	O	O
*	O	O
len	B-API	O
(	I-API	O
originalString	I-API	O
)	I-API	O
entries	O	O
in	O	O
the	O	O
list	O	O
.	O	O
I	O	O
just	O	O
whipped	O	O
this	O	O
up	O	O
quick	O	O
in	O	O
Ruby	O	O
:	O	O
def	O	O
all	O	O
=	O	O
[	O	O
``	O	O
''	O	O
]	O	O
current_array	B-API	O
=	O	O
all.clone	B-API	O
{	O	O
|iteration|	O	O
next_array	O	O
=	O	O
[	O	O
]	O	O
current_array.each	B-API	O
{	O	O
|string|	O	O
possible_characters.each	B-API	O
{	O	O
|c|	O	O
value	O	O
=	O	O
string	O	O
+	O	O
c	O	O
next_array.insert	B-API	O
next_array.length	B-API	O
,	O	O
value	O	O
all.insert	O	O
all.length	O	O
,	O	O
value	O	O
}	O	O
}	O	O
current_array	O	O
=	O	O
next_array	O	O
}	O	O
all.delete_if	O	O
{	O	O
|string|	O	O
string.length	B-API	O
x	O	O
(	O	O
x	O	O
,	O	O
y	O	O
,	O	O
possible_characters	O	O
)	O	O
1.upto	B-API	O
(	I-API	O
y	I-API	O
)	I-API	O
You	O	O
might	O	O
look	O	O
into	O	O
language	O	O
API	O	O
for	O	O
built	O	O
in	O	O
permutation	O	O
type	O	O
functions	O	O
,	O	O
and	O	O
you	O	O
might	O	O
be	O	O
able	O	O
to	O	O
write	O	O
more	O	O
optimized	O	O
code	O	O
,	O	O
but	O	O
if	O	O
the	O	O
numbers	O	O
are	O	O
all	O	O
that	O	O
high	O	O
,	O	O
I	O	O
'm	O	O
not	O	O
sure	O	O
there	O	O
is	O	O
much	O	O
of	O	O
a	O	O
way	O	O
around	O	O
having	O	O
a	O	O
lot	O	O
of	O	O
results	O	O
.	O	O
Anyways	O	O
,	O	O
the	O	O
idea	O	O
behind	O	O
the	O	O
code	O	O
is	O	O
start	O	O
with	O	O
string	O	O
of	O	O
length	O	O
0	O	O
,	O	O
then	O	O
keep	O	O
track	O	O
of	O	O
all	O	O
the	O	O
strings	O	O
of	O	O
length	O	O
Z	O	O
where	O	O
Z	O	O
is	O	O
the	O	O
current	O	O
size	O	O
in	O	O
the	O	O
iteration	O	O
.	O	O
Then	O	O
,	O	O
go	O	O
through	O	O
each	O	O
string	O	O
and	O	O
append	O	O
each	O	O
character	O	O
onto	O	O
each	O	O
string	O	O
.	O	O
Finally	O	O
at	O	O
the	O	O
end	O	O
,	O	O
remove	O	O
any	O	O
that	O	O
were	O	O
below	O	O
the	O	O
x	O	O
threshold	O	O
and	O	O
return	O	O
the	O	O
result	O	O
.	O	O
I	O	O
did	O	O
n't	O	O
test	O	O
it	O	O
with	O	O
potentially	O	O
meaningless	O	O
input	O	O
(	O	O
null	O	O
character	O	O
list	O	O
,	O	O
weird	O	O
values	O	O
of	O	O
x	O	O
and	O	O
y	O	O
,	O	O
etc	O	O
)	O	O
.	O	O
I	O	O
'm	O	O
not	O	O
sure	O	O
why	O	O
you	O	O
would	O	O
want	O	O
to	O	O
do	O	O
this	O	O
in	O	O
the	O	O
first	O	O
place	O	O
.	O	O
The	O	O
resulting	O	O
set	O	O
for	O	O
any	O	O
moderately	O	O
large	O	O
values	O	O
of	O	O
x	O	O
and	O	O
y	O	O
will	O	O
be	O	O
huge	O	O
,	O	O
and	O	O
will	O	O
grow	O	O
exponentially	O	O
as	O	O
x	O	O
and/or	O	O
y	O	O
get	O	O
bigger	O	O
.	O	O
Lets	O	O
say	O	O
your	O	O
set	O	O
of	O	O
possible	O	O
characters	O	O
is	O	O
the	O	O
26	O	O
lowercase	O	O
letters	O	O
of	O	O
the	O	O
alphabet	O	O
,	O	O
and	O	O
you	O	O
ask	O	O
your	O	O
application	O	O
to	O	O
generate	O	O
all	O	O
permutations	O	O
where	O	O
length	O	O
=	O	O
5	O	O
.	O	O
Assuming	O	O
you	O	O
do	O	O
n't	O	O
run	O	O
out	O	O
of	O	O
memory	O	O
you	O	O
'll	O	O
get	O	O
11,881,376	O	O
(	O	O
i.e	O	O
.	O	O
26	O	O
to	O	O
the	O	O
power	O	O
of	O	O
5	O	O
)	O	O
strings	O	O
back	O	O
.	O	O
Bump	O	O
that	O	O
length	O	O
up	O	O
to	O	O
6	O	O
,	O	O
and	O	O
you	O	O
'll	O	O
get	O	O
308,915,776	O	O
strings	O	O
back	O	O
.	O	O
These	O	O
numbers	O	O
get	O	O
painfully	O	O
large	O	O
,	O	O
very	O	O
quickly	O	O
.	O	O
Here	O	O
's	O	O
a	O	O
solution	O	O
I	O	O
put	O	O
together	O	O
in	O	O
Java	O	O
.	O	O
You	O	O
'll	O	O
need	O	O
to	O	O
provide	O	O
two	O	O
runtime	O	O
arguments	O	O
(	O	O
corresponding	O	O
to	O	O
x	O	O
and	O	O
y	O	O
)	O	O
.	O	O
Have	O	O
fun	O	O
.	O	O
public	O	O
class	O	O
GeneratePermutations	B-API	O
{	O	O
public	O	O
static	O	O
void	O	O
{	O	O
int	O	O
lower	O	O
=	O	O
;	O	O
int	O	O
upper	O	O
=	O	O
;	O	O
if	O	O
(	O	O
upper	O	O
lower	O	O
||	O	O
upper	O	O
==	O	O
0	O	O
||	O	O
lower	O	O
==	O	O
0	O	O
)	O	O
{	O	O
;	O	O
}	O	O
for	O	O
(	O	O
int	O	O
length	O	O
=	O	O
lower	O	O
;	O	O
length	O	O
=	O	O
upper	O	O
;	O	O
length++	O	O
)	O	O
{	O	O
;	O	O
}	O	O
}	O	O
private	O	O
static	O	O
void	O	O
{	O	O
if	O	O
(	O	O
length	O	O
=	O	O
0	O	O
)	O	O
{	O	O
;	O	O
}	O	O
else	O	O
{	O	O
for	O	O
(	O	O
char	O	O
c	O	O
=	O	O
'a	O	O
'	O	O
;	O	O
c	O	O
=	O	O
'z	O	O
'	O	O
;	O	O
c++	O	O
)	O	O
{	O	O
;	O	O
}	O	O
}	O	O
(	O	O
String	O	B-API
[	O	I-API
]	O	I-API
args	O	I-API
)	O	I-API
Integer.parseInt	B-API	O
(	I-API	O
args	I-API	O
[	I-API	O
0	I-API	O
]	I-API	O
)	I-API	O
Integer.parseInt	B-API	B-API
(	I-API	O
args	I-API	O
[	I-API	O
1	I-API	O
]	I-API	O
)	I-API	O
System.exit	B-API	B-API
(	I-API	I-API
0	I-API	I-API
)	I-API	I-API
(	O	I-API
length	O	I-API
,	O	I-API
``	O	I-API
''	O	I-API
)	O	I-API
(	O	O
int	O	O
length	O	O
,	O	O
String	O	O
partial	O	O
)	O	O
System.out.println	B-API	O
(	I-API	O
partial	I-API	O
)	I-API	O
(	O	O
length	O	O
-	O	O
1	O	O
,	O	O
partial	O	O
+	O	O
c	O	O
)	O	O
You	O	O
are	O	O
going	O	O
to	O	O
get	O	O
a	O	O
lot	O	O
of	O	O
strings	O	O
,	O	O
that	O	O
's	O	O
for	O	O
sure	O	O
...	O	O
Where	O	O
,	O	O
x	O	O
and	O	O
y	O	O
is	O	O
how	O	O
you	O	O
define	O	O
them	O	O
and	O	O
r	O	O
is	O	O
the	O	O
number	O	O
of	O	O
characters	O	O
we	O	O
are	O	O
selecting	O	O
from	O	O
--	O	O
if	O	O
I	O	O
am	O	O
understanding	O	O
you	O	O
correctly	O	O
.	O	O
You	O	O
should	O	O
definitely	O	O
generate	O	O
these	O	O
as	O	O
needed	O	O
and	O	O
not	O	O
get	O	O
sloppy	O	O
and	O	O
say	O	O
,	O	O
generate	O	O
a	O	O
powerset	O	O
and	O	O
then	O	O
filter	O	O
the	O	O
length	O	O
of	O	O
strings	O	O
.	O	O
The	O	O
following	O	O
definitely	O	O
is	O	O
n't	O	O
the	O	O
best	O	O
way	O	O
to	O	O
generate	O	O
these	O	O
,	O	O
but	O	O
it	O	O
's	O	O
an	O	O
interesting	O	O
aside	O	O
,	O	O
none-the-less	O	O
.	O	O
Knuth	O	O
(	O	O
volume	O	O
4	O	O
,	O	O
fascicle	O	O
2	O	O
,	O	O
7.2.1.3	O	O
)	O	O
tells	O	O
us	O	O
that	O	O
(	O	O
s	O	O
,	O	O
t	O	O
)	O	O
-combination	O	O
is	O	O
equivalent	O	O
to	O	O
s+1	O	O
things	O	O
taken	O	O
t	O	O
at	O	O
a	O	O
time	O	O
with	O	O
repetition	O	O
--	O	O
an	O	O
(	O	O
s	O	O
,	O	O
t	O	O
)	O	O
-combination	O	O
is	O	O
notation	O	O
used	O	O
by	O	O
Knuth	O	O
that	O	O
is	O	O
equal	O	O
to	O	O
.	O	O
We	O	O
can	O	O
figure	O	O
this	O	O
out	O	O
by	O	O
first	O	O
generating	O	O
each	O	O
(	O	O
s	O	O
,	O	O
t	O	O
)	O	O
-combination	O	O
in	O	O
binary	O	O
form	O	O
(	O	O
so	O	O
,	O	O
of	O	O
length	O	B-API
(	O	I-API
s+t	O	I-API
)	O	I-API
)	O	O
and	O	O
counting	O	O
the	O	O
number	O	O
of	O	O
0	O	O
's	O	O
to	O	O
the	O	O
left	O	O
of	O	O
each	O	O
1	O	O
.	O	O
10001000011101	O	O
--	O	O
becomes	O	O
the	O	O
permutation	O	O
:	O	O
{	O	O
0	O	O
,	O	O
3	O	O
,	O	O
4	O	O
,	O	O
4	O	O
,	O	O
4	O	O
,	O	O
1	O	O
}	O	O
First	O	O
you	O	O
will	O	O
need	O	O
some	O	O
GUI	O	O
library	O	O
with	O	O
Python	O	O
bindings	O	O
and	O	O
then	O	O
(	O	O
if	O	O
you	O	O
want	O	O
)	O	O
some	O	O
program	O	O
that	O	O
will	O	O
convert	O	O
your	O	O
python	O	O
scripts	O	O
into	O	O
standalone	O	O
executables	O	O
.	O	O
Cross-platform	O	O
GUI	O	O
libraries	O	O
with	O	O
Python	O	O
bindings	O	O
(	O	O
Windows	O	O
,	O	O
Linux	O	O
,	O	O
Mac	O	O
)	O	O
Of	O	O
course	O	O
,	O	O
there	O	O
are	O	O
many	O	O
,	O	O
but	O	O
the	O	O
most	O	O
popular	O	O
that	O	O
I	O	O
've	O	O
seen	O	O
in	O	O
wild	O	O
are	O	O
:	O	O
Tkinter	O	O
-	O	O
based	O	O
on	O	O
Tk	O	O
GUI	O	O
toolkit	O	O
(	O	O
de-facto	O	O
standard	O	O
GUI	O	O
library	O	O
for	O	O
python	O	O
,	O	O
free	O	O
for	O	O
commercial	O	O
projects	O	O
)	O	O
WxPython	B-API	O
-	O	O
based	O	O
on	O	O
WxWidgets	O	O
(	O	O
very	O	O
popular	O	O
,	O	O
free	O	O
for	O	O
commercial	O	O
projects	O	O
)	O	O
PyQt	O	O
-	O	O
based	O	O
on	O	O
Qt	O	O
(	O	O
also	O	O
very	O	O
popular	O	O
and	O	O
more	O	O
stable	O	O
than	O	O
WxWidgets	O	O
but	O	O
costly	O	O
license	O	O
for	O	O
commercial	O	O
projects	O	O
)	O	O
Complete	O	O
list	O	O
is	O	O
at	O	O
http	O	O
:	O	O
//wiki.python.org/moin/GuiProgramming	O	O
Single	O	O
executable	O	O
(	O	O
Windows	O	O
)	O	O
py2exe	O	O
-	O	O
Probably	O	O
the	O	O
most	O	O
popular	O	O
out	O	O
there	O	O
(	O	O
PyInstaller	B-API	O
is	O	O
also	O	O
gaining	O	O
in	O	O
popularity	O	O
)	O	O
Single	O	O
executable	O	O
(	O	O
Linux	O	O
)	O	O
Freeze	O	O
-	O	O
works	O	O
the	O	O
same	O	O
way	O	O
like	O	O
py2exe	O	O
but	O	O
targets	O	O
Linux	O	O
platform	O	O
Single	O	O
executable	O	O
(	O	O
Mac	O	O
)	O	O
py2app	O	O
-	O	O
again	O	O
,	O	O
works	O	O
like	O	O
py2exe	O	O
but	O	O
targets	O	O
Mac	O	O
OS	O	O
You	O	O
do	O	O
n't	O	O
need	O	O
to	O	O
compile	O	O
python	O	O
for	O	O
Mac/Windows/Linux	O	O
.	O	O
It	O	O
is	O	O
an	O	O
interpreted	O	O
language	O	O
,	O	O
so	O	O
you	O	O
simply	O	O
need	O	O
to	O	O
have	O	O
the	O	O
Python	O	O
interpreter	O	O
installed	O	O
on	O	O
the	O	O
system	O	O
of	O	O
your	O	O
choice	O	O
(	O	O
it	O	O
is	O	O
available	O	O
for	O	O
all	O	O
three	O	O
platforms	O	O
)	O	O
.	O	O
As	O	O
for	O	O
a	O	O
GUI	O	O
library	O	O
that	O	O
works	O	O
cross	O	O
platform	O	O
,	O	O
Python	O	O
's	O	O
Tk/Tcl	O	O
widget	O	O
library	O	O
works	O	O
very	O	O
well	O	O
,	O	O
and	O	O
I	O	O
believe	O	O
is	O	O
sufficiently	O	O
cross	O	O
platform	O	O
.	O	O
Tkinter	O	O
is	O	O
the	O	O
python	O	O
interface	O	O
to	O	O
Tk/Tcl	O	O
From	O	O
the	O	O
python	O	O
project	O	O
webpage	O	O
:	O	O
Tkinter	O	O
is	O	O
not	O	O
the	O	O
only	O	O
GuiProgramming	O	O
toolkit	O	O
for	O	O
Python	O	O
.	O	O
It	O	O
is	O	O
however	O	O
the	O	O
most	O	O
commonly	O	O
used	O	O
one	O	O
,	O	O
and	O	O
almost	O	O
the	O	O
only	O	O
one	O	O
that	O	O
is	O	O
portable	O	O
between	O	O
Unix	O	O
,	O	O
Mac	O	O
and	O	O
Windows	O	O
Since	O	O
python	O	O
is	O	O
installed	O	O
on	O	O
nearly	O	O
every	O	O
non-Windows	O	O
OS	O	O
by	O	O
default	O	O
now	O	O
,	O	O
the	O	O
only	O	O
thing	O	O
you	O	O
really	O	O
need	O	O
to	O	O
make	O	O
sure	O	O
of	O	O
is	O	O
that	O	O
all	O	O
of	O	O
the	O	O
non-standard	O	O
libraries	O	O
you	O	O
use	O	O
are	O	O
installed	O	O
.	O	O
Having	O	O
said	O	O
that	O	O
,	O	O
it	O	O
is	O	O
possible	O	O
to	O	O
build	O	O
executables	O	O
that	O	O
include	O	O
the	O	O
python	O	O
interpreter	O	O
,	O	O
and	O	O
any	O	O
libraries	O	O
you	O	O
use	O	O
.	O	O
This	O	O
is	O	O
likely	O	O
to	O	O
create	O	O
a	O	O
large	O	O
executable	O	O
,	O	O
however	O	O
.	O	O
MacOS	O	O
X	O	O
even	O	O
includes	O	O
support	O	O
in	O	O
the	O	O
Xcode	O	O
IDE	O	O
for	O	O
creating	O	O
full	O	O
standalone	O	O
GUI	O	O
apps	O	O
.	O	O
These	O	O
can	O	O
be	O	O
run	O	O
by	O	O
any	O	O
user	O	O
running	O	O
OS	O	O
X	O	O
.	O	O
I	O	O
'm	O	O
not	O	O
a	O	O
PHP	O	O
dev	O	O
but	O	O
Google	O	O
says	O	O
that	O	O
PHP	O	O
5+	O	O
can	O	O
instantiate	O	O
COM	O	O
components	O	O
.	O	O
If	O	O
you	O	O
can	O	O
install	O	O
Outlook	O	O
on	O	O
a	O	O
box	O	O
you	O	O
could	O	O
write	O	O
a	O	O
PHP	O	O
web	O	O
service	O	O
around	O	O
the	O	O
COM	O	O
component	O	O
to	O	O
handle	O	O
the	O	O
requests	O	O
you	O	O
need	O	O
.	O	O
$	O	O
outlook	O	O
=	O	O
COM	B-API	B-API
(	I-API	I-API
``	I-API	I-API
Outlook.Application	I-API	I-API
''	I-API	I-API
)	I-API	I-API
Outlook	O	O
API	O	O
referance	O	O
I	O	O
have	O	O
not	O	O
used	O	O
PHP	O	O
to	O	O
do	O	O
this	O	O
but	O	O
have	O	O
experience	O	O
in	O	O
using	O	O
C	O	O
#	O	O
to	O	O
achieve	O	O
the	O	O
same	O	O
thing	O	O
.	O	O
The	O	O
Outlook	O	O
API	O	O
is	O	O
a	O	O
way	O	O
of	O	O
automating	O	O
Outlook	O	O
rather	O	O
than	O	O
connecting	O	O
to	O	O
Exchange	O	O
directly	O	O
.	O	O
I	O	O
have	O	O
previously	O	O
taken	O	O
this	O	O
approach	O	O
in	O	O
a	O	O
C	O	O
#	O	O
application	O	O
and	O	O
it	O	O
does	O	O
work	O	O
although	O	O
can	O	O
be	O	O
buggy	O	O
.	O	O
If	O	O
you	O	O
wish	O	O
to	O	O
connect	O	O
directly	O	O
to	O	O
the	O	O
Exchange	O	O
server	O	O
you	O	O
will	O	O
need	O	O
to	O	O
research	O	O
extended	O	O
MAPI	O	O
.	O	O
In	O	O
the	O	O
past	O	O
I	O	O
used	O	O
this	O	O
wrapper	O	O
MAPIEx	O	O
:	O	O
Extended	O	O
MAPI	O	B-API
Wrapper	O	O
.	O	O
It	O	O
is	O	O
a	O	O
C	O	O
#	O	O
project	O	O
but	O	O
I	O	O
believe	O	O
you	O	O
can	O	O
use	O	O
some	O	O
.NET	O	O
code	O	O
on	O	O
a	O	O
PHP5	O	O
Windows	O	O
server	O	O
.	O	O
Alternatively	O	O
it	O	O
has	O	O
a	O	O
C++	O	O
core	O	O
DLL	O	O
that	O	O
you	O	O
may	O	O
be	O	O
a	O	O
able	O	O
to	O	O
use	O	O
.	O	O
I	O	O
have	O	O
found	O	O
it	O	O
to	O	O
be	O	O
very	O	O
good	O	O
and	O	O
there	O	O
are	O	O
some	O	O
good	O	O
example	O	O
applications	O	O
.	O	O
Update	O	O
:	O	O
Sorry	O	O
for	O	O
the	O	O
delay	O	O
no	O	O
current	O	O
way	O	O
to	O	O
keep	O	O
track	O	O
of	O	O
posts	O	O
yet	O	O
.	O	O
I	O	O
do	O	O
agree	O	O
adding	O	O
more	O	O
layer	O	O
on	O	O
to	O	O
your	O	O
application	O	O
and	O	O
relying	O	O
on	O	O
3rd	O	O
party	O	O
code	O	O
can	O	O
be	O	O
scary	O	O
(	O	O
and	O	O
rightfully	O	O
so	O	O
.	O	O
)	O	O
Today	O	O
I	O	O
read	O	O
another	O	O
interesting	O	O
post	O	O
tagged	O	O
up	O	O
as	O	O
MAPI	O	O
that	O	O
is	O	O
on	O	O
a	O	O
different	O	O
subject	O	O
.	O	O
The	O	O
key	O	O
thing	O	O
here	O	O
though	O	O
is	O	O
that	O	O
it	O	O
has	O	O
linked	O	O
to	O	O
this	O	O
important	O	O
MS	O	O
article	O	O
.	O	O
I	O	O
have	O	O
been	O	O
unaware	O	O
of	O	O
the	O	O
issues	O	O
until	O	O
now	O	O
on	O	O
using	O	O
managed	O	O
code	O	O
to	O	O
interface	O	O
to	O	O
MAPI	O	B-API
although	O	O
the	O	O
C++	O	O
code	O	O
in	O	O
the	O	O
component	O	O
should	O	O
be	O	O
unaffected	O	O
by	O	O
this	O	O
error	O	O
as	O	O
it	O	O
is	O	O
unmanaged	O	O
.	O	O
This	O	O
blog	O	O
entry	O	O
also	O	O
suggests	O	O
other	O	O
ways	O	O
to	O	O
connect	O	O
to	O	O
MAPI/Exchange	O	O
server	O	O
.	O	O
In	O	O
this	O	O
case	O	O
due	O	O
to	O	O
these	O	O
new	O	O
facts	O	O
http	O	O
:	O	O
//us3.php.net/imap	O	O
may	O	O
be	O	O
the	O	O
answer	O	O
as	O	O
suggested	O	O
by	O	O
the	O	O
other	O	O
user	O	O
.	O	O
I	O	O
would	O	O
look	O	O
into	O	O
IMAP	O	O
IMAP	O	O
,	O	O
POP3	O	O
and	O	O
NNTP	O	O
Is	O	O
your	O	O
customer	O	O
using	O	O
Exchange	O	O
2007	O	O
?	O	O
If	O	O
so	O	O
,	O	O
I	O	O
'd	O	O
have	O	O
a	O	O
look	O	O
at	O	O
Exchange	O	O
Web	O	O
Services	O	O
.	O	O
If	O	O
not	O	O
,	O	O
as	O	O
hairy	O	O
as	O	O
it	O	O
can	O	O
be	O	O
,	O	O
I	O	O
think	O	O
WebDAV	O	O
is	O	O
your	O	O
best	O	O
bet	O	O
.	O	O
Personally	O	O
I	O	O
do	O	O
n't	O	O
like	O	O
using	O	O
the	O	O
Outlook.Application	B-API	B-API
COM	O	O
object	O	O
route	O	O
,	O	O
as	O	O
its	O	O
security	O	O
prompts	O	O
(	O	O
``	O	O
An	O	O
application	O	O
is	O	O
attempting	O	O
to	O	O
access	O	O
your	O	O
contacts	O	O
.	O	O
Allow	O	O
this	O	O
?	O	O
``	O	O
,	O	O
etc	O	O
.	O	O
)	O	O
can	O	O
cause	O	O
problems	O	O
on	O	O
a	O	O
server	O	O
.	O	O
I	O	O
also	O	O
think	O	O
it	O	O
would	O	O
be	O	O
difficult	O	O
to	O	O
accomplish	O	O
your	O	O
impersonation-like	O	O
tasks	O	O
using	O	O
Outlook	O	O
,	O	O
such	O	O
as	O	O
sending	O	O
mail	O	O
as	O	O
a	O	O
given	O	O
user	O	O
.	O	O
var	O	O
element	O	O
=	O	O
;	O	O
element.style.background	B-API	O
=	O	O
document.getElementById	B-API	B-API
(	I-API	I-API
'element	I-API	I-API
'	I-API	I-API
)	I-API	I-API
In	O	O
general	O	O
,	O	O
CSS	O	O
properties	O	O
are	O	O
converted	O	O
to	O	O
JavaScript	O	O
by	O	O
making	O	O
them	O	O
camelCase	O	O
without	O	O
any	O	O
dashes	O	O
.	O	O
So	O	O
becomes	O	O
.	O	O
function	O	O
setColor	B-API	O
(	I-API	O
element	I-API	O
,	I-API	O
color	I-API	O
)	I-API	O
{	O	O
element.style.backgroundColor	B-API	B-API
=	O	O
color	O	O
;	O	O
}	O	O
Or	O	O
,	O	O
using	O	O
a	O	O
little	O	O
jQuery	O	O
:	O	O
(	O	O
'	O	O
#	O	O
fieldID	O	O
'	O	O
)	O	O
.css	O	B-API
(	O	I-API
'background-color	O	I-API
'	O	I-API
,	O	I-API
'	O	I-API
#	O	I-API
FF6600	O	I-API
'	O	I-API
)	O	I-API
This	O	O
warning	O	O
is	O	O
there	O	O
because	O	O
Java	O	O
is	O	O
not	O	O
actually	O	O
storing	O	O
type	O	O
information	O	O
at	O	O
run-time	O	O
in	O	O
an	O	O
that	O	O
uses	O	O
generics	O	O
.	O	O
Thus	O	O
,	O	O
if	O	O
object	O	O
is	O	O
actually	O	O
a	O	O
,	O	O
there	O	O
will	O	O
be	O	O
no	O	O
at	O	O
run-time	O	O
except	O	O
until	O	O
an	O	O
item	O	O
is	O	O
accessed	O	O
from	O	O
the	O	O
list	O	O
that	O	O
does	O	O
n't	O	O
match	O	O
the	O	O
generic	O	O
type	O	O
defined	O	O
in	O	O
the	O	O
variable	O	O
.	O	O
This	O	O
can	O	O
cause	O	O
further	O	O
complications	O	O
if	O	O
items	O	O
are	O	O
added	O	O
to	O	O
the	O	O
list	O	O
,	O	O
with	O	O
this	O	O
incorrect	O	O
generic	O	O
type	O	O
information	O	O
.	O	O
Any	O	O
code	O	O
still	O	O
holding	O	O
a	O	O
reference	O	O
to	O	O
the	O	O
list	O	O
but	O	O
with	O	O
the	O	O
correct	O	O
generic	O	O
type	O	O
information	O	O
will	O	O
now	O	O
have	O	O
an	O	O
inconsistent	O	O
list	O	O
.	O	O
To	O	O
remove	O	O
the	O	O
warning	O	O
,	O	O
try	O	O
:	O	O
List	O	O
?	O	O
list	O	O
=	O	O
(	O	O
List	O	O
?	O	O
)	O	O
object	O	O
;	O	O
However	O	O
,	O	O
note	O	O
that	O	O
you	O	O
will	O	O
not	O	O
be	O	O
able	O	O
to	O	O
use	O	O
certain	O	O
methods	O	O
such	O	O
as	O	O
add	O	O
because	O	O
the	O	O
compiler	O	O
does	O	O
n't	O	O
know	O	O
if	O	O
you	O	O
are	O	O
trying	O	O
to	O	O
add	O	O
an	O	O
object	O	O
of	O	O
incorrect	O	O
type	O	O
.	O	O
The	O	O
above	O	O
will	O	O
work	O	O
in	O	O
a	O	O
lot	O	O
of	O	O
situations	O	O
,	O	O
but	O	O
if	O	O
you	O	O
have	O	O
to	O	O
use	O	O
add	O	O
,	O	O
or	O	O
some	O	O
similarly	O	O
restricted	O	O
method	O	O
,	O	O
you	O	O
will	O	O
just	O	O
have	O	O
to	O	O
suffer	O	O
the	O	O
yellow	O	O
underline	O	O
in	O	O
Eclipse	O	O
(	O	O
or	O	O
a	O	O
annotation	O	O
)	O	O
.	O	O
Try	O	O
removing	O	O
the	O	O
first	O	O
and	O	O
then	O	O
call	O	O
.	O	O
I	O	O
think	O	O
that	O	O
may	O	O
work	O	O
.	O	O
Essentially	O	O
:	O	O
0x44004500	O	O
Remove	O	O
the	O	O
0x	O	O
,	O	O
and	O	O
then	O	O
always	O	O
two	O	O
bytes	O	O
are	O	O
one	O	O
character	O	O
:	O	O
44	O	O
00	O	O
=	O	O
D	O	O
45	O	O
00	O	O
=	O	O
E	O	O
6F	O	O
00	O	O
=	O	O
o	O	O
72	O	O
00	O	O
=	O	O
r	O	O
So	O	O
it	O	O
's	O	O
definitely	O	O
a	O	O
Unicode/UTF	O	O
format	O	O
with	O	O
two	O	O
bytes/character	O	O
.	O	O
Hazzah	O	O
!	O	O
!	O	O
!	O	O
!	O	O
I	O	O
went	O	O
back	O	O
to	O	O
Michael	O	O
's	O	O
post	O	O
,	O	O
did	O	O
some	O	O
more	O	O
poking	O	O
and	O	O
realized	O	O
that	O	O
I	O	O
did	O	O
need	O	O
to	O	O
do	O	O
a	O	O
double	O	O
conversion	O	O
,	O	O
and	O	O
eventually	O	O
worked	O	O
out	O	O
this	O	O
little	O	O
nugget	O	O
:	O	O
Convert.ToString	B-API	B-API
(	I-API	O
Convert.ToChar	B-API	B-API
(	I-API	I-API
Int32.Parse	B-API	I-API
(	I-API	I-API
EncodedString.Substring	B-API	I-API
(	I-API	I-API
intParseIndex	B-API	I-API
,	I-API	I-API
2	I-API	I-API
)	I-API	I-API
,	I-API	O
System.Globalization.NumberStyles.HexNumber	B-API	B-API
)	I-API	O
)	I-API	O
)	I-API	O
;	O	O
From	O	O
there	O	O
I	O	O
simply	O	O
made	O	O
a	O	O
loop	O	O
to	O	O
go	O	O
through	O	O
all	O	O
the	O	O
characters	O	O
2	O	O
by	O	O
2	O	O
and	O	O
get	O	O
them	O	O
``	O	O
hexified	O	O
''	O	O
and	O	O
then	O	O
translated	O	O
to	O	O
a	O	O
string	O	O
.	O	O
To	O	O
Nick	O	O
,	O	O
and	O	O
anybody	O	O
else	O	O
interested	O	O
,	O	O
I	O	O
went	O	O
ahead	O	O
and	O	O
posted	O	O
my	O	O
little	O	O
application	O	O
over	O	O
in	O	O
CodePlex	O	O
.	O	O
Feel	O	O
free	O	O
to	O	O
use/modify	O	O
as	O	O
you	O	O
need	O	O
.	O	O
The	O	O
solution	O	O
is	O	O
to	O	O
use	O	O
the	O	O
TempData	O	O
property	O	O
to	O	O
store	O	O
the	O	O
desired	O	O
Request	O	O
components	O	O
.	O	O
For	O	O
instance	O	O
:	O	O
public	O	O
ActionResult	O	O
Send	O	O
(	O	O
)	O	O
{	O	O
TempData	O	O
[	O	O
``	O	O
form	O	O
''	O	O
]	O	O
=	O	O
Request.Form	B-API	O
;	O	O
return	O	O
this.RedirectToAction	B-API	O
(	I-API	O
a	I-API	O
=	I-API	O
a.Form	B-API	B-API
(	I-API	I-API
)	I-API	I-API
)	I-API	I-API
;	O	O
}	O	O
Then	O	O
in	O	O
your	O	O
``	O	O
Form	O	O
''	O	O
action	O	O
you	O	O
can	O	O
go	O	O
:	O	O
public	O	O
ActionResult	O	O
Form	O	O
(	O	O
)	O	O
{	O	O
/*	O	O
Declare	O	O
viewData	O	O
etc	O	O
.	O	O
*/	O	O
if	O	O
(	O	O
TempData	O	O
[	O	O
``	O	O
form	O	O
''	O	O
]	O	O
!	O	O
=	O	O
null	O	O
)	O	O
{	O	O
/*	O	O
Cast	O	O
TempData	O	O
[	O	O
``	O	O
form	O	O
''	O	O
]	O	O
to	O	O
System.Collections.Specialized.NameValueCollection	B-API	B-API
and	O	O
use	O	O
it	O	O
*/	O	O
}	O	O
return	O	O
View	B-API	O
(	I-API	O
``	I-API	O
Form	I-API	O
''	I-API	O
,	I-API	O
viewData	I-API	O
)	I-API	O
;	O	O
}	O	O
Keep	O	O
in	O	O
mind	O	O
that	O	O
TempData	O	O
stores	O	O
the	O	O
form	O	O
collection	O	O
in	O	O
session	O	O
.	O	O
If	O	O
you	O	O
do	O	O
n't	O	O
like	O	O
that	O	O
behavior	O	O
,	O	O
you	O	O
can	O	O
implement	O	O
the	O	O
new	O	O
ITempDataProvider	O	O
interface	O	O
and	O	O
use	O	O
some	O	O
other	O	O
mechanism	O	O
for	O	O
storing	O	O
temp	O	O
data	O	O
.	O	O
I	O	O
would	O	O
n't	O	O
do	O	O
that	O	O
unless	O	O
you	O	O
know	O	O
for	O	O
a	O	O
fact	O	O
(	O	O
via	O	O
measurement	O	O
and	O	O
profiling	O	O
)	O	O
that	O	O
the	O	O
use	O	O
of	O	O
Session	O	O
state	O	O
is	O	O
hurting	O	O
you	O	O
.	O	O
Not	O	O
Java	O	O
per-se	O	O
,	O	O
but	O	O
you	O	O
may	O	O
run	O	O
into	O	O
issues	O	O
where	O	O
you	O	O
have	O	O
written	O	O
something	O	O
to	O	O
a	O	O
file	O	O
,	O	O
but	O	O
it	O	O
has	O	O
n't	O	O
been	O	O
actually	O	O
written	O	O
yet	O	O
-	O	O
it	O	O
might	O	O
be	O	O
in	O	O
a	O	O
cache	O	O
somewhere	O	O
,	O	O
and	O	O
reading	O	O
from	O	O
the	O	O
same	O	O
file	O	O
may	O	O
not	O	O
actually	O	O
give	O	O
you	O	O
the	O	O
new	O	O
information	O	O
.	O	O
Short	O	O
version	O	O
-	O	O
use	O	O
flush	B-API	B-API
(	I-API	I-API
)	I-API	I-API
or	O	O
whatever	O	O
the	O	O
relevant	O	O
system	O	O
call	O	O
is	O	O
to	O	O
ensure	O	O
that	O	O
your	O	O
data	O	O
is	O	O
actually	O	O
written	O	O
to	O	O
the	O	O
file	O	O
.	O	O
Note	O	O
I	O	O
am	O	O
not	O	O
talking	O	O
about	O	O
the	O	O
OS	O	O
level	O	O
disk	O	O
cache	O	O
-	O	O
if	O	O
your	O	O
data	O	O
gets	O	O
into	O	O
here	O	O
,	O	O
it	O	O
should	O	O
appear	O	O
in	O	O
a	O	O
read	B-API	B-API
(	I-API	I-API
)	I-API	I-API
after	O	O
this	O	O
point	O	O
.	O	O
It	O	O
may	O	O
be	O	O
that	O	O
the	O	O
language	O	O
itself	O	O
caches	O	O
writes	O	O
,	O	O
waiting	O	O
until	O	O
a	O	O
buffer	O	O
fills	O	O
up	O	O
or	O	O
file	O	O
is	O	O
flushed/closed	O	O
.	O	O
I	O	O
've	O	O
never	O	O
tried	O	O
it	O	O
,	O	O
but	O	O
you	O	O
should	O	O
write	O	O
a	O	O
test	O	O
case	O	O
to	O	O
see	O	O
if	O	O
reading	O	O
from	O	O
a	O	O
stream	O	O
after	O	O
you	O	O
have	O	O
hit	O	O
the	O	O
end	O	O
will	O	O
work	O	O
,	O	O
regardless	O	O
of	O	O
if	O	O
there	O	O
is	O	O
more	O	O
data	O	O
written	O	O
to	O	O
the	O	O
file	O	O
.	O	O
Is	O	O
there	O	O
a	O	O
reason	O	O
you	O	O
ca	O	O
n't	O	O
use	O	O
a	O	O
piped	O	O
input/output	O	O
stream	O	O
?	O	O
Is	O	O
the	O	O
data	O	O
being	O	O
written	O	O
and	O	O
read	O	O
from	O	O
the	O	O
same	O	O
application	O	O
(	O	O
if	O	O
so	O	O
,	O	O
you	O	O
have	O	O
the	O	O
data	O	O
,	O	O
why	O	O
do	O	O
you	O	O
need	O	O
to	O	O
read	O	O
from	O	O
the	O	O
file	O	O
)	O	O
?	O	O
Otherwise	O	O
,	O	O
maybe	O	O
read	O	O
till	O	O
end	O	O
of	O	O
file	O	O
,	O	O
then	O	O
monitor	O	O
for	O	O
changes	O	O
and	O	O
seek	O	O
to	O	O
where	O	O
you	O	O
left	O	O
off	O	O
and	O	O
continue	O	O
...	O	O
though	O	O
watch	O	O
out	O	O
for	O	O
race	O	O
conditions	O	O
.	O	O
The	O	O
answer	O	O
seems	O	O
to	O	O
be	O	O
``	O	O
no	O	O
''	O	O
...	O	O
and	O	O
``	O	O
yes	O	O
''	O	O
.	O	O
There	O	O
seems	O	O
to	O	O
be	O	O
no	O	O
real	O	O
way	O	O
to	O	O
know	O	O
if	O	O
a	O	O
file	O	O
is	O	O
open	O	O
for	O	O
writing	O	O
by	O	O
another	O	O
application	O	O
.	O	O
So	O	O
,	O	O
reading	O	O
from	O	O
such	O	O
a	O	O
file	O	O
will	O	O
just	O	O
progress	O	O
until	O	O
content	O	O
is	O	O
exhausted	O	O
.	O	O
I	O	O
took	O	O
Mike	O	O
's	O	O
advice	O	O
and	O	O
wrote	O	O
some	O	O
test	O	O
code	O	O
:	O	O
Writer.java	O	O
writes	O	O
a	O	O
string	O	O
to	O	O
file	O	O
and	O	O
then	O	O
waits	O	O
for	O	O
the	O	O
user	O	O
to	O	O
hit	O	O
enter	O	O
before	O	O
writing	O	O
another	O	O
line	O	O
to	O	O
file	O	O
.	O	O
The	O	O
idea	O	O
being	O	O
that	O	O
it	O	O
could	O	O
be	O	O
started	O	O
up	O	O
,	O	O
then	O	O
a	O	O
reader	O	O
can	O	O
be	O	O
started	O	O
to	O	O
see	O	O
how	O	O
it	O	O
copes	O	O
with	O	O
the	O	O
``	O	O
partial	O	O
''	O	O
file	O	O
.	O	O
The	O	O
reader	O	O
I	O	O
wrote	O	O
is	O	O
in	O	O
Reader.java	O	O
.	O	O
Writer.java	O	O
public	B-API	O
class	B-API	O
Writer	B-API	O
extends	B-API	O
Object	B-API	O
{	I-API	O
Writer	B-API	O
(	B-API	O
)	I-API	O
{	B-API	O
}	B-API	O
public	B-API	O
static	B-API	O
String	B-API	O
[	I-API	O
]	I-API	O
strings	B-API	O
=	B-API	O
{	B-API	O
``	B-API	O
Hello	I-API	O
World	B-API	O
''	I-API	O
,	I-API	O
``	B-API	O
Goodbye	I-API	O
World	B-API	O
''	I-API	O
}	B-API	O
;	I-API	O
public	B-API	O
static	B-API	O
void	B-API	O
throws	B-API	O
java.io.IOException	B-API	B-API
{	B-API	B-API
java.io.PrintWriter	B-API	B-API
pw	B-API	I-API
=	B-API	I-API
new	B-API	I-API
,	B-API	I-API
true	B-API	I-API
)	I-API	I-API
;	I-API	O
{	B-API	O
;	B-API	O
;	B-API	O
}	B-API	O
;	B-API	O
(	O	O
String	O	B-API
[	O	I-API
]	O	I-API
args	O	I-API
)	O	I-API
(	O	O
new	O	O
java.io.FileOutputStream	O	B-API
(	O	I-API
``	O	I-API
out.txt	O	I-API
''	O	I-API
)	O	I-API
(	O	O
String	O	O
s	O	O
:	O	O
strings	O	O
)	O	O
pw.println	B-API	B-API
(	I-API	I-API
s	I-API	I-API
)	I-API	I-API
System.in.read	B-API	B-API
(	I-API	I-API
)	I-API	I-API
pw.close	B-API	B-API
(	I-API	I-API
)	I-API	I-API
Reader.java	O	O
public	B-API	O
class	B-API	O
Reader	B-API	O
extends	B-API	O
Object	B-API	O
{	I-API	O
Reader	B-API	O
(	B-API	O
)	I-API	O
{	B-API	O
}	B-API	O
public	B-API	O
static	B-API	O
void	B-API	O
throws	B-API	O
Exception	B-API	O
{	B-API	O
java.io.FileInputStream	B-API	B-API
in	B-API	O
=	B-API	O
new	B-API	O
;	B-API	O
java.nio.channels.FileChannel	B-API	B-API
fc	B-API	O
=	B-API	O
;	B-API	O
java.nio.ByteBuffer	B-API	B-API
bb	B-API	O
=	B-API	O
;	B-API	O
=	B-API	O
0	B-API	O
)	I-API	O
{	B-API	O
;	B-API	O
)	B-API	O
{	B-API	O
)	B-API	O
;	I-API	O
}	B-API	O
;	B-API	O
}	B-API	O
;	B-API	O
(	O	O
String	O	B-API
[	O	I-API
]	O	I-API
args	O	I-API
)	O	I-API
java.io.FileInputStream	B-API	B-API
(	I-API	I-API
``	I-API	I-API
out.txt	I-API	I-API
''	I-API	I-API
)	I-API	I-API
in.getChannel	B-API	B-API
(	I-API	I-API
)	I-API	I-API
java.nio.ByteBuffer.allocate	B-API	B-API
(	I-API	I-API
10	I-API	I-API
)	I-API	I-API
while	B-API	O
(	I-API	O
fc.read	I-API	B-API
(	I-API	I-API
bb	I-API	I-API
)	I-API	I-API
bb.flip	B-API	B-API
(	I-API	I-API
)	I-API	I-API
while	B-API	O
(	I-API	O
bb.hasRemaining	I-API	B-API
(	I-API	I-API
)	I-API	I-API
System.out.println	B-API	B-API
(	I-API	I-API
(	I-API	I-API
char	I-API	I-API
)	I-API	I-API
bb.get	I-API	B-API
(	I-API	I-API
)	I-API	I-API
bb.clear	B-API	B-API
(	I-API	I-API
)	I-API	I-API
System.exit	B-API	B-API
(	I-API	I-API
0	I-API	I-API
)	I-API	I-API
No	O	O
guarantees	O	O
that	O	O
this	O	O
code	O	O
is	O	O
best	O	O
practice	O	O
.	O	O
This	O	O
leaves	O	O
the	O	O
option	O	O
suggested	O	O
by	O	O
Mike	O	O
of	O	O
periodically	O	O
checking	O	O
if	O	O
there	O	O
is	O	O
new	O	O
data	O	O
to	O	O
be	O	O
read	O	O
from	O	O
the	O	O
file	O	O
.	O	O
This	O	O
then	O	O
requires	O	O
user	O	O
intervention	O	O
to	O	O
close	O	O
the	O	O
file	O	O
reader	O	O
when	O	O
it	O	O
is	O	O
determined	O	O
that	O	O
the	O	O
reading	O	O
is	O	O
completed	O	O
.	O	O
Or	O	O
,	O	O
the	O	O
reader	O	O
needs	O	O
to	O	O
be	O	O
made	O	O
aware	O	O
the	O	O
content	O	O
of	O	O
the	O	O
file	O	O
and	O	O
be	O	O
able	O	O
to	O	O
determine	O	O
and	O	O
end	O	O
of	O	O
write	O	O
condition	O	O
.	O	O
If	O	O
the	O	O
content	O	O
were	O	O
XML	O	O
,	O	O
the	O	O
end	O	O
of	O	O
document	O	O
could	O	O
be	O	O
used	O	O
to	O	O
signal	O	O
this	O	O
.	O	O
As	O	O
the	O	O
compiler	O	O
is	O	O
telling	O	O
you	O	O
,	O	O
you	O	O
need	O	O
to	O	O
change	O	O
your	O	O
return	O	O
type	O	O
to	O	O
IEnumerable	O	O
.	O	O
That	O	O
is	O	O
how	O	O
the	O	O
yield	O	O
return	O	O
syntax	O	O
works	O	O
.	O	O
//	O	O
Generic	O	O
function	O	O
that	O	O
gets	O	O
all	O	O
child	O	O
controls	O	O
of	O	O
a	O	O
certain	O	O
type	O	O
,	O	O
//	O	O
returned	O	O
in	O	O
a	O	O
List	O	O
collection	O	O
private	O	O
static	O	O
ListT	O	O
GetChildTextBoxesT	O	O
(	O	O
Control	O	O
ctrl	O	O
)	O	O
where	O	O
T	O	O
:	O	O
Control	O	O
{	O	O
ListT	O	O
tbs	O	O
=	O	O
new	O	O
ListT	O	O
(	O	O
)	O	O
;	O	O
foreach	O	O
(	O	O
Control	O	O
c	O	O
in	O	O
ctrl.Controls	O	O
)	O	O
{	O	O
//	O	O
If	O	O
c	O	O
is	O	O
of	O	O
type	O	O
T	O	O
,	O	O
add	O	O
it	O	O
to	O	O
the	O	O
collection	O	O
if	O	O
(	O	O
c	O	O
is	O	O
T	O	O
)	O	O
{	O	O
tbs.Add	O	O
(	O	O
(	O	O
T	O	O
)	O	O
c	O	O
)	O	O
;	O	O
}	O	O
}	O	O
return	O	O
tbs	O	O
;	O	O
}	O	O
private	O	O
static	O	O
void	O	O
SetChildTextBoxesHeight	O	O
(	O	O
Control	O	O
ctrl	O	O
,	O	O
int	O	O
height	O	O
)	O	O
{	O	O
foreach	O	O
(	O	O
TextBox	O	O
t	O	O
in	O	O
GetChildTextBoxesTextBox	O	O
(	O	O
ctrl	O	O
)	O	O
)	O	O
{	O	O
t.Height	O	O
=	O	O
height	O	O
;	O	O
}	O	O
}	O	O
If	O	O
you	O	O
return	O	O
IEnumerator	O	O
,	O	O
it	O	O
will	O	O
be	O	O
a	O	O
different	O	O
enumerator	O	O
object	O	O
each	O	O
time	O	O
call	O	O
that	O	O
method	O	O
(	O	O
acting	O	O
as	O	O
though	O	O
you	O	O
reset	O	O
the	O	O
enumerator	O	O
on	O	O
each	O	O
iteration	O	O
)	O	O
.	O	O
If	O	O
you	O	O
return	O	O
IEnumerable	O	O
then	O	O
a	O	O
foreach	O	O
can	O	O
enumerate	O	O
based	O	O
on	O	O
the	O	O
method	O	O
with	O	O
the	O	O
yield	O	O
statement	O	O
.	O	O
Just	O	O
to	O	O
clarify	O	O
private	B-API	O
static	B-API	O
IEnumeratorTextBox	B-API	O
(	O	O
Control	O	O
rootControl	O	O
)	O	O
Changes	O	O
to	O	O
private	B-API	O
static	B-API	O
IEnumerableTextBox	B-API	O
(	O	O
Control	O	O
rootControl	O	O
)	O	O
That	O	O
should	O	O
be	O	O
all	O	O
:	O	O
-	O	O
)	O	O
Does	O	O
calling	O	O
the	O	O
method	O	O
twice	O	O
work	O	O
?	O	O
Seems	O	O
to	O	O
me	O	O
that	O	O
your	O	O
authentication	O	O
is	O	O
being	O	O
approved	O	O
after	O	O
the	O	O
content	O	O
arrives	O	O
,	O	O
so	O	O
then	O	O
a	O	O
second	O	O
attempt	O	O
now	O	O
works	O	O
because	O	O
you	O	O
have	O	O
the	O	O
correct	O	O
cookies	O	O
.	O	O
Unfortunately	O	O
,	O	O
compilers	O	O
ca	O	O
n't	O	O
work	O	O
on	O	O
theoretical	O	O
principles	O	O
,	O	O
and	O	O
even	O	O
though	O	O
you	O	O
may	O	O
know	O	O
that	O	O
it	O	O
is	O	O
safe	O	O
in	O	O
your	O	O
case	O	O
,	O	O
if	O	O
they	O	O
allowed	O	O
it	O	O
,	O	O
it	O	O
would	O	O
have	O	O
to	O	O
be	O	O
safe	O	O
for	O	O
all	O	O
cases	O	O
.	O	O
In	O	O
other	O	O
words	O	O
,	O	O
the	O	O
compiler	O	O
is	O	O
n't	O	O
stopping	O	O
just	O	O
you	O	O
,	O	O
it	O	O
's	O	O
stopping	O	O
everyone	O	O
,	O	O
including	O	O
all	O	O
those	O	O
that	O	O
do	O	O
n't	O	O
know	O	O
that	O	O
it	O	O
is	O	O
unsafe	O	O
and	O	O
needs	O	O
special	O	O
handling	O	O
.	O	O
There	O	O
are	O	O
probably	O	O
other	O	O
reasons	O	O
for	O	O
this	O	O
as	O	O
well	O	O
,	O	O
as	O	O
all	O	O
languages	O	O
usually	O	O
have	O	O
ways	O	O
to	O	O
do	O	O
unsafe	O	O
things	O	O
if	O	O
one	O	O
knows	O	O
how	O	O
to	O	O
deal	O	O
with	O	O
them	O	O
.	O	O
In	O	O
C	O	O
#	O	O
.NET	O	O
there	O	O
are	O	O
similar	O	O
provisions	O	O
,	O	O
and	O	O
the	O	O
only	O	O
way	O	O
to	O	O
declare	O	O
a	O	O
constructor	O	O
that	O	O
calls	O	O
a	O	O
base	O	O
constructor	O	O
is	O	O
this	O	O
:	O	O
public	B-API	O
:	B-API	O
ClassName	B-API	O
(	I-API	O
...	I-API	O
)	I-API	O
base	B-API	O
(	I-API	O
...	I-API	O
)	I-API	O
in	O	O
doing	O	O
so	O	O
,	O	O
the	O	O
base	O	O
constructor	O	O
will	O	O
be	O	O
called	O	O
before	O	O
the	O	O
body	O	O
of	O	O
the	O	O
constructor	O	O
,	O	O
and	O	O
you	O	O
can	O	O
not	O	O
change	O	O
this	O	O
order	O	O
.	O	O
I	O	O
do	O	O
n't	O	O
know	O	O
how	O	O
Java	O	O
is	O	O
implemented	O	O
internally	O	O
,	O	O
but	O	O
if	O	O
the	O	O
constructor	O	O
of	O	O
the	O	O
superclass	O	O
throws	O	O
an	O	O
exception	O	O
,	O	O
then	O	O
there	O	O
is	O	O
n't	O	O
a	O	O
instance	O	O
of	O	O
the	O	O
class	O	O
you	O	O
extend	O	O
.	O	O
It	O	O
would	O	O
be	O	O
impossible	O	O
to	O	O
call	O	O
the	O	O
toString	B-API	B-API
(	I-API	I-API
)	I-API	I-API
or	O	O
equals	B-API	O
(	I-API	O
)	I-API	O
methods	O	O
,	O	O
for	O	O
example	O	O
,	O	O
since	O	O
they	O	O
are	O	O
inherited	O	O
in	O	O
most	O	O
cases	O	O
.	O	O
Java	O	O
may	O	O
allow	O	O
a	O	O
try/catch	O	O
around	O	O
the	O	O
super	O	O
(	O	O
)	O	O
call	O	O
in	O	O
the	O	O
constructor	O	O
if	O	O
1.	O	O
you	O	O
override	O	O
ALL	O	O
methods	O	O
from	O	O
the	O	O
superclasses	O	O
,	O	O
and	O	O
2.	O	O
you	O	O
do	O	O
n't	O	O
use	O	O
the	O	O
super.XXX	O	B-API
(	O	I-API
)	O	I-API
clause	O	O
,	O	O
but	O	O
that	O	O
all	O	O
sounds	O	O
too	O	O
complicated	O	O
to	O	O
me	O	O
.	O	O
I	O	O
ca	O	O
n't	O	O
presume	O	O
to	O	O
have	O	O
a	O	O
deep	O	O
understanding	O	O
of	O	O
Java	O	O
internals	O	O
,	O	O
but	O	O
it	O	O
is	O	O
my	O	O
understanding	O	O
that	O	O
,	O	O
when	O	O
a	O	O
compiler	O	O
needs	O	O
to	O	O
instantiate	O	O
a	O	O
derived	O	O
class	O	O
,	O	O
it	O	O
has	O	O
to	O	O
first	O	O
create	O	O
the	O	O
base	O	O
(	O	O
and	O	O
its	O	O
base	O	O
before	O	O
that	O	O
(	O	O
...	O	O
)	O	O
)	O	O
and	O	O
then	O	O
slap	O	O
on	O	O
the	O	O
extensions	O	O
made	O	O
in	O	O
the	O	O
subclass	O	O
.	O	O
So	O	O
it	O	O
is	O	O
not	O	O
even	O	O
the	O	O
danger	O	O
of	O	O
uninited	O	O
variables	O	O
or	O	O
anything	O	O
like	O	O
that	O	O
at	O	O
all	O	O
.	O	O
When	O	O
you	O	O
try	O	O
to	O	O
do	O	O
something	O	O
in	O	O
the	O	O
subclass	O	O
'	O	O
constructor	O	O
before	O	O
the	O	O
base	O	O
class	O	O
'	O	O
constructor	O	O
,	O	O
you	O	O
are	O	O
basically	O	O
asking	O	O
the	O	O
compiler	O	O
to	O	O
extend	O	O
a	O	O
base	O	O
object	O	O
instance	O	O
that	O	O
does	O	O
n't	O	O
exist	O	O
yet	O	O
.	O	O
Edit	O	O
:	O	O
In	O	O
your	O	O
case	O	O
,	O	O
MyClass	O	O
becomes	O	O
the	O	O
base	O	O
object	O	O
,	O	O
and	O	O
MyClassMock	O	O
is	O	O
a	O	O
subclass	O	O
.	O	O
The	O	O
list	O	O
[	O	O
1,2,3	O	O
]	O	O
is	O	O
dynamic	O	O
and	O	O
flexible	O	O
but	O	O
that	O	O
flexibility	O	O
comes	O	O
at	O	O
a	O	O
speed	O	O
cost	O	O
.	O	O
The	O	O
tuple	O	O
(	O	O
1,2,3	O	O
)	O	O
is	O	O
fixed	O	O
(	O	O
immutable	O	O
)	O	O
and	O	O
therefore	O	O
faster	O	O
.	O	O
From	O	O
the	O	O
Python	O	O
FAQ	O	O
:	O	O
Lists	O	O
and	O	O
tuples	O	O
,	O	O
while	O	O
similar	O	O
in	O	O
many	O	O
respects	O	O
,	O	O
are	O	O
generally	O	O
used	O	O
in	O	O
fundamentally	O	O
different	O	O
ways	O	O
.	O	O
Tuples	O	O
can	O	O
be	O	O
thought	O	O
of	O	O
as	O	O
being	O	O
similar	O	O
to	O	O
Pascal	O	O
records	O	O
or	O	O
C	O	O
structs	O	O
;	O	O
they	O	O
're	O	O
small	O	O
collections	O	O
of	O	O
related	O	O
data	O	O
which	O	O
may	O	O
be	O	O
of	O	O
different	O	O
types	O	O
which	O	O
are	O	O
operated	O	O
on	O	O
as	O	O
a	O	O
group	O	O
.	O	O
For	O	O
example	O	O
,	O	O
a	O	O
Cartesian	O	O
coordinate	O	O
is	O	O
appropriately	O	O
represented	O	O
as	O	O
a	O	O
tuple	O	O
of	O	O
two	O	O
or	O	O
three	O	O
numbers	O	O
.	O	O
Lists	O	O
,	O	O
on	O	O
the	O	O
other	O	O
hand	O	O
,	O	O
are	O	O
more	O	O
like	O	O
arrays	O	O
in	O	O
other	O	O
languages	O	O
.	O	O
They	O	O
tend	O	O
to	O	O
hold	O	O
a	O	O
varying	O	O
number	O	O
of	O	O
objects	O	O
all	O	O
of	O	O
which	O	O
have	O	O
the	O	O
same	O	O
type	O	O
and	O	O
which	O	O
are	O	O
operated	O	O
on	O	O
one-by-one	O	O
.	O	O
Generally	O	O
by	O	O
convention	O	O
you	O	O
would	O	O
n't	O	O
choose	O	O
a	O	O
list	O	O
or	O	O
a	O	O
tuple	O	O
just	O	O
based	O	O
on	O	O
its	O	O
(	O	O
im	O	O
)	O	O
mutability	O	O
.	O	O
You	O	O
would	O	O
choose	O	O
a	O	O
tuple	O	O
for	O	O
small	O	O
collections	O	O
of	O	O
completely	O	O
different	O	O
pieces	O	O
of	O	O
data	O	O
in	O	O
which	O	O
a	O	O
full-blown	O	O
class	O	O
would	O	O
be	O	O
too	O	O
heavyweight	O	O
,	O	O
and	O	O
a	O	O
list	O	O
for	O	O
collections	O	O
of	O	O
any	O	O
reasonable	O	O
size	O	O
where	O	O
you	O	O
have	O	O
a	O	O
homogeneous	O	O
set	O	O
of	O	O
data	O	O
.	O	O
Tuples	O	O
are	O	O
a	O	O
quick\flexible	O	O
way	O	O
to	O	O
create	O	O
composite	O	O
data-types	O	O
.	O	O
Lists	O	O
are	O	O
containers	O	O
for	O	O
,	O	O
well	O	O
,	O	O
lists	O	O
of	O	O
objects	O	O
.	O	O
For	O	O
example	O	O
,	O	O
you	O	O
would	O	O
use	O	O
a	O	O
List	O	O
to	O	O
store	O	O
a	O	O
list	O	O
of	O	O
student	O	O
details	O	O
in	O	O
a	O	O
class	O	O
.	O	O
Each	O	O
student	O	O
detail	O	O
in	O	O
that	O	O
list	O	O
may	O	O
be	O	O
a	O	O
3-tuple	O	O
containing	O	O
their	O	O
roll	O	O
number	O	O
,	O	O
name	O	O
and	O	O
test	O	O
score	O	O
.	O	O
`	B-API	O
[	I-API	O
(	I-API	O
1	I-API	O
,	I-API	O
'Mark',86	I-API	O
)	I-API	O
,	I-API	O
(	I-API	O
2	I-API	O
,	I-API	O
'John',34	I-API	O
)	I-API	O
Also	O	O
,	O	O
because	O	O
tuples	O	O
are	O	O
immutable	O	O
they	O	O
can	O	O
be	O	O
used	O	O
as	O	O
keys	O	O
in	O	O
dictionaries	O	O
.	O	O
As	O	O
others	O	O
have	O	O
mentioned	O	O
,	O	O
Lists	O	O
and	O	O
tuples	O	O
are	O	O
both	O	O
containers	O	O
which	O	O
can	O	O
be	O	O
used	O	O
to	O	O
store	O	O
python	O	O
objects	O	O
.	O	O
Lists	O	O
are	O	O
extensible	O	O
and	O	O
their	O	O
contents	O	O
can	O	O
change	O	O
by	O	O
assignment	O	O
,	O	O
on	O	O
the	O	O
other	O	O
hand	O	O
tuples	O	O
are	O	O
immutable	O	O
.	O	O
Also	O	O
,	O	O
lists	O	O
can	O	O
not	O	O
be	O	O
used	O	O
as	O	O
keys	O	O
in	O	O
a	O	O
dictionary	O	O
whereas	O	O
tuples	O	O
can	O	O
.	O	O
If	O	O
you	O	O
can	O	O
find	O	O
a	O	O
solution	O	O
that	O	O
works	O	O
with	O	O
tuples	O	O
,	O	O
use	O	O
them	O	O
,	O	O
as	O	O
it	O	O
forces	O	O
immutability	O	O
which	O	O
kind	O	O
of	O	O
drives	O	O
you	O	O
down	O	O
a	O	O
more	O	O
functional	O	O
path	O	O
.	O	O
You	O	O
almost	O	O
never	O	O
regret	O	O
going	O	O
down	O	O
the	O	O
functional/immutable	O	O
path	O	O
.	O	O
I	O	O
've	O	O
seen	O	O
it	O	O
done	O	O
in	O	O
a	O	O
kind	O	O
of	O	O
iffy	O	O
,	O	O
but	O	O
pretty	O	O
reliable	O	O
way	O	O
.	O	O
Basically	O	O
,	O	O
an	O	O
element	O	O
is	O	O
set	O	O
to	O	O
use	O	O
a	O	O
specific	O	O
font	O	O
and	O	O
a	O	O
string	O	O
is	O	O
set	O	O
to	O	O
that	O	O
element	O	O
.	O	O
If	O	O
the	O	O
font	O	O
set	O	O
for	O	O
the	O	O
element	O	O
does	O	O
not	O	O
exist	O	O
,	O	O
it	O	O
takes	O	O
the	O	O
font	O	O
of	O	O
the	O	O
parent	O	O
element	O	O
.	O	O
So	O	O
,	O	O
what	O	O
they	O	O
do	O	O
is	O	O
measure	O	O
the	O	O
width	O	O
of	O	O
the	O	O
rendered	O	O
string	O	O
.	O	O
If	O	O
it	O	O
matches	O	O
what	O	O
they	O	O
expected	O	O
for	O	O
the	O	O
desired	O	O
font	O	O
as	O	O
opposed	O	O
to	O	O
the	O	O
derived	O	O
font	O	O
,	O	O
it	O	O
's	O	O
present	O	O
.	O	O
Here	O	O
's	O	O
where	O	O
it	O	O
came	O	O
from	O	O
:	O	O
Javascript/CSS	O	O
Font	O	O
Detector	O	O
(	O	O
ajaxian.com	O	O
;	O	O
12	O	O
Mar	O	O
2007	O	O
)	O	O
This	O	O
is	O	O
an	O	O
active	O	O
area	O	O
of	O	O
research	O	O
.	O	O
There	O	O
are	O	O
literally	O	O
oodles	O	O
of	O	O
academic	O	O
papers	O	O
on	O	O
the	O	O
subject	O	O
.	O	O
It	O	O
's	O	O
going	O	O
to	O	O
be	O	O
difficult	O	O
to	O	O
give	O	O
you	O	O
assistance	O	O
especially	O	O
w/o	O	O
more	O	O
deatails	O	O
.	O	O
Are	O	O
you	O	O
looking	O	O
for	O	O
specific	O	O
types	O	O
of	O	O
text	O	O
?	O	O
Fonts	O	O
?	O	O
English-only	O	O
?	O	O
Are	O	O
you	O	O
familiar	O	O
with	O	O
the	O	O
academic	O	O
literature	O	O
?	O	O
``	O	O
Text	O	O
detection	O	O
''	O	O
is	O	O
a	O	O
standard	O	O
problem	O	O
in	O	O
any	O	O
OCR	O	O
(	O	O
optical	O	O
character	O	O
recognition	O	O
)	O	O
system	O	O
and	O	O
consequently	O	O
there	O	O
are	O	O
lots	O	O
of	O	O
bits	O	O
of	O	O
code	O	O
on	O	O
the	O	O
interwebs	O	O
that	O	O
deal	O	O
with	O	O
it	O	O
.	O	O
I	O	O
could	O	O
start	O	O
listing	O	O
piles	O	O
of	O	O
links	O	O
from	O	O
google	O	O
but	O	O
I	O	O
suggest	O	O
you	O	O
just	O	O
do	O	O
a	O	O
search	O	O
for	O	O
``	O	O
text	O	O
detection	O	O
''	O	O
and	O	O
start	O	O
reading	O	O
:	O	O
)	O	O
.	O	O
There	O	O
is	O	O
ample	O	O
example	O	O
code	O	O
available	O	O
as	O	O
well	O	O
.	O	O
recognizing	O	O
text	O	O
inside	O	O
an	O	O
image	O	O
is	O	O
indeed	O	O
a	O	O
hot	O	O
topic	O	O
for	O	O
researchers	O	O
in	O	O
that	O	O
field	O	O
,	O	O
but	O	O
only	O	O
begun	O	O
to	O	O
grow	O	O
out	O	O
of	O	O
control	O	O
when	O	O
captcha	O	O
's	O	O
became	O	O
the	O	O
``	O	O
norm	O	O
''	O	O
in	O	O
terms	O	O
of	O	O
defense	O	O
against	O	O
spam	O	O
bots	O	O
.	O	O
Why	O	O
use	O	O
captcha	O	O
's	O	O
as	O	O
protection	O	O
?	O	O
well	O	O
because	O	O
it	O	O
is/was	O	O
very	O	O
hard	O	O
to	O	O
locate	O	O
(	O	O
and	O	O
read	O	O
)	O	O
text	O	O
inside	O	O
an	O	O
image	O	O
!	O	O
The	O	O
reason	O	O
why	O	O
I	O	O
mention	O	O
captcha	O	O
's	O	O
is	O	O
because	O	O
the	O	O
most	O	O
advancement*	O	O
is	O	O
made	O	O
within	O	O
that	O	O
tiny	O	O
area	O	O
,	O	O
and	O	O
I	O	O
think	O	O
that	O	O
your	O	O
solution	O	O
could	O	O
be	O	O
best	O	O
found	O	O
there	O	O
.	O	O
especially	O	O
because	O	O
captcha	O	O
's	O	O
are	O	O
indeed	O	O
about	O	O
locating	O	O
text	O	O
(	O	O
or	O	O
something	O	O
that	O	O
resembles	O	O
text	O	O
)	O	O
inside	O	O
a	O	O
cluttered	O	O
image	O	O
and	O	O
afterwards	O	O
trying	O	O
to	O	O
read	O	O
the	O	O
letters	O	O
correctly	O	O
.	O	O
so	O	O
if	O	O
you	O	O
can	O	O
find	O	O
yourself	O	O
a	O	O
good	O	O
open	O	O
source	O	O
captcha	O	O
breaking	O	O
tool	O	O
you	O	O
probably	O	O
have	O	O
all	O	O
you	O	O
need	O	O
to	O	O
continue	O	O
your	O	O
quest	O	O
...	O	O
You	O	O
could	O	O
probably	O	O
even	O	O
throw	O	O
away	O	O
the	O	O
most	O	O
dificult	O	O
code	O	O
that	O	O
handles	O	O
the	O	O
character	O	O
recognition	O	O
itself	O	O
,	O	O
because	O	O
those	O	O
OCR	O	O
's	O	O
are	O	O
used	O	O
to	O	O
read	O	O
distorted	O	O
text	O	O
,	O	O
something	O	O
you	O	O
do	O	O
n't	O	O
have	O	O
to	O	O
do	O	O
.	O	O
*	O	O
:	O	O
advancement	O	O
in	O	O
terms	O	O
of	O	O
visible	O	O
,	O	O
usable	O	O
,	O	O
and	O	O
practical	O	O
information	O	O
for	O	O
a	O	O
``	O	O
non-researcher	O	O
''	O	O
I	O	O
think	O	O
you	O	O
're	O	O
looking	O	O
for	O	O
GetModuleFileName	O	O
.	O	O
http	O	O
:	O	O
//www.swissdelphicenter.ch/torry/showcode.php	O	O
?	O	O
id=143	O	O
:	O	O
{	O	O
If	O	O
you	O	O
are	O	O
working	O	O
on	O	O
a	O	O
DLL	O	O
and	O	O
are	O	O
interested	O	O
in	O	O
the	O	O
filename	O	O
of	O	O
the	O	O
DLL	O	O
rather	O	O
than	O	O
the	O	O
filename	O	O
of	O	O
the	O	O
application	O	O
,	O	O
then	O	O
you	O	O
can	O	O
use	O	O
this	O	O
function	O	O
:	O	O
}	O	O
function	O	O
GetModuleName	O	O
:	O	O
string	O	O
;	O	O
var	O	O
szFileName	O	O
:	O	O
array	O	O
[	O	O
0..MAX_PATH	O	O
]	O	O
of	O	O
Char	O	O
;	O	O
begin	O	O
FillChar	O	O
(	O	O
szFileName	O	O
,	O	O
SizeOf	O	O
(	O	O
szFileName	O	O
)	O	O
,	O	O
#	O	O
0	O	O
)	O	O
;	O	O
GetModuleFileName	O	O
(	O	O
hInstance	O	O
,	O	O
szFileName	O	O
,	O	O
MAX_PATH	O	O
)	O	O
;	O	O
Result	O	O
:	O	O
=	O	O
szFileName	O	O
;	O	O
end	O	O
;	O	O
Untested	O	O
though	O	O
,	O	O
been	O	O
some	O	O
time	O	O
since	O	O
I	O	O
worked	O	O
with	O	O
Delphi	O	O
:	O	O
)	O	O
Focus	O	O
on	O	O
the	O	O
shorter	O	O
time	O	O
needed	O	O
for	O	O
development/prototype	O	O
and	O	O
possibly	O	O
easier	O	O
maintenance	O	O
(	O	O
none	O	O
of	O	O
this	O	O
may	O	O
apply	O	O
against	O	O
Ruby	B-API	O
)	O	O
.	O	O
This	O	O
is	O	O
one	O	O
of	O	O
those	O	O
cases	O	O
that	O	O
really	O	O
boil	O	O
down	O	O
to	O	O
personal	O	O
preference	O	O
or	O	O
situational	O	O
details	O	O
.	O	O
If	O	O
you	O	O
're	O	O
more	O	O
comfortable	O	O
and	O	O
experienced	O	O
with	O	O
Python	B-API	O
,	O	O
then	O	O
say	O	O
so	O	O
.	O	O
Are	O	O
they	O	O
asking	O	O
you	O	O
to	O	O
justify	O	O
it	O	O
because	O	O
they	O	O
're	O	O
more	O	O
comfortable	O	O
with	O	O
one	O	O
of	O	O
the	O	O
other	O	O
environments	O	O
?	O	O
After	O	O
you	O	O
're	O	O
done	O	O
,	O	O
will	O	O
the	O	O
system	O	O
be	O	O
passed	O	O
off	O	O
to	O	O
someone	O	O
else	O	O
for	O	O
long-term	O	O
maintenance	O	O
?	O	O
If	O	O
they	O	O
ask	O	O
you	O	O
to	O	O
use	O	O
a	O	O
technology	O	O
or	O	O
language	O	O
that	O	O
you	O	O
're	O	O
not	O	O
as	O	O
familiar	O	O
with	O	O
,	O	O
then	O	O
make	O	O
sure	O	O
they	O	O
know	O	O
up-front	O	O
that	O	O
it	O	O
's	O	O
going	O	O
to	O	O
take	O	O
you	O	O
longer	O	O
.	O	O
I	O	O
would	O	O
consider	O	O
that	O	O
using	O	O
python	O	O
on	O	O
a	O	O
new	O	O
project	O	O
is	O	O
completely	O	O
dependent	O	O
on	O	O
what	O	O
problem	O	O
you	O	O
are	O	O
trying	O	O
to	O	O
solve	O	O
with	O	O
python	O	O
.	O	O
If	O	O
you	O	O
want	O	O
someone	O	O
to	O	O
agree	O	O
with	O	O
you	O	O
that	O	O
you	O	O
should	O	O
use	O	O
python	O	O
,	O	O
then	O	O
show	O	O
them	O	O
how	O	O
python	O	O
's	O	O
features	O	O
apply	O	O
specifically	O	O
to	O	O
that	O	O
problem	O	O
.	O	O
In	O	O
the	O	O
case	O	O
of	O	O
web	O	O
development	O	O
with	O	O
python	O	O
,	O	O
talk	O	O
about	O	O
WSGI	B-API	O
and	O	O
other	O	O
web	O	O
libraries	O	O
and	O	O
frameworks	O	O
you	O	O
could	O	O
use	O	O
that	O	O
would	O	O
make	O	O
your	O	O
life	O	O
easier	O	O
.	O	O
One	O	O
note	O	O
for	O	O
python	O	O
is	O	O
that	O	O
most	O	O
of	O	O
the	O	O
frameworks	O	O
for	O	O
python	O	O
web	O	O
development	O	O
can	O	O
be	O	O
plugged	O	O
right	O	O
into	O	O
any	O	O
current	O	O
project	O	O
.	O	O
With	O	O
ruby	O	O
on	O	O
rails	O	O
,	O	O
you	O	O
're	O	O
practically	O	O
working	O	O
in	O	O
a	O	O
DSL	O	O
that	O	O
anyone	O	O
who	O	O
uses	O	O
your	O	O
project	O	O
will	O	O
have	O	O
to	O	O
learn	O	O
.	O	O
If	O	O
they	O	O
know	O	O
python	O	O
,	O	O
then	O	O
they	O	O
can	O	O
figure	O	O
out	O	O
what	O	O
you	O	O
are	O	O
doing	O	O
with	O	O
django	O	O
,	O	O
etc	O	O
in	O	O
a	O	O
day	O	O
.	O	O
I	O	O
'm	O	O
only	O	O
talking	O	O
about	O	O
web	O	O
development	O	O
because	O	O
it	O	O
appears	O	O
that	O	O
's	O	O
what	O	O
you	O	O
are	O	O
going	O	O
to	O	O
be	O	O
working	O	O
on	O	O
seeing	O	O
ruby	O	O
,	O	O
python	O	O
and	O	O
PHP	B-API	O
in	O	O
the	O	O
same	O	O
list	O	O
.	O	O
The	O	O
real	O	O
message	O	O
that	O	O
's	O	O
important	O	O
is	O	O
applying	O	O
to	O	O
whatever	O	O
it	O	O
is	O	O
you	O	O
like	O	O
about	O	O
python	O	O
directly	O	O
to	O	O
some	O	O
problem	O	O
you	O	O
are	O	O
trying	O	O
to	O	O
solve	O	O
.	O	O
I	O	O
do	O	O
n't	O	O
have	O	O
Visual	O	O
Studio	O	O
installed	O	O
on	O	O
my	O	O
machine	O	O
anymore	O	O
(	O	O
and	O	O
I	O	O
'm	O	O
using	O	O
Linux	O	O
)	O	O
,	O	O
but	O	O
I	O	O
do	O	O
remember	O	O
that	O	O
there	O	O
was	O	O
an	O	O
wizard	O	O
hidden	O	O
somewhere	O	O
inside	O	O
one	O	O
of	O	O
the	O	O
menus	O	O
that	O	O
gave	O	O
access	O	O
to	O	O
a	O	O
class	O	O
builder	O	O
.	O	O
With	O	O
this	O	O
wizard	O	O
,	O	O
you	O	O
could	O	O
define	O	O
all	O	O
your	O	O
classes	O	O
'	O	O
details	O	O
,	O	O
including	O	O
methods	O	O
and	O	O
attributes	O	O
.	O	O
If	O	O
I	O	O
remember	O	O
well	O	O
,	O	O
there	O	O
was	O	O
an	O	O
option	O	O
through	O	O
which	O	O
you	O	O
could	O	O
ask	O	O
VS	O	O
to	O	O
create	O	O
the	O	O
setters	O	O
and	O	O
getters	O	O
automatically	O	O
for	O	O
you	O	O
.	O	O
I	O	O
know	O	O
it	O	O
's	O	O
quite	O	O
vague	O	O
,	O	O
but	O	O
check	O	O
it	O	O
out	O	O
and	O	O
you	O	O
might	O	O
find	O	O
it	O	O
.	O	O
By	O	O
generate	O	O
,	O	O
do	O	O
you	O	O
mean	O	O
auto-generate	O	O
?	O	O
If	O	O
that	O	O
's	O	O
not	O	O
what	O	O
you	O	O
mean	O	O
:	O	O
Visual	O	O
Studio	O	O
2008	O	O
has	O	O
the	O	O
easiest	O	O
implementation	O	O
for	O	O
this	O	O
:	O	O
public	B-API	O
PropertyType	B-API	O
PropertyName	B-API	O
{	B-API	O
get	B-API	O
;	I-API	O
set	B-API	O
;	I-API	O
In	O	O
the	O	O
background	O	O
this	O	O
creates	O	O
an	O	O
implied	O	O
instance	O	O
variable	O	O
to	O	O
which	O	O
your	O	O
property	O	O
is	O	O
stored	O	O
and	O	O
retrieved	O	O
.	O	O
However	O	O
if	O	O
you	O	O
want	O	O
to	O	O
put	O	O
in	O	O
more	O	O
logic	O	O
in	O	O
your	O	O
Properties	O	O
,	O	O
you	O	O
will	O	O
have	O	O
to	O	O
have	O	O
an	O	O
instance	O	O
variable	O	O
for	O	O
it	O	O
:	O	O
private	B-API	O
PropertyType	B-API	O
_property	B-API	O
;	I-API	O
public	I-API	O
PropertyType	B-API	O
PropertyName	B-API	O
{	I-API	O
get	B-API	O
{	B-API	O
//logic	B-API	O
here	B-API	O
return	B-API	O
_property	B-API	O
;	I-API	O
}	B-API	O
set	B-API	O
{	B-API	O
//logic	B-API	O
here	B-API	O
_property	B-API	O
=	B-API	O
value	B-API	O
;	I-API	O
}	B-API	O
Previous	O	O
versions	O	O
of	O	O
Visual	O	O
Studio	O	O
always	O	O
used	O	O
this	O	O
longhand	O	O
method	O	O
as	O	O
well	O	O
.	O	O
If	O	O
you	O	O
are	O	O
using	O	O
Visual	B-API	O
Studio	I-API	O
2005	I-API	O
and	O	O
up	O	O
you	O	O
can	O	O
create	O	O
a	O	O
setter/getter	O	O
real	O	O
fast	O	O
using	O	O
the	O	O
insert	O	O
snippet	O	O
command	O	O
.	O	O
Right	O	O
click	O	O
on	O	O
your	O	O
code	O	O
click	O	O
on	O	O
Insert	O	O
Snippet	O	B-API
(	O	I-API
Ctrl+k	O	I-API
,	O	I-API
x	O	I-API
)	O	I-API
and	O	O
then	O	O
choose	O	O
``	O	O
prop	O	O
''	O	O
form	O	O
the	O	O
list	O	O
.	O	O
Hope	O	O
this	O	O
helps	O	O
.	O	O
Rather	O	O
than	O	O
using	O	O
ctrl+k	O	O
,	O	O
x	O	O
you	O	O
can	O	O
also	O	O
just	O	O
type	O	O
and	O	O
then	O	O
hit	O	O
tab	O	O
twice	O	O
Visual	B-API	O
Studio	I-API	O
also	O	O
has	O	O
a	O	O
feature	O	O
that	O	O
will	O	O
generate	O	O
a	O	O
Property	O	O
from	O	O
a	O	O
private	O	O
variable	O	O
.	O	O
If	O	O
you	O	O
right-click	O	O
on	O	O
a	O	O
variable	O	O
,	O	O
in	O	O
the	O	O
context	O	O
menu	O	O
that	O	O
pops	O	O
up	O	O
click	O	O
on	O	O
the	O	O
``	O	O
Refactor	O	O
''	O	O
item	O	O
.	O	O
Then	O	O
choose	O	O
encapsulate	O	O
field	O	O
.	O	O
This	O	O
will	O	O
create	O	O
a	O	O
getter/setter	O	O
property	O	O
for	O	O
a	O	O
variable	O	O
.	O	O
I	O	O
'm	O	O
not	O	O
too	O	O
big	O	O
a	O	O
fan	O	O
of	O	O
this	O	O
technique	O	O
as	O	O
it	O	O
is	O	O
a	O	O
little	O	O
bit	O	O
awkward	O	O
to	O	O
use	O	O
if	O	O
you	O	O
have	O	O
to	O	O
create	O	O
a	O	O
lot	O	O
of	O	O
getters/setters	O	O
,	O	O
and	O	O
it	O	O
puts	O	O
the	O	O
property	O	O
directly	O	O
below	O	O
the	O	O
private	O	O
field	O	O
,	O	O
which	O	O
bugs	O	O
me	O	O
because	O	O
I	O	O
usually	O	O
have	O	O
all	O	O
of	O	O
my	O	O
private	O	O
fields	O	O
grouped	O	O
together	O	O
,	O	O
and	O	O
this	O	O
Visual	O	O
Studio	O	O
feature	O	O
breaks	O	O
my	O	O
class	O	O
'	O	O
formatting	O	O
.	O	O
When	O	O
I	O	O
needed	O	O
to	O	O
write	O	O
an	O	O
application	O	O
with	O	O
a	O	O
client-server	O	O
model	O	O
where	O	O
the	O	O
clients	O	O
could	O	O
leave	O	O
and	O	O
enter	O	O
whenever	O	O
they	O	O
want	O	O
,	O	O
(	O	O
I	O	O
assume	O	O
that	O	O
's	O	O
also	O	O
the	O	O
case	O	O
for	O	O
your	O	O
application	O	O
as	O	O
you	O	O
use	O	O
mobile	O	O
devices	O	O
)	O	O
I	O	O
made	O	O
sure	O	O
that	O	O
the	O	O
clients	O	O
send	O	O
an	O	O
online	O	O
message	O	O
to	O	O
the	O	O
server	O	O
,	O	O
indicating	O	O
they	O	O
were	O	O
connected	O	O
and	O	O
ready	O	O
to	O	O
do	O	O
whatever	O	O
they	O	O
needed	O	O
doing	O	O
.	O	O
at	O	O
that	O	O
time	O	O
the	O	O
server	O	O
could	O	O
send	O	O
messages	O	O
back	O	O
to	O	O
the	O	O
client	O	O
trough	O	O
the	O	O
same	O	O
open	O	O
connection	O	O
.	O	O
Also	O	O
,	O	O
but	O	O
I	O	O
do	O	O
n't	O	O
know	O	O
if	O	O
that	O	O
is	O	O
applicable	O	O
for	O	O
you	O	O
,	O	O
I	O	O
had	O	O
some	O	O
sort	O	O
of	O	O
heartbeat	O	O
the	O	O
clients	O	O
sent	O	O
to	O	O
the	O	O
server	O	O
,	O	O
letting	O	O
it	O	O
know	O	O
it	O	O
was	O	O
still	O	O
online	O	O
.	O	O
That	O	O
way	O	O
the	O	O
server	O	O
knows	O	O
when	O	O
a	O	O
client	O	O
was	O	O
forcibly	O	O
disconnected	O	O
from	O	O
the	O	O
network	O	O
and	O	O
it	O	O
could	O	O
mark	O	O
that	O	O
client	O	O
back	O	O
as	O	O
offline	O	O
.	O	O
I	O	O
'm	O	O
not	O	O
clear	O	O
on	O	O
whether	O	O
or	O	O
not	O	O
you	O	O
're	O	O
wanting	O	O
to	O	O
add	O	O
the	O	O
asynchronous	O	O
bits	O	O
to	O	O
the	O	O
server	O	O
in	O	O
C	B-API	O
#	I-API	O
or	O	O
the	O	O
client	O	O
in	O	O
C++	B-API	O
.	O	O
If	O	O
you	O	O
're	O	O
talking	O	O
about	O	O
doing	O	O
this	O	O
in	O	O
C++	B-API	O
,	O	O
desktop	O	O
Windows	O	O
platforms	O	O
can	O	O
do	O	O
socket	B-API	O
I/O	I-API	O
asynchronously	O	O
through	O	O
the	O	O
API	O	O
's	O	O
that	O	O
use	O	O
overlapped	O	O
I/O	O	O
.	O	O
For	O	O
sockets	O	O
,	O	O
WSASend	B-API	O
,	O	O
WSARecv	B-API	O
both	O	O
allow	O	O
async	O	O
I/O	O	O
(	O	O
read	O	O
the	O	O
documentation	O	O
on	O	O
their	O	O
LPOVERLAPPED	B-API	O
parameters	O	O
,	O	O
which	O	O
you	O	O
can	O	O
populate	O	O
with	O	O
events	O	O
that	O	O
get	O	O
set	O	O
when	O	O
the	O	O
I/O	O	O
completes	O	O
)	O	O
.	O	O
I	O	O
do	O	O
n't	O	O
know	O	O
if	O	O
Windows	O	O
Mobile	O	O
platforms	O	O
support	O	O
these	O	O
functions	O	O
,	O	O
so	O	O
you	O	O
might	O	O
have	O	O
to	O	O
do	O	O
some	O	O
additional	O	O
digging	O	O
.	O	O
Just	O	O
wondering	O	O
,	O	O
what	O	O
do	O	O
you	O	O
feel	O	O
your	O	O
method	O	O
leaves	O	O
to	O	O
be	O	O
desired	O	O
?	O	O
You	O	O
could	O	O
replace	O	O
the	O	O
anonymous	O	O
delegate	O	O
with	O	O
a..	O	O
named	O	O
?	O	O
delegate	O	O
,	O	O
something	O	O
like	O	O
public	B-API	O
delegate	B-API	O
void	B-API	O
;	B-API	O
public	B-API	O
void	B-API	O
{	B-API	O
;	B-API	O
}	B-API	O
public	B-API	O
void	B-API	O
{	B-API	O
;	B-API	O
}	B-API	O
public	B-API	O
void	B-API	O
{	B-API	O
RetryTimer	B-API	O
fileIORetryTimer	B-API	O
=	B-API	O
new	B-API	O
)	B-API	O
;	I-API	O
bool	B-API	O
success	B-API	O
=	B-API	O
false	B-API	O
;	I-API	O
while	B-API	O
(	B-API	O
!	I-API	O
success	I-API	O
)	I-API	O
{	B-API	O
try	B-API	O
{	B-API	O
;	B-API	O
success	B-API	O
=	B-API	O
true	B-API	O
;	I-API	O
}	B-API	O
catch	B-API	O
(	B-API	O
IOException	I-API	O
e	B-API	O
)	I-API	O
{	B-API	O
if	B-API	O
(	B-API	O
fileIORetryTimer.HasExceededRetryTimeout	I-API	B-API
)	I-API	O
{	B-API	O
throw	B-API	O
;	I-API	O
}	B-API	O
;	B-API	O
}	B-API	O
}	B-API	O
}	B-API	O
public	B-API	O
void	B-API	O
{	B-API	O
;	B-API	O
;	B-API	O
(	O	O
params	O	O
string	O	O
[	O	O
]	O	O
parameters	O	O
)	O	O
(	O	O
params	O	O
string	O	O
[	O	O
]	O	O
fileName	O	O
)	O	O
File.Delete	B-API	B-API
(	I-API	I-API
fileName	I-API	I-API
[	I-API	I-API
0	I-API	I-API
]	I-API	I-API
)	I-API	I-API
(	O	O
params	O	O
string	O	O
[	O	O
]	O	O
fileNames	O	O
)	O	O
(	O	O
fileNames	O	O
[	O	O
0	O	O
]	O	O
,	O	O
fileNames	O	O
[	O	O
1	O	O
]	O	O
)	O	O
(	O	O
IoOperation	O	O
operation	O	O
,	O	O
params	O	O
string	O	O
[	O	O
]	O	O
parameters	O	O
)	O	O
RetryTimer	B-API	O
(	I-API	O
TimeSpan.FromHours	I-API	B-API
(	I-API	I-API
10	I-API	I-API
)	I-API	I-API
operation	B-API	O
(	I-API	O
parameters	I-API	O
)	I-API	O
fileIORetryTimer.SleepUntilNextRetry	B-API	B-API
(	I-API	I-API
)	I-API	I-API
Foo	B-API	B-API
(	I-API	I-API
)	I-API	I-API
(	O	O
FileDeleteOperation	O	O
,	O	O
``	O	O
L	O	O
:	O	O
\file.to.delete	O	O
''	O	O
)	O	O
(	O	O
FileCopyOperation	O	O
,	O	O
``	O	O
L	O	O
:	O	O
\file.to.copy.source	O	O
''	O	O
,	O	O
``	O	O
L	O	O
:	O	O
\file.to.copy.destination	O	O
''	O	O
)	O	O
This	O	O
looks	O	O
like	O	O
an	O	O
excellent	O	O
opportunity	O	O
to	O	O
have	O	O
a	O	O
look	O	O
at	O	O
Aspect	B-API	O
Oriented	I-API	O
Programming	I-API	O
.	O	O
Here	O	O
is	O	O
a	O	O
good	O	O
article	O	O
on	O	O
AOP	B-API	O
in	O	O
.NET	B-API	O
.	O	O
The	O	O
general	O	O
idea	O	O
is	O	O
that	O	O
you	O	O
'd	O	O
extract	O	O
the	O	O
cross-functional	O	O
concern	O	O
(	O	O
i.e	O	O
.	O	O
Retry	O	O
for	O	O
x	O	O
hours	O	O
)	O	O
into	O	O
a	O	O
separate	O	O
class	O	O
and	O	O
then	O	O
you	O	O
'd	O	O
annotate	O	O
any	O	O
methods	O	O
that	O	O
need	O	O
to	O	O
modify	O	O
their	O	O
behaviour	O	O
in	O	O
that	O	O
way	O	O
.	O	O
Here	O	O
's	O	O
how	O	O
it	O	O
might	O	O
look	O	O
(	O	O
with	O	O
a	O	O
nice	O	O
extension	O	O
method	O	O
on	O	O
Int32	O	O
)	O	O
[	O	O
RetryFor	B-API	O
(	I-API	O
10.Hours	I-API	O
(	I-API	O
)	I-API	O
)	I-API	O
]	O	O
public	O	O
void	B-API	O
DeleteArchive	B-API	O
(	I-API	O
)	I-API	O
{	O	O
//..	O	O
code	O	O
to	O	O
just	O	O
delete	O	O
the	O	O
archive	O	O
}	O	O
You	O	O
could	O	O
also	O	O
use	O	O
a	O	O
more	O	O
OO	O	O
approach	O	O
:	O	O
Create	O	O
a	O	O
base	O	O
class	O	O
that	O	O
does	O	O
the	O	O
error	O	O
handling	O	O
and	O	O
calls	O	O
an	O	O
abstract	O	O
method	O	O
to	O	O
perform	O	O
the	O	O
concrete	O	O
work	O	O
.	O	O
(	O	O
Template	O	O
Method	O	O
pattern	O	O
)	O	O
Create	O	O
concrete	O	O
classes	O	O
for	O	O
each	O	O
operation	O	O
.	O	O
This	O	O
has	O	O
the	O	O
advantage	O	O
of	O	O
naming	O	O
each	O	O
type	O	O
of	O	O
operation	O	O
you	O	O
perform	O	O
and	O	O
gives	O	O
you	O	O
a	O	O
Command	O	O
pattern	O	O
-	O	O
operations	O	O
have	O	O
been	O	O
represented	O	O
as	O	O
objects	O	O
.	O	O
I	O	O
use	O	O
UnitTest++	B-API	O
.	O	O
While	O	O
the	O	O
example	O	O
tutorial	O	O
is	O	O
for	O	O
Visual	B-API	O
Studio	I-API	O
2005	I-API	O
,	O	O
the	O	O
concepts	O	O
are	O	O
similar	O	O
(	O	O
try	O	O
setting	O	O
one	O	O
up	O	O
for	O	O
VC6	O	O
...	O	O
)	O	O
.	O	O
Update	O	O
:	O	O
The	O	O
VC6	O	O
hacks	O	O
are	O	O
now	O	O
included	O	O
in	O	O
the	O	O
source	O	O
!	O	O
I	O	O
've	O	O
worked	O	O
on	O	O
a	O	O
SAN	O	O
system	O	O
in	O	O
the	O	O
past	O	O
with	O	O
telephony	O	O
audio	O	O
recordings	O	O
which	O	O
had	O	O
issues	O	O
with	O	O
numbers	O	O
of	O	O
files	O	O
in	O	O
a	O	O
single	O	O
folder	O	O
-	O	O
that	O	O
system	O	O
became	O	O
unusable	O	O
somewhere	O	O
near	O	O
5,000	O	O
(	O	O
on	O	O
Windows	B-API	O
2000	I-API	O
Advanced	I-API	O
Server	I-API	O
with	O	O
an	O	O
application	O	O
in	O	O
C	B-API	O
#	I-API	O
.Net	I-API	O
1.1	I-API	O
)	O	O
-	O	O
the	O	O
only	O	O
sensible	O	O
solution	O	O
that	O	O
we	O	O
came	O	O
up	O	O
with	O	O
was	O	O
to	O	O
change	O	O
the	O	O
folder	O	O
structure	O	O
so	O	O
that	O	O
there	O	O
were	O	O
a	O	O
more	O	O
reasonable	O	O
number	O	O
of	O	O
files	O	O
.	O	O
Interestingly	O	O
Explorer	O	O
would	O	O
also	O	O
time	O	O
out	O	O
!	O	O
The	O	O
convention	O	O
we	O	O
came	O	O
up	O	O
with	O	O
was	O	O
a	O	O
structure	O	O
that	O	O
broke	O	O
the	O	O
structure	O	O
up	O	O
in	O	O
years	O	O
,	O	O
months	O	O
and	O	O
days	O	O
-	O	O
but	O	O
that	O	O
will	O	O
depend	O	O
upon	O	O
your	O	O
system	O	O
and	O	O
whether	O	O
you	O	O
can	O	O
control	O	O
the	O	O
directory	O	O
structure	O	O
...	O	O
None	O	O
.	O	O
.NET	B-API	O
relies	O	O
on	O	O
underlying	O	O
Windows	O	O
API	O	O
calls	O	O
that	O	O
really	O	O
,	O	O
really	O	O
hate	O	O
that	O	O
amount	O	O
of	O	O
files	O	O
themselves	O	O
.	O	O
As	O	O
Ronnie	O	O
says	O	O
:	O	O
split	O	O
them	O	O
up	O	O
.	O	O
You	O	O
could	O	O
use	O	O
DOS	B-API	O
?	O	O
DIR	O	O
/s/b	O	O
Definitely	O	O
split	O	O
them	O	O
up	O	O
.	O	O
That	O	O
said	O	O
,	O	O
stay	O	O
as	O	O
far	O	O
away	O	O
from	O	O
the	O	O
Indexing	O	O
Service	O	O
as	O	O
you	O	O
can	O	O
.	O	O
You	O	O
could	O	O
also	O	O
look	O	O
at	O	O
either	O	O
indexing	O	O
the	O	O
files	O	O
yourself	O	O
,	O	O
or	O	O
getting	O	O
a	O	O
third	O	O
part	O	O
app	O	O
like	O	O
google	O	O
desktop	O	O
or	O	O
copernic	B-API	O
to	O	O
do	O	O
it	O	O
and	O	O
then	O	O
interface	O	O
with	O	O
their	O	O
index	O	O
.	O	O
I	O	O
know	O	O
copernic	B-API	O
has	O	O
an	O	O
API	O	O
that	O	O
you	O	O
can	O	O
use	O	O
to	O	O
search	O	O
for	O	O
any	O	O
file	O	O
in	O	O
their	O	O
index	O	O
and	O	O
it	O	O
also	O	O
supports	O	O
mapping	O	O
network	O	O
drives	O	O
.	O	O
The	O	O
second	O	O
example	O	O
will	O	O
execute	O	O
the	O	O
function	O	O
after	O	O
creating	O	O
it	O	O
.	O	O
edit	O	O
:	O	O
this	O	O
is	O	O
n't	O	O
really	O	O
true	O	O
.	O	O
@	O	O
Lance	O	O
:	O	O
the	O	O
first	O	O
one	O	O
is	O	O
also	O	O
executing	O	O
.	O	O
Compare	O	O
it	O	O
with	O	O
a	O	O
named	O	O
constructor	O	O
:	O	O
function	O	O
{	O	O
;	O	O
}	O	O
new	O	O
Blah	O	B-API
(	O	I-API
)	O	I-API
alert	B-API	B-API
(	I-API	I-API
'blah	I-API	I-API
'	I-API	I-API
)	I-API	I-API
Bla	O	B-API
(	O	I-API
)	O	I-API
this	O	O
is	O	O
actually	O	O
also	O	O
executing	O	O
code	O	O
.	O	O
The	O	O
same	O	O
goes	O	O
for	O	O
the	O	O
anonymous	O	O
constructor	O	O
...	O	O
But	O	O
that	O	O
was	O	O
not	O	O
the	O	O
question	O	O
;	O	O
-	O	O
)	O	O
Both	O	O
cases	O	O
will	O	O
execute	O	O
the	O	O
function	O	O
,	O	O
the	O	O
only	O	O
real	O	O
difference	O	O
is	O	O
what	O	O
the	O	O
return	O	O
value	O	O
of	O	O
the	O	O
expression	O	O
may	O	O
be	O	O
,	O	O
and	O	O
what	O	O
the	O	O
value	O	O
of	O	O
``	O	O
this	O	O
''	O	O
will	O	O
be	O	O
inside	O	O
the	O	O
function	O	O
.	O	O
Basically	O	O
behaviour	O	O
of	O	O
new	O	O
Is	O	O
effectively	O	O
equivalent	O	O
to	O	O
var	B-API	O
tempObject	O	O
=	O	O
{	O	O
}	O	O
;	O	O
var	B-API	O
result	O	O
=	O	O
;	O	O
if	B-API	O
(	I-API	O
result	I-API	O
is	I-API	O
not	I-API	O
an	I-API	O
object	I-API	O
)	I-API	O
result	O	O
=	O	O
expression.call	B-API	B-API
(	I-API	I-API
tempObject	I-API	I-API
)	I-API	I-API
Although	O	O
of	O	O
course	O	O
and	O	O
result	O	O
are	O	O
transient	O	O
values	O	O
you	O	O
can	O	O
never	O	O
see	O	O
(	O	O
they	O	O
're	O	O
implementation	O	O
details	O	O
in	O	O
the	O	O
interpreter	O	O
)	O	O
,	O	O
and	O	O
there	O	O
is	O	O
no	O	O
JS	B-API	O
mechanism	O	O
to	O	O
do	O	O
the	O	O
``	O	O
is	O	O
not	O	O
an	O	O
object	O	O
''	O	O
check	O	O
.	O	O
Broadly	O	O
speaking	O	O
the	O	O
``	O	O
new	O	O
function	B-API	O
(	I-API	O
)	I-API	O
{	O	O
..	O	O
}	O	O
''	O	O
method	O	O
will	O	O
be	O	O
slower	O	O
due	O	O
to	O	O
the	O	O
need	O	O
to	O	O
create	O	O
the	O	O
this	O	O
object	O	O
for	O	O
the	O	O
constructor	O	O
.	O	O
That	O	O
said	O	O
this	O	O
should	O	O
be	O	O
not	O	O
be	O	O
a	O	O
real	O	O
difference	O	O
as	O	O
object	O	O
allocation	O	O
is	O	O
not	O	O
slow	O	O
,	O	O
and	O	O
you	O	O
should	O	O
n't	O	O
be	O	O
using	O	O
such	O	O
code	O	O
in	O	O
hot	O	O
code	O	O
(	O	O
due	O	O
to	O	O
the	O	O
cost	O	O
of	O	O
creating	O	O
the	O	O
function	O	O
object	O	O
and	O	O
associated	O	O
closure	O	O
)	O	O
.	O	O
Edit	O	O
:	O	O
one	O	O
thing	O	O
i	O	O
realised	O	O
that	O	O
i	O	O
missed	O	O
from	O	O
this	O	O
is	O	O
that	O	O
the	O	O
tempObject	O	O
will	O	O
get	O	O
s	O	O
prototype	O	O
,	O	O
eg	O	O
.	O	O
(	O	O
before	O	O
the	O	O
)	O	O
tempObject.__proto__	B-API	O
=	O	O
Well	O	O
,	O	O
I	O	O
made	O	O
a	O	O
page	O	O
like	O	O
this	O	O
:	O	O
htmlbodyscript	B-API	O
type=	O	O
''	O	O
text/javascript	O	O
''	O	O
var	B-API	O
a	O	O
=	O	O
new	O	O
{	O	O
;	O	O
return	O	O
``	O	O
test	O	O
''	O	O
;	O	O
}	O	O
;	O	O
var	B-API	O
b	O	O
=	O	O
{	O	O
;	O	O
return	B-API	O
;	O	O
//a	O	O
is	O	O
a	O	O
;	O	O
//b	O	O
is	O	O
a	O	O
string	O	O
containing	O	O
function	B-API	O
(	I-API	O
)	I-API	O
(	O	O
``	O	O
method	O	O
1	O	O
''	O	O
)	O	O
(	O	O
function	B-API	O
(	I-API	O
)	I-API	O
(	O	O
``	O	O
method	O	O
2	O	O
''	O	O
)	O	O
``	O	O
test	O	O
''	O	O
;	O	O
}	O	O
)	O	O
(	O	O
)	O	O
;	O	O
alert	B-API	B-API
(	I-API	I-API
a	I-API	I-API
)	I-API	I-API
functionalert	B-API	O
(	I-API	O
b	I-API	O
)	I-API	O
Surprisingly	O	O
enough	O	O
(	O	O
to	O	O
me	O	O
anyway	O	O
)	O	O
it	O	O
alerted	O	O
both	O	O
``	O	O
method	O	O
1	O	O
''	O	O
and	O	O
method	O	O
2	O	O
''	O	O
.	O	O
I	O	O
did	O	O
n't	O	O
expect	O	O
``	O	O
method	O	O
1	O	O
''	O	O
to	O	O
be	O	O
alerted	O	O
.	O	O
The	O	O
difference	O	O
was	O	O
what	O	O
the	O	O
values	O	O
of	O	O
a	O	O
and	O	O
b	O	O
were	O	O
.	O	O
a	O	O
was	O	O
the	O	O
function	O	O
itself	O	O
,	O	O
while	O	O
b	O	O
was	O	O
the	O	O
string	O	O
that	O	O
the	O	O
function	O	O
returned	O	O
.	O	O
Yes	O	O
,	O	O
there	O	O
are	O	O
differences	O	O
between	O	O
the	O	O
two	O	O
.	O	O
Both	O	O
are	O	O
anonymous	O	O
functions	O	O
and	O	O
execute	O	O
in	O	O
the	O	O
exact	O	O
same	O	O
way	O	O
.	O	O
But	O	O
,	O	O
the	O	O
difference	O	O
between	O	O
the	O	O
two	O	O
is	O	O
that	O	O
in	O	O
the	O	O
second	O	O
case	O	O
scope	O	O
of	O	O
the	O	O
variables	O	O
is	O	O
restricted	O	O
to	O	O
the	O	O
anonymous	O	O
function	O	O
itself	O	O
.	O	O
There	O	O
is	O	O
no	O	O
chance	O	O
of	O	O
accidentally	O	O
adding	O	O
variables	O	O
to	O	O
the	O	O
global	O	O
scope	O	O
.	O	O
This	O	O
implies	O	O
that	O	O
by	O	O
using	O	O
the	O	O
second	O	O
method	O	O
,	O	O
you	O	O
are	O	O
not	O	O
cluttering	O	O
up	O	O
the	O	O
global	O	O
variables	O	O
scope	O	O
which	O	O
is	O	O
good	O	O
as	O	O
these	O	O
global	O	O
variable	O	O
values	O	O
can	O	O
interfere	O	O
with	O	O
some	O	O
other	O	O
global	O	O
variables	O	O
that	O	O
you	O	O
may	O	O
use	O	O
in	O	O
some	O	O
other	O	O
library	O	O
or	O	O
are	O	O
being	O	O
used	O	O
in	O	O
a	O	O
third	O	O
party	O	O
library	O	O
.	O	O
Example	O	O
:	O	O
html	O	O
body	O	O
script	O	O
type=	O	O
''	O	O
text/javascript	O	O
''	O	O
new	O	O
function	B-API	O
(	I-API	O
)	I-API	O
{	O	O
a	O	O
=	O	O
``	O	O
Hello	O	O
''	O	O
;	O	O
alert	B-API	B-API
(	I-API	I-API
a	I-API	I-API
+	O	I-API
``	O	I-API
Inside	O	I-API
Function	O	I-API
''	O	I-API
)	O	I-API
;	O	O
}	O	O
;	O	O
alert	O	B-API
(	O	I-API
a	O	I-API
+	O	I-API
``	O	I-API
Outside	O	I-API
Function	O	I-API
''	O	I-API
)	O	I-API
;	O	O
(	O	O
function	B-API	O
(	I-API	O
)	I-API	O
{	O	O
var	B-API	O
b	O	O
=	O	O
``	O	O
World	O	O
''	O	O
;	O	O
alert	O	B-API
(	O	I-API
b	O	I-API
+	O	I-API
``	O	I-API
Inside	O	I-API
Function	O	I-API
''	O	I-API
)	O	I-API
;	O	O
}	O	O
)	O	O
(	O	O
)	O	O
;	O	O
alert	O	B-API
(	O	I-API
b	O	I-API
+	O	I-API
``	O	I-API
Outside	O	I-API
Function	O	I-API
''	O	I-API
)	O	I-API
;	O	O
/script	O	O
/body	O	O
/html	O	O
In	O	O
the	O	O
above	O	O
code	O	O
the	O	O
output	O	O
is	O	O
something	O	O
like	O	O
:	O	O
Hello	O	O
Inside	O	O
Function	O	O
Hello	O	O
Outside	O	O
Function	O	O
World	O	O
Inside	O	O
Function	O	O
...	O	O
then	O	O
,	O	O
you	O	O
get	O	O
an	O	O
error	O	O
as	O	O
'b	O	O
'	O	O
is	O	O
not	O	O
defined	O	O
outside	O	O
the	O	O
function	O	O
!	O	O
Thus	O	O
,	O	O
I	O	O
believe	O	O
that	O	O
the	O	O
second	O	O
method	O	O
is	O	O
better	O	O
...	O	O
safer	O	O
!	O	O
They	O	O
both	O	O
create	O	O
a	O	O
closure	O	O
by	O	O
executing	O	O
the	O	O
code	O	O
block	O	O
.	O	O
As	O	O
a	O	O
matter	O	O
of	O	O
style	O	O
I	O	O
much	O	O
prefer	O	O
the	O	O
second	O	O
for	O	O
a	O	O
couple	O	O
of	O	O
reasons	O	O
:	O	O
It	O	O
's	O	O
not	O	O
immediately	O	O
obvious	O	O
by	O	O
glancing	O	O
at	O	O
the	O	O
first	O	O
that	O	O
the	O	O
code	O	O
will	O	O
actually	O	O
be	O	O
executed	O	O
;	O	O
the	O	O
line	O	O
looks	O	O
like	O	O
it	O	O
is	O	O
creating	O	O
a	O	O
new	O	O
function	O	O
,	O	O
rather	O	O
than	O	O
executing	O	O
it	O	O
as	O	O
a	O	O
constructor	O	O
,	O	O
but	O	O
that	O	O
's	O	O
not	O	O
what	O	O
's	O	O
actually	O	O
happening	O	O
.	O	O
Avoid	O	O
code	O	O
that	O	O
does	O	O
n't	O	O
do	O	O
what	O	O
it	O	O
looks	O	O
like	O	O
it	O	O
's	O	O
doing	O	O
!	O	O
Also	O	O
the	O	O
(	O	O
function	B-API	O
(	I-API	O
)	I-API	O
...	O	O
}	O	O
)	O	O
(	O	O
)	O	O
make	O	O
nice	O	O
bookend	O	O
tokens	O	O
so	O	O
that	O	O
you	O	O
can	O	O
immediately	O	O
see	O	O
that	O	O
you	O	O
're	O	O
entering	O	O
and	O	O
leaving	O	O
a	O	O
closure	O	O
scope	O	O
.	O	O
This	O	O
is	O	O
good	O	O
because	O	O
it	O	O
alerts	O	O
the	O	O
programmer	O	O
reading	O	O
it	O	O
to	O	O
the	O	O
scope	O	O
change	O	O
,	O	O
and	O	O
is	O	O
especially	O	O
useful	O	O
if	O	O
you	O	O
're	O	O
doing	O	O
some	O	O
postprocessing	O	O
of	O	O
the	O	O
file	O	O
,	O	O
eg	O	O
for	O	O
minification	O	O
.	O	O
The	O	O
reason	O	O
was	O	O
that	O	O
the	O	O
value	O	O
I	O	O
was	O	O
retrieving	O	O
was	O	O
from	O	O
a	O	O
form	O	O
element	O	O
,	O	O
but	O	O
the	O	O
submit	O	O
was	O	O
done	O	O
through	O	O
a	O	O
link	O	O
+	O	O
JQuery	B-API	O
,	O	O
not	O	O
through	O	O
a	O	O
form	O	O
button	O	O
submit	O	O
.	O	O
Request.Form	B-API	O
only	O	O
includes	O	O
variables	O	O
posted	O	O
through	O	O
a	O	O
form	O	O
,	O	O
while	O	O
Request.Params	B-API	O
includes	O	O
both	O	O
posted	O	O
form	O	O
variables	O	O
and	O	O
get	O	O
variables	O	O
specified	O	O
as	O	O
URL	O	O
parameters	O	O
.	O	O
Typically	O	O
,	O	O
integer	O	O
values	O	O
are	O	O
signed	O	O
,	O	O
unless	O	O
you	O	O
explicitly	O	O
need	O	O
an	O	O
unsigned	O	O
value	O	O
.	O	O
It	O	O
's	O	O
just	O	O
the	O	O
way	O	O
they	O	O
are	O	O
used	O	O
.	O	O
I	O	O
may	O	O
not	O	O
agree	O	O
with	O	O
that	O	O
choice	O	O
,	O	O
but	O	O
that	O	O
's	O	O
just	O	O
the	O	O
way	O	O
it	O	O
is	O	O
.	O	O
For	O	O
the	O	O
time	O	O
being	O	O
,	O	O
with	O	O
todays	O	O
typical	O	O
memory	O	O
constraints	O	O
,	O	O
if	O	O
your	O	O
array	O	O
or	O	O
similar	O	O
data	O	O
structure	O	O
needs	O	O
an	O	O
UInt32	B-API	O
length	O	O
,	O	O
you	O	O
should	O	O
consider	O	O
other	O	O
data	O	O
structures	O	O
.	O	O
With	O	O
an	O	O
array	O	O
of	O	O
bytes	O	O
,	O	O
Int32	B-API	O
will	O	O
give	O	O
you	O	O
2GB	O	O
of	O	O
values	O	O
Unsigned	O	O
int	O	O
is	O	O
n't	O	O
CLS	O	O
compliant	O	O
and	O	O
would	O	O
therefore	O	O
restrict	O	O
usage	O	O
of	O	O
the	O	O
property	O	O
to	O	O
those	O	O
languages	O	O
that	O	O
do	O	O
implement	O	O
a	O	O
.	O	O
See	O	O
here	O	O
:	O	O
Framework	B-API	O
1.1	I-API	O
Introduction	O	O
to	O	O
the	O	O
.NET	B-API	O
Framework	I-API	O
Class	I-API	O
Library	I-API	O
Framework	O	O
2.0	O	O
.NET	O	O
Framework	O	O
Class	O	O
Library	O	O
Overview	O	O
I	O	O
think	O	O
it	O	O
also	O	O
might	O	O
have	O	O
to	O	O
do	O	O
with	O	O
simplifying	O	O
things	O	O
on	O	O
a	O	O
lower	O	O
level	O	O
,	O	O
since	O	O
Array.Length	B-API	B-API
will	O	O
of	O	O
course	O	O
be	O	O
added	O	O
to	O	O
a	O	O
negative	O	O
number	O	O
at	O	O
some	O	O
point	O	O
,	O	O
if	O	O
Array.Length	B-API	B-API
were	O	O
unsigned	O	O
,	O	O
and	O	O
added	O	O
to	O	O
a	O	O
negative	O	O
int	O	O
(	O	O
two	O	O
's	O	O
complement	O	O
)	O	O
,	O	O
there	O	O
could	O	O
be	O	O
messy	O	O
results	O	O
.	O	O
Dive	O	O
Into	O	O
Python	B-API	O
has	O	O
a	O	O
chapter	O	O
.	O	O
Ca	O	O
n't	O	O
vouch	O	O
for	O	O
how	O	O
good	O	O
it	O	O
would	O	O
be	O	O
though	O	O
.	O	O
Personally	O	O
,	O	O
I	O	O
've	O	O
played	O	O
with	O	O
several	O	O
of	O	O
the	O	O
built-in	O	O
options	O	O
on	O	O
an	O	O
XML-heavy	O	O
project	O	O
and	O	O
have	O	O
settled	O	O
on	O	O
pulldom	B-API	O
as	O	O
the	O	O
best	O	O
choice	O	O
less	O	O
complex	O	O
documents	O	O
.	O	O
Especially	O	O
for	O	O
small	O	O
simple	O	O
stuff	O	O
,	O	O
I	O	O
like	O	O
the	O	O
event-driven	O	O
theory	O	O
of	O	O
parsing	O	O
rather	O	O
than	O	O
setting	O	O
up	O	O
a	O	O
whole	O	O
slew	O	O
of	O	O
callbacks	O	O
for	O	O
a	O	O
relatively	O	O
simple	O	O
structure	O	O
.	O	O
Here	O	O
is	O	O
a	O	O
good	O	O
quick	O	O
discussion	O	O
of	O	O
how	O	O
to	O	O
use	O	O
the	O	O
API	O	O
.	O	O
What	O	O
I	O	O
like	O	O
:	O	O
you	O	O
can	O	O
handle	O	O
the	O	O
parsing	O	O
in	O	O
a	O	O
for	O	O
loop	O	O
rather	O	O
than	O	O
using	O	O
callbacks	O	O
.	O	O
You	O	O
also	O	O
delay	O	O
full	O	O
parsing	O	O
(	O	O
the	O	O
``	O	O
pull	O	O
''	O	O
part	O	O
)	O	O
and	O	O
only	O	O
get	O	O
additional	O	O
detail	O	O
when	O	O
you	O	O
call	O	O
expandNode	B-API	B-API
(	I-API	I-API
)	I-API	I-API
.	O	O
This	O	O
satisfies	O	O
my	O	O
general	O	O
requirement	O	O
for	O	O
``	O	O
responsible	O	O
''	O	O
efficiency	O	O
without	O	O
sacrificing	O	O
ease	O	O
of	O	O
use	O	O
and	O	O
simplicity	O	O
.	O	O
ElementTree	B-API	O
has	O	O
a	O	O
nice	O	O
pythony	O	O
API	O	O
.	O	O
I	O	O
think	O	O
it	O	O
's	O	O
even	O	O
shipped	O	O
as	O	O
part	O	O
of	O	O
python	B-API	O
2.5	I-API	O
It	O	O
's	O	O
in	O	O
pure	O	O
python	O	O
and	O	O
as	O	O
I	O	O
say	O	O
,	O	O
pretty	O	O
nice	O	O
,	O	O
but	O	O
if	O	O
you	O	O
wind	O	O
up	O	O
needing	O	O
more	O	O
performance	O	O
,	O	O
then	O	O
lxml	O	O
exposes	O	O
the	O	O
same	O	O
API	O	O
and	O	O
uses	O	O
libxml2	B-API	O
under	O	O
the	O	O
hood	O	O
.	O	O
You	O	O
can	O	O
theoretically	O	O
just	O	O
swap	O	O
it	O	O
in	O	O
when	O	O
you	O	O
discover	O	O
you	O	O
need	O	O
it	O	O
.	O	O
Since	O	O
you	O	O
mentioned	O	O
that	O	O
you	O	O
'll	O	O
be	O	O
building	O	O
``	O	O
fairly	O	O
simple	O	O
''	O	O
XML	B-API	O
,	O	O
the	O	O
minidom	O	O
module	O	O
(	O	O
part	O	O
of	O	O
the	O	O
Python	B-API	O
Standard	I-API	O
Library	I-API	O
)	O	O
will	O	O
likely	O	O
suit	O	O
your	O	O
needs	O	O
.	O	O
If	O	O
you	O	O
have	O	O
any	O	O
experience	O	O
with	O	O
the	O	O
DOM	B-API	O
representation	O	O
of	O	O
XML	B-API	O
,	O	O
you	O	O
should	O	O
find	O	O
the	O	O
API	O	O
quite	O	O
straight	O	O
forward	O	O
.	O	O
I	O	O
write	O	O
a	O	O
SOAP	B-API	O
server	I-API	O
that	O	O
receives	O	O
XML	B-API	O
requests	O	O
,	O	O
and	O	O
creates	O	O
XML	B-API	O
responses	O	O
.	O	O
(	O	O
Unfortunately	O	O
,	O	O
it	O	O
's	O	O
not	O	O
my	O	O
project	O	O
,	O	O
so	O	O
it	O	O
's	O	O
closed	O	O
source	O	O
,	O	O
but	O	O
that	O	O
's	O	O
another	O	O
problem	O	O
)	O	O
.	O	O
It	O	O
turned	O	O
out	O	O
for	O	O
me	O	O
that	O	O
creating	O	O
(	O	O
SOAP	B-API	O
)	O	O
XML	B-API	O
documents	O	O
is	O	O
fairly	O	O
simple	O	O
,	O	O
if	O	O
you	O	O
have	O	O
a	O	O
data	O	O
structure	O	O
that	O	O
``	O	O
fits	O	O
''	O	O
the	O	O
schema	O	O
.	O	O
I	O	O
keep	O	O
the	O	O
envelope	O	O
,	O	O
since	O	O
the	O	O
response	O	O
envelope	O	O
is	O	O
(	O	O
almost	O	O
)	O	O
the	O	O
same	O	O
as	O	O
the	O	O
request	O	O
envelope	O	O
.	O	O
Then	O	O
,	O	O
since	O	O
my	O	O
data	O	O
structure	O	O
is	O	O
a	O	O
(	O	O
possibly	O	O
nested	O	O
)	O	O
dictionary	O	O
,	O	O
I	O	O
create	O	O
a	O	O
string	O	O
that	O	O
turns	O	O
this	O	O
dictionary	O	O
into	O	O
key	O	O
>	O	O
value/key	O	O
>	O	O
items	O	O
.	O	O
This	O	O
is	O	O
a	O	O
task	O	O
that	O	O
recursion	O	O
makes	O	O
simple	O	O
,	O	O
and	O	O
I	O	O
end	O	O
up	O	O
with	O	O
the	O	O
right	O	O
structure	O	O
.	O	O
This	O	O
is	O	O
all	O	O
done	O	O
in	O	O
python	O	O
code	O	O
,	O	O
and	O	O
is	O	O
currently	O	O
fast	O	O
enough	O	O
for	O	O
production	O	O
use	O	O
.	O	O
You	O	O
can	O	O
also	O	O
(	O	O
relatively	O	O
)	O	O
easily	O	O
build	O	O
lists	O	O
as	O	O
well	O	O
,	O	O
although	O	O
depending	O	O
upon	O	O
your	O	O
client	O	O
,	O	O
you	O	O
may	O	O
hit	O	O
problems	O	O
unless	O	O
you	O	O
give	O	O
length	O	O
hints	O	O
.	O	O
For	O	O
me	O	O
,	O	O
this	O	O
was	O	O
much	O	O
simpler	O	O
,	O	O
since	O	O
a	O	O
dictionary	O	O
is	O	O
a	O	O
much	O	O
easier	O	O
way	O	O
of	O	O
working	O	O
than	O	O
some	O	O
custom	O	O
class	O	O
.	O	O
For	O	O
the	O	O
books	O	O
,	O	O
generating	O	O
XML	B-API	O
is	O	O
much	O	O
easier	O	O
than	O	O
parsing	O	O
!	O	O
I	O	O
would	O	O
be	O	O
a	O	O
bit	O	O
reluctant	O	O
to	O	O
use	O	O
nested	O	O
classes	O	O
here	O	O
.	O	O
What	O	O
if	O	O
you	O	O
created	O	O
an	O	O
abstract	O	O
base	O	O
class	O	O
for	O	O
a	O	O
``	O	O
multimedia	O	O
driver	O	O
''	O	O
to	O	O
handle	O	O
the	O	O
back-end	O	O
stuff	O	O
(	O	O
workhorse	O	O
)	O	O
,	O	O
and	O	O
a	O	O
separate	O	O
class	O	O
for	O	O
the	O	O
front-end	O	O
work	O	O
?	O	O
The	O	O
front-end	O	O
class	O	O
could	O	O
take	O	O
a	O	O
pointer/reference	O	O
to	O	O
an	O	O
implemented	O	O
driver	O	O
class	O	O
(	O	O
for	O	O
the	O	O
appropriate	O	O
media	O	O
type	O	O
and	O	O
situation	O	O
)	O	O
and	O	O
perform	O	O
the	O	O
abstract	O	O
operations	O	O
on	O	O
the	O	O
workhorse	O	O
structure	O	O
.	O	O
My	O	O
philosophy	O	O
would	O	O
be	O	O
to	O	O
go	O	O
ahead	O	O
and	O	O
make	O	O
both	O	O
structures	O	O
accessible	O	O
to	O	O
the	O	O
client	O	O
in	O	O
a	O	O
polished	O	O
way	O	O
,	O	O
just	O	O
under	O	O
the	O	O
assumption	O	O
they	O	O
would	O	O
be	O	O
used	O	O
in	O	O
tandem	O	O
.	O	O
I	O	O
would	O	O
reference	O	O
something	O	O
like	O	O
a	O	O
QTextDocument	B-API	O
in	O	O
Qt	O	O
.	O	O
You	O	O
provide	O	O
a	O	O
direct	O	O
interface	O	O
to	O	O
the	O	O
bare	O	O
metal	O	O
data	O	O
handling	O	O
,	O	O
but	O	O
pass	O	O
the	O	O
authority	O	O
along	O	O
to	O	O
an	O	O
object	O	O
like	O	O
a	O	O
QTextEdit	B-API	O
to	O	O
do	O	O
the	O	O
manipulation	O	O
.	O	O
One	O	O
way	O	O
of	O	O
deciding	O	O
whether	O	O
or	O	O
not	O	O
to	O	O
use	O	O
nested	O	O
classes	O	O
is	O	O
to	O	O
think	O	O
whether	O	O
or	O	O
not	O	O
this	O	O
class	O	O
plays	O	O
a	O	O
supporting	O	O
role	O	O
or	O	O
it	O	O
's	O	O
own	O	O
part	O	O
.	O	O
If	O	O
it	O	O
exists	O	O
solely	O	O
for	O	O
the	O	O
purpose	O	O
of	O	O
helping	O	O
another	O	O
class	O	O
then	O	O
I	O	O
generally	O	O
make	O	O
it	O	O
a	O	O
nested	O	O
class	O	O
.	O	O
There	O	O
are	O	O
a	O	O
whole	O	O
load	O	O
of	O	O
caveats	O	O
to	O	O
that	O	O
,	O	O
some	O	O
of	O	O
which	O	O
seem	O	O
contradictory	O	O
but	O	O
it	O	O
all	O	O
comes	O	O
down	O	O
to	O	O
experience	O	O
and	O	O
gut-feeling	O	O
.	O	O
sounds	O	O
like	O	O
a	O	O
case	O	O
where	O	O
you	O	O
could	O	O
use	O	O
the	O	O
strategy	O	O
pattern	O	O
Assuming	O	O
your	O	O
master	O	O
page	O	O
was	O	O
named	O	O
MyMaster	B-API	O
:	I-API	O
(	I-API	O
Master	I-API	O
as	I-API	O
MyMaster	I-API	O
)	I-API	O
.PeopleListView.DataBind	I-API	O
(	I-API	O
)	I-API	O
;	O	O
Edit	O	O
:	O	O
since	O	O
PeopleListView	O	O
will	O	O
be	O	O
declared	O	O
protected	O	O
by	O	O
default	O	O
,	O	O
you	O	O
will	O	O
either	O	O
need	O	O
to	O	O
change	O	O
this	O	O
to	O	O
public	O	O
,	O	O
or	O	O
create	O	O
a	O	O
public	O	O
property	O	O
wrapper	O	O
so	O	O
that	O	O
you	O	O
can	O	O
access	O	O
it	O	O
from	O	O
your	O	O
page	O	O
.	O	O
I	O	O
believe	O	O
you	O	O
could	O	O
do	O	O
this	O	O
by	O	O
using	O	O
this.Master.FindControl	B-API	O
or	O	O
something	O	O
similar	O	O
,	O	O
but	O	O
you	O	O
probably	O	O
should	O	O
n't	O	O
-	O	O
it	O	O
requires	O	O
the	O	O
content	O	O
page	O	O
to	O	O
know	O	O
too	O	O
much	O	O
about	O	O
the	O	O
structure	O	O
of	O	O
the	O	O
master	O	O
page	O	O
.	O	O
I	O	O
would	O	O
suggest	O	O
another	O	O
method	O	O
,	O	O
such	O	O
as	O	O
firing	O	O
an	O	O
event	O	O
in	O	O
the	O	O
content	O	O
area	O	O
that	O	O
the	O	O
master	O	O
could	O	O
listen	O	O
for	O	O
and	O	O
re-bind	O	O
when	O	O
fired	O	O
.	O	O
Assuming	O	O
the	O	O
control	O	O
is	O	O
called	O	O
``	O	O
PeopleListView	O	O
''	O	O
on	O	O
the	O	O
master	O	O
page	O	O
ListView	B-API	O
peopleListView	O	O
=	O	O
(	B-API	O
ListView	I-API	O
)	I-API	O
this.Master.FindControl	B-API	B-API
(	I-API	I-API
``	I-API	I-API
PeopleListView	I-API	I-API
''	I-API	I-API
)	I-API	I-API
;	O	O
peopleListView.DataSource	B-API	B-API
=	O	O
[	O	O
whatever	O	O
]	O	O
;	O	O
peopleListView.DataBind	B-API	B-API
(	I-API	I-API
)	I-API	I-API
;	O	O
But	O	O
@	O	O
palmsey	O	O
is	O	O
more	O	O
correct	O	O
,	O	O
especially	O	O
if	O	O
your	O	O
page	O	O
could	O	O
have	O	O
the	O	O
possibility	O	O
of	O	O
more	O	O
than	O	O
one	O	O
master	O	O
page	O	O
.	O	O
Decouple	O	O
them	O	O
and	O	O
use	O	O
an	O	O
event	O	O
.	O	O
I	O	O
've	O	O
been	O	O
doing	O	O
a	O	O
little	O	O
research	O	O
into	O	O
this	O	O
and	O	O
whilst	O	O
I	O	O
'm	O	O
not	O	O
entirely	O	O
sure	O	O
its	O	O
the	O	O
cause	O	O
I	O	O
believe	O	O
it	O	O
is	O	O
because	O	O
Safari	O	O
is	O	O
not	O	O
returning	O	O
the	O	O
full	O	O
result	O	O
set	O	O
(	O	O
hence	O	O
cropping	O	O
it	O	O
)	O	O
.	O	O
I	O	O
have	O	O
been	O	O
in	O	O
dicussion	O	O
with	O	O
another	O	O
developer	O	O
and	O	O
found	O	O
the	O	O
following	O	O
post	O	O
on	O	O
Channel	O	O
9	O	O
as	O	O
well	O	O
which	O	O
recommends	O	O
making	O	O
use	O	O
of	O	O
the	O	O
SQL	B-API	O
State	I-API	O
service	O	O
to	O	O
store	O	O
the	O	O
viewstate	O	O
avoiding	O	O
the	O	O
postback	O	O
issue	O	O
and	O	O
also	O	O
page	O	O
size	O	O
.	O	O
http	O	O
:	O	O
//channel9.msdn.com/forums/TechOff/250549-ASPNET-ViewState-flawed-architecture/	O	O
?	O	O
CommentID=270477	O	O
#	O	O
263702	O	O
Does	O	O
this	O	O
seem	O	O
like	O	O
the	O	O
best	O	O
solution	O	O
?	O	O
My	O	O
first	O	O
port	O	O
of	O	O
call	O	O
would	O	O
be	O	O
to	O	O
go	O	O
through	O	O
the	O	O
elements	O	O
on	O	O
the	O	O
page	O	O
and	O	O
see	O	O
which	O	O
controls	O	O
:	O	O
Will	O	O
still	O	O
work	O	O
when	O	O
I	O	O
switch	O	O
ViewState	O	O
off	O	O
Can	O	O
be	O	O
moved	O	O
out	O	O
of	O	O
the	O	O
page	O	O
and	O	O
into	O	O
an	O	O
AJAX	B-API	O
call	O	O
to	O	O
be	O	O
loaded	O	O
when	O	O
required	O	O
Failing	O	O
that	O	O
,	O	O
and	O	O
here	O	O
's	O	O
the	O	O
disclaimer	O	O
-	O	O
I	O	O
've	O	O
never	O	O
used	O	O
this	O	O
solution	O	O
on	O	O
a	O	O
web-facing	O	O
site	O	O
-	O	O
but	O	O
in	O	O
the	O	O
past	O	O
where	O	O
I	O	O
've	O	O
wanted	O	O
to	O	O
eliminate	O	O
massive	O	O
ViewStates	O	O
in	O	O
limited-audience	O	O
applications	O	O
I	O	O
have	O	O
stored	O	O
the	O	O
ViewState	O	O
in	O	O
the	O	O
Session	O	O
.	O	O
It	O	O
has	O	O
worked	O	O
for	O	O
me	O	O
because	O	O
the	O	O
hit	O	O
to	O	O
memory	O	O
is	O	O
n't	O	O
significant	O	O
for	O	O
the	O	O
number	O	O
of	O	O
users	O	O
,	O	O
but	O	O
if	O	O
you	O	O
're	O	O
running	O	O
a	O	O
fairly	O	O
popular	O	O
site	O	O
I	O	O
would	O	O
n't	O	O
recommend	O	O
this	O	O
approach	O	O
.	O	O
However	O	O
,	O	O
if	O	O
the	O	O
Session	O	O
solution	O	O
works	O	O
for	O	O
Safari	O	O
you	O	O
could	O	O
always	O	O
detect	O	O
the	O	O
user	O	O
agent	O	O
and	O	O
fudge	O	O
appropriately	O	O
.	O	O
While	O	O
I	O	O
second	O	O
the	O	O
Channel	O	O
9	O	O
solution	O	O
,	O	O
also	O	O
be	O	O
aware	O	O
that	O	O
in	O	O
some	O	O
hosted	O	O
environments	O	O
Safari	O	O
is	O	O
not	O	O
considered	O	O
an	O	O
up-level	O	O
browser	O	O
.	O	O
You	O	O
may	O	O
need	O	O
to	O	O
add	O	O
it	O	O
to	O	O
your	O	O
application	O	O
's	O	O
browscap	O	O
in	O	O
order	O	O
to	O	O
make	O	O
use	O	O
of	O	O
some	O	O
ASP.Net	B-API	O
features	O	O
.	O	O
That	O	O
was	O	O
the	O	O
root	O	O
cause	O	O
of	O	O
some	O	O
headaches	O	O
we	O	O
had	O	O
for	O	O
a	O	O
client	O	O
's	O	O
site	O	O
that	O	O
used	O	O
the	O	O
ASP	B-API	O
Menu	I-API	O
control	O	O
.	O	O
Without	O	O
the	O	O
extra	O	O
quotes	O	O
around	O	O
the	O	O
input	O	O
string	O	O
parameter	O	O
,	O	O
the	O	O
Javascript	B-API	O
function	O	O
thinks	O	O
I	O	O
'm	O	O
passing	O	O
in	O	O
an	O	O
integer	O	O
.	O	O
Can	O	O
you	O	O
do	O	O
some	O	O
rudimentary	O	O
string	O	O
function	O	O
to	O	O
force	O	O
JavaScript	B-API	O
into	O	O
changing	O	O
it	O	O
into	O	O
a	O	O
string	O	O
?	O	O
Like	O	O
value	O	O
=	O	O
value	O	O
+	O	O
Try	O	O
putting	O	O
the	O	O
extra	O	O
text	O	O
inside	O	O
the	O	O
server-side	O	O
script	O	O
block	O	O
and	O	O
concatenating	O	O
.	O	O
onclick=	O	O
'	O	O
%	O	B-API
#	O	I-API
``	O	I-API
``	O	I-API
''	O	I-API
)	O	I-API
;	O	O
''	O	O
ToggleDisplay	O	O
(	O	O
``	O	O
''	O	O
''	O	O
DataBinder.Eval	B-API	B-API
(	I-API	I-API
Container.DataItem	I-API	I-API
,	I-API	I-API
``	I-API	I-API
JobCode	I-API	I-API
''	I-API	I-API
)	I-API	I-API
Edit	O	O
:	O	O
I	O	O
'm	O	O
pretty	O	O
sure	O	O
you	O	O
could	O	O
just	O	O
use	O	O
double	O	O
quotes	O	O
outside	O	O
the	O	O
script	O	O
block	O	O
as	O	O
well	O	O
.	O	O
I	O	O
had	O	O
recently	O	O
similar	O	O
problem	O	O
and	O	O
the	O	O
only	O	O
way	O	O
to	O	O
solve	O	O
it	O	O
was	O	O
to	O	O
use	O	O
plain	O	O
old	O	O
HTML	B-API	O
codes	O	O
for	O	O
single	O	O
(	O	O
)	O	O
and	O	O
double	O	O
quotes	O	O
(	O	O
)	O	O
.	O	O
Source	O	O
code	O	O
was	O	O
total	O	O
mess	O	O
of	O	O
course	O	O
but	O	O
it	O	O
worked	O	O
.	O	O
Try	O	O
a	O	O
id=	O	O
''	O	O
aShowHide	O	O
''	O	O
onclick='ToggleDisplay	O	O
(	O	O
#	O	O
34	O	O
;	O	O
%	O	O
#	O	O
DataBinder.Eval	B-API	B-API
(	I-API	I-API
Container.DataItem	I-API	I-API
,	I-API	I-API
``	I-API	I-API
JobCode	I-API	I-API
''	I-API	I-API
)	I-API	I-API
%	O	O
#	O	O
34	O	O
;	O	O
)	O	O
;	O	O
'Show/Hide/a	O	O
or	O	O
a	O	O
id=	O	O
''	O	O
aShowHide	O	O
''	O	O
onclick='ToggleDisplay	O	O
(	O	O
#	O	O
39	O	O
;	O	O
%	O	O
#	O	O
DataBinder.Eval	B-API	B-API
(	I-API	I-API
Container.DataItem	I-API	I-API
,	I-API	I-API
``	I-API	I-API
JobCode	I-API	I-API
''	I-API	I-API
)	I-API	I-API
%	O	O
#	O	O
39	O	O
;	O	O
)	O	O
;	O	O
'Show/Hide/a	O	O
You	O	O
could	O	O
instead	O	O
add	O	O
the	O	O
comma	O	O
as	O	O
the	O	O
first	O	O
thing	O	O
inside	O	O
your	O	O
foreach	B-API	O
.	O	O
if	B-API	O
(	I-API	O
sb.Length	I-API	O
0	I-API	O
)	I-API	O
sb.Append	B-API	B-API
(	I-API	I-API
``	I-API	I-API
,	I-API	I-API
''	I-API	I-API
)	I-API	I-API
How	O	O
about	O	O
tracking	O	O
whether	O	O
you	O	O
are	O	O
on	O	O
the	O	O
first	O	O
item	O	O
,	O	O
and	O	O
only	O	O
add	O	O
a	O	O
comma	O	O
before	O	O
the	O	O
item	O	O
if	O	O
it	O	O
is	O	O
not	O	O
the	O	O
first	O	O
one	O	O
.	O	O
public	O	O
string	O	O
ReturnAsCSV	B-API	O
(	I-API	O
ContactList	I-API	O
contactList	I-API	O
)	I-API	O
{	O	O
StringBuilder	B-API	O
sb	O	O
=	O	O
new	O	O
StringBuilder	B-API	O
(	I-API	O
)	I-API	O
;	O	O
bool	O	O
isFirst	O	O
=	O	O
true	O	O
;	O	O
foreach	B-API	O
(	I-API	O
Contact	I-API	O
c	I-API	O
in	I-API	O
contactList	I-API	O
)	I-API	O
{	O	O
if	B-API	O
(	I-API	O
!	I-API	O
isFirst	I-API	O
)	I-API	O
{	O	O
//	O	O
Only	O	O
add	O	O
comma	O	O
before	O	O
item	O	O
if	O	O
it	O	O
is	O	O
not	O	O
the	O	O
first	O	O
item	O	O
sb.Append	B-API	B-API
(	I-API	I-API
``	I-API	I-API
,	I-API	I-API
''	I-API	I-API
)	I-API	I-API
;	O	O
}	O	O
else	O	O
{	O	O
isFirst	O	O
=	O	O
false	O	O
;	O	O
}	O	O
sb.Append	B-API	B-API
(	I-API	I-API
c.Name	I-API	I-API
)	I-API	I-API
;	O	O
}	O	O
return	O	O
sb.ToString	B-API	B-API
(	I-API	I-API
)	I-API	I-API
;	O	O
}	O	O
You	O	O
could	O	O
use	O	O
LINQ	B-API	O
to	O	O
Objects	O	O
:	O	O
string	B-API	O
[	I-API	O
]	I-API	O
strings	O	O
=	O	O
contactList.Select	B-API	O
(	I-API	O
c	I-API	O
=	I-API	O
c.Name	I-API	O
)	I-API	O
.ToArray	I-API	O
(	I-API	O
)	I-API	O
;	O	O
string	O	O
csv	O	O
=	O	O
string.Join	B-API	B-API
(	I-API	I-API
``	I-API	I-API
,	I-API	I-API
''	I-API	I-API
,	I-API	I-API
strings	I-API	I-API
)	I-API	I-API
;	O	O
Obviously	O	O
that	O	O
could	O	O
all	O	O
be	O	O
done	O	O
in	O	O
one	O	O
line	O	O
,	O	O
but	O	O
it	O	O
's	O	O
a	O	O
bit	O	O
clearer	O	O
on	O	O
two	O	O
.	O	O
?	O	O
php	B-API	O
$	O	O
outputString	O	O
=	O	O
(	O	O
'	O	O
,	O	O
'	O	O
,	O	O
$	O	O
array	O	O
)	O	O
Sorry	O	O
,	O	O
PHP	B-API	O
specific	O	O
example	O	O
,	O	O
but	O	O
might	O	O
help	O	O
somebody	O	O
.	O	O
I	O	O
like	O	O
the	O	O
idea	O	O
of	O	O
adding	O	O
the	O	O
comma	O	O
by	O	O
checking	O	O
if	O	O
the	O	O
container	O	O
is	O	O
empty	O	O
,	O	O
but	O	O
does	O	O
n't	O	O
that	O	O
mean	O	O
more	O	O
processing	O	O
as	O	O
it	O	O
needs	O	O
to	O	O
check	O	O
the	O	O
length	O	O
of	O	O
the	O	O
string	O	O
on	O	O
each	O	O
occurrence	O	O
?	O	O
You	O	O
're	O	O
prematurely	O	O
optimizing	O	O
,	O	O
the	O	O
performance	O	O
hit	O	O
would	O	O
be	O	O
negligible	O	O
.	O	O
You	O	O
could	O	O
also	O	O
make	O	O
an	O	O
array	O	O
of	O	O
c.Name	O	O
data	O	O
and	O	O
use	O	O
String.Join	B-API	B-API
method	O	O
to	O	O
create	O	O
your	O	O
line	O	O
.	O	O
public	O	O
string	O	O
ReturnAsCSV	B-API	O
(	I-API	O
ContactList	I-API	O
contactList	I-API	O
)	I-API	O
{	O	O
ListString	B-API	O
tmpList	O	O
=	O	O
new	O	O
Liststring	B-API	B-API
(	I-API	I-API
)	I-API	I-API
;	O	O
foreach	B-API	O
(	I-API	O
Contact	I-API	O
c	I-API	O
in	I-API	O
contactList	I-API	O
)	I-API	O
{	O	O
tmpList.Add	B-API	B-API
(	I-API	I-API
c.Name	I-API	I-API
)	I-API	I-API
;	O	O
}	O	O
return	O	O
String.Join	B-API	B-API
(	I-API	I-API
``	I-API	I-API
,	I-API	I-API
''	I-API	I-API
,	I-API	I-API
tmpList.ToArray	I-API	B-API
(	I-API	I-API
)	I-API	I-API
)	I-API	I-API
;	O	O
}	O	O
This	O	O
might	O	O
not	O	O
be	O	O
as	O	O
performant	O	O
as	O	O
the	O	O
StringBuilder	B-API	O
approach	O	O
,	O	O
but	O	O
it	O	O
definitely	O	O
looks	O	O
cleaner	O	O
.	O	O
Also	O	O
,	O	O
you	O	O
might	O	O
want	O	O
to	O	O
consider	O	O
using	O	O
.CurrentCulture.TextInfo.ListSeparator	B-API	O
instead	O	O
of	O	O
a	O	O
hard-coded	O	O
comma	O	O
--	O	O
If	O	O
your	O	O
output	O	O
is	O	O
going	O	O
to	O	O
be	O	O
imported	O	O
into	O	O
other	O	O
applications	O	O
,	O	O
you	O	O
might	O	O
have	O	O
problems	O	O
with	O	O
it	O	O
.	O	O
ListSeparator	B-API	O
may	O	O
be	O	O
different	O	O
across	O	O
different	O	O
cultures	O	O
,	O	O
and	O	O
MS	B-API	O
Excel	I-API	O
at	O	O
the	O	O
very	O	O
least	O	O
,	O	O
honors	O	O
this	O	O
setting	O	O
.	O	O
So	O	O
:	O	O
return	O	O
String.Join	B-API	B-API
(	I-API	I-API
System.Globalization.CultureInfo.CurrentCulture.TextInfo.ListSeparator	I-API	I-API
,	I-API	I-API
tmpList.ToArray	I-API	B-API
(	I-API	I-API
)	I-API	I-API
)	I-API	I-API
;	O	O
How	O	O
about	O	O
some	O	O
trimming	O	O
?	O	O
public	O	O
string	O	O
ReturnAsCSV	B-API	O
(	I-API	O
ContactList	I-API	O
contactList	I-API	O
)	I-API	O
{	O	O
StringBuilder	B-API	O
sb	O	O
=	O	O
new	O	O
StringBuilder	B-API	O
(	I-API	O
)	I-API	O
;	O	O
foreach	B-API	O
(	I-API	O
Contact	I-API	O
c	I-API	O
in	I-API	O
contactList	I-API	O
)	I-API	O
{	O	O
sb.Append	B-API	B-API
(	I-API	I-API
c.Name	I-API	I-API
+	I-API	I-API
``	I-API	I-API
,	I-API	I-API
''	I-API	I-API
)	I-API	I-API
;	O	O
}	O	O
return	O	O
sb.ToString	B-API	B-API
(	I-API	I-API
)	I-API	I-API
.Trim	I-API	I-API
(	I-API	I-API
'	I-API	I-API
,	I-API	I-API
'	I-API	I-API
)	I-API	I-API
;	O	O
}	O	O
Just	O	O
a	O	O
thought	O	O
,	O	O
but	O	O
remember	O	O
to	O	O
handle	O	O
comma	O	O
's	O	O
and	O	O
quotation	O	O
marks	O	O
(	O	O
``	O	O
)	O	O
in	O	O
the	O	O
field	O	O
values	O	O
,	O	O
otherwise	O	O
your	O	O
CSV	B-API	O
file	O	O
may	O	O
break	O	O
the	O	O
consumers	O	O
reader	O	O
.	O	O
Do	O	O
n't	O	O
forget	O	O
our	O	O
old	O	O
friend	O	O
``	O	O
for	O	O
''	O	O
.	O	O
It	O	O
's	O	O
not	O	O
as	O	O
nice-looking	O	O
as	O	O
foreach	B-API	O
but	O	O
it	O	O
has	O	O
the	O	O
advantage	O	O
of	O	O
being	O	O
able	O	O
to	O	O
start	O	O
at	O	O
the	O	O
second	O	O
element	O	O
.	O	O
public	O	O
string	O	O
ReturnAsCSV	B-API	O
(	I-API	O
ContactList	I-API	O
contactList	I-API	O
)	I-API	O
{	O	O
if	B-API	O
(	I-API	O
contactList	I-API	O
==	I-API	O
null	I-API	O
||	I-API	O
contactList.Count	B-API	O
==	I-API	O
0	I-API	O
)	I-API	O
return	O	O
string.Empty	B-API	B-API
;	O	O
StringBuilder	B-API	O
sb	O	O
=	O	O
new	O	O
StringBuilder	B-API	O
(	I-API	O
contactList	I-API	O
[	I-API	O
0	I-API	O
]	I-API	O
.Name	I-API	O
)	I-API	O
;	O	O
for	O	O
(	O	O
int	O	O
i	O	O
=	O	O
1	O	O
;	O	O
i	O	O
contactList.Count	B-API	B-API
;	O	O
i++	O	O
)	O	O
{	O	O
sb.Append	B-API	B-API
(	I-API	I-API
``	I-API	I-API
,	I-API	I-API
''	I-API	I-API
)	I-API	I-API
;	O	O
sb.Append	B-API	B-API
(	I-API	I-API
contactList	I-API	I-API
[	I-API	I-API
i	I-API	I-API
]	I-API	I-API
.Name	I-API	I-API
)	I-API	I-API
;	O	O
}	O	O
return	O	O
sb.ToString	B-API	B-API
(	I-API	I-API
)	I-API	I-API
;	O	O
}	O	O
You	O	O
could	O	O
also	O	O
wrap	O	O
the	O	O
second	O	O
Append	O	O
in	O	O
an	O	O
``	O	O
if	O	O
''	O	O
that	O	O
tests	O	O
whether	O	O
the	O	O
Name	O	O
property	O	O
contains	O	O
a	O	O
double-quote	O	O
or	O	O
a	O	O
comma	O	O
,	O	O
and	O	O
if	O	O
so	O	O
,	O	O
escape	O	O
them	O	O
appropriately	O	O
.	O	O
I	O	O
do	O	O
n't	O	O
know	O	O
if	O	O
I	O	O
'd	O	O
call	O	O
it	O	O
a	O	O
good	O	O
place	O	O
to	O	O
start	O	O
,	O	O
but	O	O
if	O	O
you	O	O
want	O	O
to	O	O
be	O	O
future	O	O
ready	O	O
,	O	O
take	O	O
a	O	O
look	O	O
at	O	O
the	O	O
windows	O	O
presentation	O	O
foundation	O	O
which	O	O
is	O	O
built	O	O
entirely	O	O
for	O	O
the	O	O
purpose	O	O
of	O	O
programming	O	O
GUI	O	O
's	O	O
for	O	O
windows	O	O
My	O	O
first	O	O
experience	O	O
writing	O	O
simple	O	O
GUI	O	O
applications	O	O
for	O	O
Windows	O	O
was	O	O
with	O	O
C	B-API	O
#	I-API	O
and	O	O
Visual	B-API	O
Studio	I-API	O
.	O	O
The	O	O
GUI-building	O	O
interface	O	O
is	O	O
a	O	O
simple	O	O
drag	O	O
and	O	O
drop	O	O
deal	O	O
that	O	O
generates	O	O
skeleton	O	O
methods	O	O
based	O	O
on	O	O
potential	O	O
user	O	O
actions	O	O
.	O	O
I	O	O
only	O	O
did	O	O
fairly	O	O
basic	O	O
programming	O	O
with	O	O
this	O	O
,	O	O
but	O	O
I	O	O
imagine	O	O
it	O	O
would	O	O
be	O	O
an	O	O
excellent	O	O
place	O	O
to	O	O
start	O	O
to	O	O
learn	O	O
the	O	O
basics	O	O
and	O	O
extend	O	O
into	O	O
the	O	O
more	O	O
advanced	O	O
capabilities	O	O
as	O	O
you	O	O
go	O	O
.	O	O
``	O	O
take	O	O
a	O	O
look	O	O
at	O	O
the	O	O
windows	O	O
presentation	O	O
foundation	O	O
''	O	O
...	O	O
In	O	O
other	O	O
words	O	O
,	O	O
Silverlight	B-API	O
.	O	O
If	O	O
you	O	O
do	O	O
n't	O	O
want	O	O
to	O	O
go	O	O
the	O	O
MS	O	O
route	O	O
you	O	O
might	O	O
give	O	O
Adobe	B-API	O
's	I-API	O
Flash/Flex	I-API	O
a	O	O
look	O	O
see	O	O
.	O	O
Both	O	O
Silverlight	B-API	O
and	O	O
Flash/Flex	B-API	O
build	O	O
RIA	O	O
's	O	O
.	O	O
Which	O	O
I	O	O
think	O	O
is	O	O
where	O	O
we	O	O
are	O	O
headed	O	O
.	O	O
They	O	O
days	O	O
of	O	O
Office	B-API	O
like	O	O
apps	O	O
are	O	O
numbered	O	O
This	O	O
is	O	O
a	O	O
rather	O	O
broad	O	O
question	O	O
,	O	O
as	O	O
programming	O	O
GUI	O	O
applications	O	O
in	O	O
Windows	O	O
can	O	O
be	O	O
done	O	O
in	O	O
so	O	O
many	O	O
ways	O	O
.	O	O
There	O	O
are	O	O
two	O	O
main	O	O
parts	O	O
to	O	O
developing	O	O
any	O	O
GUI	O	O
app	O	O
:	O	O
the	O	O
language	O	O
and	O	O
the	O	O
API/framework	O	O
.	O	O
Considering	O	O
you	O	O
're	O	O
interested	O	O
in	O	O
learning	O	O
to	O	O
build	O	O
Windows	O	O
GUI	O	O
apps	O	O
,	O	O
the	O	O
language	O	O
is	O	O
n't	O	O
really	O	O
a	O	O
point	O	O
of	O	O
focus	O	O
for	O	O
you	O	O
.	O	O
Hence	O	O
,	O	O
you	O	O
should	O	O
pick	O	O
a	O	O
language	O	O
you	O	O
already	O	O
know	O	O
and	O	O
work	O	O
with	O	O
a	O	O
framework	O	O
or	O	O
API	O	O
that	O	O
can	O	O
be	O	O
harnessed	O	O
by	O	O
your	O	O
chosen	O	O
language	O	O
.	O	O
If	O	O
you	O	O
want	O	O
to	O	O
use	O	O
C	O	O
you	O	O
're	O	O
pretty	O	O
much	O	O
restricted	O	O
to	O	O
dealing	O	O
with	O	O
the	O	O
Win32	B-API	O
API	I-API	O
yourself	O	O
,	O	O
in	O	O
which	O	O
case	O	O
reading	O	O
Petzold	O	O
or	O	O
Richter	O	O
would	O	O
be	O	O
great	O	O
places	O	O
to	O	O
start	O	O
.	O	O
The	O	O
Win32	B-API	O
API	I-API	O
can	O	O
be	O	O
quite	O	O
daunting	O	O
,	O	O
but	O	O
it	O	O
's	O	O
well	O	O
worth	O	O
the	O	O
effort	O	O
to	O	O
learn	O	O
(	O	O
imho	O	O
)	O	O
.	O	O
There	O	O
are	O	O
plenty	O	O
of	O	O
tutorials	O	O
on	O	O
Win32	B-API	O
on	O	O
the	O	O
web	O	O
,	O	O
and	O	O
there	O	O
's	O	O
always	O	O
MSDN	B-API	O
,	O	O
with	O	O
a	O	O
complete	O	O
reference/guide	O	O
to	O	O
the	O	O
Win32	B-API	B-API
API	I-API	I-API
.	O	O
Make	O	O
sure	O	O
you	O	O
cover	O	O
not	O	O
just	O	O
the	O	O
API	O	O
,	O	O
but	O	O
other	O	O
areas	O	O
such	O	O
as	O	O
resources/dialogs	O	O
as	O	O
they	O	O
are	O	O
building	O	O
blocks	O	O
for	O	O
your	O	O
Win32	B-API	O
application	O	O
.	O	O
If	O	O
you	O	O
want	O	O
to	O	O
use	O	O
C++	B-API	O
you	O	O
have	O	O
all	O	O
of	O	O
the	O	O
options	O	O
that	O	O
you	O	O
have	O	O
when	O	O
using	O	O
C	B-API	O
plus	O	O
a	O	O
few	O	O
others	O	O
.	O	O
I	O	O
'd	O	O
recommend	O	O
going	O	O
with	O	O
the	O	O
Win32	B-API	O
API	I-API	O
directly	O	O
,	O	O
and	O	O
then	O	O
moving	O	O
on	O	O
to	O	O
a	O	O
known	O	O
framework	O	O
such	O	O
as	O	O
MFC	B-API	O
,	O	O
Qt	B-API	O
,	O	O
wxWindows	B-API	O
or	O	O
GTK	B-API	O
so	O	O
that	O	O
you	O	O
can	O	O
spend	O	O
less	O	O
time	O	O
working	O	O
with	O	O
boilerplate	O	O
code	O	O
and	O	O
instead	O	O
focus	O	O
on	O	O
writing	O	O
your	O	O
application	O	O
logic	O	O
.	O	O
The	O	O
last	O	O
3	O	O
options	O	O
I	O	O
just	O	O
listed	O	O
have	O	O
the	O	O
added	O	O
benefit	O	O
of	O	O
being	O	O
cross-platform	O	O
,	O	O
so	O	O
you	O	O
do	O	O
n't	O	O
have	O	O
to	O	O
worry	O	O
too	O	O
much	O	O
about	O	O
platform-specific	O	O
issues	O	O
.	O	O
Given	O	O
that	O	O
you	O	O
said	O	O
you	O	O
want	O	O
to	O	O
work	O	O
with	O	O
Windows	O	O
,	O	O
I	O	O
'll	O	O
assume	O	O
you	O	O
're	O	O
keen	O	O
to	O	O
focus	O	O
on	O	O
that	O	O
rather	O	O
than	O	O
cross-platform	O	O
--	O	O
so	O	O
go	O	O
with	O	O
MFC	B-API	O
,	O	O
but	O	O
spend	O	O
some	O	O
time	O	O
with	O	O
the	O	O
Win32	B-API	O
API	I-API	O
first	O	O
to	O	O
get	O	O
familiar	O	O
with	O	O
some	O	O
of	O	O
the	O	O
concepts	O	O
.	O	O
When	O	O
dealing	O	O
with	O	O
MFC	B-API	O
and	O	O
the	O	O
Win32	B-API	O
API	I-API	O
,	O	O
it	O	O
's	O	O
a	O	O
good	O	O
idea	O	O
to	O	O
try	O	O
and	O	O
get	O	O
a	O	O
solid	O	O
understanding	O	O
of	O	O
the	O	O
terminology	O	O
prior	O	O
to	O	O
writing	O	O
code	O	O
.	O	O
For	O	O
example	O	O
,	O	O
you	O	O
need	O	O
to	O	O
understand	O	O
what	O	O
the	O	O
message	O	O
pump	O	O
is	O	O
,	O	O
and	O	O
how	O	O
it	O	O
works	O	O
.	O	O
You	O	O
need	O	O
to	O	O
know	O	O
about	O	O
concepts	O	O
such	O	O
as	O	O
``	O	O
owner-drawn	O	O
controls	O	O
''	O	O
,	O	O
and	O	O
subclassing	O	O
.	O	O
When	O	O
you	O	O
understand	O	O
these	O	O
things	O	O
(	O	O
and	O	O
more	O	O
)	O	O
,	O	O
you	O	O
'll	O	O
find	O	O
it	O	O
easier	O	O
to	O	O
work	O	O
with	O	O
MFC	B-API	O
because	O	O
it	O	O
uses	O	O
similar	O	O
terminology	O	O
in	O	O
its	O	O
class	O	O
interfaces	O	O
(	O	O
eg	O	O
.	O	O
you	O	O
need	O	O
to	O	O
know	O	O
what	O	O
``	O	O
translate	O	O
messages	O	O
''	O	O
means	O	O
before	O	O
you	O	O
can	O	O
understand	O	O
how	O	O
and	O	O
when	O	O
to	O	O
use	O	O
PreTranslateMessage	B-API	O
)	O	O
.	O	O
You	O	O
could	O	O
also	O	O
use	O	O
Managed	O	O
C++	B-API	O
to	O	O
write	O	O
.NET	B-API	O
GUI	O	O
applications	O	O
,	O	O
but	O	O
I	O	O
've	O	O
read	O	O
in	O	O
a	O	O
few	O	O
places	O	O
that	O	O
Managed	B-API	O
C++	I-API	O
was	O	O
n't	O	O
really	O	O
intended	O	O
to	O	O
be	O	O
used	O	O
in	O	O
this	O	O
manner	O	O
.	O	O
Instead	O	O
it	O	O
should	O	O
be	O	O
used	O	O
as	O	O
a	O	O
gateway	O	O
between	O	O
native/unmanaged	O	O
code	O	O
and	O	O
managed	O	O
code	O	O
.	O	O
If	O	O
you	O	O
're	O	O
using	O	O
.NET	B-API	O
it	O	O
's	O	O
best	O	O
to	O	O
use	O	O
a	O	O
.NET	B-API	O
language	O	O
such	O	O
as	O	O
VB.NET	B-API	O
or	O	O
C	B-API	O
#	I-API	O
to	O	O
build	O	O
your	O	O
GUIs	O	O
.	O	O
So	O	O
if	O	O
you	O	O
are	O	O
going	O	O
to	O	O
use	O	O
.NET	B-API	O
,	O	O
you	O	O
currently	O	O
have	O	O
the	O	O
choice	O	O
of	O	O
the	O	O
WinForms	B-API	O
library	I-API	O
,	O	O
or	O	O
WPF	B-API	O
.	O	O
I	O	O
personally	O	O
feel	O	O
that	O	O
you	O	O
'd	O	O
be	O	O
wasting	O	O
time	O	O
learning	O	O
to	O	O
build	O	O
WinForms	B-API	O
applications	O	O
given	O	O
that	O	O
WPF	B-API	O
is	O	O
designed	O	O
to	O	O
replace	O	O
it	O	O
.	O	O
Over	O	O
time	O	O
WPF	B-API	O
will	O	O
become	O	O
more	O	O
prevelant	O	O
and	O	O
Winforms	B-API	O
will	O	O
most	O	O
likely	O	O
die	O	O
off	O	O
.	O	O
WPF	B-API	O
has	O	O
a	O	O
much	O	O
richer	O	O
API	O	O
set	O	O
,	O	O
and	O	O
does	O	O
n't	O	O
suffer	O	O
from	O	O
many	O	O
of	O	O
the	O	O
limitations	O	O
that	O	O
Winforms	B-API	O
does	O	O
.	O	O
If	O	O
you	O	O
do	O	O
choose	O	O
this	O	O
route	O	O
,	O	O
however	O	O
,	O	O
you	O	O
'll	O	O
no	O	O
doubt	O	O
have	O	O
to	O	O
learn	O	O
XAML	B-API	O
,	O	O
which	O	O
is	O	O
a	O	O
markup	O	O
language	O	O
that	O	O
drives	O	O
WPF	B-API	O
applications	O	O
.	O	O
This	O	O
technology	O	O
is	O	O
coming	O	O
of	O	O
age	O	O
,	O	O
and	O	O
there	O	O
are	O	O
many	O	O
great	O	O
places	O	O
to	O	O
learn	O	O
about	O	O
it	O	O
.	O	O
First	O	O
,	O	O
there	O	O
are	O	O
sites	O	O
such	O	O
as	O	O
LearnWPF	B-API	O
,	O	O
and	O	O
DrWPF	B-API	O
which	O	O
have	O	O
some	O	O
really	O	O
great	O	O
articles	O	O
.	O	O
Secondly	O	O
,	O	O
there	O	O
are	O	O
plenty	O	O
of	O	O
quality	O	O
books	O	O
on	O	O
the	O	O
topic	O	O
.	O	O
So	O	O
,	O	O
to	O	O
sum	O	O
up	O	O
,	O	O
once	O	O
you	O	O
've	O	O
picked	O	O
your	O	O
language	O	O
and	O	O
tech	O	O
,	O	O
the	O	O
path	O	O
is	O	O
actually	O	O
quite	O	O
easy	O	O
.	O	O
Just	O	O
pick	O	O
up	O	O
a	O	O
book	O	O
or	O	O
two	O	O
,	O	O
read	O	O
some	O	O
blogs	O	O
,	O	O
get	O	O
into	O	O
some	O	O
code	O	O
samples..	O	O
and	O	O
most	O	O
importantly	O	O
...	O	O
write	O	O
code	O	O
.	O	O
Keep	O	O
writing	O	O
,	O	O
keep	O	O
making	O	O
mistakes	O	O
,	O	O
and	O	O
keep	O	O
learning	O	O
from	O	O
them	O	O
.	O	O
As	O	O
a	O	O
final	O	O
note	O	O
...	O	O
In	O	O
other	O	O
words	O	O
,	O	O
Silverlight	B-API	O
.	O	O
If	O	O
you	O	O
do	O	O
n't	O	O
want	O	O
to	O	O
go	O	O
the	O	O
MS	O	O
route	O	O
you	O	O
might	O	O
give	O	O
Adobe	B-API	O
's	I-API	O
Flash/Flex	B-API	O
a	O	O
look	O	O
see	O	O
.	O	O
Both	O	O
Silverlight	B-API	O
and	O	O
Flash/Flex	B-API	O
build	O	O
RIA	B-API	O
's	O	O
.	O	O
Which	O	O
I	O	O
think	O	O
is	O	O
where	O	O
we	O	O
are	O	O
headed	O	O
.	O	O
They	O	O
days	O	O
of	O	O
Office	O	O
like	O	O
apps	O	O
are	O	O
numbered	O	O
I	O	O
do	O	O
n't	O	O
agree	O	O
at	O	O
all	O	O
.	O	O
Silverlight	B-API	O
is	O	O
not	O	O
the	O	O
same	O	O
as	O	O
WPF	B-API	O
.	O	O
Silverlight	B-API	O
is	O	O
web-specific	O	O
,	O	O
and	O	O
only	O	O
has	O	O
a	O	O
subset	O	O
of	O	O
WPF	B-API	O
's	O	O
features	O	O
.	O	O
Given	O	O
that	O	O
the	O	O
question	O	O
asks	O	O
for	O	O
Windows	O	O
GUI	O	O
apps	O	O
,	O	O
Flash/Flex	B-API	O
Rich	O	O
Internet	O	O
Apps	O	O
are	O	O
not	O	O
really	O	O
a	O	O
fitting	O	O
suggestion	O	O
.	O	O
I	O	O
also	O	O
do	O	O
n't	O	O
agree	O	O
that	O	O
the	O	O
days	O	O
of	O	O
Rich	B-API	O
Client	I-API	O
Applications	I-API	O
(	O	O
such	O	O
as	O	O
office	O	O
)	O	O
are	O	O
numbered	O	O
at	O	O
all	O	O
.	O	O
I	O	O
hope	O	O
that	O	O
helps	O	O
.	O	O
Good	O	O
luck	O	O
:	O	O
)	O	O
I	O	O
wo	O	O
n't	O	O
help	O	O
much	O	O
but	O	O
I	O	O
remember	O	O
that	O	O
I	O	O
was	O	O
able	O	O
to	O	O
wrap	O	O
MATLAB	B-API	O
simulation	O	O
into	O	O
DLL	B-API	O
and	O	O
then	O	O
call	O	O
it	O	O
from	O	O
Delphi	O	O
app	O	O
.	O	O
It	O	O
work	O	O
really	O	O
well	O	O
.	O	O
Anyway	O	O
:	O	O
good	O	O
luck	O	O
!	O	O
!	O	O
!	O	O
I	O	O
know	O	O
that	O	O
Visual	B-API	O
Studio	I-API	O
itself	O	O
(	O	O
at	O	O
least	O	O
in	O	O
2003	O	O
version	O	O
)	O	O
references	O	O
the	O	O
IE	O	O
dll	O	O
directly	O	O
to	O	O
render	O	O
the	O	O
``	O	O
Design	O	O
View	O	O
''	O	O
.	O	O
It	O	O
may	O	O
be	O	O
worth	O	O
looking	O	O
into	O	O
that	O	O
.	O	O
Otherwise	O	O
,	O	O
I	O	O
ca	O	O
n't	O	O
think	O	O
of	O	O
anything	O	O
beyond	O	O
the	O	O
Web	O	O
Browser	O	O
control	O	O
.	O	O
You	O	O
can	O	O
print	O	O
from	O	O
the	O	O
command	O	O
line	O	O
using	O	O
the	O	O
following	O	O
:	O	O
rundll32.exe	O	O
%	O	O
WINDIR	O	O
%	O	O
\System32\mshtml.dll	O	O
,	O	O
PrintHTML	B-API	O
``	O	O
%	O	O
1	O	O
''	O	O
Where	O	O
%	O	O
1	O	O
is	O	O
the	O	O
file	O	O
path	O	O
of	O	O
the	O	O
html	O	O
file	O	O
to	O	O
be	O	O
printed	O	O
.	O	O
If	O	O
you	O	O
do	O	O
n't	O	O
need	O	O
to	O	O
print	O	O
from	O	O
memory	O	O
(	O	O
or	O	O
can	O	O
afford	O	O
to	O	O
write	O	O
to	O	O
the	O	O
disk	O	O
in	O	O
a	O	O
temp	O	O
file	O	O
)	O	O
you	O	O
can	O	O
use	O	O
:	O	O
using	B-API	O
(	I-API	O
Process	I-API	O
printProcess	I-API	O
=	I-API	O
new	I-API	O
)	I-API	O
{	O	O
string	O	O
systemPath	O	O
=	O	O
;	O	O
printProcess.StartInfo.FileName	B-API	B-API
=	O	O
systemPath	O	O
+	O	O
@	O	O
''	O	O
\rundll32.exe	O	O
''	O	O
;	O	O
printProcess.StartInfo.Arguments	B-API	B-API
=	O	O
systemPath	O	O
+	O	O
@	O	O
''	O	O
\mshtml.dll	O	O
,	O	O
PrintHTML	B-API	O
``	O	O
``	O	O
''	O	O
+	O	O
fileToPrint	B-API	O
+	O	O
@	O	O
''	O	O
''	O	O
''	O	O
''	O	O
;	O	O
Process	B-API	O
(	I-API	O
)	I-API	O
Environment.GetFolderPath	B-API	B-API
(	I-API	I-API
Environment.SpecialFolder.System	I-API	I-API
)	I-API	I-API
printProcess.Start	B-API	B-API
(	I-API	I-API
)	I-API	I-API
N.B	O	O
.	O	O
This	O	O
only	O	O
works	O	O
on	O	O
Windows	B-API	O
2000	I-API	O
and	O	O
above	O	O
I	O	O
think	O	O
.	O	O
Depending	O	O
on	O	O
the	O	O
scaling	O	O
,	O	O
the	O	O
relative	O	O
image	O	O
pixel	O	O
could	O	O
be	O	O
anywhere	O	O
in	O	O
a	O	O
number	O	O
of	O	O
pixels	O	O
.	O	O
For	O	O
example	O	O
,	O	O
if	O	O
the	O	O
image	O	O
is	O	O
scaled	O	O
down	O	O
significantly	O	O
,	O	O
pixel	O	O
2	O	O
,	O	O
10	O	O
could	O	O
represent	O	O
2	O	O
,	O	O
10	O	O
all	O	O
the	O	O
way	O	O
up	O	O
to	O	O
20	O	O
,	O	O
100	O	O
)	O	O
,	O	O
so	O	O
you	O	O
'll	O	O
have	O	O
to	O	O
do	O	O
the	O	O
math	O	O
yourself	O	O
and	O	O
take	O	O
full	O	O
responsibility	O	O
for	O	O
any	O	O
inaccuracies	O	O
!	O	O
:	O	O
-	O	O
)	O	O
I	O	O
wound	O	O
up	O	O
just	O	O
implementing	O	O
the	O	O
translation	O	O
manually	O	O
.	O	O
The	O	O
code	O	O
's	O	O
not	O	O
too	O	O
bad	O	O
,	O	O
but	O	O
it	O	O
did	O	O
leave	O	O
me	O	O
wishing	O	O
that	O	O
they	O	O
provided	O	O
support	O	O
for	O	O
it	O	O
directly	O	O
.	O	O
I	O	O
could	O	O
see	O	O
such	O	O
a	O	O
method	O	O
being	O	O
useful	O	O
in	O	O
a	O	O
lot	O	O
of	O	O
different	O	O
circumstances	O	O
.	O	O
I	O	O
guess	O	O
that	O	O
's	O	O
why	O	O
they	O	O
added	O	O
extension	O	O
methods	O	O
:	O	O
)	O	O
In	O	O
pseudocode	O	O
:	O	O
//	O	O
Recompute	O	O
the	O	O
image	O	O
scaling	O	O
the	O	O
zoom	O	O
mode	O	O
uses	O	O
to	O	O
fit	O	O
the	O	O
image	O	O
on	O	O
screen	O	O
imageScale	O	O
:	O	O
:=	O	O
min	B-API	O
(	I-API	O
pictureBox.width	I-API	O
/	I-API	O
image.width	I-API	O
,	I-API	O
pictureBox.height	I-API	O
/	I-API	O
image.height	I-API	O
)	I-API	O
scaledWidth	O	O
:	O	O
:=	O	O
image.width	B-API	O
*	O	O
imageScale	B-API	O
scaledHeight	O	O
:	O	O
:=	O	O
image.height	B-API	O
*	O	O
imageScale	B-API	O
//	O	O
Compute	O	O
the	O	O
offset	O	O
of	O	O
the	O	O
image	O	O
to	O	O
center	O	O
it	O	O
in	O	O
the	O	O
picture	O	O
box	O	O
imageX	O	O
:	O	O
:=	O	O
(	B-API	O
pictureBox.width	I-API	O
-	I-API	O
scaledWidth	I-API	O
)	I-API	O
/	O	O
2	O	O
imageY	O	O
:	O	O
:=	O	O
(	B-API	O
pictureBox.height	I-API	B-API
-	I-API	O
scaledHeight	I-API	O
)	I-API	O
/	O	O
2	O	O
//	O	O
Test	O	O
the	O	O
coordinate	O	O
in	O	O
the	O	O
picture	O	O
box	O	O
against	O	O
the	O	O
image	O	O
bounds	O	O
if	O	O
pos.x	O	O
imageX	O	O
or	O	O
imageX	O	O
+	O	O
scaledWidth	O	O
pos.x	O	O
then	O	O
return	O	O
null	O	O
if	O	O
pos.y	O	O
imageY	O	O
or	O	O
imageY	O	O
+	O	O
scaledHeight	O	O
pos.y	O	O
then	O	O
return	O	O
null	O	O
//	O	O
Compute	O	O
the	O	O
normalized	O	B-API
(	O	I-API
0..1	O	I-API
)	O	I-API
coordinates	O	O
in	O	O
image	O	O
space	O	O
u	O	O
:	O	O
:=	O	O
(	B-API	O
pos.x	I-API	O
-	I-API	O
imageX	I-API	O
)	I-API	O
/	O	O
imageScale	B-API	O
v	O	O
:	O	O
:=	O	O
(	B-API	O
pos.y	I-API	O
-	I-API	O
imageY	I-API	O
)	I-API	O
/	O	O
imageScale	B-API	O
return	B-API	O
(	I-API	O
u	I-API	O
,	I-API	O
v	I-API	O
)	I-API	O
To	O	O
get	O	O
the	O	O
pixel	O	O
position	O	O
in	O	O
the	O	O
image	O	O
,	O	O
you	O	O
'd	O	O
just	O	O
multiply	O	O
by	O	O
the	O	O
actual	O	O
image	O	O
pixel	O	O
dimensions	O	O
,	O	O
but	O	O
the	O	O
normalized	O	O
coordinates	O	O
allow	O	O
you	O	O
to	O	O
address	O	O
the	O	O
original	O	O
responder	O	O
's	O	O
point	O	O
about	O	O
resolving	O	O
ambiguity	O	O
on	O	O
a	O	O
case-by-case	O	O
basis	O	O
.	O	O
Scott	O	O
Hanselman	O	O
had	O	O
a	O	O
good	O	O
Podcast	O	O
about	O	O
this	O	O
,	O	O
entitled	O	O
:	O	O
``	O	O
The	O	O
Past	O	O
,	O	O
Present	O	O
and	O	O
Future	O	O
of	O	O
.NET	B-API	O
Unit	I-API	O
Testing	I-API	O
Frameworks	I-API	O
''	O	O
:	O	O
Hanselminutes	O	O
#	O	O
112	O	O
I	O	O
think	O	O
is	O	O
your	O	O
best	O	O
bet	O	O
.	O	O
With	O	O
,	O	O
you	O	O
get	O	O
great	O	O
integration	O	O
within	O	O
.	O	O
(	O	O
Resharper	O	O
also	O	O
has	O	O
a	O	O
unit	O	O
test	O	O
runner	O	O
if	O	O
you	O	O
're	O	O
using	O	O
it	O	O
)	O	O
.	O	O
it	O	O
simple	O	O
to	O	O
use	O	O
and	O	O
follows	O	O
an	O	O
established	O	O
paradigm	O	O
.	O	O
You	O	O
'll	O	O
also	O	O
find	O	O
plenty	O	O
of	O	O
projects/tutorials/guides	O	O
using	O	O
it	O	O
which	O	O
always	O	O
helps	O	O
.	O	O
Your	O	O
other	O	O
main	O	O
choice	O	O
is	O	O
probably	O	O
MBUnit	B-API	O
,	O	O
which	O	O
is	O	O
more	O	O
and	O	O
more	O	O
position	O	O
itself	O	O
as	O	O
the	O	O
framework	O	O
of	O	O
choice	O	O
(	O	O
in	O	O
conjunction	O	O
with	O	O
Gallio	O	O
http	O	O
:	O	O
//www.gallio.org	O	O
)	O	O
.	O	O
Visual	B-API	O
Studio	I-API	O
has	O	O
a	O	O
built	O	O
in	O	O
test	O	O
project	O	O
type	O	O
that	O	O
works	O	O
in	O	O
a	O	O
similar	O	O
way	O	O
to	O	O
NUnit	B-API	O
,	O	O
but	O	O
obviously	O	O
has	O	O
much	O	O
tighter	O	O
integration	O	O
with	O	O
Visual	B-API	O
(	O	O
can	O	O
run	O	O
on	O	O
every	O	O
build	O	O
and	O	O
shows	O	O
the	O	O
results	O	O
in	O	O
a	O	O
similar	O	O
way	O	O
to	O	O
the	O	O
conversion	O	O
results	O	O
page	O	O
when	O	O
upgrading	O	O
solution	O	O
files	O	O
)	O	O
,	O	O
but	O	O
it	O	O
is	O	O
obviously	O	O
not	O	O
as	O	O
mature	O	O
as	O	O
NUnit	B-API	O
as	O	O
it	O	O
's	O	O
pretty	O	O
new	O	O
and	O	O
I	O	O
'm	O	O
not	O	O
sure	O	O
about	O	O
how	O	O
it	O	O
handles	O	O
mocking	O	O
.	O	O
But	O	O
it	O	O
would	O	O
be	O	O
worth	O	O
looking	O	O
into	O	O
when	O	O
your	O	O
team	O	O
moves	O	O
to	O	O
is	O	O
worth	O	O
alook	O	O
,	O	O
it	O	O
has	O	O
a	O	O
set	O	O
of	O	O
features	O	O
comparable	O	O
to	O	O
,	O	O
it	O	O
has	O	O
its	O	O
own	O	O
GUI	O	O
,	O	O
or	O	O
can	O	O
be	O	O
integrated	O	O
into	O	O
if	O	O
you	O	O
have	O	O
.	O	O
I	O	O
would	O	O
also	O	O
recommend	O	O
Rhino	B-API	O
if	O	O
you	O	O
are	O	O
doing	O	O
any	O	O
sort	O	O
of	O	O
.	O	O
I	O	O
would	O	O
say	O	O
mbUnit	O	O
also	O	O
,	O	O
I	O	O
like	O	O
being	O	O
able	O	O
to	O	O
run	O	O
a	O	O
single	O	O
test	O	O
many	O	O
times	O	O
just	O	O
by	O	O
specifying	O	O
inputs	O	O
and	O	O
result	O	O
right	O	O
above	O	O
the	O	O
test	O	O
function	O	O
.	O	O
Horrible	O	O
description	O	O
of	O	O
what	O	O
I	O	O
mean	O	O
so	O	O
here	O	O
is	O	O
a	O	O
link	O	O
that	O	O
shows	O	O
you	O	O
what	O	O
I	O	O
mean	O	O
.	O	O
Assuming	O	O
you	O	O
have	O	O
the	O	O
correct	O	O
assemblies	O	O
and	O	O
a	O	O
C	B-API	O
#	I-API	O
compiler	O	O
you	O	O
in	O	O
theory	O	O
can	O	O
use	O	O
whatever	O	O
you	O	O
want	O	O
to	O	O
edit	O	O
the	O	O
code	O	O
and	O	O
then	O	O
just	O	O
run	O	O
the	O	O
compiler	O	O
by	O	O
hand	O	O
or	O	O
using	O	O
a	O	O
build	O	O
script	O	O
.	O	O
That	O	O
being	O	O
said	O	O
it	O	O
is	O	O
a	O	O
real	O	O
pain	O	O
doing	O	O
.NET	B-API	O
development	O	O
without	O	O
Visual	B-API	O
Studio/SharpEdit/Monodevelop	I-API	O
in	O	O
my	O	O
opinion	O	O
.	O	O
There	O	O
is	O	O
nothing	O	O
VS	B-API	O
specific	O	O
with	O	O
the	O	O
MVC	B-API	O
framework	O	O
-	O	O
it	O	O
is	O	O
just	O	O
a	O	O
bunch	O	O
of	O	O
DLLs	O	O
that	O	O
you	O	O
can	O	O
use	O	O
.	O	O
The	O	O
wizards	O	O
in	O	O
VS	O	O
just	O	O
build	O	O
you	O	O
a	O	O
quick-start	O	O
framework	O	O
.	O	O
ASP.NET	B-API	O
MVC	I-API	O
is	O	O
``	O	O
bin-deployable	O	O
''	O	O
-	O	O
there	O	O
is	O	O
nothing	O	O
too	O	O
clever	O	O
to	O	O
set	O	O
up	O	O
on	O	O
the	O	O
server	O	O
either	O	O
-	O	O
just	O	O
point	O	O
the	O	O
wildcard	O	O
ISAPI	B-API	O
filter	O	O
to	O	O
ASP.NET	B-API	O
I	O	O
ca	O	O
n't	O	O
think	O	O
of	O	O
any	O	O
cross	O	O
platform	O	O
way	O	O
of	O	O
what	O	O
you	O	O
want	O	O
(	O	O
or	O	O
any	O	O
guaranteed	O	O
way	O	O
full	O	O
stop	O	O
)	O	O
but	O	O
as	O	O
you	O	O
are	O	O
using	O	O
GetTickCount	B-API	O
perhaps	O	O
you	O	O
are	O	O
n't	O	O
interested	O	O
in	O	O
cross	O	O
platform	O	O
:	O	O
)	O	O
I	O	O
'd	O	O
use	O	O
interprocess	O	O
communications	O	O
and	O	O
set	O	O
the	O	O
intensive	O	O
processes	O	O
nice	O	O
levels	O	O
to	O	O
get	O	O
what	O	O
you	O	O
require	O	O
but	O	O
I	O	O
'm	O	O
not	O	O
sure	O	O
that	O	O
's	O	O
appropriate	O	O
for	O	O
your	O	O
situation	O	O
.	O	O
EDIT	O	O
:	O	O
I	O	O
agree	O	O
with	O	O
Bernard	O	O
which	O	O
is	O	O
why	O	O
I	O	O
think	O	O
a	O	O
process	O	O
rather	O	O
than	O	O
a	O	O
thread	O	O
might	O	O
be	O	O
more	O	O
appropriate	O	O
but	O	O
it	O	O
just	O	O
might	O	O
not	O	O
suit	O	O
your	O	O
purposes	O	O
.	O	O
On	O	O
linux	O	O
,	O	O
you	O	O
can	O	O
change	O	O
the	O	O
scheduling	O	O
priority	O	O
of	O	O
a	O	O
thread	O	O
with	O	O
nice	B-API	O
(	I-API	O
)	I-API	O
.	O	O
In	O	O
Python	B-API	O
monkey	O	O
patching	O	O
generally	O	O
works	O	O
by	O	O
overwriting	O	O
a	O	O
class	O	O
or	O	O
functions	O	O
signature	O	O
with	O	O
your	O	O
own	O	O
.	O	O
Below	O	O
is	O	O
an	O	O
example	O	O
from	O	O
the	O	O
Zope	B-API	O
Wiki	I-API	O
:	O	O
from	B-API	O
SomeOtherProduct.SomeModule	I-API	O
import	B-API	O
SomeClassdef	I-API	O
:	I-API	O
return	I-API	O
``	O	O
ook	O	O
ook	O	O
eee	O	O
eee	O	O
eee	O	O
!	O	O
``	O	O
SomeClass.speak	B-API	B-API
=	O	O
speak	B-API	O
(	I-API	O
self	I-API	O
)	I-API	O
That	O	O
code	O	O
will	O	O
overwrite/create	O	O
a	O	O
method	O	O
called	O	O
speak	O	O
on	O	O
the	O	O
class	O	O
.	O	O
In	O	O
Jeff	O	O
Atwood	O	O
's	O	O
recent	O	O
post	O	O
on	O	O
monkey	O	O
patching	O	O
.	O	O
He	O	O
shows	O	O
an	O	O
example	O	O
in	O	O
C	B-API	O
#	I-API	O
3.0	I-API	O
which	O	O
is	O	O
the	O	O
current	O	O
language	O	O
I	O	O
use	O	O
for	O	O
work	O	O
.	O	O
I	O	O
do	O	O
n't	O	O
know	O	O
Python	B-API	O
syntax	O	O
,	O	O
but	O	O
I	O	O
know	O	O
Ruby	B-API	O
can	O	O
do	O	O
it	O	O
,	O	O
and	O	O
it	O	O
is	O	O
rather	O	O
trivial	O	O
.	O	O
Let	O	O
's	O	O
say	O	O
you	O	O
want	O	O
to	O	O
add	O	O
a	O	O
method	O	O
to	O	O
Array	B-API	O
that	O	O
prints	O	O
the	O	O
length	O	O
to	O	O
standard	O	O
out	O	O
:	O	O
class	O	O
Array	B-API	O
def	B-API	O
print_length	B-API	O
puts	O	O
length	O	O
If	O	O
you	O	O
do	O	O
n't	O	O
want	O	O
to	O	O
modify	O	O
the	O	O
whole	O	O
class	O	O
,	O	O
you	O	O
can	O	O
just	O	O
add	O	O
the	O	O
method	O	O
to	O	O
a	O	O
single	O	O
instance	O	O
of	O	O
the	O	O
array	O	O
,	O	O
and	O	O
no	O	O
other	O	O
arrays	O	O
will	O	O
have	O	O
the	O	O
method	O	O
:	O	O
array	B-API	O
=	O	O
[	B-API	O
1	I-API	O
,	I-API	O
2	I-API	O
,	I-API	O
3	I-API	O
]	I-API	O
def	B-API	O
array.print_length	B-API	O
puts	O	O
Just	O	O
be	O	O
aware	O	O
of	O	O
the	O	O
issues	O	O
involved	O	O
in	O	O
using	O	O
this	O	O
feature	O	O
.	O	O
Jeff	O	O
Atwood	O	O
actually	O	O
wrote	O	O
about	O	O
it	O	O
not	O	O
too	O	O
long	O	O
ago	O	O
.	O	O
In	O	O
Python	B-API	O
,	O	O
there	O	O
is	O	O
a	O	O
difference	O	O
between	O	O
functions	O	O
and	O	O
bound	O	O
methods	O	O
.	O	O
def	B-API	O
foo	O	O
(	O	O
)	O	O
:	O	O
...	O	O
print	O	O
``	O	O
foo	O	O
''	O	O
...	O	O
class	O	O
A	O	O
:	O	O
...	O	O
def	B-API	O
bar	O	O
(	O	O
self	O	O
)	O	O
:	O	O
...	O	O
print	O	O
``	O	O
bar	O	O
''	O	O
...	O	O
a	O	O
=	O	O
A	O	O
(	O	O
)	O	O
foo	O	O
function	O	O
foo	O	O
at	O	O
0x00A98D70	O	O
a.bar	O	O
bound	O	O
method	O	O
A.bar	O	O
of	O	O
__main__.A	B-API	O
instance	O	O
at	O	O
0x00A9BC88	O	O
Bound	O	O
methods	O	O
have	O	O
been	O	O
``	O	O
bound	O	O
''	O	O
(	O	O
how	O	O
descriptive	O	O
)	O	O
to	O	O
an	O	O
instance	O	O
,	O	O
and	O	O
that	O	O
instance	O	O
will	O	O
be	O	O
passed	O	O
as	O	O
the	O	O
first	O	O
argument	O	O
whenever	O	O
the	O	O
method	O	O
is	O	O
called	O	O
.	O	O
Callables	B-API	O
that	O	O
are	O	O
attributes	O	O
of	O	O
a	O	O
class	O	O
(	O	O
as	O	O
opposed	O	O
to	O	O
an	O	O
instance	O	O
)	O	O
are	O	O
still	O	O
unbound	O	O
,	O	O
though	O	O
,	O	O
so	O	O
you	O	O
can	O	O
modify	O	O
the	O	O
class	O	O
definition	O	O
whenever	O	O
you	O	O
want	O	O
:	O	O
def	B-API	O
fooFighters	O	O
(	O	O
self	O	O
)	O	O
:	O	O
...	O	O
print	O	O
``	O	O
fooFighters	O	O
''	O	O
...	O	O
A.fooFighters	B-API	O
=	O	O
fooFighters	O	O
a2	O	O
=	O	O
A	O	O
(	O	O
)	O	O
a2.fooFighters	B-API	O
bound	O	O
method	O	O
A.fooFighters	B-API	O
of	O	O
__main__.A	B-API	O
instance	O	O
at	O	O
0x00A9BEB8	O	O
a2.fooFighters	O	O
(	O	O
)	O	O
fooFighters	O	O
Previously	O	O
defined	O	O
instances	O	O
are	O	O
updated	O	O
as	O	O
well	O	O
(	O	O
as	O	O
long	O	O
as	O	O
they	O	O
have	O	O
n't	O	O
overridden	O	O
the	O	O
attribute	O	O
themselves	O	O
)	O	O
:	O	O
a.fooFighters	B-API	B-API
(	O	I-API
)	O	I-API
fooFighters	O	O
The	O	O
problem	O	O
comes	O	O
when	O	O
you	O	O
want	O	O
to	O	O
attach	O	O
a	O	O
method	O	O
to	O	O
a	O	O
single	O	O
instance	O	O
:	O	O
def	B-API	O
barFighters	O	O
(	O	O
self	O	O
)	O	O
:	O	O
...	O	O
print	O	O
``	O	O
barFighters	O	O
''	O	O
...	O	O
a.barFighters	B-API	O
=	O	O
barFighters	O	O
a.barFighters	B-API	B-API
(	I-API	I-API
)	I-API	I-API
Traceback	B-API	O
(	O	O
most	O	O
recent	O	O
call	O	O
last	O	O
)	O	O
:	O	O
File	O	O
``	O	O
stdin	B-API	O
''	O	O
,	O	O
line	O	O
1	O	O
,	O	O
in	O	O
module	O	O
TypeError	B-API	O
:	O	O
barFighters	B-API	B-API
(	I-API	I-API
)	I-API	I-API
takes	O	O
exactly	O	O
1	O	O
argument	O	O
(	O	O
0	O	O
given	O	O
)	O	O
The	O	O
function	O	O
is	O	O
not	O	O
automatically	O	O
bound	O	O
when	O	O
it	O	O
's	O	O
attached	O	O
directly	O	O
to	O	O
an	O	O
instance	O	O
:	O	O
a.barFighters	B-API	O
function	O	O
barFighters	O	O
at	O	O
0x00A98EF0	O	O
To	O	O
bind	O	O
it	O	O
,	O	O
we	O	O
can	O	O
use	O	O
the	O	O
MethodType	B-API	O
function	O	O
in	O	O
the	O	O
types	O	O
module	O	O
:	O	O
import	B-API	O
types	O	O
a.barFighters	B-API	O
=	O	O
types.MethodType	B-API	O
(	I-API	O
barFighters	I-API	O
,	I-API	O
a	I-API	O
)	I-API	O
a.barFighters	B-API	O
bound	O	O
method	O	O
?	O	O
.barFighters	O	O
of	O	O
__main__.A	B-API	O
instance	O	O
at	O	O
0x00A9BC88	O	O
a.barFighters	B-API	O
(	I-API	O
)	I-API	O
barFighters	O	O
This	O	O
time	O	O
other	O	O
instances	O	O
of	O	O
the	O	O
class	O	O
have	O	O
not	O	O
been	O	O
affected	O	O
:	O	O
a2.barFighters	B-API	O
(	I-API	O
)	I-API	O
Traceback	B-API	O
(	O	O
most	O	O
recent	O	O
call	O	O
last	O	O
)	O	O
:	O	O
File	B-API	O
``	O	O
stdin	B-API	O
''	O	O
,	O	O
line	O	O
1	O	O
,	O	O
in	O	O
module	O	O
AttributeError	B-API	O
:	O	O
A	O	O
instance	O	O
has	O	O
no	O	O
attribute	O	O
'barFighters'	O	O
More	O	O
information	O	O
can	O	O
be	O	O
found	O	O
by	O	O
reading	O	O
about	O	O
descriptors	O	O
and	O	O
metaclass	O	O
programming	O	O
.	O	O
What	O	O
you	O	O
're	O	O
looking	O	O
for	O	O
is	O	O
I	O	O
believe	O	O
.	O	O
Use	O	O
this	O	O
to	O	O
set	O	O
an	O	O
attribute	O	O
on	O	O
an	O	O
object	O	O
.	O	O
def	B-API	O
:	O	O
print	O	O
class	B-API	O
A	I-API	O
:	O	O
pass	O	O
a	O	O
=	O	O
#	O	O
s	O	O
becomes	O	O
the	O	O
implicit	O	O
'self	O	O
'	O	O
variable	O	O
__	O	O
main	O	O
__	O	O
.	O	O
A	O	O
instance	O	O
at	O	O
printme	B-API	O
(	I-API	O
s	I-API	O
)	I-API	O
repr	B-API	O
(	I-API	O
s	I-API	O
)	I-API	O
setattr	B-API	O
(	I-API	O
A	I-API	O
,	I-API	O
'printme	I-API	O
'	I-API	O
,	I-API	O
printme	I-API	O
)	I-API	O
A	B-API	O
(	I-API	O
)	I-API	O
a.printme	B-API	B-API
(	I-API	I-API
)	I-API	I-API
why	O	O
massive	O	O
lookup	O	O
table	O	O
?	O	O
string	O	O
GetWrittenInteger	B-API	O
(	I-API	O
int	I-API	O
n	I-API	O
)	I-API	O
{	O	O
string	B-API	O
[	I-API	O
]	I-API	O
a	O	O
=	O	O
new	O	O
string	B-API	O
[	I-API	O
]	I-API	O
{	O	O
``	O	O
One	O	O
''	O	O
,	O	O
``	O	O
Two	O	O
''	O	O
,	O	O
``	O	O
Three	O	O
''	O	O
,	O	O
``	O	O
Four	O	O
''	O	O
,	O	O
``	O	O
Five	O	O
''	O	O
,	O	O
``	O	O
Six	O	O
''	O	O
,	O	O
``	O	O
Seven	O	O
''	O	O
,	O	O
``	O	O
Eight	O	O
''	O	O
,	O	O
``	O	O
Nine	O	O
''	O	O
}	O	O
string	B-API	O
[	I-API	O
]	I-API	O
b	O	O
=	O	O
new	O	O
string	B-API	O
[	I-API	O
]	I-API	O
{	O	O
``	O	O
Ten	O	O
''	O	O
,	O	O
``	O	O
Eleven	O	O
''	O	O
,	O	O
``	O	O
Twelve	O	O
''	O	O
,	O	O
``	O	O
Thirteen	O	O
''	O	O
,	O	O
``	O	O
Fourteen	O	O
''	O	O
,	O	O
``	O	O
Fifteen	O	O
''	O	O
,	O	O
``	O	O
Sixteen	O	O
''	O	O
,	O	O
``	O	O
Seventeen	O	O
''	O	O
,	O	O
``	O	O
Eighteen	O	O
''	O	O
,	O	O
``	O	O
Nineteen	O	O
''	O	O
}	O	O
string	B-API	O
[	I-API	O
]	I-API	O
c	O	O
=	O	O
new	O	O
string	B-API	O
[	I-API	O
]	I-API	O
{	O	O
``	O	O
Twenty	O	O
''	O	O
,	O	O
``	O	O
Thirty	O	O
''	O	O
,	O	O
``	O	O
Forty	O	O
''	O	O
,	O	O
``	O	O
Sixty	O	O
''	O	O
,	O	O
``	O	O
Seventy	O	O
''	O	O
,	O	O
``	O	O
Eighty	O	O
''	O	O
,	O	O
``	O	O
Ninety	O	O
''	O	O
}	O	O
;	O	O
string	B-API	O
[	I-API	O
]	I-API	O
d	O	O
=	O	O
new	O	O
string	B-API	O
[	I-API	O
]	I-API	O
{	O	O
``	O	O
Hundred	O	O
''	O	O
,	O	O
``	O	O
Thousand	O	O
''	O	O
,	O	O
``	O	O
Million	O	O
''	O	O
}	O	O
string	O	O
s	O	O
=	O	O
n.ToString	B-API	B-API
(	I-API	I-API
)	I-API	I-API
;	O	O
for	O	O
(	O	O
int	O	O
i	O	O
=	O	O
0	O	O
;	O	O
i	O	O
s.Length	B-API	O
;	O	O
i++	O	O
)	O	O
{	O	O
//	O	O
logic	O	O
(	O	O
too	O	O
lazy	O	O
but	O	O
you	O	O
get	O	O
the	O	O
idea	O	O
)	O	O
}	O	O
}	O	O
Justin	O	O
Rogers	O	O
has	O	O
a	O	O
``	O	O
NumbersToEnglish	O	O
''	O	O
class	O	O
which	O	O
should	O	O
do	O	O
the	O	O
job	O	O
for	O	O
you	O	O
nicely	O	O
!	O	O
Initial	O	O
posting	O	O
.	O	O
http	O	O
:	O	O
//weblogs.asp.net/justin_rogers/archive/2004/06/09/151675.aspx	O	O
Finalized	O	O
Source	O	O
Code	O	O
http	O	O
:	O	O
//weblogs.asp.net/justin_rogers/articles/151757.aspx	O	O
It	O	O
does	O	O
have	O	O
a	O	O
bit	O	O
of	O	O
an	O	O
internal	O	O
lookup	O	O
table	O	O
but	O	O
I	O	O
do	O	O
n't	O	O
really	O	O
know	O	O
how	O	O
you	O	O
are	O	O
going	O	O
to	O	O
be	O	O
able	O	O
to	O	O
get	O	O
away	O	O
from	O	O
that	O	O
.	O	O
I	O	O
use	O	O
this	O	O
code.It	O	O
is	O	O
VB	B-API	O
code	O	O
but	O	O
you	O	O
can	O	O
easily	O	O
translate	O	O
it	O	O
to	O	O
C	B-API	O
#	I-API	O
.	O	O
It	O	O
works	O	O
Function	O	O
NumberToText	B-API	O
(	I-API	O
ByVal	I-API	O
n	I-API	O
As	I-API	O
Integer	I-API	O
)	I-API	O
As	O	O
String	O	O
Select	O	O
Case	O	O
n	O	O
Case	O	O
0	O	O
Return	O	O
``	O	O
''	O	O
Case	O	O
1	O	O
To	O	O
19	O	O
Dim	O	O
arr	B-API	O
(	I-API	O
)	I-API	O
As	O	O
String	O	O
=	O	O
{	O	O
``	O	O
One	O	O
''	O	O
,	O	O
''	O	O
Two	O	O
''	O	O
,	O	O
''	O	O
Three	O	O
''	O	O
,	O	O
''	O	O
Four	O	O
''	O	O
,	O	O
''	O	O
Five	O	O
''	O	O
,	O	O
''	O	O
Six	O	O
''	O	O
,	O	O
''	O	O
Seven	O	O
''	O	O
,	O	O
_	O	O
``	O	O
Eight	O	O
''	O	O
,	O	O
''	O	O
Nine	O	O
''	O	O
,	O	O
''	O	O
Ten	O	O
''	O	O
,	O	O
''	O	O
Eleven	O	O
''	O	O
,	O	O
''	O	O
Twelve	O	O
''	O	O
,	O	O
''	O	O
Thirteen	O	O
''	O	O
,	O	O
''	O	O
Fourteen	O	O
''	O	O
,	O	O
_	O	O
``	O	O
Fifteen	O	O
''	O	O
,	O	O
''	O	O
Sixteen	O	O
''	O	O
,	O	O
''	O	O
Seventeen	O	O
''	O	O
,	O	O
''	O	O
Eighteen	O	O
''	O	O
,	O	O
''	O	O
Nineteen	O	O
''	O	O
}	O	O
Return	O	O
arr	O	O
(	O	O
n-1	O	O
)	O	O
``	O	O
``	O	O
Case	O	O
20	O	O
to	O	O
99	O	O
Dim	O	O
arr	O	O
(	O	O
)	O	O
as	O	O
String	B-API	O
=	O	O
{	O	O
``	O	O
Twenty	O	O
''	O	O
,	O	O
''	O	O
Thirty	O	O
''	O	O
,	O	O
''	O	O
Forty	O	O
''	O	O
,	O	O
''	O	O
Fifty	O	O
''	O	O
,	O	O
''	O	O
Sixty	O	O
''	O	O
,	O	O
''	O	O
Seventy	O	O
''	O	O
,	O	O
''	O	O
Eighty	O	O
''	O	O
,	O	O
''	O	O
Ninety	O	O
''	O	O
}	O	O
Return	O	O
arr	O	O
(	O	O
n\10	O	O
-2	O	O
)	O	O
``	O	O
``	O	O
NumberToText	B-API	O
(	I-API	O
n	I-API	O
Mod	I-API	O
10	I-API	O
)	I-API	O
Case	O	O
100	O	O
to	O	O
199	O	O
Return	O	O
``	O	O
One	O	O
Hundred	O	O
``	O	O
NumberToText	B-API	O
(	I-API	O
n	I-API	O
Mod	I-API	O
100	I-API	O
)	I-API	O
Case	O	O
200	O	O
to	O	O
999	O	O
Return	O	O
NumberToText	B-API	O
(	I-API	O
n\100	I-API	O
)	I-API	O
``	O	O
Hundreds	O	O
``	O	O
NumberToText	B-API	O
(	I-API	O
n	I-API	O
mod	I-API	O
100	I-API	O
)	I-API	O
Case	O	O
1000	O	O
to	O	O
1999	O	O
Return	O	O
``	O	O
One	O	O
Thousand	O	O
``	O	O
NumberToText	B-API	O
(	I-API	O
n	I-API	O
Mod	I-API	O
1000	I-API	O
)	I-API	O
Case	O	O
2000	O	O
to	O	O
999999	O	O
Return	O	O
NumberToText	B-API	O
(	I-API	O
n\1000	I-API	O
)	I-API	O
``	O	O
Thousands	O	O
``	O	O
NumberToText	B-API	O
(	I-API	O
n	I-API	O
Mod	I-API	O
1000	I-API	O
)	I-API	O
Case	O	O
1000000	O	O
to	O	O
1999999	O	O
Return	O	O
``	O	O
One	O	O
Million	O	O
``	O	O
NumberToText	B-API	O
(	I-API	O
n	I-API	O
Mod	I-API	O
1000000	I-API	O
)	I-API	O
Case	O	O
1000000	O	O
to	O	O
999999999	O	O
Return	O	O
NumberToText	B-API	O
(	I-API	O
n\1000000	I-API	O
)	I-API	O
``	O	O
Millions	O	O
``	O	O
NumberToText	B-API	O
(	I-API	O
n	I-API	O
Mod	I-API	O
1000000	I-API	O
)	I-API	O
Case	O	O
1000000000	O	O
to	O	O
1999999999	O	O
Return	O	O
``	O	O
One	O	O
Billion	O	O
``	O	O
NumberTotext	B-API	O
(	I-API	O
n	I-API	O
Mod	I-API	O
1000000000	I-API	O
)	I-API	O
Case	O	O
Else	B-API	O
Return	I-API	O
NumberToText	B-API	O
(	I-API	O
n\1000000000	I-API	O
)	I-API	O
``	O	O
Billion	O	O
``	O	O
_	O	O
NumberToText	B-API	O
(	I-API	O
n	I-API	O
mod	I-API	O
1000000000	I-API	O
)	I-API	O
End	O	O
Select	O	O
End	O	O
Function	O	O
Here	O	O
is	O	O
the	O	O
code	O	O
in	O	O
c	B-API	O
#	I-API	O
public	O	O
static	B-API	O
string	O	O
AmountInWords	B-API	O
(	I-API	O
double	I-API	O
amount	I-API	O
)	I-API	O
{	O	O
var	O	O
n	O	O
=	O	O
(	O	O
int	O	O
)	O	O
amount	O	O
;	O	O
if	O	O
(	O	O
n	O	O
==	O	O
0	O	O
)	O	O
return	O	O
``	O	O
''	O	O
;	O	O
else	B-API	O
if	I-API	O
(	I-API	O
n	I-API	O
0	I-API	O
n	I-API	O
=	I-API	O
19	I-API	O
)	I-API	O
{	O	O
var	O	O
arr	O	O
=	O	O
new	O	O
string	B-API	O
[	I-API	O
]	I-API	O
{	O	O
``	O	O
One	O	O
''	O	O
,	O	O
``	O	O
Two	O	O
''	O	O
,	O	O
``	O	O
Three	O	O
''	O	O
,	O	O
``	O	O
Four	O	O
''	O	O
,	O	O
``	O	O
Five	O	O
''	O	O
,	O	O
``	O	O
Six	O	O
''	O	O
,	O	O
``	O	O
Seven	O	O
''	O	O
,	O	O
``	O	O
Eight	O	O
''	O	O
,	O	O
``	O	O
Nine	O	O
''	O	O
,	O	O
``	O	O
Ten	O	O
''	O	O
,	O	O
``	O	O
Eleven	O	O
''	O	O
,	O	O
``	O	O
Twelve	O	O
''	O	O
,	O	O
``	O	O
Thirteen	O	O
''	O	O
,	O	O
``	O	O
Fourteen	O	O
''	O	O
,	O	O
``	O	O
Fifteen	O	O
''	O	O
,	O	O
``	O	O
Sixteen	O	O
''	O	O
,	O	O
``	O	O
Seventeen	O	O
''	O	O
,	O	O
``	O	O
Eighteen	O	O
''	O	O
,	O	O
``	O	O
Nineteen	O	O
''	O	O
}	O	O
;	O	O
return	O	O
arr	O	O
[	O	O
n	O	O
-	O	O
1	O	O
]	O	O
+	O	O
``	O	O
``	O	O
;	O	O
}	O	O
else	B-API	O
if	I-API	O
(	I-API	O
n	I-API	O
=	I-API	O
20	I-API	O
n	I-API	O
=	I-API	O
99	I-API	O
)	I-API	O
{	O	O
var	O	O
arr	O	O
=	O	O
new	O	O
string	B-API	O
[	I-API	O
]	I-API	O
{	O	O
``	O	O
Twenty	O	O
''	O	O
,	O	O
``	O	O
Thirty	O	O
''	O	O
,	O	O
``	O	O
Forty	O	O
''	O	O
,	O	O
``	O	O
Fifty	O	O
''	O	O
,	O	O
``	O	O
Sixty	O	O
''	O	O
,	O	O
``	O	O
Seventy	O	O
''	O	O
,	O	O
``	O	O
Eighty	O	O
''	O	O
,	O	O
``	O	O
Ninety	O	O
''	O	O
}	O	O
;	O	O
return	O	O
arr	O	O
[	O	O
n	O	O
/	O	O
10	O	O
-	O	O
2	O	O
]	O	O
+	O	O
``	O	O
``	O	O
+	O	O
AmountInWords	B-API	O
(	I-API	O
n	I-API	O
%	I-API	O
10	I-API	O
)	I-API	O
;	O	O
}	O	O
else	B-API	O
if	I-API	O
(	I-API	O
n	I-API	O
=	I-API	O
100	I-API	O
n	I-API	O
=	I-API	O
199	I-API	O
)	I-API	O
{	O	O
return	O	O
``	O	O
One	O	O
Hundred	O	O
``	O	O
+	O	O
AmountInWords	B-API	O
(	I-API	O
n	I-API	O
%	I-API	O
100	I-API	O
)	I-API	O
;	O	O
}	O	O
else	B-API	O
if	I-API	O
(	I-API	O
n	I-API	O
=	I-API	O
200	I-API	O
n	I-API	O
=	I-API	O
999	I-API	O
)	I-API	O
{	O	O
return	O	O
AmountInWords	B-API	O
(	I-API	O
n	I-API	O
/	I-API	O
100	I-API	O
)	I-API	O
+	O	O
``	O	O
Hundred	O	O
``	O	O
+	O	O
AmountInWords	B-API	O
(	I-API	O
n	I-API	O
%	I-API	O
100	I-API	O
)	I-API	O
;	O	O
}	O	O
else	B-API	O
if	I-API	O
(	I-API	O
n	I-API	O
=	I-API	O
1000	I-API	O
n	I-API	O
=	I-API	O
1999	I-API	O
)	I-API	O
{	O	O
return	O	O
``	O	O
One	O	O
Thousand	O	O
``	O	O
+	O	O
AmountInWords	B-API	O
(	I-API	O
n	I-API	O
%	I-API	O
1000	I-API	O
)	I-API	O
;	O	O
}	O	O
else	B-API	O
if	I-API	O
(	I-API	O
n	I-API	O
=	I-API	O
2000	I-API	O
n	I-API	O
=	I-API	O
999999	I-API	O
)	I-API	O
{	O	O
return	O	O
AmountInWords	B-API	O
(	I-API	O
n	I-API	O
/	I-API	O
1000	I-API	O
)	I-API	O
+	O	O
``	O	O
Thousand	O	O
``	O	O
+	O	O
AmountInWords	B-API	O
(	I-API	O
n	I-API	O
%	I-API	O
1000	I-API	O
)	I-API	O
;	O	O
}	O	O
else	B-API	O
if	I-API	O
(	I-API	O
n	I-API	O
=	I-API	O
1000000	I-API	O
n	I-API	O
=	I-API	O
1999999	I-API	O
)	I-API	O
{	O	O
return	O	O
``	O	O
One	O	O
Million	O	O
``	O	O
+	O	O
AmountInWords	B-API	O
(	I-API	O
n	I-API	O
%	I-API	O
1000000	I-API	O
)	I-API	O
;	O	O
}	O	O
else	B-API	O
if	I-API	O
(	I-API	O
n	I-API	O
=	I-API	O
1000000	I-API	O
n	I-API	O
=	I-API	O
999999999	I-API	O
)	I-API	O
{	O	O
return	O	O
AmountInWords	B-API	O
(	I-API	O
n	I-API	O
/	I-API	O
1000000	I-API	O
)	I-API	O
+	O	O
``	O	O
Million	O	O
``	O	O
+	O	O
AmountInWords	B-API	O
(	I-API	O
n	I-API	O
%	I-API	O
1000000	I-API	O
)	I-API	O
;	O	O
}	O	O
else	B-API	O
if	I-API	O
(	I-API	O
n	I-API	O
=	I-API	O
1000000000	I-API	O
n	I-API	O
=	I-API	O
1999999999	I-API	O
)	I-API	O
{	O	O
return	O	O
``	O	O
One	O	O
Billion	O	O
``	O	O
+	O	O
AmountInWords	B-API	O
(	I-API	O
n	I-API	O
%	I-API	O
1000000000	I-API	O
)	I-API	O
;	O	O
}	O	O
else	O	O
{	O	O
return	O	O
AmountInWords	B-API	O
(	I-API	O
n	I-API	O
/	I-API	O
1000000000	I-API	O
)	I-API	O
+	O	O
``	O	O
Billion	O	O
``	O	O
+	O	O
AmountInWords	B-API	O
(	I-API	O
n	I-API	O
%	I-API	O
1000000000	I-API	O
)	I-API	O
;	O	O
}	O	O
}	O	O
This	O	O
should	O	O
work	O	O
reasonably	O	O
well	O	O
:	O	O
public	O	O
static	B-API	O
class	O	O
HumanFriendlyInteger	O	O
{	O	O
static	O	O
string	B-API	O
[	I-API	O
]	I-API	O
ones	O	O
=	O	O
new	O	O
string	B-API	O
[	I-API	O
]	I-API	O
{	O	O
``	O	O
''	O	O
,	O	O
``	O	O
One	O	O
''	O	O
,	O	O
``	O	O
Two	O	O
''	O	O
,	O	O
``	O	O
Three	O	O
''	O	O
,	O	O
``	O	O
Four	O	O
''	O	O
,	O	O
``	O	O
Five	O	O
''	O	O
,	O	O
``	O	O
Six	O	O
''	O	O
,	O	O
``	O	O
Seven	O	O
''	O	O
,	O	O
``	O	O
Eight	O	O
''	O	O
,	O	O
``	O	O
Nine	O	O
''	O	O
}	O	O
;	O	O
static	B-API	O
string	I-API	O
[	I-API	O
]	I-API	O
teens	O	O
=	O	O
new	O	O
string	B-API	O
[	I-API	O
]	I-API	O
{	O	O
``	O	O
Ten	O	O
''	O	O
,	O	O
``	O	O
Eleven	O	O
''	O	O
,	O	O
``	O	O
Twelve	O	O
''	O	O
,	O	O
``	O	O
Thirteen	O	O
''	O	O
,	O	O
``	O	O
Fourteen	O	O
''	O	O
,	O	O
``	O	O
Fifteen	O	O
''	O	O
,	O	O
``	O	O
Sixteen	O	O
''	O	O
,	O	O
``	O	O
Seventeen	O	O
''	O	O
,	O	O
``	O	O
Eighteen	O	O
''	O	O
,	O	O
``	O	O
Nineteen	O	O
''	O	O
}	O	O
;	O	O
static	B-API	O
string	I-API	O
[	I-API	O
]	I-API	O
tens	O	O
=	O	O
new	O	O
string	B-API	O
[	I-API	O
]	I-API	O
{	O	O
``	O	O
Twenty	O	O
''	O	O
,	O	O
``	O	O
Thirty	O	O
''	O	O
,	O	O
``	O	O
Forty	O	O
''	O	O
,	O	O
``	O	O
Fifty	O	O
''	O	O
,	O	O
``	O	O
Sixty	O	O
''	O	O
,	O	O
``	O	O
Seventy	O	O
''	O	O
,	O	O
``	O	O
Eighty	O	O
''	O	O
,	O	O
``	O	O
Ninety	O	O
''	O	O
}	O	O
;	O	O
static	B-API	O
string	I-API	O
[	I-API	O
]	I-API	O
thousandsGroups	O	O
=	O	O
{	O	O
``	O	O
''	O	O
,	O	O
``	O	O
Thousand	O	O
''	O	O
,	O	O
``	O	O
Million	O	O
''	O	O
,	O	O
``	O	O
Billion	O	O
''	O	O
}	O	O
;	O	O
private	O	O
static	B-API	O
string	I-API	O
FriendlyInteger	B-API	O
(	I-API	O
int	I-API	O
n	I-API	O
,	I-API	O
string	I-API	O
leftDigits	I-API	O
,	I-API	O
int	I-API	O
thousands	I-API	O
)	I-API	O
{	O	O
if	B-API	O
(	I-API	O
n	I-API	O
==	I-API	O
0	I-API	O
)	I-API	O
{	O	O
return	O	O
leftDigits	O	O
;	O	O
}	O	O
string	O	O
friendlyInt	O	O
=	O	O
leftDigits	O	O
;	O	O
if	O	O
(	O	O
friendlyInt.Length	B-API	O
0	O	O
)	O	O
{	O	O
friendlyInt	O	O
+=	O	O
``	O	O
``	O	O
;	O	O
}	O	O
if	B-API	O
(	I-API	O
n	I-API	O
10	I-API	O
)	I-API	O
{	O	O
friendlyInt	O	O
+=	O	O
ones	O	O
[	O	O
n	O	O
]	O	O
;	O	O
}	O	O
else	B-API	O
if	I-API	O
(	I-API	O
n	I-API	O
20	I-API	O
)	I-API	O
{	O	O
friendlyInt	O	O
+=	O	O
teens	O	O
[	O	O
n	O	O
-	O	O
10	O	O
]	O	O
;	O	O
}	O	O
else	B-API	O
if	I-API	O
(	I-API	O
n	I-API	O
100	I-API	O
)	I-API	O
{	O	O
friendlyInt	O	O
+=	O	O
FriendlyInteger	O	O
(	O	O
n	O	O
%	O	O
10	O	O
,	O	O
tens	O	O
[	O	O
n	O	O
/	O	O
10	O	O
-	O	O
2	O	O
]	O	O
,	O	O
0	O	O
)	O	O
;	O	O
}	O	O
else	B-API	O
if	I-API	O
(	I-API	O
n	I-API	O
1000	I-API	O
)	I-API	O
{	O	O
friendlyInt	O	O
+=	O	O
FriendlyInteger	O	O
(	O	O
n	O	O
%	O	O
100	O	O
,	O	O
(	O	O
ones	O	O
[	O	O
n	O	O
/	O	O
100	O	O
]	O	O
+	O	O
``	O	O
Hundred	O	O
''	O	O
)	O	O
,	O	O
0	O	O
)	O	O
;	O	O
}	O	O
else	O	O
{	O	O
friendlyInt	O	O
+=	O	O
FriendlyInteger	O	O
(	O	O
n	O	O
%	O	O
1000	O	O
,	O	O
FriendlyInteger	O	O
(	O	O
n	O	O
/	O	O
1000	O	O
,	O	O
``	O	O
''	O	O
,	O	O
thousands+1	O	O
)	O	O
,	O	O
0	O	O
)	O	O
;	O	O
}	O	O
return	O	O
friendlyInt	O	O
+	O	O
thousandsGroups	O	O
[	O	O
thousands	O	O
]	O	O
;	O	O
}	O	O
public	O	O
static	B-API	O
string	I-API	O
IntegerToWritten	O	O
(	O	O
int	O	O
n	O	O
)	O	O
{	O	O
if	B-API	O
(	I-API	O
n	I-API	O
==	I-API	O
0	I-API	O
)	I-API	O
{	O	O
return	O	O
``	O	O
Zero	O	O
''	O	O
;	O	O
}	O	O
else	B-API	O
if	I-API	O
(	I-API	O
n	I-API	O
0	I-API	O
)	I-API	O
{	O	O
return	O	O
``	O	O
Negative	O	O
``	O	O
+	O	O
IntegerToWritten	O	O
(	O	O
-n	O	O
)	O	O
;	O	O
}	O	O
return	O	O
FriendlyInteger	O	O
(	O	O
n	O	O
,	O	O
``	O	O
''	O	O
,	O	O
0	O	O
)	O	O
;	O	O
}	O	O
}	O	O
(	O	O
Edited	O	O
to	O	O
make	O	O
it	O	O
considerably	O	O
more	O	O
concise	O	O
.	O	O
)	O	O
I	O	O
believe	O	O
you	O	O
are	O	O
talking	O	O
about	O	O
a	O	O
content	O	O
management	O	O
system	O	O
.	O	O
The	O	O
way	O	O
I	O	O
have	O	O
delt	O	O
with	O	O
this	O	O
situation	O	O
in	O	O
the	O	O
past	O	O
is	O	O
to	O	O
either	O	O
:	O	O
Allow	O	O
a	O	O
page/content	O	O
to	O	O
define	O	O
an	O	O
extra	O	O
custom	O	O
stylesheet	O	O
or	O	O
Allow	O	O
a	O	O
page/content	O	O
to	O	O
define	O	O
inline	O	O
style	O	O
tags	O	O
What	O	O
I	O	O
would	O	O
do	O	O
for	O	O
the	O	O
particular	O	O
case	O	O
is	O	O
:	O	O
i	O	O
.	O	O
Define	O	O
the	O	O
body	O	O
as	O	O
a	O	O
server	O	O
side	O	O
control	O	O
body	O	O
runat=	O	O
''	O	O
server	O	O
''	O	O
ii	O	O
.	O	O
In	O	O
your	O	O
content	O	O
aspx	O	O
page	O	O
,	O	O
register	O	O
the	O	O
MasterPage	O	O
with	O	O
the	O	O
register	O	O
:	O	O
%	O	O
MasterPageFile=	O	O
''	O	O
...	O	O
''	O	O
iii	O	O
.	O	O
In	O	O
the	O	O
Content	O	O
Page	O	O
,	O	O
you	O	O
can	O	O
now	O	O
simply	O	O
use	O	O
Master.FindControl	B-API	B-API
(	I-API	I-API
``	I-API	I-API
masterpageBody	I-API	I-API
''	I-API	I-API
)	I-API	I-API
and	O	O
have	O	O
access	O	O
to	O	O
the	O	O
control	O	O
.	O	O
Now	O	O
,	O	O
you	O	O
can	O	O
change	O	O
whatever	O	O
properties/style	O	O
that	O	O
you	O	O
like	O	O
!	O	O
This	O	O
is	O	O
what	O	O
I	O	O
came	O	O
up	O	O
with	O	O
:	O	O
In	O	O
the	O	O
page	O	O
load	O	O
function	O	O
:	O	O
HtmlGenericControl	B-API	O
body	O	O
=	O	O
(	B-API	O
HtmlGenericControl	I-API	O
)	I-API	O
Master.FindControl	B-API	B-API
(	I-API	I-API
``	I-API	I-API
default_body	I-API	I-API
''	I-API	I-API
)	I-API	I-API
;	O	O
body.Style.Add	B-API	B-API
(	I-API	I-API
HtmlTextWriterStyle.BackgroundColor	I-API	I-API
,	I-API	I-API
``	I-API	I-API
#	I-API	I-API
2E6095	I-API	I-API
''	I-API	I-API
)	I-API	I-API
;	O	O
Where	O	O
default_body	O	O
=	O	O
the	O	O
id	O	O
of	O	O
the	O	O
body	O	O
tag	O	O
.	O	O
If	O	O
you	O	O
are	O	O
not	O	O
totally	O	O
tied	O	O
to	O	O
pure	O	O
C	O	O
and	O	O
can	O	O
use	O	O
string.h	O	O
there	O	O
is	O	O
strchr	B-API	B-API
(	I-API	I-API
)	I-API	I-API
See	O	O
here	O	O
returns	O	O
a	O	O
pointer	O	O
to	O	O
the	O	O
found	O	O
character	O	O
,	O	O
so	O	O
you	O	O
could	O	O
use	O	O
pointer	O	O
arithmetic	O	O
:	O	O
(	O	O
Note	O	O
:	O	O
this	O	O
code	O	O
not	O	O
tested	O	O
for	O	O
its	O	O
ability	O	O
to	O	O
compile	O	O
,	O	O
it	O	O
's	O	O
one	O	O
step	O	O
away	O	O
from	O	O
pseudocode	O	O
.	O	O
)	O	O
char	B-API	O
*	I-API	O
source	I-API	O
=	O	O
``	O	O
test	O	O
string	O	O
''	O	O
;	O	O
/*	O	O
assume	O	O
source	O	O
address	O	O
is	O	O
*/	O	O
/*	O	O
0x10	O	O
for	O	O
example	O	O
*/	O	O
char	O	O
*	O	O
found	O	O
=	O	O
strstr	B-API	B-API
(	I-API	I-API
source	I-API	I-API
,	I-API	I-API
``	I-API	I-API
in	I-API	I-API
''	I-API	I-API
)	I-API	I-API
;	O	O
/*	O	O
should	O	O
return	O	O
0x18	O	O
*/	O	O
if	B-API	O
(	I-API	O
found	I-API	O
!	I-API	O
=	I-API	O
NULL	I-API	O
)	I-API	O
/*	O	O
strstr	O	O
returns	O	O
NULL	O	O
if	O	O
item	O	O
not	O	O
found	O	O
*/	O	O
{	O	O
int	O	O
index	O	O
=	O	O
found	O	O
-	O	O
source	O	O
;	O	O
/*	O	O
index	O	O
is	O	O
8	O	O
*/	O	O
/*	O	O
source	O	O
[	O	O
8	O	O
]	O	O
gets	O	O
you	O	O
``	O	O
i	O	O
''	O	O
*/	O	O
}	O	O
EDIT	O	O
:	O	O
strchr	O	O
is	O	O
better	O	O
only	O	O
for	O	O
one	O	O
char	O	O
.	O	O
Pointer	O	O
aritmetics	O	O
says	O	O
``	O	O
Hellow	O	O
!	O	O
``	O	O
:	O	O
char	O	O
*pos	O	O
=	O	O
strchr	B-API	B-API
(	I-API	I-API
myString	I-API	I-API
,	I-API	I-API
'	I-API	I-API
#	I-API	I-API
'	I-API	I-API
)	I-API	I-API
;	O	O
int	O	O
pos	O	O
=	O	O
pos	O	O
?	O	O
pos	O	O
-	O	O
myString	O	O
:	O	O
-1	O	O
;	O	O
Important	O	O
:	O	O
strchr	B-API	B-API
(	I-API	I-API
)	I-API	I-API
returns	O	O
NULL	O	O
if	O	O
no	O	O
string	O	O
is	O	O
found	O	O
You	O	O
can	O	O
use	O	O
strstr	O	O
to	O	O
accomplish	O	O
what	O	O
you	O	O
want	O	O
.	O	O
Example	O	O
:	O	O
char	B-API	O
*a	I-API	O
=	O	O
``	O	O
Hello	O	O
World	O	O
!	O	O
``	O	O
;	O	O
char	B-API	O
*b	I-API	O
=	O	O
;	O	O
int	O	O
position	O	O
=	O	O
b	O	O
-	O	O
(	O	O
a	O	O
,	O	O
``	O	O
World	O	O
''	O	O
)	O	O
;	O	O
printf	B-API	O
(	I-API	O
``	I-API	O
the	I-API	O
offset	I-API	O
is	I-API	O
%	I-API	O
i\n	I-API	O
''	I-API	O
,	I-API	O
position	I-API	O
)	I-API	O
This	O	O
produces	O	O
the	O	O
result	O	O
:	O	O
the	O	O
offset	O	O
is	O	O
I	O	O
think	O	O
that	O	O
size_t	O	O
strcspn	B-API	O
(	I-API	O
const	I-API	O
char	I-API	O
*	I-API	O
str1	I-API	O
,	I-API	O
const	I-API	O
char	I-API	O
*	I-API	O
str2	I-API	O
)	I-API	O
;	O	O
is	O	O
what	O	O
you	O	O
want	O	O
.	O	O
Here	O	O
is	O	O
an	O	O
example	O	O
pulled	O	O
from	O	O
here	O	O
:	O	O
/*	O	O
strcspn	O	O
example	O	O
*/	O	O
#	O	O
include	O	O
stdio.h	O	O
#	O	O
include	O	O
string.h	O	O
int	O	O
main	B-API	O
(	I-API	O
)	I-API	O
{	O	O
char	O	O
str	B-API	O
[	I-API	O
]	I-API	O
=	O	O
``	O	O
fcba73	O	O
''	O	O
;	O	O
char	B-API	O
keys	I-API	O
[	I-API	O
]	I-API	O
=	O	O
``	O	O
1234567890	O	O
''	O	O
;	O	O
int	O	O
i	O	O
;	O	O
i	O	O
=	O	O
strcspn	B-API	B-API
(	I-API	I-API
str	I-API	I-API
,	I-API	I-API
keys	I-API	I-API
)	I-API	I-API
;	O	O
printf	B-API	O
(	I-API	O
``	I-API	O
The	I-API	O
first	I-API	O
number	I-API	O
in	I-API	O
str	I-API	O
is	I-API	O
at	I-API	O
position	I-API	O
%	I-API	O
d.\n	I-API	O
''	I-API	O
,	I-API	O
i+1	I-API	O
)	I-API	O
;	O	O
return	O	O
0	O	O
;	O	O
}	O	O
If	O	O
you	O	O
are	O	O
looking	O	O
for	O	O
user	O	O
facing	O	O
interaction	O	O
,	O	O
stick	O	O
with	O	O
xml	O	O
.	O	O
It	O	O
has	O	O
more	O	O
support	O	O
,	O	O
understanding	O	O
,	O	O
and	O	O
general	O	O
acceptance	O	O
currently	O	O
.	O	O
If	O	O
it	O	O
's	O	O
internal	O	O
,	O	O
I	O	O
would	O	O
say	O	O
that	O	O
protocol	O	O
buffers	O	O
are	O	O
a	O	O
great	O	O
idea	O	O
.	O	O
Maybe	O	O
in	O	O
a	O	O
few	O	O
years	O	O
as	O	O
more	O	O
tools	O	O
come	O	O
out	O	O
to	O	O
support	O	O
protocol	O	O
buffers	O	O
,	O	O
then	O	O
start	O	O
looking	O	O
towards	O	O
that	O	O
for	O	O
a	O	O
public	O	O
facing	O	O
api	O	O
.	O	O
Until	O	O
then	O	O
...	O	O
JSON	B-API	O
?	O	O
Protocol	O	O
buffers	O	O
are	O	O
intended	O	O
to	O	O
optimize	O	O
communications	O	O
between	O	O
machines	O	O
.	O	O
They	O	O
are	O	O
really	O	O
not	O	O
intended	O	O
for	O	O
human	O	O
interaction	O	O
.	O	O
Also	O	O
,	O	O
the	O	O
format	O	O
is	O	O
binary	O	O
,	O	O
so	O	O
it	O	O
could	O	O
not	O	O
replace	O	O
XML	B-API	O
in	O	O
that	O	O
use	O	O
case	O	O
.	O	O
I	O	O
would	O	O
also	O	O
recommend	O	O
JSON	B-API	O
as	O	O
being	O	O
the	O	O
most	O	O
compact	O	O
text-based	O	O
format	O	O
.	O	O
The	O	O
previous	O	O
answer	O	O
is	O	O
fine	O	O
,	O	O
but	O	O
I	O	O
'm	O	O
one	O	O
of	O	O
those	O	O
guys	O	O
that	O	O
's	O	O
firmly	O	O
against	O	O
mixing	O	O
behavior	O	O
with	O	O
presentation	O	O
(	O	O
putting	O	O
JavaScript	B-API	O
in	O	O
my	O	O
HTML	B-API	O
)	O	O
so	O	O
I	O	O
prefer	O	O
to	O	O
put	O	O
my	O	O
event	O	O
handling	O	O
logic	O	O
in	O	O
my	O	O
JavaScript	B-API	O
files	O	O
.	O	O
Additionally	O	O
,	O	O
not	O	O
all	O	O
browsers	O	O
implement	O	O
event	O	O
(	O	O
or	O	O
e	O	O
)	O	O
the	O	O
same	O	O
way	O	O
.	O	O
You	O	O
may	O	O
want	O	O
to	O	O
do	O	O
a	O	O
check	O	O
prior	O	O
to	O	O
running	O	O
any	O	O
logic	O	O
:	O	O
document.onkeydown	B-API	O
=	O	O
TabExample	O	O
;	O	O
function	O	O
{	O	O
var	B-API	O
evt	O	O
=	O	O
(	O	O
evt	O	O
)	O	O
?	O	O
evt	O	O
:	O	O
?	O	O
event	O	O
:	O	O
null	O	O
)	O	O
;	O	O
{	O	O
//	O	O
do	O	O
work	O	O
TabExample	B-API	B-API
(	I-API	I-API
evt	I-API	I-API
)	I-API	I-API
(	I-API	I-API
(	I-API	I-API
event	B-API	I-API
)	I-API	I-API
(	O	O
evt.keycode	O	O
==	O	O
9	O	O
)	O	O
I	O	O
'd	O	O
rather	O	O
tab	O	O
indentation	O	O
not	O	O
work	O	O
than	O	O
breaking	O	O
tabbing	O	O
between	O	O
form	O	O
items	O	O
.	O	O
If	O	O
you	O	O
want	O	O
to	O	O
indent	O	O
to	O	O
put	O	O
in	O	O
code	O	O
in	O	O
the	O	O
Markdown	O	O
box	O	O
,	O	O
use	O	O
Ctrl+K	O	O
(	O	O
or	O	O
K	O	O
on	O	O
a	O	O
Mac	O	O
)	O	O
.	O	O
In	O	O
terms	O	O
of	O	O
actually	O	O
stopping	O	O
the	O	O
action	O	O
,	O	O
jQuery	B-API	O
(	O	O
which	O	O
Stack	O	O
Overflow	O	O
uses	O	O
)	O	O
will	O	O
stop	O	O
an	O	O
event	O	O
from	O	O
bubbling	O	O
when	O	O
you	O	O
return	O	O
false	O	O
from	O	O
an	O	O
event	O	O
callback	O	O
.	O	O
This	O	O
makes	O	O
life	O	O
easier	O	O
for	O	O
working	O	O
with	O	O
multiple	O	O
browsers	O	O
.	O	O
I	O	O
would	O	O
advise	O	O
against	O	O
changing	O	O
the	O	O
default	O	O
behaviour	O	O
of	O	O
a	O	O
key	O	O
.	O	O
I	O	O
do	O	O
as	O	O
much	O	O
as	O	O
possible	O	O
without	O	O
touching	O	O
a	O	O
mouse	O	O
,	O	O
so	O	O
if	O	O
you	O	O
make	O	O
my	O	O
tab	O	O
key	O	O
not	O	O
move	O	O
to	O	O
the	O	O
next	O	O
field	O	O
on	O	O
a	O	O
form	O	O
I	O	O
will	O	O
be	O	O
very	O	O
aggravated	O	O
.	O	O
A	O	O
shortcut	O	O
key	O	O
could	O	O
be	O	O
useful	O	O
however	O	O
,	O	O
especially	O	O
with	O	O
large	O	O
code	O	O
blocks	O	O
and	O	O
nesting	O	O
.	O	O
Shift-TAB	O	O
is	O	O
a	O	O
bad	O	O
option	O	O
because	O	O
that	O	O
normally	O	O
takes	O	O
me	O	O
to	O	O
the	O	O
previous	O	O
field	O	O
on	O	O
a	O	O
form	O	O
.	O	O
Maybe	O	O
a	O	O
new	O	O
button	O	O
on	O	O
the	O	O
WMD	O	O
editor	O	O
to	O	O
insert	O	O
a	O	O
code-TAB	O	O
,	O	O
with	O	O
a	O	O
shortcut	O	O
key	O	O
,	O	O
would	O	O
be	O	O
possible	O	O
?	O	O
Calling	O	O
process.Start	B-API	O
on	O	O
the	O	O
Mailto	B-API	O
:	O	O
protocol	O	O
(	O	O
as	O	O
shown	O	O
below	O	O
)	O	O
will	O	O
give	O	O
you	O	O
basic	O	O
functionality	O	O
but	O	O
not	O	O
attachments	O	O
.	O	O
(	O	O
``	O	O
mailto	O	O
:	O	O
name	O	O
@	O	O
domain.com	O	O
?	O	O
subject=TestCodeBody=Test	O	O
Text	O	O
''	O	O
)	O	O
You	O	O
can	O	O
do	O	O
this	O	O
approach	O	O
with	O	O
attachment	O	O
paths	O	O
but	O	O
this	O	O
option	O	O
only	O	O
works	O	O
with	O	O
some	O	O
old	O	O
version	O	O
of	O	O
outlook	O	O
such	O	O
as	O	O
98	O	O
.	O	O
I	O	O
assume	O	O
this	O	O
is	O	O
due	O	O
to	O	O
the	O	O
potential	O	O
securty	O	O
risk	O	O
.	O	O
If	O	O
anyone	O	O
does	O	O
use	O	O
outlook.exe	O	O
it	O	O
will	O	O
give	O	O
security	O	O
warnings	O	O
under	O	O
outlook	O	O
2003	O	O
(	O	O
and	O	O
2007	O	O
Dependant	O	O
on	O	O
settings	O	O
)	O	O
.	O	O
Easy	O	O
one	O	O
!	O	O
``	O	O
\t	O	O
''	O	O
Edit	O	O
:	O	O
In	O	O
fact	O	O
,	O	O
here	O	O
's	O	O
something	O	O
official	O	O
:	O	O
Escape	O	O
Sequences	O	O
If	O	O
he	O	O
's	O	O
interested	O	O
,	O	O
are	O	O
n't	O	O
the	O	O
minor	O	O
details	O	O
the	O	O
good	O	O
parts	O	O
?	O	O
Using	O	O
python	O	O
,	O	O
you	O	O
've	O	O
already	O	O
cut	O	O
the	O	O
GUI	O	O
off	O	O
of	O	O
it	O	O
so	O	O
that	O	O
confusion	O	O
is	O	O
gone	O	O
.	O	O
Why	O	O
not	O	O
pick	O	O
a	O	O
project	O	O
,	O	O
a	O	O
game	O	O
or	O	O
something	O	O
,	O	O
and	O	O
implement	O	O
it	O	O
.	O	O
The	O	O
classic	O	O
hi-lo	O	O
number	O	O
guessing	O	O
game	O	O
can	O	O
be	O	O
simply	O	O
implemented	O	O
from	O	O
the	O	O
command	O	O
line	O	O
in	O	O
20-30	O	O
lines	O	O
of	O	O
code	O	O
(	O	O
depending	O	O
on	O	O
language	O	O
of	O	O
course	O	O
)	O	O
and	O	O
gives	O	O
you	O	O
variables	O	O
,	O	O
conditions	O	O
,	O	O
loops	O	O
,	O	O
and	O	O
user	O	O
input	O	O
.	O	O
First	O	O
of	O	O
all	O	O
,	O	O
start	O	O
out	O	O
like	O	O
everyone	O	O
else	O	O
does	O	O
:	O	O
with	O	O
a	O	O
Hello	O	O
World	O	O
program	O	O
.	O	O
It	O	O
's	O	O
simple	O	O
,	O	O
and	O	O
it	O	O
gives	O	O
them	O	O
a	O	O
basic	O	O
feel	O	O
for	O	O
the	O	O
layout	O	O
of	O	O
a	O	O
program	O	O
.	O	O
Try	O	O
and	O	O
remember	O	O
back	O	O
to	O	O
when	O	O
you	O	O
were	O	O
first	O	O
programming	O	O
,	O	O
and	O	O
how	O	O
difficult	O	O
some	O	O
of	O	O
the	O	O
concepts	O	O
were	O	O
-	O	O
start	O	O
simple	O	O
.	O	O
After	O	O
Hello	O	O
World	O	O
,	O	O
move	O	O
on	O	O
to	O	O
creating	O	O
some	O	O
basic	O	O
variables	O	O
,	O	O
arithmetic	O	O
,	O	O
then	O	O
onto	O	O
boolean	O	O
logic	O	O
and	O	O
if/else	O	O
statements	O	O
.	O	O
If	O	O
you	O	O
've	O	O
got	O	O
one	O	O
of	O	O
your	O	O
old	O	O
programming	O	O
textbooks	O	O
,	O	O
check	O	O
out	O	O
some	O	O
of	O	O
the	O	O
early	O	O
examples	O	O
and	O	O
have	O	O
him	O	O
run	O	O
through	O	O
those	O	O
.	O	O
Just	O	O
do	O	O
n't	O	O
try	O	O
to	O	O
introduce	O	O
too	O	O
much	O	O
all	O	O
at	O	O
once	O	O
,	O	O
or	O	O
it	O	O
will	O	O
be	O	O
overwhelming	O	O
and	O	O
confusing	O	O
.	O	O
I	O	O
would	O	O
actually	O	O
argue	O	O
to	O	O
pick	O	O
a	O	O
simpler	O	O
language	O	O
with	O	O
fewer	O	O
instructions	O	O
.	O	O
I	O	O
personally	O	O
learned	O	O
on	O	O
BASIC	B-API	O
at	O	O
home	O	O
,	O	O
as	O	O
did	O	O
Jeff	O	O
.	O	O
This	O	O
way	O	O
,	O	O
you	O	O
do	O	O
n't	O	O
have	O	O
to	O	O
delve	O	O
into	O	O
more	O	O
complicated	O	O
issues	O	O
like	O	O
object	O	O
oriented	O	O
programming	O	O
,	O	O
or	O	O
even	O	O
procedures	O	O
if	O	O
you	O	O
do	O	O
n't	O	O
want	O	O
to	O	O
.	O	O
Once	O	O
he	O	O
can	O	O
handle	O	O
simple	O	O
control	O	O
flow	O	O
,	O	O
then	O	O
move	O	O
on	O	O
to	O	O
something	O	O
a	O	O
little	O	O
more	O	O
complicated	O	O
,	O	O
but	O	O
only	O	O
simple	O	O
features	O	O
.	O	O
Maybe	O	O
start	O	O
with	O	O
very	O	O
simple	O	O
programs	O	O
that	O	O
just	O	O
add	O	O
2	O	O
numbers	O	O
,	O	O
and	O	O
then	O	O
grow	O	O
to	O	O
something	O	O
that	O	O
might	O	O
require	O	O
a	O	O
branch	O	O
,	O	O
then	O	O
maybe	O	O
reading	O	O
input	O	O
and	O	O
responding	O	O
to	O	O
it	O	O
,	O	O
then	O	O
some	O	O
kind	O	O
of	O	O
loop	O	O
,	O	O
and	O	O
start	O	O
combining	O	O
them	O	O
all	O	O
together	O	O
.	O	O
Just	O	O
start	O	O
little	O	O
and	O	O
work	O	O
your	O	O
way	O	O
up	O	O
.	O	O
Do	O	O
n't	O	O
do	O	O
any	O	O
big	O	O
projects	O	O
until	O	O
he	O	O
can	O	O
grasp	O	O
the	O	O
fundamentals	O	O
(	O	O
otherwise	O	O
it	O	O
may	O	O
very	O	O
well	O	O
be	O	O
too	O	O
daunting	O	O
and	O	O
he	O	O
could	O	O
give	O	O
up	O	O
midway	O	O
)	O	O
.	O	O
Once	O	O
he	O	O
's	O	O
mastered	O	O
BASIC	B-API	O
or	O	O
whatever	O	O
you	O	O
choose	O	O
,	O	O
move	O	O
on	O	O
to	O	O
something	O	O
more	O	O
complicated	O	O
.	O	O
Just	O	O
my	O	O
$	O	O
0.02	O	O
Something	O	O
you	O	O
should	O	O
be	O	O
very	O	O
mindful	O	O
of	O	O
while	O	O
teaching	O	O
your	O	O
brother	O	O
to	O	O
program	O	O
is	O	O
for	O	O
him	O	O
not	O	O
to	O	O
rely	O	O
too	O	O
heavily	O	O
on	O	O
you	O	O
.	O	O
Often	O	O
when	O	O
I	O	O
find	O	O
myself	O	O
helping	O	O
others	O	O
they	O	O
will	O	O
begin	O	O
to	O	O
think	O	O
of	O	O
me	O	O
as	O	O
answer	O	O
book	O	O
to	O	O
all	O	O
of	O	O
their	O	O
questions	O	O
and	O	O
instead	O	O
of	O	O
experimenting	O	O
to	O	O
find	O	O
an	O	O
answer	O	O
they	O	O
simply	O	O
ask	O	O
me	O	O
.	O	O
Often	O	O
the	O	O
best	O	O
teacher	O	O
is	O	O
experimentation	O	O
and	O	O
every	O	O
time	O	O
your	O	O
brother	O	O
has	O	O
a	O	O
question	O	O
like	O	O
``	O	O
What	O	O
will	O	O
happen	O	O
if	O	O
I	O	O
add	O	O
2	O	O
to	O	O
a	O	O
string	O	O
?	O	O
''	O	O
you	O	O
should	O	O
tell	O	O
him	O	O
to	O	O
try	O	O
it	O	O
out	O	O
and	O	O
see	O	O
for	O	O
himself	O	O
.	O	O
Also	O	O
I	O	O
have	O	O
noticed	O	O
that	O	O
when	O	O
I	O	O
can	O	O
not	O	O
get	O	O
a	O	O
concept	O	O
through	O	O
to	O	O
someone	O	O
,	O	O
it	O	O
helps	O	O
to	O	O
see	O	O
some	O	O
sample	O	O
code	O	O
where	O	O
we	O	O
can	O	O
look	O	O
at	O	O
each	O	O
segment	O	O
individually	O	O
and	O	O
explain	O	O
it	O	O
piece	O	O
by	O	O
piece	O	O
.	O	O
As	O	O
a	O	O
side	O	O
note	O	O
people	O	O
new	O	O
to	O	O
programming	O	O
often	O	O
have	O	O
trouble	O	O
with	O	O
the	O	O
idea	O	O
of	O	O
object	O	O
oriented	O	O
programming	O	O
,	O	O
they	O	O
will	O	O
say	O	O
they	O	O
understand	O	O
it	O	O
when	O	O
you	O	O
teach	O	O
it	O	O
to	O	O
them	O	O
but	O	O
will	O	O
not	O	O
get	O	O
a	O	O
clear	O	O
concept	O	O
of	O	O
it	O	O
until	O	O
actually	O	O
implementing	O	O
it	O	O
.	O	O
You	O	O
could	O	O
try	O	O
using	O	O
Alice	B-API	O
.	O	O
It	O	O
's	O	O
a	O	O
3D	O	O
program	O	O
designed	O	O
for	O	O
use	O	O
in	O	O
introductory	O	O
programming	O	O
classes	O	O
.	O	O
The	O	O
two	O	O
biggest	O	O
obstacles	O	O
for	O	O
new	O	O
programmers	O	O
are	O	O
often	O	O
:	O	O
syntax	O	O
errors	O	O
motivation	O	O
(	O	O
writing	O	O
something	O	O
meaningful	O	O
and	O	O
fun	O	O
rather	O	O
than	O	O
contrived	O	O
)	O	O
Alice	B-API	O
uses	O	O
a	O	O
drag	O	O
and	O	O
drop	O	O
interface	O	O
for	O	O
constructing	O	O
programs	O	O
,	O	O
avoiding	O	O
the	O	O
possibility	O	O
of	O	O
syntax	O	O
errors	O	O
.	O	O
Alice	B-API	O
lets	O	O
you	O	O
construct	O	O
3D	O	O
worlds	O	O
and	O	O
have	O	O
your	O	O
code	O	O
control	O	O
(	O	O
simple	O	O
)	O	O
3D	O	O
characters	O	O
and	O	O
animation	O	O
,	O	O
which	O	O
is	O	O
usually	O	O
a	O	O
lot	O	O
more	O	O
interesting	O	O
than	O	O
implementing	O	O
linked	O	O
lists	O	O
.	O	O
Experienced	O	O
programmers	O	O
may	O	O
look	O	O
down	O	O
at	O	O
Alice	B-API	O
as	O	O
a	O	O
toy	O	O
and	O	O
scoff	O	O
at	O	O
dragging	O	O
and	O	O
dropping	O	O
lines	O	O
of	O	O
code	O	O
,	O	O
but	O	O
research	O	O
shows	O	O
that	O	O
this	O	O
approach	O	O
works	O	O
.	O	O
Disclaimer	O	O
:	O	O
I	O	O
worked	O	O
on	O	O
Alice	B-API	O
.	O	O
A	O	O
good	O	O
python	O	O
course	O	O
is	O	O
MIT	O	O
's	O	O
A	O	O
Gentle	O	O
Introduction	O	O
to	O	O
Programming	O	O
Using	O	O
Python	B-API	O
.	O	O
It	O	O
's	O	O
all	O	O
free	O	O
online	O	O
,	O	O
and	O	O
you	O	O
do	O	O
n't	O	O
have	O	O
to	O	O
be	O	O
an	O	O
MIT	O	O
uberstudent	O	O
to	O	O
understand	O	O
it	O	O
.	O	O
Edit	O	O
[	O	O
Justin	O	O
Standard	O	O
]	O	O
This	O	O
course	O	O
uses	O	O
this	O	O
free	O	O
online	O	O
book	O	O
:	O	O
How	O	O
To	O	O
Think	O	O
Like	O	O
a	O	O
Computer	O	O
Scientist	O	O
I	O	O
'm	O	O
definitely	O	O
finding	O	O
it	O	O
quite	O	O
useful	O	O
.	O	O
I	O	O
've	O	O
had	O	O
to	O	O
work	O	O
with	O	O
several	O	O
beginner	O	O
(	O	O
never	O	O
wrote	O	O
a	O	O
line	O	O
of	O	O
code	O	O
)	O	O
programmers	O	O
,	O	O
and	O	O
I	O	O
'll	O	O
be	O	O
doing	O	O
an	O	O
after	O	O
school	O	O
workshop	O	O
with	O	O
high	O	O
school	O	O
students	O	O
this	O	O
fall	O	O
.	O	O
This	O	O
is	O	O
the	O	O
closest	O	O
thing	O	O
I	O	O
've	O	O
got	O	O
to	O	O
documentation	O	O
.	O	O
It	O	O
's	O	O
still	O	O
a	O	O
work	O	O
in	O	O
progress	O	O
,	O	O
but	O	O
I	O	O
hope	O	O
it	O	O
helps	O	O
.	O	O
1	O	O
)	O	O
FizzBuzz	O	O
.	O	O
Start	O	O
with	O	O
command	O	O
line	O	O
programs	O	O
.	O	O
You	O	O
can	O	O
write	O	O
some	O	O
fun	O	O
games	O	O
,	O	O
or	O	O
tools	O	O
,	O	O
very	O	O
quickly	O	O
,	O	O
and	O	O
you	O	O
learn	O	O
all	O	O
of	O	O
the	O	O
language	O	O
features	O	O
very	O	O
quickly	O	O
without	O	O
having	O	O
to	O	O
learn	O	O
the	O	O
GUI	O	O
tools	O	O
first	O	O
.	O	O
These	O	O
early	O	O
apps	O	O
should	O	O
be	O	O
simple	O	O
enough	O	O
that	O	O
you	O	O
wo	O	O
n't	O	O
need	O	O
to	O	O
use	O	O
any	O	O
real	O	O
debugging	O	O
tools	O	O
to	O	O
make	O	O
them	O	O
work	O	O
.	O	O
If	O	O
nothing	O	O
else	O	O
things	O	O
like	O	O
FizzBuzz	O	O
are	O	O
good	O	O
projects	O	O
.	O	O
Your	O	O
first	O	O
few	O	O
apps	O	O
should	O	O
not	O	O
have	O	O
to	O	O
deal	O	O
with	O	O
DBs	O	O
,	O	O
file	O	O
system	O	O
,	O	O
configuration	O	O
,	O	O
ect	O	O
.	O	O
These	O	O
are	O	O
concepts	O	O
which	O	O
just	O	O
confuse	O	O
most	O	O
people	O	O
,	O	O
and	O	O
when	O	O
you	O	O
're	O	O
just	O	O
learning	O	O
the	O	O
syntax	O	O
and	O	O
basic	O	O
framework	O	O
features	O	O
you	O	O
really	O	O
do	O	O
n't	O	O
need	O	O
more	O	O
complexity	O	O
.	O	O
Some	O	O
projects	O	O
:	O	O
Hello	O	O
World	O	O
!	O	O
Take	O	O
the	O	O
year	O	O
of	O	O
my	O	O
birth	O	O
,	O	O
and	O	O
calculate	O	O
my	O	O
age	O	O
(	O	O
just	O	O
(	O	O
now	O	O
-	O	O
then	O	O
)	O	O
no	O	O
month	O	O
corrections	O	O
)	O	O
.	O	O
(	O	O
simple	O	O
math	O	O
,	O	O
input	O	O
,	O	O
output	O	O
)	O	O
Ask	O	O
for	O	O
a	O	O
direction	O	O
(	O	O
Up	O	O
,	O	O
down	O	O
,	O	O
left	O	O
,	O	O
right	O	O
)	O	O
,	O	O
then	O	O
tell	O	O
the	O	O
user	O	O
their	O	O
fate	O	O
(	O	O
fall	O	O
in	O	O
a	O	O
hole	O	O
,	O	O
find	O	O
a	O	O
cake	O	O
,	O	O
ect	O	O
)	O	O
.	O	O
(	O	O
Boolean	B-API	O
logic	O	O
)	O	O
FizzBuzz	O	O
,	O	O
but	O	O
count	O	O
once	O	O
every	O	O
second	O	O
.	O	O
(	O	O
Loops	O	O
,	O	O
timers	O	O
,	O	O
and	O	O
more	O	O
logic	O	O
)	O	O
Depending	O	O
on	O	O
their	O	O
age	O	O
some	O	O
really	O	O
like	O	O
an	O	O
app	O	O
which	O	O
calls	O	O
the	O	O
users	O	O
a	O	O
random	O	O
insult	O	O
at	O	O
some	O	O
interval	O	O
.	O	O
(	O	O
Loops	O	O
,	O	O
arrays	O	O
,	O	O
timers	O	O
,	O	O
and	O	O
random	O	O
if	O	O
you	O	O
make	O	O
the	O	O
interval	O	O
random	O	O
)	O	O
2	O	O
)	O	O
Simple	O	O
Project	O	O
Once	O	O
they	O	O
have	O	O
a	O	O
good	O	O
grasp	O	O
of	O	O
language	O	O
features	O	O
,	O	O
you	O	O
can	O	O
start	O	O
a	O	O
project	O	O
(	O	O
simple	O	O
,	O	O
fun	O	O
games	O	O
work	O	O
good.	O	O
)	O	O
.	O	O
You	O	O
should	O	O
try	O	O
to	O	O
have	O	O
the	O	O
first	O	O
project	O	O
be	O	O
able	O	O
to	O	O
be	O	O
completed	O	O
within	O	O
6-12	O	O
hours	O	O
.	O	O
Do	O	O
n't	O	O
spend	O	O
time	O	O
to	O	O
architect	O	O
it	O	O
early	O	O
.	O	O
Let	O	O
them	O	O
design	O	O
it	O	O
even	O	O
if	O	O
it	O	O
sucks	O	O
.	O	O
If	O	O
it	O	O
falls	O	O
apart	O	O
,	O	O
talk	O	O
about	O	O
what	O	O
happened	O	O
and	O	O
why	O	O
it	O	O
failed	O	O
,	O	O
then	O	O
pick	O	O
another	O	O
topic	O	O
and	O	O
start	O	O
again	O	O
.	O	O
This	O	O
is	O	O
where	O	O
you	O	O
start	O	O
introducing	O	O
the	O	O
debugging	O	O
capabilities	O	O
of	O	O
your	O	O
tools	O	O
.	O	O
Even	O	O
if	O	O
you	O	O
can	O	O
see	O	O
the	O	O
problem	O	O
by	O	O
reading	O	O
the	O	O
code	O	O
you	O	O
should	O	O
teach	O	O
them	O	O
how	O	O
to	O	O
use	O	O
the	O	O
tools	O	O
,	O	O
and	O	O
then	O	O
show	O	O
them	O	O
how	O	O
you	O	O
could	O	O
see	O	O
it	O	O
.	O	O
That	O	O
serves	O	O
the	O	O
dual	O	O
purpose	O	O
of	O	O
teaching	O	O
the	O	O
debugging	O	O
tools	O	O
and	O	O
teaching	O	O
how	O	O
to	O	O
ID	O	O
errors	O	O
without	O	O
tools	O	O
.	O	O
Once	O	O
,	O	O
or	O	O
if	O	O
,	O	O
the	O	O
project	O	O
gets	O	O
functional	O	O
you	O	O
can	O	O
use	O	O
it	O	O
to	O	O
introduce	O	O
refactoring	O	O
tools	O	O
.	O	O
Its	O	O
good	O	O
if	O	O
you	O	O
can	O	O
then	O	O
expand	O	O
the	O	O
project	O	O
with	O	O
some	O	O
simple	O	O
features	O	O
which	O	O
you	O	O
never	O	O
planned	O	O
for	O	O
.	O	O
This	O	O
usually	O	O
means	O	O
refactoring	O	O
and	O	O
significant	O	O
debugging	O	O
,	O	O
since	O	O
very	O	O
few	O	O
people	O	O
write	O	O
even	O	O
half	O	O
decent	O	O
code	O	O
their	O	O
first	O	O
time	O	O
.	O	O
Some	O	O
projects	O	O
:	O	O
Hangman	O	O
game	O	O
Experimenting	O	O
with	O	O
robotics	O	O
(	O	O
Vex	O	O
and	O	O
Mindstorms	O	O
are	O	O
options	O	O
)	O	O
3	O	O
)	O	O
Real	O	O
Project	O	O
Start	O	O
a	O	O
real	O	O
project	O	O
which	O	O
may	O	O
take	O	O
some	O	O
time	O	O
.	O	O
Use	O	O
proper	O	O
source	O	O
control	O	O
,	O	O
and	O	O
make	O	O
a	O	O
point	O	O
to	O	O
have	O	O
a	O	O
schedule	O	O
.	O	O
Run	O	O
this	O	O
project	O	O
like	O	O
a	O	O
real	O	O
project	O	O
,	O	O
if	O	O
nothing	O	O
else	O	O
its	O	O
good	O	O
experience	O	O
having	O	O
to	O	O
deal	O	O
with	O	O
the	O	O
tools	O	O
.	O	O
Obviously	O	O
you	O	O
need	O	O
to	O	O
adjust	O	O
this	O	O
for	O	O
each	O	O
person	O	O
.	O	O
The	O	O
most	O	O
important	O	O
thing	O	O
I	O	O
've	O	O
found	O	O
is	O	O
to	O	O
make	O	O
even	O	O
the	O	O
first	O	O
simple	O	O
apps	O	O
apply	O	O
to	O	O
what	O	O
the	O	O
person	O	O
is	O	O
interested	O	O
in	O	O
.	O	O
Some	O	O
projects	O	O
:	O	O
Tetris	O	O
Text	O	O
file	O	O
based	O	O
blog	O	O
engine	O	O
More	O	O
advanced	O	O
robotics	O	O
work	O	O
I	O	O
used	O	O
to	O	O
teach	O	O
programming	O	O
and	O	O
your	O	O
brother	O	O
has	O	O
one	O	O
main	O	O
advantage	O	O
over	O	O
most	O	O
of	O	O
my	O	O
students	O	O
he	O	O
wants	O	O
to	O	O
learn	O	O
:	O	O
)	O	O
If	O	O
you	O	O
decide	O	O
to	O	O
go	O	O
with	O	O
C	O	O
a	O	O
friend	O	O
has	O	O
a	O	O
site	O	O
that	O	O
has	O	O
the	O	O
sort	O	O
of	O	O
programs	O	O
those	O	O
of	O	O
use	O	O
from	O	O
older	O	O
generations	O	O
remember	O	O
as	O	O
basic	O	O
type-ins	O	O
.	O	O
The	O	O
more	O	O
complex	O	O
of	O	O
them	O	O
use	O	O
ncurses	O	O
which	O	O
sort	O	O
of	O	O
negates	O	O
their	O	O
use	O	O
as	O	O
a	O	O
teaching	O	O
aid	O	O
somewhat	O	O
but	O	O
some	O	O
of	O	O
them	O	O
are	O	O
tiny	O	O
little	O	O
things	O	O
and	O	O
you	O	O
can	O	O
learn	O	O
loads	O	O
without	O	O
being	O	O
taught	O	O
to	O	O
.	O	O
Personally	O	O
I	O	O
think	O	O
Python	B-API	O
and	O	O
Ruby	B-API	O
would	O	O
make	O	O
great	O	O
first	O	O
languages	O	O
.	O	O
EDIT	O	O
:	O	O
list	O	O
of	O	O
beginner	O	O
programming	O	O
assignments	O	O
appeared	O	O
overnight	O	O
might	O	O
be	O	O
just	O	O
what	O	O
you	O	O
are	O	O
looking	O	O
for	O	O
.	O	O
I	O	O
think	O	O
the	O	O
``	O	O
wisdom	O	O
of	O	O
crowds	O	O
''	O	O
work	O	O
here	O	O
.	O	O
How	O	O
did	O	O
most	O	O
people	O	O
learn	O	O
how	O	O
to	O	O
program	O	O
?	O	O
Many	O	O
claim	O	O
that	O	O
they	O	O
did	O	O
so	O	O
by	O	O
copying	O	O
programs	O	O
of	O	O
others	O	O
,	O	O
usually	O	O
games	O	O
they	O	O
wanted	O	O
to	O	O
play	O	O
in	O	O
BASIC	B-API	O
.	O	O
Maybe	O	O
that	O	O
route	O	O
will	O	O
work	O	O
with	O	O
him	O	O
too	O	O
?	O	O
If	O	O
you	O	O
want	O	O
to	O	O
teach	O	O
the	O	O
basics	O	O
of	O	O
programming	O	O
,	O	O
without	O	O
being	O	O
language	O	O
specific	O	O
,	O	O
there	O	O
is	O	O
an	O	O
application	O	O
called	O	O
Scratch	O	O
that	O	O
was	O	O
created	O	O
in	O	O
MIT	O	O
.	O	O
It	O	O
's	O	O
designed	O	O
to	O	O
help	O	O
people	O	O
develop	O	O
programming	O	O
skills	O	O
.	O	O
As	O	O
users	O	O
create	O	O
Scratch	O	O
projects	O	O
,	O	O
they	O	O
learn	O	O
to	O	O
create	O	O
conditions	O	O
,	O	O
loops	O	O
,	O	O
etc	O	O
.	O	O
There	O	O
is	O	O
a	O	O
also	O	O
a	O	O
community	O	O
of	O	O
scratch	O	O
projects	O	O
,	O	O
form	O	O
which	O	O
projects	O	O
can	O	O
be	O	O
downloaded	O	O
-	O	O
that	O	O
way	O	O
you	O	O
can	O	O
explore	O	O
other	O	O
people	O	O
's	O	O
programs	O	O
and	O	O
see	O	O
how	O	O
they	O	O
were	O	O
built	O	O
.	O	O
I	O	O
recently	O	O
wrote	O	O
an	O	O
article	O	O
titled	O	O
How	O	O
to	O	O
teach	O	O
your	O	O
girlfriend	O	O
programming	O	O
,	O	O
it	O	O
has	O	O
little	O	O
to	O	O
do	O	O
with	O	O
girlfriends	O	O
and	O	O
everything	O	O
about	O	O
teaching	O	O
something	O	O
technical	O	O
to	O	O
someone	O	O
that	O	O
does	O	O
not	O	O
understand	O	O
it	O	O
.	O	O
I	O	O
'm	O	O
told	O	O
it	O	O
's	O	O
also	O	O
funny	O	O
.	O	O
It	O	O
really	O	O
depends	O	O
on	O	O
your	O	O
brother	O	O
's	O	O
learning	O	O
style	O	O
.	O	O
Many	O	O
people	O	O
learn	O	O
faster	O	O
by	O	O
getting	O	O
their	O	O
hands	O	O
dirty	O	O
just	O	O
getting	O	O
into	O	O
it	O	O
,	O	O
crystallising	O	O
the	O	O
concepts	O	O
and	O	O
the	O	O
big	O	O
picture	O	O
as	O	O
they	O	O
progress	O	O
and	O	O
build	O	O
their	O	O
knowledge	O	O
.	O	O
Me	O	O
,	O	O
I	O	O
prefer	O	O
to	O	O
start	O	O
with	O	O
the	O	O
big	O	O
picture	O	O
and	O	O
drill	O	O
down	O	O
into	O	O
the	O	O
nitty-gritty	O	O
.	O	O
The	O	O
first	O	O
thing	O	O
I	O	O
wanted	O	O
to	O	O
know	O	O
was	O	O
how	O	O
it	O	O
all	O	O
fits	O	O
together	O	O
then	O	O
all	O	O
that	O	O
Object-oriented	O	O
gobbledygook	O	O
,	O	O
then	O	O
about	O	O
classes	O	O
instances	O	O
and	O	O
so-on	O	O
.	O	O
I	O	O
like	O	O
to	O	O
know	O	O
the	O	O
underlying	O	O
concepts	O	O
and	O	O
a	O	O
bit	O	O
of	O	O
theory	O	O
before	O	O
I	O	O
learn	O	O
the	O	O
syntax	O	O
.	O	O
I	O	O
had	O	O
a	O	O
bit	O	O
of	O	O
an	O	O
advantage	O	O
because	O	O
I	O	O
wrote	O	O
some	O	O
games	O	O
in	O	O
BASIC	B-API	O
20	O	O
years	O	O
ago	O	O
but	O	O
nothing	O	O
much	O	O
since	O	O
.	O	O
Perhaps	O	O
it	O	O
is	O	O
useful	O	O
to	O	O
shadow	O	O
a	O	O
production	O	O
process	O	O
by	O	O
starting	O	O
with	O	O
an	O	O
overall	O	O
mission	O	O
statement	O	O
,	O	O
then	O	O
a	O	O
plan	O	O
and/or	O	O
flowchart	O	O
,	O	O
then	O	O
elaborate	O	O
into	O	O
some	O	O
pseudo	O	O
code	O	O
(	O	O
leaning	O	O
towards	O	O
the	O	O
syntax	O	O
you	O	O
will	O	O
ultimately	O	O
use	O	O
)	O	O
before	O	O
actually	O	O
writing	O	O
the	O	O
code	O	O
.	O	O
The	O	O
golden	O	O
rule	O	O
here	O	O
is	O	O
to	O	O
suss	O	O
out	O	O
your	O	O
student	O	O
's	O	O
leaning	O	O
style	O	O
.	O	O
Try	O	O
Ruby	B-API	O
(	O	O
In	O	O
Your	O	O
Browser	O	O
)	O	O
I	O	O
agree	O	O
with	O	O
Leac	O	O
.	O	O
I	O	O
actually	O	O
play	O	O
with	O	O
Scratch	B-API	O
sometimes	O	O
if	O	O
I	O	O
'm	O	O
bored	O	O
.	O	O
It	O	O
's	O	O
a	O	O
pretty	O	O
fun	O	O
visual	O	O
way	O	O
of	O	O
looking	O	O
at	O	O
code	O	O
.	O	O
How	O	O
it	O	O
works	O	O
is	O	O
,	O	O
they	O	O
give	O	O
you	O	O
a	O	O
bunch	O	O
of	O	O
``	O	O
blocks	O	O
''	O	O
(	O	O
these	O	O
look	O	O
like	O	O
legos	O	O
)	O	O
which	O	O
you	O	O
can	O	O
stack	O	O
.	O	O
And	O	O
by	O	O
stacking	O	O
these	O	O
blocks	O	O
,	O	O
and	O	O
interacting	O	O
with	O	O
the	O	O
canvas	O	O
(	O	O
where	O	O
you	O	O
put	O	O
your	O	O
sprites	O	O
,	O	O
graphics	O	O
)	O	O
,	O	O
you	O	O
can	O	O
create	O	O
games	O	O
,	O	O
movies	O	O
,	O	O
slideshows	O	O
...	O	O
it	O	O
's	O	O
really	O	O
interesting	O	O
.	O	O
When	O	O
it	O	O
's	O	O
complete	O	O
you	O	O
can	O	O
upload	O	O
it	O	O
right	O	O
to	O	O
the	O	O
Scratch	O	O
websites	O	O
,	O	O
which	O	O
is	O	O
a	O	O
youtube-ish	O	O
portal	O	O
for	O	O
Scratch	O	O
applications	O	O
.	O	O
Not	O	O
only	O	O
that	O	O
,	O	O
but	O	O
you	O	O
can	O	O
download	O	O
any	O	O
submission	O	O
on	O	O
the	O	O
website	O	O
,	O	O
and	O	O
learn	O	O
from	O	O
or	O	O
extend	O	O
other	O	O
Scratch	B-API	O
applications	O	O
.	O	O
This	O	O
is	O	O
a	O	O
fantastic	O	O
book	O	O
which	O	O
my	O	O
little	O	O
brothers	O	O
used	O	O
to	O	O
learn	O	O
:	O	O
http	O	O
:	O	O
//pine.fm/LearnToProgram/	O	O
Of	O	O
course	O	O
,	O	O
the	O	O
most	O	O
important	O	O
thing	O	O
is	O	O
to	O	O
start	O	O
on	O	O
a	O	O
real	O	O
,	O	O
useful	O	O
program	O	O
of	O	O
some	O	O
kind	O	O
IMMEDIATELY	O	O
after	O	O
finishing	O	O
the	O	O
book	O	O
.	O	O
I	O	O
recommend	O	O
starting	O	O
them	O	O
off	O	O
with	O	O
C/C++	O	O
.	O	O
I	O	O
find	O	O
that	O	O
it	O	O
is	O	O
a	O	O
good	O	O
foundation	O	O
for	O	O
just	O	O
about	O	O
every	O	O
other	O	O
language	O	O
.	O	O
Also	O	O
,	O	O
the	O	O
different	O	O
versions	O	O
of	O	O
BASIC	O	O
can	O	O
be	O	O
pretty	O	O
dodgy	O	O
,	O	O
at	O	O
best	O	O
,	O	O
and	O	O
have	O	O
no	O	O
real	O	O
correlation	O	O
to	O	O
actual	O	O
programming	O	O
.	O	O
I	O	O
think	O	O
learning	O	O
to	O	O
program	O	O
because	O	O
you	O	O
want	O	O
to	O	O
learn	O	O
to	O	O
program	O	O
will	O	O
never	O	O
be	O	O
as	O	O
good	O	O
as	O	O
learning	O	O
to	O	O
program	O	O
because	O	O
you	O	O
want	O	O
to	O	O
DO	O	O
something	O	O
.	O	O
If	O	O
you	O	O
can	O	O
find	O	O
something	O	O
that	O	O
your	O	O
brother	O	O
is	O	O
interested	O	O
in	O	O
making	O	O
work	O	O
because	O	O
he	O	O
wants	O	O
to	O	O
make	O	O
it	O	O
work	O	O
,	O	O
you	O	O
can	O	O
just	O	O
leave	O	O
him	O	O
with	O	O
Google	O	O
and	O	O
he	O	O
'll	O	O
do	O	O
it	O	O
.	O	O
And	O	O
he	O	O
'll	O	O
have	O	O
you	O	O
around	O	O
to	O	O
check	O	O
he	O	O
's	O	O
going	O	O
along	O	O
the	O	O
right	O	O
path	O	O
.	O	O
I	O	O
think	O	O
one	O	O
of	O	O
the	O	O
biggest	O	O
problems	O	O
with	O	O
teaching	O	O
programming	O	O
in	O	O
the	O	O
abstract	O	O
is	O	O
that	O	O
it	O	O
's	O	O
not	O	O
got	O	O
a	O	O
real-world	O	O
context	O	O
that	O	O
the	O	O
learner	O	O
can	O	O
get	O	O
emotionally	O	O
invested	O	O
in	O	O
.	O	O
Programming	O	O
is	O	O
hard	O	O
,	O	O
and	O	O
there	O	O
has	O	O
to	O	O
be	O	O
some	O	O
real	O	O
payoff	O	O
to	O	O
make	O	O
it	O	O
worth	O	O
the	O	O
effort	O	O
of	O	O
doing	O	O
it	O	O
.	O	O
In	O	O
my	O	O
case	O	O
,	O	O
I	O	O
'd	O	O
done	O	O
computer	O	O
science	O	O
at	O	O
uni	O	O
,	O	O
learned	O	O
Pascal	O	O
and	O	O
COBOL	O	O
there	O	O
,	O	O
and	O	O
learned	O	O
BASIC	B-API	O
at	O	O
home	O	O
before	O	O
that	O	O
,	O	O
but	O	O
I	O	O
never	O	O
really	O	O
got	O	O
anywhere	O	O
with	O	O
it	O	O
until	O	O
I	O	O
became	O	O
a	O	O
self-employed	O	O
web	O	O
designer	O	O
back	O	O
in	O	O
the	O	O
90s	O	O
and	O	O
my	O	O
clients	O	O
needed	O	O
functionality	O	O
on	O	O
their	O	O
web	O	O
sites	O	O
,	O	O
and	O	O
were	O	O
willing	O	O
to	O	O
pay	O	O
about	O	O
10x	O	O
more	O	O
for	O	O
functionality	O	O
than	O	O
for	O	O
design	O	O
.	O	O
Putting	O	O
food	O	O
on	O	O
the	O	O
table	O	O
is	O	O
a	O	O
hell	O	O
of	O	O
a	O	O
motivator	O	O
!	O	O
So	O	O
I	O	O
learned	O	O
Perl	O	O
,	O	O
then	O	O
ASP/VBScript	O	O
,	O	O
then	O	O
JavaScript	B-API	O
,	O	O
then	O	O
Flash/ActionScript	O	O
then	O	O
PHP	B-API	O
-	O	O
all	O	O
in	O	O
order	O	O
to	O	O
make	O	O
the	O	O
stuff	O	O
I	O	O
wanted	O	O
to	O	O
happen	O	O
.	O	O
How	O	O
to	O	O
Design	O	O
Programs	O	O
Structure	O	O
and	O	O
Interpretation	O	O
of	O	O
Computer	O	O
Programs	O	O
.	O	O
Videos	O	O
lectures	O	O
at	O	O
http	O	O
:	O	O
//www.swiss.ai.mit.edu/classes/6.001/abelson-sussman-lectures/	O	O
I	O	O
think	O	O
that	O	O
once	O	O
he	O	O
has	O	O
the	O	O
basics	O	O
(	O	O
variables	O	O
,	O	O
loops	O	O
,	O	O
etc	O	O
)	O	O
down	O	O
you	O	O
should	O	O
try	O	O
to	O	O
help	O	O
him	O	O
find	O	O
something	O	O
specific	O	O
that	O	O
he	O	O
is	O	O
interested	O	O
in	O	O
and	O	O
help	O	O
him	O	O
learn	O	O
the	O	O
necessities	O	O
to	O	O
make	O	O
it	O	O
happen	O	O
.	O	O
I	O	O
know	O	O
that	O	O
I	O	O
am	O	O
much	O	O
more	O	O
inclined	O	O
and	O	O
motivated	O	O
to	O	O
do	O	O
something	O	O
if	O	O
it	O	O
's	O	O
of	O	O
interest	O	O
to	O	O
me	O	O
.	O	O
Also	O	O
,	O	O
make	O	O
sure	O	O
to	O	O
let	O	O
him	O	O
struggle	O	O
though	O	O
some	O	O
of	O	O
the	O	O
tougher	O	O
problems	O	O
,	O	O
nothing	O	O
is	O	O
more	O	O
satisfying	O	O
than	O	O
the	O	O
moment	O	O
you	O	O
figure	O	O
it	O	O
out	O	O
on	O	O
your	O	O
own	O	O
.	O	O
I	O	O
'd	O	O
just	O	O
let	O	O
him	O	O
write	O	O
tons	O	O
of	O	O
code	O	O
.	O	O
Let	O	O
him	O	O
drive	O	O
in	O	O
everything	O	O
you	O	O
guys	O	O
do	O	O
,	O	O
and	O	O
just	O	O
be	O	O
available	O	O
to	O	O
answer	O	O
questions	O	O
.	O	O
Believe	O	O
it	O	O
or	O	O
not	O	O
,	O	O
after	O	O
a	O	O
few	O	O
months	O	O
of	O	O
writings	O	O
tons	O	O
of	O	O
crappy	O	O
code	O	O
,	O	O
he	O	O
'll	O	O
start	O	O
to	O	O
get	O	O
the	O	O
idea	O	O
and	O	O
start	O	O
writing	O	O
better	O	O
programs	O	O
.	O	O
At	O	O
that	O	O
point	O	O
,	O	O
you	O	O
can	O	O
get	O	O
bogged	O	O
down	O	O
in	O	O
details	O	O
(	O	O
memory	O	O
,	O	O
etc	O	O
)	O	O
,	O	O
and	O	O
also	O	O
talk	O	O
about	O	O
general	O	O
design	O	O
principles	O	O
.	O	O
I	O	O
've	O	O
heard	O	O
that	O	O
what	O	O
separates	O	O
the	O	O
great	O	O
artists	O	O
from	O	O
the	O	O
mediocre	O	O
ones	O	O
,	O	O
is	O	O
that	O	O
every	O	O
time	O	O
they	O	O
practice	O	O
,	O	O
they	O	O
improve	O	O
on	O	O
something	O	O
,	O	O
no	O	O
matter	O	O
how	O	O
small	O	O
.	O	O
Let	O	O
your	O	O
brother	O	O
practice	O	O
,	O	O
and	O	O
he	O	O
'll	O	O
improve	O	O
every	O	O
time	O	O
he	O	O
sits	O	O
down	O	O
at	O	O
the	O	O
keyboard	O	O
.	O	O
Edit	O	O
:	O	O
[	O	O
Justin	O	O
Standard	O	O
]	O	O
Esteban	O	O
,	O	O
this	O	O
reminds	O	O
me	O	O
of	O	O
a	O	O
recent	O	O
coding	O	O
horror	O	O
post	O	O
,	O	O
and	O	O
I	O	O
do	O	O
think	O	O
you	O	O
are	O	O
right	O	O
.	O	O
But	O	O
I	O	O
think	O	O
its	O	O
still	O	O
worthwhile	O	O
to	O	O
find	O	O
methods	O	O
to	O	O
guide	O	O
his	O	O
practice	O	O
.	O	O
No	O	O
question	O	O
,	O	O
I	O	O
want	O	O
him	O	O
writing	O	O
as	O	O
much	O	O
code	O	O
as	O	O
he	O	O
knows	O	O
how	O	O
to	O	O
do	O	O
.	O	O
Thats	O	O
one	O	O
reason	O	O
I	O	O
'm	O	O
asking	O	O
for	O	O
sample	O	O
projects	O	O
.	O	O
I	O	O
was	O	O
taught	O	O
by	O	O
learning	O	O
how	O	O
to	O	O
solve	O	O
problems	O	O
in	O	O
a	O	O
language	O	O
agnostic	O	O
way	O	O
using	O	O
flowcharts	O	O
and	O	O
PDL	B-API	O
(	O	O
Program	O	O
Design	O	O
Language	O	O
)	O	O
.	O	O
After	O	O
a	O	O
couple	O	O
weeks	O	O
of	O	O
that	O	O
,	O	O
I	O	O
learned	O	O
to	O	O
convert	O	O
the	O	O
PDL	B-API	O
I	O	O
had	O	O
written	O	O
to	O	O
a	O	O
language	O	O
.	O	O
I	O	O
am	O	O
glad	O	O
I	O	O
learned	O	O
that	O	O
way	O	O
because	O	O
I	O	O
have	O	O
spent	O	O
the	O	O
majority	O	O
of	O	O
my	O	O
years	O	O
programming	O	O
,	O	O
solving	O	O
problems	O	O
without	O	O
being	O	O
tied	O	O
to	O	O
a	O	O
language	O	O
.	O	O
What	O	O
language	O	O
I	O	O
use	O	O
has	O	O
always	O	O
been	O	O
an	O	O
implementation	O	O
detail	O	O
and	O	O
not	O	O
part	O	O
of	O	O
the	O	O
design	O	O
.	O	O
Having	O	O
to	O	O
solve	O	O
the	O	O
problem	O	O
by	O	O
breaking	O	O
it	O	O
down	O	O
into	O	O
it	O	O
's	O	O
basic	O	O
steps	O	O
is	O	O
a	O	O
key	O	O
skill	O	O
.	O	O
I	O	O
think	O	O
it	O	O
is	O	O
one	O	O
of	O	O
the	O	O
things	O	O
that	O	O
separates	O	O
those	O	O
that	O	O
can	O	O
program	O	O
from	O	O
those	O	O
that	O	O
ca	O	O
n't	O	O
.	O	O
As	O	O
far	O	O
as	O	O
how	O	O
you	O	O
tackle	O	O
the	O	O
order	O	O
of	O	O
concepts	O	O
of	O	O
a	O	O
language	O	O
I	O	O
believe	O	O
the	O	O
easiest	O	O
way	O	O
is	O	O
to	O	O
decide	O	O
that	O	O
is	O	O
to	O	O
have	O	O
a	O	O
project	O	O
in	O	O
mind	O	O
and	O	O
tackle	O	O
the	O	O
concepts	O	O
as	O	O
they	O	O
are	O	O
needed	O	O
.	O	O
This	O	O
lets	O	O
you	O	O
apply	O	O
them	O	O
as	O	O
they	O	O
are	O	O
needed	O	O
on	O	O
something	O	O
that	O	O
you	O	O
are	O	O
interested	O	O
in	O	O
doing	O	O
.	O	O
When	O	O
learning	O	O
a	O	O
language	O	O
it	O	O
is	O	O
good	O	O
to	O	O
have	O	O
several	O	O
simple	O	O
projects	O	O
in	O	O
mind	O	O
and	O	O
a	O	O
few	O	O
with	O	O
progressive	O	O
complexity	O	O
.	O	O
Deciding	O	O
on	O	O
those	O	O
will	O	O
help	O	O
you	O	O
map	O	O
out	O	O
the	O	O
concepts	O	O
that	O	O
are	O	O
needed	O	O
and	O	O
their	O	O
order	O	O
.	O	O
With	O	O
the	O	O
``	O	O
Built	O	O
in	O	O
''	O	O
stuff	O	O
,	O	O
you	O	O
ca	O	O
n't	O	O
,	O	O
as	O	O
using	O	O
1.0	O	O
.	O	O
*	O	O
or	O	O
1.0.0	O	O
.	O	O
*	O	O
will	O	O
replace	O	O
the	O	O
revision	O	O
and	O	O
build	O	O
numbers	O	O
with	O	O
a	O	O
coded	O	O
date/timestamp	O	O
,	O	O
which	O	O
is	O	O
usually	O	O
also	O	O
a	O	O
good	O	O
way	O	O
.	O	O
For	O	O
more	O	O
info	O	O
,	O	O
see	O	O
the	O	O
Assembly	O	O
Linker	O	O
Documentation	O	O
in	O	O
the	O	O
/v	O	O
tag	O	O
.	O	O
As	O	O
for	O	O
automatically	O	O
incrementing	O	O
numbers	O	O
,	O	O
use	O	O
the	O	O
AssemblyInfo	B-API	O
Task	I-API	O
:	O	O
AssemblyInfo	B-API	O
Task	I-API	O
This	O	O
can	O	O
be	O	O
configured	O	O
to	O	O
automatically	O	O
increment	O	O
the	O	O
build	O	O
number	O	O
.	O	O
There	O	O
are	O	O
2	O	O
Gotchas	O	O
:	O	O
Each	O	O
of	O	O
the	O	O
4	O	O
numbers	O	O
in	O	O
the	O	O
Version	O	O
string	O	O
is	O	O
limited	O	O
to	O	O
65535	O	O
.	O	O
This	O	O
is	O	O
a	O	O
Windows	O	O
Limitation	O	O
and	O	O
unlikely	O	O
to	O	O
get	O	O
fixed	O	O
.	O	O
Why	O	O
are	O	O
build	O	O
numbers	O	O
limited	O	O
to	O	O
65535	O	O
?	O	O
Using	O	O
with	O	O
with	O	O
Subversion	O	O
requires	O	O
a	O	O
small	O	O
change	O	O
:	O	O
Using	O	O
MSBuild	O	O
to	O	O
generate	O	O
assembly	O	O
version	O	O
info	O	O
at	O	O
build	O	O
time	O	O
(	O	O
including	O	O
SubVersion	O	O
fix	O	O
)	O	O
Retrieving	O	O
the	O	O
Version	O	O
number	O	O
is	O	O
then	O	O
quite	O	O
easy	O	O
:	O	O
Version	B-API	O
v	O	O
=	O	O
Assembly.GetExecutingAssembly	B-API	B-API
(	I-API	I-API
)	I-API	I-API
.GetName	I-API	I-API
(	I-API	I-API
)	I-API	I-API
.Version	O	O
;	O	O
string	O	O
About	O	O
=	O	O
string.Format	B-API	B-API
(	O	O
CultureInfo.InvariantCulture	O	B-API
,	O	O
@	O	O
''	O	O
YourApp	O	O
Version	O	O
{	O	O
0	O	O
}	O	O
.	O	O
{	O	O
1	O	O
}	O	O
.	O	O
{	O	O
2	O	O
}	O	O
(	O	O
r	O	O
{	O	O
3	O	O
}	O	O
)	O	O
''	O	O
,	O	O
v.Major	O	O
,	O	O
v.Minor	O	O
,	O	O
v.Build	O	O
,	O	O
v.Revision	O	O
)	O	O
;	O	O
And	O	O
,	O	O
to	O	O
clarify	O	O
:	O	O
In	O	O
.net	O	O
or	O	O
at	O	O
least	O	O
in	O	O
C	B-API	O
#	I-API	O
,	O	O
the	O	O
build	O	O
is	O	O
actually	O	O
the	O	O
THIRD	O	O
number	O	O
,	O	O
not	O	O
the	O	O
fourth	O	O
one	O	O
as	O	O
some	O	O
people	O	O
(	O	O
for	O	O
example	O	O
Delphi	O	O
Developers	O	O
who	O	O
are	O	O
used	O	O
to	O	O
Major.Minor.Release.Build	B-API	B-API
)	O	O
might	O	O
expect	O	O
.	O	O
In	O	O
.net	O	O
,	O	O
it	O	O
's	O	O
Major.Minor.Build.Revision	B-API	O
.	O	O
What	O	O
source	O	O
control	O	O
system	O	O
are	O	O
you	O	O
using	O	O
?	O	O
Almost	O	O
all	O	O
of	O	O
them	O	O
have	O	O
some	O	O
form	O	O
of	O	O
$	O	O
Id	O	O
$	O	O
tag	O	O
that	O	O
gets	O	O
expanded	O	O
when	O	O
the	O	O
file	O	O
is	O	O
checked	O	O
in	O	O
.	O	O
I	O	O
usually	O	O
use	O	O
some	O	O
form	O	O
of	O	O
hackery	O	O
to	O	O
display	O	O
this	O	O
as	O	O
the	O	O
version	O	O
number	O	O
.	O	O
The	O	O
other	O	O
alternative	O	O
is	O	O
use	O	O
to	O	O
use	O	O
the	O	O
date	O	O
as	O	O
the	O	O
build	O	O
number	O	O
:	O	O
080803-1448	O	O
Some	O	O
time	O	O
ago	O	O
I	O	O
wrote	O	O
a	O	O
quick	O	O
and	O	O
dirty	O	O
exe	O	O
that	O	O
would	O	O
update	O	O
the	O	O
version	O	O
#	O	O
's	O	O
in	O	O
an	O	O
assemblyinfo	O	O
.	O	O
{	O	O
cs/vb	O	O
}	O	O
-	O	O
I	O	O
also	O	O
have	O	O
used	O	O
rxfind.exe	O	O
(	O	O
a	O	O
simple	O	O
and	O	O
powerful	O	O
regex-based	O	O
search	O	O
replace	O	O
tool	O	O
)	O	O
to	O	O
do	O	O
the	O	O
update	O	O
from	O	O
a	O	O
command	O	O
line	O	O
as	O	O
part	O	O
of	O	O
the	O	O
build	O	O
process	O	O
.	O	O
A	O	O
couple	O	O
of	O	O
other	O	O
helpfule	O	O
hints	O	O
:	O	O
separate	O	O
the	O	O
assemblyinfo	O	O
into	O	O
product	O	O
parts	O	O
(	O	O
company	O	O
name	O	O
,	O	O
version	O	O
,	O	O
etc	O	O
.	O	O
)	O	O
and	O	O
assembly	O	O
specific	O	O
parts	O	O
(	O	O
assembly	O	O
name	O	O
etc.	O	O
)	O	O
.	O	O
See	O	O
here	O	O
Also	O	O
-	O	O
i	O	O
use	O	O
subversion	O	O
,	O	O
so	O	O
I	O	O
found	O	O
it	O	O
helpful	O	O
to	O	O
set	O	O
the	O	O
build	O	O
number	O	O
to	O	O
subversion	O	O
revision	O	O
number	O	O
thereby	O	O
making	O	O
it	O	O
really	O	O
easy	O	O
to	O	O
always	O	O
get	O	O
back	O	O
to	O	O
the	O	O
codebase	O	O
that	O	O
generated	O	O
the	O	O
assembly	O	O
(	O	O
e.g	O	O
.	O	O
1.4.100.1502	O	O
was	O	O
built	O	O
from	O	O
revision	O	O
1502	O	O
)	O	O
.	O	O
You	O	O
can	O	O
use	O	O
ImageMagick	B-API	O
's	O	O
convert	O	O
utility	O	O
for	O	O
this	O	O
,	O	O
see	O	O
some	O	O
examples	O	O
in	O	O
http	O	O
:	O	O
//studio.imagemagick.org/pipermail/magick-users/2002-May/002636.html	O	O
:	O	O
Convert	O	O
taxes.pdf	O	O
taxes.jpg	O	O
Will	O	O
convert	O	O
a	O	O
two	O	O
page	O	O
PDF	O	O
file	O	O
into	O	O
[	O	O
2	O	O
]	O	O
jpeg	O	O
files	O	O
:	O	O
taxes.jpg.0	O	O
,	O	O
taxes.jpg.1	O	O
I	O	O
can	O	O
also	O	O
convert	O	O
these	O	O
JPEGS	O	O
to	O	O
a	O	O
thumbnail	O	O
as	O	O
follows	O	O
:	O	O
convert	O	O
-size	O	O
120x120	O	O
taxes.jpg.0	O	O
-geometry	O	O
120x120	O	O
+profile	O	O
'*	O	O
'	O	O
thumbnail.jpg	O	O
I	O	O
can	O	O
even	O	O
convert	O	O
the	O	O
PDF	O	O
directly	O	O
to	O	O
a	O	O
jpeg	O	O
thumbnail	O	O
as	O	O
follows	O	O
:	O	O
convert	O	O
-size	O	O
120x120	O	O
taxes.pdf	O	O
-geometry	O	O
120x120	O	O
+profile	O	O
'*	O	O
'	O	O
thumbnail.jpg	O	O
This	O	O
will	O	O
result	O	O
in	O	O
a	O	O
thumbnail.jpg.0	O	O
and	O	O
thumbnail.jpg.1	O	O
for	O	O
the	O	O
two	O	O
pages	O	O
.	O	O
While	O	O
I	O	O
have	O	O
n't	O	O
used	O	O
a	O	O
flash	O	O
object	O	O
inside	O	O
a	O	O
windows	O	O
form	O	O
application	O	O
myself	O	O
,	O	O
I	O	O
do	O	O
know	O	O
that	O	O
it	O	O
's	O	O
possible	O	O
.	O	O
In	O	O
Visual	B-API	O
studio	I-API	O
on	O	O
your	O	O
toolbox	O	O
,	O	O
choose	O	O
to	O	O
add	O	O
a	O	O
new	O	O
component	O	O
.	O	O
Then	O	O
in	O	O
the	O	O
new	O	O
window	O	O
that	O	O
appears	O	O
choose	O	O
the	O	O
``	O	O
COM	O	O
Components	O	O
''	O	O
tab	O	O
to	O	O
get	O	O
a	O	O
list	O	O
in	O	O
which	O	O
you	O	O
can	O	O
find	O	O
the	O	O
``	O	O
Shockwave	B-API	O
Flash	I-API	O
Object	I-API	O
''	O	O
Once	O	O
added	O	O
to	O	O
the	O	O
toolbox	O	O
,	O	O
simply	O	O
use	O	O
the	O	O
control	O	O
as	O	O
you	O	O
would	O	O
use	O	O
any	O	O
other	O	O
``	O	O
standard	O	O
''	O	O
control	O	O
from	O	O
visual	O	O
studio	O	O
.	O	O
three	O	O
simple	O	O
commands	O	O
are	O	O
available	O	O
to	O	O
interact	O	O
with	O	O
the	O	O
control	O	O
:	O	O
AxShockwaveFlash1.Stop	B-API	B-API
(	I-API	I-API
)	I-API	I-API
AxShockwaveFlash1.Movie	O	O
=	O	O
FilePath	O	O
''	O	O
\FileName.swf	O	O
''	O	O
AxShockwaveFlash1.Play	B-API	B-API
(	I-API	I-API
)	I-API	I-API
which	O	O
,	O	O
I	O	O
think	O	O
,	O	O
are	O	O
all	O	O
self	O	O
explanatory	O	O
.	O	O
It	O	O
would	O	O
be	O	O
great	O	O
to	O	O
be	O	O
able	O	O
to	O	O
load	O	O
the	O	O
flash	O	O
content	O	O
from	O	O
a	O	O
stream	O	O
of	O	O
sorts	O	O
rather	O	O
than	O	O
a	O	O
file	O	O
on	O	O
disk	O	O
.	O	O
I	O	O
just	O	O
saw	O	O
you	O	O
are	O	O
also	O	O
looking	O	O
for	O	O
a	O	O
means	O	O
to	O	O
load	O	O
the	O	O
content	O	O
from	O	O
a	O	O
stream	O	O
,	O	O
and	O	O
because	O	O
I	O	O
'm	O	O
not	O	O
really	O	O
sure	O	O
that	O	O
is	O	O
possible	O	O
with	O	O
the	O	O
shockwave	O	O
flash	O	O
object	O	O
I	O	O
will	O	O
give	O	O
you	O	O
another	O	O
option	O	O
(	O	O
two	O	O
actually	O	O
)	O	O
.	O	O
the	O	O
first	O	O
is	O	O
the	O	O
one	O	O
I	O	O
would	O	O
advise	O	O
you	O	O
to	O	O
use	O	O
only	O	O
when	O	O
necessary	O	O
,	O	O
as	O	O
it	O	O
uses	O	O
the	O	O
full	O	O
blown	O	O
``	O	O
webbrowser	O	O
component	O	O
''	O	O
(	O	O
also	O	O
available	O	O
as	O	O
an	O	O
extra	O	O
toolbox	O	O
item	O	O
)	O	O
,	O	O
which	O	O
is	O	O
like	O	O
trying	O	O
to	O	O
shoot	O	O
a	O	O
fly	O	O
with	O	O
a	O	O
bazooka	O	O
.	O	O
of	O	O
course	O	O
it	O	O
will	O	O
work	O	O
,	O	O
as	O	O
the	O	O
control	O	O
will	O	O
act	O	O
as	O	O
a	O	O
real	O	O
browser	O	O
window	O	O
(	O	O
actually	O	O
the	O	O
internet	O	O
explorer	O	O
browser	O	O
)	O	O
,	O	O
but	O	O
its	O	O
not	O	O
really	O	O
meant	O	O
to	O	O
be	O	O
used	O	O
in	O	O
the	O	O
way	O	O
you	O	O
need	O	O
it	O	O
.	O	O
the	O	O
second	O	O
option	O	O
is	O	O
to	O	O
use	O	O
something	O	O
I	O	O
just	O	O
discovered	O	O
while	O	O
looking	O	O
for	O	O
more	O	O
information	O	O
about	O	O
playing	O	O
flash	O	O
content	O	O
inside	O	O
a	O	O
windows	O	O
form	O	O
.	O	O
F-IN-BOX	O	O
is	O	O
a	O	O
commercial	O	O
solution	O	O
that	O	O
will	O	O
also	O	O
play	O	O
content	O	O
from	O	O
a	O	O
given	O	O
website	O	O
URL	O	O
.	O	O
(	O	O
The	O	O
link	O	O
provided	O	O
will	O	O
direct	O	O
you	O	O
to	O	O
the	O	O
.NET	B-API	O
code	O	O
you	O	O
have	O	O
to	O	O
use	O	O
)	O	O
.	O	O
Sven	O	O
,	O	O
you	O	O
reached	O	O
the	O	O
same	O	O
conclusion	O	O
as	O	O
I	O	O
did	O	O
:	O	O
I	O	O
found	O	O
the	O	O
Shockwave	B-API	O
Flash	I-API	O
Object	I-API	O
,	O	O
all	O	O
be	O	O
it	O	O
from	O	O
a	O	O
slightly	O	O
different	O	O
route	O	O
,	O	O
but	O	O
was	O	O
stumped	O	O
on	O	O
how	O	O
to	O	O
load	O	O
the	O	O
files	O	O
from	O	O
somewhere	O	O
other	O	O
than	O	O
file	O	O
on	O	O
disk/URL	O	O
.	O	O
The	O	O
F-IN-BOX	O	O
,	O	O
although	O	O
just	O	O
a	O	O
wrapper	O	O
of	O	O
the	O	O
Shockwave	B-API	O
Flash	I-API	O
Object	I-API	O
seems	O	O
to	O	O
provide	O	O
much	O	O
more	O	O
functionality	O	O
,	O	O
which	O	O
may	O	O
just	O	O
help	O	O
me	O	O
!	O	O
Shooting	O	O
flys	O	O
with	O	O
bazookas	O	O
may	O	O
be	O	O
fun	O	O
,	O	O
but	O	O
an	O	O
embeded	O	O
web	O	O
brower	O	O
is	O	O
not	O	O
the	O	O
path	O	O
that	O	O
I	O	O
am	O	O
looking	O	O
for	O	O
.	O	O
:	O	O
)	O	O
There	O	O
was	O	O
a	O	O
link	O	O
on	O	O
Adobe	O	O
's	O	O
site	O	O
that	O	O
talked	O	O
about	O	O
``	O	O
Embedding	O	O
and	O	O
Communicating	O	O
with	O	O
the	O	O
Macromedia	O	O
Flash	O	O
Player	O	O
in	O	O
C	O	O
#	O	O
Windows	O	O
Applications	O	O
''	O	O
but	O	O
they	O	O
seem	O	O
to	O	O
have	O	O
removed	O	O
it	O	O
:	O	O
(	O	O
One	O	O
implementation	O	O
of	O	O
this	O	O
problem	O	O
is	O	O
to	O	O
attempt	O	O
to	O	O
call	O	O
the	O	O
parameter-less	O	O
constructor	O	O
of	O	O
the	O	O
Type	O	O
:	O	O
public	O	O
static	O	O
object	O	O
GetNewObject	B-API	O
(	I-API	O
Type	I-API	O
t	I-API	O
)	I-API	O
{	O	O
try	O	O
{	O	O
return	O	O
t.GetConstructor	B-API	O
(	I-API	O
new	I-API	O
Type	I-API	O
[	I-API	O
]	I-API	O
{	I-API	O
}	I-API	O
)	I-API	O
.Invoke	I-API	O
(	I-API	O
new	I-API	O
object	I-API	O
[	I-API	O
]	I-API	O
{	I-API	O
}	I-API	O
)	I-API	O
;	O	O
}	O	O
catch	O	O
{	O	O
return	O	O
null	O	O
;	O	O
}	O	O
}	O	O
Here	O	O
is	O	O
the	O	O
same	O	O
approach	O	O
,	O	O
contained	O	O
in	O	O
a	O	O
generic	O	O
method	O	O
:	O	O
public	O	O
static	O	O
T	O	O
GetNewObjectT	B-API	O
(	I-API	O
)	I-API	O
{	O	O
try	O	O
{	O	O
return	O	O
(	O	O
T	O	O
)	O	O
typeof	B-API	O
(	I-API	O
T	I-API	O
)	I-API	O
.GetConstructor	B-API	O
(	I-API	O
new	I-API	O
Type	I-API	O
[	I-API	O
]	I-API	O
{	I-API	O
}	I-API	O
)	I-API	O
.Invoke	B-API	O
(	I-API	O
new	I-API	O
object	I-API	O
[	I-API	O
]	I-API	O
{	I-API	O
}	I-API	O
)	I-API	O
;	O	O
}	O	O
catch	O	O
{	O	O
return	O	O
default	B-API	O
(	I-API	O
T	I-API	O
)	I-API	O
;	O	O
}	O	O
}	O	O
The	O	O
class	O	O
within	O	O
the	O	O
root	O	O
namespace	O	O
is	O	O
pretty	O	O
powerful	O	O
.	O	O
There	O	O
are	O	O
a	O	O
lot	O	O
of	O	O
overloads	O	O
for	O	O
passing	O	O
parameters	O	O
to	O	O
the	O	O
constructor	O	O
and	O	O
such	O	O
.	O	O
Check	O	O
out	O	O
the	O	O
documentation	O	O
at	O	O
:	O	O
http	O	O
:	O	O
//msdn.microsoft.com/en-us/library/system.activator.createinstance.aspx	O	O
Here	O	O
are	O	O
some	O	O
simple	O	O
examples	O	O
:	O	O
ObjectType	O	O
instance	O	O
=	O	O
(	O	O
ObjectType	O	O
)	O	O
Activator.CreateInstance	B-API	B-API
(	I-API	I-API
objectType	I-API	I-API
)	I-API	I-API
;	O	O
ObjectType	O	O
instance	O	O
=	O	O
(	O	O
ObjectType	O	O
)	O	O
Activator.CreateInstance	B-API	B-API
(	I-API	I-API
``	I-API	I-API
MyAssembly	I-API	I-API
''	I-API	I-API
,	I-API	I-API
''	I-API	I-API
MyNamespace.ObjectType	I-API	I-API
''	I-API	I-API
)	I-API	I-API
;	O	O
open	O	O
up	O	O
a	O	O
terminal	O	O
(	O	O
Applications-Utilities-Terminal	O	O
)	O	O
and	O	O
type	O	O
this	O	O
in	O	O
:	O	O
locate	B-API	O
This	O	O
will	O	O
spit	O	O
out	O	O
every	O	O
file	O	O
that	O	O
has	O	O
the	O	O
name	O	O
you	O	O
want	O	O
.	O	O
Warning	O	O
:	O	O
there	O	O
may	O	O
be	O	O
alot	O	O
to	O	O
wade	O	O
through	O	O
.	O	O
I	O	O
have	O	O
n't	O	O
been	O	O
able	O	O
to	O	O
find	O	O
anything	O	O
that	O	O
does	O	O
this	O	O
directly	O	O
.	O	O
I	O	O
think	O	O
you	O	O
'll	O	O
have	O	O
to	O	O
iterate	O	O
through	O	O
the	O	O
various	O	O
font	O	O
folders	O	O
on	O	O
the	O	O
system	O	O
:	O	O
,	O	O
,	O	O
and	O	O
there	O	O
can	O	O
probably	O	O
be	O	O
a	O	O
user-level	O	O
directory	O	O
as	O	O
well	O	O
.	O	O
Unfortunately	O	O
the	O	O
only	O	O
API	O	O
that	O	O
is	O	O
n't	O	O
deprecated	O	O
is	O	O
located	O	O
in	O	O
the	O	O
ApplicationServices	B-API	O
framework	I-API	O
,	O	O
which	O	O
does	O	O
n't	O	O
have	O	O
a	O	O
bridge	O	O
support	O	O
file	O	O
,	O	O
and	O	O
thus	O	O
is	O	O
n't	O	O
available	O	O
in	O	O
the	O	O
bridge	O	O
.	O	O
If	O	O
you	O	O
're	O	O
wanting	O	O
to	O	O
use	O	O
ctypes	O	O
,	O	O
you	O	O
can	O	O
use	O	O
ATSFontGetFileReference	B-API	O
after	O	O
looking	O	O
up	O	O
the	O	O
ATSFontRef	B-API	O
.	O	O
Cocoa	O	O
does	O	O
n't	O	O
have	O	O
any	O	O
native	O	O
support	O	O
,	O	O
at	O	O
least	O	O
as	O	O
of	O	O
10.5	O	O
,	O	O
for	O	O
getting	O	O
the	O	O
location	O	O
of	O	O
a	O	O
font	O	O
.	O	O
Java	B-API	O
autoboxing/unboxing	O	O
does	O	O
n't	O	O
go	O	O
to	O	O
the	O	O
extent	O	O
to	O	O
allow	O	O
you	O	O
to	O	O
dereference	O	O
a	O	O
primitive	O	O
,	O	O
so	O	O
your	O	O
compiler	O	O
prevents	O	O
it	O	O
.	O	O
Your	O	O
compiler	O	O
still	O	O
knows	O	O
as	O	O
a	O	O
primitive	O	O
.	O	O
There	O	O
's	O	O
a	O	O
paper	O	O
about	O	O
this	O	O
issue	O	O
at	O	O
jcp.org	O	O
.	O	O
Autoboxing	O	O
is	O	O
mainly	O	O
useful	O	O
during	O	O
assignment	O	O
or	O	O
parameter	O	O
passing	O	O
--	O	O
allowing	O	O
you	O	O
to	O	O
pass	O	O
a	O	O
primitive	O	O
as	O	O
an	O	O
object	O	O
(	O	O
or	O	O
vice	O	O
versa	O	O
)	O	O
,	O	O
or	O	O
assign	O	O
a	O	O
primitive	O	O
to	O	O
an	O	O
object	O	O
(	O	O
or	O	O
vice	O	O
versa	O	O
)	O	O
.	O	O
So	O	O
unfortunately	O	O
,	O	O
you	O	O
would	O	O
have	O	O
to	O	O
do	O	O
it	O	O
like	O	O
this	O	O
:	O	O
(	O	O
kudos	O	O
Patrick	O	O
,	O	O
I	O	O
switched	O	O
to	O	O
your	O	O
way	O	O
)	O	O
Integer.toString	B-API	B-API
(	I-API	I-API
myInt	I-API	I-API
)	I-API	I-API
;	O	O
Ditto	O	O
on	O	O
what	O	O
Justin	O	O
said	O	O
,	O	O
but	O	O
you	O	O
should	O	O
do	O	O
this	O	O
instead	O	O
:	O	O
Integer.toString	B-API	B-API
(	I-API	I-API
myInt	I-API	I-API
)	I-API	I-API
;	O	O
It	O	O
saves	O	O
an	O	O
allocation	O	O
or	O	O
two	O	O
and	O	O
is	O	O
more	O	O
readable	O	O
.	O	O
seems	O	O
like	O	O
a	O	O
shortcoming	O	O
of	O	O
the	O	O
specification	O	O
to	O	O
me	O	O
There	O	O
are	O	O
more	O	O
shortcomings	O	O
and	O	O
this	O	O
is	O	O
a	O	O
subtle	O	O
topic	O	O
.	O	O
Check	O	O
this	O	O
out	O	O
:	O	O
public	O	O
class	O	O
methodOverloading	O	O
{	O	O
public	O	O
static	B-API	O
void	B-API	O
{	I-API	O
;	I-API	O
}	I-API	O
public	O	O
static	B-API	O
void	B-API	O
{	I-API	O
;	I-API	O
}	I-API	O
public	O	O
static	B-API	O
void	O	O
{	O	O
int	O	O
i	O	O
=	O	O
5	O	O
;	O	O
;	O	O
(	O	O
Integer	B-API	O
x	O	O
)	O	O
System.out.println	B-API	O
(	I-API	O
``	I-API	O
Integer	I-API	O
''	I-API	O
)	I-API	O
(	O	O
long	O	O
x	O	O
)	O	O
System.out.println	B-API	B-API
(	I-API	I-API
``	I-API	I-API
long	I-API	I-API
''	I-API	I-API
)	I-API	I-API
(	O	O
String	B-API	O
[	I-API	O
]	I-API	O
args	O	O
)	O	O
hello	B-API	O
(	I-API	O
i	I-API	O
)	I-API	O
Here	O	O
``	O	O
long	O	O
''	O	O
would	O	O
be	O	O
printed	O	O
(	O	O
have	O	O
n't	O	O
checked	O	O
it	O	O
myself	O	O
)	O	O
,	O	O
because	O	O
the	O	O
compiler	O	O
choses	O	O
widening	O	O
over	O	O
autoboxing	O	O
.	O	O
Be	O	O
careful	O	O
when	O	O
using	O	O
autoboxing	O	O
or	O	O
do	O	O
n't	O	O
use	O	O
it	O	O
at	O	O
all	O	O
!	O	O
That	O	O
actually	O	O
sounds	O	O
like	O	O
IIS	O	O
's	O	O
level	O	O
.	O	O
If	O	O
it	O	O
is	O	O
,	O	O
then	O	O
you	O	O
wo	O	O
n't	O	O
be	O	O
able	O	O
to	O	O
write	O	O
to	O	O
any	O	O
file	O	O
,	O	O
not	O	O
just	O	O
the	O	O
.	O	O
Here	O	O
are	O	O
the	O	O
levels	O	O
from	O	O
IIS	O	O
's	O	O
help	O	O
file	O	O
:	O	O
Full	O	O
(	O	O
internal	O	O
)	O	O
-	O	O
Specifies	O	O
unrestricted	O	O
permissions	O	O
.	O	O
Grants	O	O
the	O	O
ASP.NET	B-API	O
application	O	O
permissions	O	O
to	O	O
access	O	O
any	O	O
resource	O	O
that	O	O
is	O	O
subject	O	O
to	O	O
operating	O	O
system	O	O
security	O	O
.	O	O
All	O	O
privileged	O	O
operations	O	O
are	O	O
supported	O	O
.	O	O
High	B-API	O
(	I-API	O
web_hightrust.config	I-API	O
)	I-API	O
-	O	O
Specifies	O	O
a	O	O
high	O	O
level	O	O
of	O	O
code	O	O
access	O	O
security	O	O
,	O	O
which	O	O
means	O	O
that	O	O
the	O	O
application	O	O
can	O	O
not	O	O
do	O	O
any	O	O
one	O	O
of	O	O
the	O	O
following	O	O
things	O	O
by	O	O
default	O	O
:	O	O
Call	O	O
unmanaged	O	O
code	O	O
.	O	O
Call	O	O
serviced	O	O
components	O	O
.	O	O
Write	O	O
to	O	O
the	O	O
event	O	O
log	O	O
.	O	O
Access	B-API	O
Message	I-API	O
Queuing	I-API	O
service	I-API	O
queues	O	O
.	O	O
Access	O	O
ODBC	B-API	O
,	O	O
OleDb	B-API	O
,	O	O
or	O	O
Oracle	B-API	O
data	O	O
sources	O	O
.	O	O
Medium	B-API	O
(	I-API	O
web_mediumtrust.config	I-API	O
)	I-API	O
-	O	O
Specifies	O	O
a	O	O
medium	O	O
level	O	O
of	O	O
code	O	O
access	O	O
security	O	O
,	O	O
which	O	O
means	O	O
that	O	O
,	O	O
in	O	O
addition	O	O
to	O	O
High	O	O
Trust	O	O
Level	O	O
restrictions	O	O
,	O	O
the	O	O
ASP.NET	B-API	O
application	O	O
can	O	O
not	O	O
do	O	O
any	O	O
of	O	O
the	O	O
following	O	O
things	O	O
by	O	O
default	O	O
:	O	O
Access	O	O
files	O	O
outside	O	O
the	O	O
application	O	O
directory	O	O
.	O	O
Access	O	O
the	O	O
registry	O	O
.	O	O
Make	O	O
network	O	O
or	O	O
Web	O	O
service	O	O
calls	O	O
.	O	O
Low	B-API	O
(	I-API	O
web_lowtrust.config	I-API	O
)	I-API	O
-	O	O
Specifies	O	O
a	O	O
low	O	O
level	O	O
of	O	O
code	O	O
access	O	O
security	O	O
,	O	O
which	O	O
means	O	O
that	O	O
,	O	O
in	O	O
addition	O	O
to	O	O
Medium	B-API	O
Trust	I-API	O
Level	I-API	O
restrictions	O	O
,	O	O
the	O	O
application	O	O
can	O	O
not	O	O
do	O	O
any	O	O
of	O	O
the	O	O
following	O	O
things	O	O
by	O	O
default	O	O
:	O	O
Write	O	O
to	O	O
the	O	O
file	O	O
system	O	O
.	O	O
Call	O	O
the	O	O
Assert	O	O
method	O	O
.	O	O
Minimal	B-API	B-API
(	I-API	I-API
web_minimaltrust.config	I-API	I-API
)	I-API	I-API
-	O	O
Specifies	O	O
a	O	O
minimal	O	O
level	O	O
of	O	O
code	O	O
access	O	O
security	O	O
,	O	O
which	O	O
means	O	O
that	O	O
the	O	O
application	O	O
has	O	O
only	O	O
execute	O	O
permissions	O	O
.	O	O
I	O	O
would	O	O
suggest	O	O
that	O	O
if	O	O
you	O	O
are	O	O
dead	O	O
set	O	O
on	O	O
having	O	O
an	O	O
installer	O	O
,	O	O
have	O	O
it	O	O
create	O	O
a	O	O
web.config	O	O
in	O	O
memory	O	O
that	O	O
the	O	O
user	O	O
can	O	O
save	O	O
locally	O	O
and	O	O
up	O	O
afterward	O	O
.	O	O
In	O	O
Java	B-API	O
,	O	O
the	O	O
'int	O	O
'	O	O
type	O	O
is	O	O
a	O	O
primitive	O	O
,	O	O
whereas	O	O
the	O	O
'Integer	O	O
'	O	O
type	O	O
is	O	O
an	O	O
object	O	O
.	O	O
In	O	O
C	B-API	O
#	I-API	O
,	O	O
the	O	O
'int	O	O
'	O	O
type	O	O
is	O	O
the	O	O
same	O	O
as	O	O
and	O	O
is	O	O
a	O	O
value	O	O
type	O	O
(	O	O
ie	O	O
more	O	O
like	O	O
the	O	O
java	O	O
'int	O	O
'	O	O
)	O	O
.	O	O
An	O	O
integer	O	O
(	O	O
just	O	O
like	O	O
any	O	O
other	O	O
value	O	O
types	O	O
)	O	O
can	O	O
be	O	O
boxed	O	O
(	O	O
``	O	O
wrapped	O	O
''	O	O
)	O	O
into	O	O
an	O	O
object	O	O
.	O	O
The	O	O
differences	O	O
between	O	O
objects	O	O
and	O	O
primitives	O	O
are	O	O
somewhat	O	O
beyond	O	O
the	O	O
scope	O	O
of	O	O
this	O	O
question	O	O
,	O	O
but	O	O
to	O	O
summarize	O	O
:	O	O
Objects	O	O
provide	O	O
facilities	O	O
for	O	O
polymorphism	O	O
,	O	O
are	O	O
passed	O	O
by	O	O
reference	O	O
(	O	O
or	O	O
more	O	O
accurately	O	O
have	O	O
references	O	O
passed	O	O
by	O	O
value	O	O
)	O	O
,	O	O
and	O	O
are	O	O
allocated	O	O
from	O	O
the	O	O
heap	O	O
.	O	O
Conversely	O	O
,	O	O
primitives	O	O
are	O	O
immutable	O	O
types	O	O
that	O	O
are	O	O
passed	O	O
by	O	O
value	O	O
and	O	O
are	O	O
often	O	O
allocated	O	O
from	O	O
the	O	O
stack	O	O
.	O	O
Well	O	O
,	O	O
in	O	O
Java	B-API	O
an	O	O
int	O	O
is	O	O
a	O	O
primitive	O	O
while	O	O
an	O	O
Integer	B-API	O
is	O	O
an	O	O
Object	B-API	O
.	O	O
Meaning	O	O
,	O	O
if	O	O
you	O	O
made	O	O
a	O	O
new	O	O
Integer	B-API	O
:	O	O
Integer	B-API	O
i	O	O
=	O	O
new	B-API	O
Integer	I-API	O
(	I-API	O
6	I-API	O
)	I-API	O
;	O	O
You	O	O
could	O	O
call	O	O
some	O	O
method	O	O
on	O	O
i	O	O
:	O	O
String	B-API	O
s	O	O
=	O	O
i.toString	B-API	B-API
(	I-API	I-API
)	I-API	I-API
;	O	O
//sets	O	O
s	O	O
the	O	O
string	O	O
representation	O	O
of	O	O
i	O	O
Whereas	O	O
with	O	O
an	O	O
int	O	O
:	O	O
int	O	O
i	O	O
=	O	O
6	O	O
;	O	O
You	O	O
can	O	O
not	O	O
call	O	O
any	O	O
methods	O	O
on	O	O
it	O	O
,	O	O
because	O	O
it	O	O
is	O	O
simply	O	O
a	O	O
primitive	O	O
.	O	O
So	O	O
:	O	O
String	B-API	O
s	O	O
=	O	O
i.toString	B-API	B-API
(	I-API	I-API
)	I-API	I-API
;	O	O
//will	O	O
not	O	O
work	O	O
!	O	O
!	O	O
!	O	O
would	O	O
produce	O	O
an	O	O
error	O	O
,	O	O
because	O	O
int	O	O
is	O	O
not	O	O
an	O	O
object	O	O
.	O	O
int	O	O
is	O	O
one	O	O
of	O	O
the	O	O
few	O	O
primitives	O	O
in	O	O
Java	B-API	O
(	O	O
along	O	O
with	O	O
char	O	O
and	O	O
some	O	O
others	O	O
)	O	O
.	O	O
I	O	O
'm	O	O
not	O	O
100	O	O
%	O	O
sure	O	O
,	O	O
but	O	O
I	O	O
'm	O	O
thinking	O	O
that	O	O
the	O	O
Integer	B-API	O
object	O	O
more	O	O
or	O	O
less	O	O
just	O	O
has	O	O
an	O	O
int	O	O
property	O	O
and	O	O
a	O	O
whole	O	O
bunch	O	O
of	O	O
methods	O	O
to	O	O
interact	O	O
with	O	O
that	O	O
property	O	O
(	O	O
like	O	O
the	O	O
toString	B-API	B-API
(	I-API	I-API
)	I-API	I-API
method	O	O
for	O	O
example	O	O
)	O	O
.	O	O
So	O	O
Integer	B-API	O
is	O	O
a	O	O
fancy	O	O
way	O	O
to	O	O
work	O	O
with	O	O
an	O	O
int	O	O
(	O	O
Just	O	O
as	O	O
perhaps	O	O
String	B-API	O
is	O	O
a	O	O
fancy	O	O
way	O	O
to	O	O
work	O	O
with	O	O
a	O	O
group	O	O
of	O	O
chars	O	O
)	O	O
.	O	O
I	O	O
know	O	O
that	O	O
Java	B-API	O
is	O	O
n't	O	O
C	O	O
,	O	O
but	O	O
since	O	O
I	O	O
've	O	O
never	O	O
programmed	O	O
in	O	O
C	O	O
this	O	O
is	O	O
the	O	O
closest	O	O
I	O	O
could	O	O
come	O	O
to	O	O
the	O	O
answer	O	O
.	O	O
Hope	O	O
this	O	O
helps	O	O
!	O	O
Integer	B-API	O
object	O	O
javadoc	O	O
Integer	B-API	O
Ojbect	B-API	O
vs.	O	O
int	O	O
primitive	O	O
comparison	O	O
In	O	O
C	B-API	O
#	I-API	O
,	O	O
int	O	O
is	O	O
just	O	O
an	O	O
alias	O	O
for	O	O
,	O	O
string	O	O
for	O	O
,	O	O
double	O	O
for	O	O
etc	O	O
...	O	O
Personally	O	O
I	O	O
prefer	O	O
int	O	O
,	O	O
string	O	O
,	O	O
double	O	O
,	O	O
etc	O	O
.	O	O
because	O	O
they	O	O
do	O	O
n't	O	O
require	O	O
a	O	O
using	B-API	O
statement	O	O
:	O	O
)	O	O
A	O	O
silly	O	O
reason	O	O
,	O	O
I	O	O
know	O	O
...	O	O
I	O	O
'll	O	O
add	O	O
to	O	O
the	O	O
excellent	O	O
answers	O	O
given	O	O
above	O	O
,	O	O
and	O	O
talk	O	O
about	O	O
boxing	O	O
and	O	O
unboxing	O	O
,	O	O
and	O	O
how	O	O
this	O	O
applies	O	O
to	O	O
Java	B-API	O
(	O	O
although	O	O
C	B-API	O
#	I-API	O
has	O	O
it	O	O
too	O	O
)	O	O
.	O	O
I	O	O
'll	O	O
use	O	O
just	O	O
Java	B-API	O
terminology	O	O
,	O	O
because	O	O
I	O	O
am	O	O
more	O	O
au	O	O
fait	O	O
with	O	O
that	O	O
.	O	O
As	O	O
the	O	O
answers	O	O
mentioned	O	O
,	O	O
is	O	O
just	O	O
a	O	O
number	O	O
(	O	O
called	O	O
the	O	O
unboxed	O	O
type	O	O
)	O	O
,	O	O
whereas	O	O
is	O	O
an	O	O
object	O	O
(	O	O
which	O	O
contains	O	O
the	O	O
number	O	O
,	O	O
hence	O	O
a	O	O
boxed	O	O
type	O	O
)	O	O
.	O	O
In	O	O
Java	B-API	O
terms	O	O
,	O	O
that	O	O
means	O	O
(	O	O
apart	O	O
from	O	O
not	O	O
being	O	O
able	O	O
to	O	O
call	O	O
methods	O	O
on	O	O
)	O	O
,	O	O
you	O	O
can	O	O
not	O	O
store	O	O
or	O	O
other	O	O
non-object	O	O
types	O	O
in	O	O
collections	O	O
(	O	O
,	O	O
,	O	O
etc.	O	O
)	O	O
.	O	O
In	O	O
order	O	O
to	O	O
store	O	O
them	O	O
,	O	O
you	O	O
must	O	O
first	O	O
box	O	O
them	O	O
up	O	O
in	O	O
its	O	O
corresponding	O	O
boxed	O	O
type	O	O
.	O	O
Java	B-API	O
5	O	O
onwards	O	O
have	O	O
something	O	O
called	O	O
auto-boxing	O	O
and	O	O
auto-unboxing	O	O
which	O	O
allow	O	O
the	O	O
boxing/unboxing	O	O
to	O	O
be	O	O
done	O	O
behind	O	O
the	O	O
scenes	O	O
.	O	O
Compare	O	O
and	O	O
contrast	O	O
:	O	O
Java	B-API	O
5	O	O
version	O	O
:	O	O
DequeInteger	B-API	O
queue	I-API	O
;	I-API	O
void	B-API	O
{	I-API	O
;	I-API	O
}	I-API	O
int	O	O
{	O	O
return	O	O
(	O	O
int	O	O
n	O	O
)	O	O
queue.add	B-API	B-API
(	I-API	I-API
n	I-API	I-API
)	I-API	I-API
remove	B-API	B-API
(	I-API	I-API
)	I-API	I-API
queue.remove	B-API	B-API
(	I-API	I-API
)	I-API	I-API
Java	B-API	O
1.4	O	O
or	O	O
earlier	O	O
(	O	O
no	O	O
generics	O	O
either	O	O
)	O	O
:	O	O
Deque	B-API	O
queue	I-API	O
;	O	O
void	B-API	O
{	O	O
)	O	O
;	O	O
}	O	O
int	O	O
{	O	O
return	O	O
(	O	O
int	O	O
n	O	O
)	O	O
queue.add	B-API	O
(	O	O
Integer.valueOf	B-API	O
(	I-API	O
n	I-API	O
)	I-API	O
remove	B-API	O
(	I-API	O
)	I-API	O
(	O	O
(	O	O
Integer	B-API	O
)	O	O
queue.remove	B-API	B-API
(	I-API	I-API
)	I-API	I-API
)	O	O
.intValue	B-API	O
(	I-API	O
)	I-API	O
It	O	O
must	O	O
be	O	O
noted	O	O
that	O	O
despite	O	O
the	O	O
brevity	O	O
in	O	O
the	O	O
Java	B-API	O
5	O	O
version	O	O
,	O	O
both	O	O
versions	O	O
generate	O	O
identical	O	O
bytecode	O	O
.	O	O
Thus	O	O
,	O	O
although	O	O
auto-boxing	O	O
and	O	O
auto-unboxing	O	O
is	O	O
very	O	O
convenient	O	O
because	O	O
you	O	O
write	O	O
less	O	O
code	O	O
,	O	O
these	O	O
operations	O	O
do	O	O
happen	O	O
behind	O	O
the	O	O
scenes	O	O
,	O	O
with	O	O
the	O	O
same	O	O
runtime	O	O
costs	O	O
,	O	O
so	O	O
you	O	O
still	O	O
have	O	O
to	O	O
be	O	O
aware	O	O
of	O	O
their	O	O
existence	O	O
.	O	O
Hope	O	O
this	O	O
helps	O	O
!	O	O
I	O	O
'll	O	O
just	O	O
post	O	O
here	O	O
since	O	O
some	O	O
of	O	O
the	O	O
other	O	O
posts	O	O
are	O	O
slightly	O	O
inaccurate	O	O
in	O	O
relation	O	O
to	O	O
C	B-API	O
#	I-API	O
.	O	O
Correct	O	O
:	O	O
is	O	O
an	O	O
alias	O	O
for	O	O
.	O	O
Wrong	O	O
:	O	O
is	O	O
not	O	O
an	O	O
alias	O	O
for	O	O
,	O	O
but	O	O
for	O	O
Basically	O	O
,	O	O
int	O	O
is	O	O
a	O	O
reserved	O	O
keyword	O	O
in	O	O
the	O	O
C	B-API	O
#	I-API	O
programming	O	O
language	O	O
,	O	O
and	O	O
is	O	O
an	O	O
alias	O	O
for	O	O
the	O	O
value	O	O
type	O	O
.	O	O
and	O	O
Float	B-API	O
is	O	O
not	O	O
the	O	O
same	O	O
however	O	O
,	O	O
as	O	O
the	O	O
right	O	O
system	O	O
type	O	O
for	O	O
''float	O	O
''	O	O
is	O	O
System.Single	B-API	B-API
.	O	O
There	O	O
are	O	O
some	O	O
types	O	O
like	O	O
this	O	O
that	O	O
has	O	O
reserved	O	O
keywords	O	O
that	O	O
does	O	O
n't	O	O
seem	O	O
to	O	O
match	O	O
the	O	O
type	O	O
names	O	O
directly	O	O
.	O	O
In	O	O
C	B-API	O
#	I-API	O
there	O	O
is	O	O
no	O	O
difference	O	O
between	O	O
''	O	O
''	O	O
and	O	O
''	O	O
''	O	O
,	O	O
or	O	O
any	O	O
of	O	O
the	O	O
other	O	O
pa	O	O
rs	O	O
or	O	O
keywords/system	O	O
types	O	O
,	O	O
except	O	O
for	O	O
when	O	O
defining	O	O
enums	O	O
.	O	O
With	O	O
enums	O	O
you	O	O
can	O	O
specify	O	O
the	O	O
storage	O	O
size	O	O
to	O	O
use	O	O
and	O	O
in	O	O
this	O	O
case	O	O
you	O	O
can	O	O
only	O	O
use	O	O
the	O	O
reserved	O	O
keyword	O	O
,	O	O
and	O	O
not	O	O
the	O	O
system	O	O
runtime	O	O
type	O	O
name	O	O
.	O	O
Wether	O	O
the	O	O
value	O	O
in	O	O
the	O	O
int	O	O
will	O	O
be	O	O
stored	O	O
on	O	O
the	O	O
stack	O	O
,	O	O
in	O	O
memory	O	O
,	O	O
or	O	O
as	O	O
a	O	O
referenced	O	O
heap	O	O
object	O	O
depends	O	O
on	O	O
the	O	O
context	O	O
and	O	O
how	O	O
you	O	O
use	O	O
it	O	O
.	O	O
This	O	O
declaration	O	O
in	O	O
a	O	O
method	O	O
:	O	O
int	O	O
i	O	O
;	O	O
defines	O	O
a	O	O
variable	O	O
i	O	O
of	O	O
type	O	O
,	O	O
l	O	O
ving	O	O
in	O	O
a	O	O
register	O	O
or	O	O
on	O	O
the	O	O
stack	O	O
,	O	O
depending	O	O
on	O	O
optimizations	O	O
.	O	O
The	O	O
same	O	O
declaration	O	O
in	O	O
a	O	O
type	O	O
(	O	O
struct	O	O
or	O	O
class	O	O
)	O	O
defines	O	O
a	O	O
member	O	O
field	O	O
.	O	O
The	O	O
same	O	O
declaration	O	O
in	O	O
a	O	O
method	O	O
argument	O	O
list	O	O
defines	O	O
a	O	O
parameter	O	O
,	O	O
with	O	O
the	O	O
same	O	O
storage	O	O
options	O	O
as	O	O
for	O	O
a	O	O
local	O	O
variable	O	O
.	O	O
(	O	O
note	O	O
that	O	O
this	O	O
paragraph	O	O
is	O	O
not	O	O
valid	O	O
if	O	O
you	O	O
start	O	O
pulling	O	O
iterator	O	O
methods	O	O
into	O	O
the	O	O
mix	O	O
,	O	O
these	O	O
are	O	O
different	O	O
beasts	O	O
altogether	O	O
)	O	O
To	O	O
get	O	O
a	O	O
heap	O	O
object	O	O
,	O	O
you	O	O
can	O	O
use	O	O
boxing	O	O
:	O	O
object	O	O
o	O	O
=	O	O
i	O	O
;	O	O
this	O	O
will	O	O
create	O	O
a	O	O
boxed	O	O
copy	O	O
of	O	O
the	O	O
contents	O	O
of	O	O
i	O	O
on	O	O
the	O	O
heap	O	O
.	O	O
In	O	O
IL	O	O
you	O	O
can	O	O
access	O	O
methods	O	O
on	O	O
the	O	O
heap	O	O
object	O	O
directly	O	O
,	O	O
but	O	O
in	O	O
C	B-API	O
#	I-API	O
you	O	O
need	O	O
to	O	O
cast	O	O
it	O	O
back	O	O
to	O	O
an	O	O
int	O	O
,	O	O
which	O	O
will	O	O
create	O	O
another	O	O
copy	O	O
.	O	O
Thus	O	O
,	O	O
the	O	O
object	O	O
on	O	O
the	O	O
heap	O	O
can	O	O
not	O	O
easily	O	O
be	O	O
changed	O	O
in	O	O
C	B-API	O
#	I-API	O
without	O	O
creating	O	O
a	O	O
new	O	O
boxed	O	O
copy	O	O
of	O	O
a	O	O
new	O	O
int	O	O
value	O	O
.	O	O
(	O	O
Ugh	O	O
,	O	O
this	O	O
paragraph	O	O
does	O	O
n't	O	O
read	O	O
all	O	O
that	O	O
easily	O	O
.	O	O
)	O	O
This	O	O
has	O	O
already	O	O
been	O	O
answered	O	O
for	O	O
Java	B-API	O
,	O	O
here	O	O
's	O	O
the	O	O
C	B-API	O
#	I-API	O
answer	O	O
:	O	O
''	O	O
Integer	B-API	O
''	O	O
is	O	O
not	O	O
a	O	O
valid	O	O
type	O	O
name	O	O
in	O	O
C	B-API	O
#	I-API	O
and	O	O
``	O	O
int	O	O
''	O	O
is	O	O
just	O	O
an	O	O
alias	O	O
for	O	O
System.Int32	B-API	O
.	O	O
Also	O	O
,	O	O
unlike	O	O
in	O	O
Java	B-API	O
(	O	O
or	O	O
C++	B-API	O
)	O	O
there	O	O
are	O	O
n't	O	O
any	O	O
special	O	O
primitive	O	O
types	O	O
in	O	O
C	B-API	O
#	I-API	O
,	O	O
every	O	O
instance	O	O
of	O	O
a	O	O
type	O	O
in	O	O
C	B-API	O
#	I-API	O
(	O	O
including	O	O
int	O	O
)	O	O
is	O	O
an	O	O
object	O	O
.	O	O
Here	O	O
's	O	O
some	O	O
demonstrative	O	O
code	O	O
:	O	O
void	B-API	O
{	I-API	O
5	I-API	O
)	I-API	O
)	I-API	O
;	I-API	O
)	I-API	O
;	I-API	O
}	I-API	O
string	O	O
{	O	O
return	O	O
)	O	O
;	O	O
}	O	O
string	O	O
{	O	O
return	O	O
(	O	O
typeof	B-API	O
DoStuff	B-API	B-API
(	I-API	I-API
)	I-API	I-API
(	O	O
SomeMethod	O	B-API
(	O	I-API
(	O	I-API
int	O	I-API
)	O	I-API
(	O	O
GetTypeNameint	B-API	B-API
(	I-API	I-API
)	I-API	I-API
(	O	O
object	O	O
someParameter	O	O
)	O	O
(	O	O
``	O	O
Some	O	O
text	O	O
{	O	O
0	O	O
}	O	O
''	O	O
,	O	O
someParameter.ToString	B-API	B-API
(	I-API	I-API
)	I-API	I-API
GetTypeNameT	B-API	B-API
(	I-API	I-API
)	I-API	I-API
Regarding	O	O
Java	B-API	O
1.5	O	O
and	O	O
autoboxing	O	O
there	O	O
is	O	O
an	O	O
important	O	O
``	O	O
quirk	O	O
''	O	O
that	O	O
comes	O	O
to	O	O
play	O	O
when	O	O
comparing	O	O
Integer	B-API	O
objects	O	O
.	O	O
In	O	O
Java	B-API	O
,	O	O
Integer	B-API	O
objects	O	O
with	O	O
the	O	O
values	O	O
-128	O	O
to	O	O
127	O	O
are	O	O
immutable	O	O
(	O	O
that	O	O
is	O	O
,	O	O
for	O	O
one	O	O
particular	O	O
integer	O	O
value	O	O
,	O	O
say	O	O
23	O	O
,	O	O
all	O	O
Integer	B-API	O
objects	O	O
instantiated	O	O
through	O	O
your	O	O
program	O	O
with	O	O
the	O	O
value	O	O
23	O	O
points	O	O
to	O	O
the	O	O
exact	O	O
same	O	O
object	O	O
)	O	O
.	O	O
Example	O	O
,	O	O
this	O	O
returns	O	O
true	O	O
:	O	O
Integer	B-API	O
i1	I-API	O
=	I-API	O
new	I-API	O
;	O	O
Integer	B-API	O
i2	I-API	O
=	I-API	O
new	I-API	O
;	O	O
//	O	O
Integer	B-API	B-API
(	I-API	I-API
127	I-API	I-API
)	I-API	I-API
(	O	O
127	O	O
)	O	O
;	O	O
System.out.println	B-API	O
(	I-API	O
i1	I-API	O
==	I-API	O
i2	I-API	O
)	I-API	O
While	O	O
this	O	O
returns	O	O
false	O	O
:	O	O
Integer	B-API	O
i1	I-API	O
=	I-API	O
new	I-API	O
;	O	O
Integer	B-API	O
i2	I-API	O
=	I-API	O
new	I-API	O
;	O	O
//	O	O
Integer	B-API	B-API
(	I-API	I-API
128	I-API	I-API
)	I-API	I-API
(	O	O
128	O	O
)	O	O
;	O	O
System.out.println	B-API	O
(	I-API	O
i1	I-API	O
==	I-API	O
i2	I-API	O
)	I-API	O
The	O	O
==	O	O
compares	O	O
by	O	O
reference	O	O
(	O	O
does	O	O
the	O	O
variables	O	O
point	O	O
to	O	O
the	O	O
same	O	O
object	O	O
)	O	O
.	O	O
This	O	O
result	O	O
may	O	O
or	O	O
may	O	O
not	O	O
differ	O	O
depending	O	O
on	O	O
what	O	O
JVM	O	O
you	O	O
are	O	O
using	O	O
.	O	O
The	O	O
specification	O	O
autoboxing	O	O
for	O	O
Java	B-API	O
1.5	O	O
requires	O	O
that	O	O
integers	O	O
(	O	O
-128	O	O
to	O	O
127	O	O
)	O	O
always	O	O
box	O	O
to	O	O
the	O	O
same	O	O
wrapper	O	O
object	O	O
.	O	O
A	O	O
solution	O	O
?	O	O
=	O	O
)	O	O
One	O	O
should	O	O
always	O	O
use	O	O
the	O	O
Integer.equals	B-API	B-API
(	I-API	I-API
)	I-API	I-API
method	O	O
when	O	O
comparing	O	O
Integer	B-API	O
objects	O	O
.	O	O
)	O	O
;	O	O
//	O	O
System.out.println	B-API	B-API
(	I-API	I-API
i1.equals	I-API	I-API
(	I-API	I-API
i2	I-API	I-API
)	I-API	I-API
More	O	O
info	O	O
at	O	O
java.net	O	O
Example	O	O
at	O	O
bexhuff.com	O	O
In	O	O
Java	B-API	O
there	O	O
are	O	O
two	O	O
basic	O	O
types	O	O
in	O	O
the	O	O
JVM	B-API	O
.	O	O
1	O	O
)	O	O
Primitive	O	O
types	O	O
and	O	O
2	O	O
)	O	O
Reference	O	O
Types	O	O
.	O	O
int	O	O
is	O	O
a	O	O
primitive	O	O
type	O	O
and	O	O
Integer	B-API	O
is	O	O
a	O	O
class	O	O
type	O	O
(	O	O
which	O	O
is	O	O
kind	O	O
of	O	O
reference	O	O
type	O	O
)	O	O
.	O	O
Primitive	O	O
values	O	O
do	O	O
not	O	O
share	O	O
state	O	O
with	O	O
other	O	O
primitive	O	O
values	O	O
.	O	O
A	O	O
variable	O	O
whose	O	O
type	O	O
is	O	O
a	O	O
primitive	O	O
type	O	O
always	O	O
holds	O	O
a	O	O
primitive	O	O
value	O	O
of	O	O
that	O	O
type	O	O
.	O	O
int	O	O
aNumber	O	O
=	O	O
4	O	O
;	O	O
int	O	O
anotherNum	O	O
=	O	O
aNumber	O	O
;	O	O
aNumber	O	O
+=	O	O
6	O	O
;	O	O
System.out.println	B-API	O
(	I-API	O
anotherNum	I-API	O
)	I-API	O
;	O	O
//	O	O
Prints	O	O
4	O	O
An	O	O
object	O	O
is	O	O
a	O	O
dynamically	O	O
created	O	O
class	O	O
instance	O	O
or	O	O
an	O	O
array	O	O
.	O	O
The	O	O
reference	O	O
values	O	O
(	O	O
often	O	O
just	O	O
references	O	O
)	O	O
are	O	O
pointers	O	O
to	O	O
these	O	O
objects	O	O
and	O	O
a	O	O
special	O	O
null	O	O
reference	O	O
,	O	O
which	O	O
refers	O	O
to	O	O
no	O	O
object	O	O
.	O	O
There	O	O
may	O	O
be	O	O
many	O	O
references	O	O
to	O	O
the	O	O
same	O	O
object	O	O
.	O	O
Integer	B-API	O
aNumber	O	O
=	O	O
Integer.valueOf	B-API	O
(	I-API	O
4	I-API	O
)	I-API	O
;	O	O
Integer	B-API	O
anotherNumber	O	O
=	O	O
aNumber	O	O
;	O	O
//	O	O
anotherNumber	O	O
references	O	O
the	O	O
//	O	O
same	O	O
object	O	O
as	O	O
aNumber	O	O
Also	O	O
in	O	O
Java	B-API	O
everything	O	O
is	O	O
passed	O	O
by	O	O
value	O	O
.	O	O
With	O	O
objects	O	O
the	O	O
value	O	O
that	O	O
is	O	O
passed	O	O
is	O	O
the	O	O
reference	O	O
to	O	O
the	O	O
object	O	O
.	O	O
So	O	O
another	O	O
difference	O	O
between	O	O
int	O	O
and	O	O
Integer	B-API	O
in	O	O
java	O	O
is	O	O
how	O	O
they	O	O
are	O	O
passed	O	O
in	O	O
method	O	O
calls	O	O
.	O	O
For	O	O
example	O	O
in	O	O
public	O	O
int	O	O
add	O	O
(	O	O
int	O	O
a	O	O
,	O	O
int	O	O
b	O	O
)	O	O
{	O	O
return	O	O
a	O	O
+	O	O
b	O	O
;	O	O
}	O	O
final	O	O
int	O	O
two	O	O
=	O	O
2	O	O
;	O	O
int	O	O
sum	O	O
=	O	O
add	O	O
(	O	O
1	O	O
,	O	O
two	O	O
)	O	O
;	O	O
The	O	O
variable	O	O
two	O	O
is	O	O
passed	O	O
as	O	O
the	O	O
primitive	O	O
integer	O	O
type	O	O
2	O	O
.	O	O
Whereas	O	O
in	O	O
public	O	O
int	O	O
add	O	O
(	O	O
Integer	B-API	O
a	O	O
,	O	O
Integer	B-API	O
b	O	O
)	O	O
{	O	O
return	O	O
a.intValue	B-API	B-API
(	I-API	I-API
)	I-API	I-API
+	O	O
b.intValue	B-API	B-API
(	I-API	I-API
)	I-API	I-API
;	O	O
}	O	O
final	O	O
Integer	B-API	O
two	O	O
=	O	O
Integer.valueOf	B-API	B-API
(	I-API	I-API
2	I-API	I-API
)	I-API	I-API
;	O	O
int	O	O
sum	O	O
=	O	O
add	O	O
(	O	O
Integer.valueOf	B-API	O
(	I-API	O
1	I-API	O
)	I-API	O
,	O	O
two	O	O
)	O	O
;	O	O
The	O	O
variable	O	O
two	O	O
is	O	O
passed	O	O
as	O	O
a	O	O
reference	O	O
to	O	O
an	O	O
object	O	O
that	O	O
holds	O	O
the	O	O
integer	O	O
value	O	O
2	O	O
.	O	O
@	O	O
WolfmanDragon	O	O
:	O	O
Pass	O	O
by	O	O
reference	O	O
would	O	O
work	O	O
like	O	O
so	O	O
:	O	O
public	O	O
void	O	O
increment	O	O
(	O	O
int	O	O
x	O	O
)	O	O
{	O	O
x	O	O
=	O	O
x	O	O
+	O	O
1	O	O
;	O	O
}	O	O
int	O	O
a	O	O
=	O	O
1	O	O
;	O	O
increment	O	O
(	O	O
a	O	O
)	O	O
;	O	O
//	O	O
a	O	O
is	O	O
now	O	O
2	O	O
When	O	O
increment	O	O
is	O	O
called	O	O
it	O	O
passes	O	O
a	O	O
reference	O	O
(	O	O
pointer	O	O
)	O	O
to	O	O
variable	O	O
a	O	O
.	O	O
And	O	O
the	O	O
increment	O	O
function	O	O
directly	O	O
modifies	O	O
variable	O	O
a	O	O
.	O	O
And	O	O
for	O	O
object	O	O
types	O	O
it	O	O
would	O	O
work	O	O
as	O	O
follows	O	O
:	O	O
public	O	O
void	O	O
increment	O	O
(	O	O
Integer	B-API	O
x	O	O
)	O	O
{	O	O
x	O	O
=	O	O
Integer.valueOf	O	O
(	O	O
x.intValue	B-API	B-API
(	I-API	I-API
)	I-API	I-API
+	O	O
1	O	O
)	O	O
;	O	O
}	O	O
Integer	B-API	O
a	O	O
=	O	O
Integer.valueOf	B-API	O
(	I-API	O
1	I-API	O
)	I-API	O
;	O	O
increment	O	O
(	O	O
a	O	O
)	O	O
;	O	O
//	O	O
a	O	O
is	O	O
now	O	O
2	O	O
Do	O	O
you	O	O
see	O	O
the	O	O
difference	O	O
now	O	O
?	O	O
One	O	O
more	O	O
thing	O	O
that	O	O
I	O	O
do	O	O
n't	O	O
see	O	O
in	O	O
previous	O	O
answers	O	O
:	O	O
In	O	O
Java	B-API	O
the	O	O
primitive	O	O
wrappers	O	O
classes	O	O
like	O	O
Integer	B-API	O
,	O	O
Double	B-API	O
,	O	O
Float	B-API	O
,	O	O
Boolean	B-API	O
...	O	O
and	O	O
String	B-API	O
are	O	O
suposed	O	O
to	O	O
be	O	O
invariant	O	O
,	O	O
so	O	O
that	O	O
when	O	O
you	O	O
pass	O	O
an	O	O
instance	O	O
of	O	O
those	O	O
classes	O	O
the	O	O
invoked	O	O
method	O	O
could	O	O
n't	O	O
alter	O	O
your	O	O
data	O	O
in	O	O
any	O	O
way	O	O
,	O	O
in	O	O
opositin	O	O
with	O	O
most	O	O
of	O	O
other	O	O
classes	O	O
,	O	O
which	O	O
internal	O	O
data	O	O
could	O	O
be	O	O
altered	O	O
by	O	O
its	O	O
public	O	O
methods	O	O
.	O	O
So	O	O
that	O	O
this	O	O
classes	O	O
only	O	O
has	O	O
'getter	O	O
'	O	O
methods	O	O
,	O	O
no	O	O
'setters	O	O
'	O	O
,	O	O
besides	O	O
the	O	O
constructor	O	O
.	O	O
In	O	O
a	O	O
java	O	O
program	O	O
String	B-API	O
literals	O	O
are	O	O
stored	O	O
in	O	O
a	O	O
separate	O	O
portion	O	O
of	O	O
heap	O	O
memory	O	O
,	O	O
only	O	O
a	O	O
instance	O	O
for	O	O
literal	O	O
,	O	O
to	O	O
save	O	O
memory	O	O
reusing	O	O
those	O	O
instances	O	O
Consider	O	O
using	O	O
a	O	O
ManualResetEvent	B-API	O
to	O	O
block	O	O
the	O	O
main	O	O
thread	O	O
at	O	O
the	O	O
end	O	O
of	O	O
its	O	O
processing	O	O
,	O	O
and	O	O
call	O	O
Reset	B-API	B-API
(	I-API	I-API
)	I-API	I-API
on	O	O
it	O	O
once	O	O
the	O	O
timer	O	O
's	O	O
processing	O	O
has	O	O
finished	O	O
.	O	O
If	O	O
this	O	O
is	O	O
something	O	O
that	O	O
needs	O	O
to	O	O
run	O	O
constantly	O	O
,	O	O
consider	O	O
moving	O	O
this	O	O
into	O	O
a	O	O
service	O	O
process	O	O
instead	O	O
of	O	O
a	O	O
console	O	O
app	O	O
.	O	O
You	O	O
can	O	O
use	O	O
something	O	O
like	O	O
Console.ReadLine	B-API	B-API
(	I-API	I-API
)	I-API	I-API
to	O	O
block	O	O
the	O	O
main	O	O
thread	O	O
,	O	O
so	O	O
other	O	O
background	O	O
threads	O	O
(	O	O
like	O	O
timer	O	O
threads	O	O
)	O	O
will	O	O
still	O	O
work	O	O
.	O	O
You	O	O
may	O	O
also	O	O
use	O	O
an	O	O
AutoResetEvent	B-API	O
to	O	O
block	O	O
the	O	O
execution	O	O
,	O	O
then	O	O
(	O	O
when	O	O
you	O	O
need	O	O
to	O	O
)	O	O
you	O	O
can	O	O
call	O	O
Set	B-API	B-API
(	I-API	I-API
)	I-API	I-API
method	O	O
on	O	O
that	O	O
AutoResetEvent	B-API	O
object	O	O
to	O	O
release	O	O
the	O	O
main	O	O
thread	O	O
.	O	O
Also	O	O
ensure	O	O
that	O	O
your	O	O
reference	O	O
to	O	O
Timer	O	O
object	O	O
does	O	O
n't	O	O
go	O	O
out	O	O
of	O	O
scope	O	O
and	O	O
garbage	O	O
collected	O	O
.	O	O
If	O	O
you	O	O
are	O	O
using	O	O
a	O	O
button	O	O
or	O	O
hyperlink	O	O
or	O	O
something	O	O
to	O	O
trigger	O	O
the	O	O
popup	O	O
to	O	O
show	O	O
,	O	O
could	O	O
you	O	O
also	O	O
add	O	O
an	O	O
additional	O	O
handler	O	O
to	O	O
the	O	O
onClick	B-API	O
event	I-API	O
of	O	O
the	O	O
trigger	O	O
which	O	O
should	O	O
still	O	O
fire	O	O
the	O	O
modal	O	O
popup	O	O
and	O	O
run	O	O
the	O	O
javascript	O	O
at	O	O
the	O	O
same	O	O
time	O	O
?	O	O
The	O	O
ModalPopupExtender	B-API	O
modifies	O	O
the	O	O
button/hyperlink	O	O
that	O	O
you	O	O
tell	O	O
it	O	O
to	O	O
be	O	O
the	O	O
``	O	O
trigger	O	O
''	O	O
element	O	O
.	O	O
The	O	O
onclick	O	O
script	O	O
I	O	O
add	O	O
triggers	O	O
before	O	O
the	O	O
popup	O	O
is	O	O
shown	O	O
.	O	O
I	O	O
want	O	O
script	O	O
to	O	O
fire	O	O
after	O	O
the	O	O
popup	O	O
is	O	O
shown	O	O
.	O	O
Also	O	O
,	O	O
still	O	O
leaves	O	O
me	O	O
with	O	O
the	O	O
problem	O	O
of	O	O
when	O	O
I	O	O
show	O	O
the	O	O
modal	O	O
from	O	O
server	O	O
side	O	O
.	O	O
hmmm	O	O
...	O	O
I	O	O
'm	O	O
pretty	O	O
sure	O	O
that	O	O
there	O	O
's	O	O
a	O	O
shown	O	O
event	O	O
for	O	O
the	O	O
MPE	B-API	O
...	O	O
this	O	O
is	O	O
off	O	O
the	O	O
top	O	O
of	O	O
my	O	O
head	O	O
,	O	O
but	O	O
I	O	O
think	O	O
you	O	O
can	O	O
add	O	O
an	O	O
event	O	O
handler	O	O
to	O	O
the	O	O
shown	O	O
event	O	O
on	O	O
page_load	O	O
function	O	O
{	O	O
var	B-API	O
popup	O	O
=	O	O
;	O	O
;	O	O
}	O	O
function	O	O
{	O	O
pageLoad	B-API	B-API
(	I-API	I-API
)	I-API	I-API
$	O	O
find	B-API	O
(	I-API	O
'ModalPopupClientID	I-API	O
'	I-API	O
)	I-API	O
popup.add_shown	B-API	O
(	I-API	O
SetFocus	I-API	O
)	I-API	O
SetFocus	B-API	B-API
(	I-API	I-API
)	I-API	I-API
$	O	O
get	B-API	B-API
(	I-API	I-API
'TriggerClientId	I-API	I-API
'	I-API	I-API
)	I-API	I-API
.focus	I-API	I-API
(	I-API	I-API
)	I-API	I-API
i	O	O
'm	O	O
not	O	O
sure	O	O
tho	O	O
if	O	O
this	O	O
will	O	O
help	O	O
you	O	O
with	O	O
calling	O	O
it	O	O
from	O	O
the	O	O
server	O	O
side	O	O
tho	O	O
I	O	O
have	O	O
n't	O	O
thought	O	O
too	O	O
hard	O	O
about	O	O
this	O	O
,	O	O
but	O	O
I	O	O
reckon	O	O
you	O	O
could	O	O
get	O	O
a	O	O
Custom	B-API	O
Treeview	I-API	O
in	O	O
WPF	O	O
to	O	O
do	O	O
what	O	O
you	O	O
want	O	O
.	O	O
I	O	O
was	O	O
reading	O	O
an	O	O
article	O	O
on	O	O
code	O	O
project	O	O
a	O	O
while	O	O
back	O	O
that	O	O
implemented	O	O
an	O	O
org	O	O
chart	O	O
this	O	O
way	O	O
...	O	O
I	O	O
'm	O	O
all	O	O
for	O	O
writing	O	O
your	O	O
own	O	O
software	O	O
when	O	O
something	O	O
does	O	O
n't	O	O
suit	O	O
your	O	O
needs	O	O
and	O	O
a	O	O
frequent	O	O
re-inventer	O	O
of	O	O
the	O	O
wheel	O	O
.	O	O
But	O	O
this	O	O
honestly	O	O
seems	O	O
like	O	O
one	O	O
of	O	O
those	O	O
things	O	O
were	O	O
the	O	O
solution	O	O
is	O	O
readily	O	O
available	O	O
,	O	O
in	O	O
this	O	O
case	O	O
in	O	O
the	O	O
form	O	O
of	O	O
Family	O	O
Tree	O	O
Maker	O	O
And	O	O
at	O	O
a	O	O
mere	O	O
$	O	O
40	O	O
I	O	O
would	O	O
venture	O	O
to	O	O
guess	O	O
that	O	O
you	O	O
'd	O	O
come	O	O
out	O	O
ahead	O	O
compared	O	O
to	O	O
the	O	O
hours	O	O
you	O	O
would	O	O
spend	O	O
trying	O	O
to	O	O
get	O	O
your	O	O
own	O	O
program	O	O
doing	O	O
exactly	O	O
what	O	O
you	O	O
need	O	O
.	O	O
I	O	O
currently	O	O
use	O	O
the	O	O
software	O	O
and	O	O
it	O	O
works	O	O
great	O	O
.	O	O
Now	O	O
,	O	O
if	O	O
your	O	O
interest	O	O
in	O	O
writing	O	O
it	O	O
partly	O	O
for	O	O
the	O	O
purpose	O	O
of	O	O
just	O	O
doing	O	O
it	O	O
because	O	O
you	O	O
can	O	O
and	O	O
to	O	O
learn	O	O
something	O	O
...	O	O
then	O	O
by	O	O
all	O	O
means	O	O
I	O	O
salute	O	O
your	O	O
will	O	O
to	O	O
learn	O	O
and	O	O
hope	O	O
you	O	O
find	O	O
the	O	O
control	O	O
you	O	O
are	O	O
looking	O	O
for	O	O
.	O	O
Geni	B-API	O
is	O	O
probably	O	O
what	O	O
your	O	O
looking	O	O
for	O	O
.	O	O
If	O	O
you	O	O
're	O	O
really	O	O
looking	O	O
for	O	O
an	O	O
application	O	O
that	O	O
you	O	O
can	O	O
modify	O	O
try	O	O
out	O	O
Family.Show	B-API	B-API
on	O	O
CodePlex	B-API	O
.	O	O
Take	O	O
a	O	O
look	O	O
at	O	O
Creating	O	O
and	O	O
Using	O	O
URL	B-API	O
Monikers	I-API	O
,	O	O
About	O	O
Asynchronous	O	O
Pluggable	O	O
Protocols	O	O
and	O	O
Registering	O	O
an	O	O
Application	O	O
to	O	O
a	O	O
URL	O	O
Protocol	O	O
from	O	O
MSDN	O	O
Here	O	O
's	O	O
some	O	O
old	O	O
Delphi	B-API	O
code	O	O
we	O	O
used	O	O
as	O	O
a	O	O
way	O	O
to	O	O
get	O	O
shortcuts	O	O
in	O	O
a	O	O
web	O	O
application	O	O
to	O	O
start	O	O
a	O	O
windows	O	O
program	O	O
locally	O	O
for	O	O
the	O	O
user	O	O
.	O	O
procedure	B-API	O
InstallIntoRegistry	I-API	O
;	O	O
var	B-API	O
Reg	O	O
:	O	O
TRegistry	B-API	O
;	O	O
begin	O	O
Reg	O	O
:	O	O
=	O	O
TRegistry.Create	B-API	O
;	O	O
try	O	O
Reg.RootKey	B-API	B-API
:	O	O
=	O	O
HKEY_CLASSES_ROOT	B-API	O
;	O	O
if	B-API	O
then	I-API	O
begin	O	O
;	O	O
;	O	O
;	O	O
;	O	O
if	B-API	O
then	I-API	O
begin	O	O
+	O	O
'	O	O
''	O	O
``	O	O
%	O	O
1	O	O
''	O	O
'	O	O
)	O	O
;	O	O
end	O	O
;	O	O
end	O	O
else	B-API	O
begin	O	O
+	O	O
'Please	O	O
make	O	O
sure	O	O
you	O	O
are	O	O
logged	O	O
in	O	O
with	O	O
a	O	O
user	O	O
account	O	O
with	O	O
administrative	O	O
rights	O	O
!	O	O
'	O	O
,	O	O
'Access	O	O
denied	O	O
'	O	O
,	O	O
0	O	O
)	O	O
;	O	O
Exit	B-API	O
;	O	O
end	O	O
;	O	O
finally	O	O
;	O	O
end	O	O
;	O	O
(	O	O
'moniker	O	O
'	O	O
,	O	O
True	B-API	O
)	I-API	O
(	I-API	O
''	O	O
,	O	O
'URL	O	O
:	O	O
Name	O	O
of	O	O
moniker	O	O
'	O	O
)	O	O
(	O	O
'URL	O	O
Protocol	O	O
'	O	O
,	O	O
''	O	O
)	O	O
(	O	O
'Source	O	O
Filter	O	B-API
'	O	I-API
,	O	I-API
'	O	I-API
{	O	I-API
E436EBB6-524F-11CE-9F53-0020AF0BA770	O	I-API
}	O	I-API
'	O	I-API
)	O	I-API
(	O	I-API
'EditFlags	O	I-API
'	O	I-API
,	O	I-API
2	O	I-API
)	O	I-API
(	O	I-API
'shell\open\command	O	I-API
'	O	I-API
,	O	I-API
True	B-API	I-API
)	I-API	I-API
(	I-API	O
''	O	O
,	O	O
'	O	O
''	O	O
'	O	O
+	O	O
ParamStr	B-API	O
(	I-API	O
0	I-API	O
)	I-API	O
(	O	O
0	O	O
,	O	O
'You	O	O
do	O	O
not	O	O
have	O	O
the	O	O
necessary	O	O
access	O	O
rights	O	O
to	O	O
complete	O	O
this	O	O
installation	O	O
!	O	O
'	O	O
+	O	O
Chr	B-API	O
(	I-API	O
13	I-API	O
)	I-API	O
FreeAndNil	B-API	O
(	I-API	O
Reg	I-API	O
)	I-API	O
(	O	O
0	O	O
,	O	O
'Application	O	O
WebStart	O	O
has	O	O
been	O	O
installed	O	O
successfully	O	O
!	O	O
'	O	O
,	O	O
'Installed	O	O
'	O	O
,	O	O
0	O	O
)	O	O
A	O	O
tidier	O	O
way	O	O
is	O	O
to	O	O
create	O	O
separate	O	O
forms	O	O
for	O	O
each	O	O
'pane	O	O
'	O	O
and	O	O
,	O	O
in	O	O
each	O	O
form	O	O
constructor	O	O
,	O	O
set	B-API	O
this.TopLevel	I-API	O
=	O	O
false	O	O
;	O	O
this.FormBorderStyle	O	O
=	O	O
FormBorderStyle.None	B-API	B-API
;	O	O
this.Dock	O	B-API
=	O	O
DockStyle.Fill	B-API	B-API
;	O	O
That	O	O
way	O	O
,	O	O
each	O	O
of	O	O
these	O	O
forms	O	O
can	O	O
be	O	O
laid	O	O
out	O	O
in	O	O
its	O	O
own	O	O
designer	O	O
,	O	O
instantiated	O	O
one	O	O
or	O	O
more	O	O
times	O	O
at	O	O
runtime	O	O
,	O	O
and	O	O
added	O	O
to	O	O
the	O	O
empty	O	O
area	O	O
like	O	O
a	O	O
normal	O	O
control	O	O
.	O	O
Perhaps	O	O
the	O	O
main	O	O
form	O	O
could	O	O
use	O	O
a	O	O
with	O	O
a	O	O
static	O	O
in	O	O
one	O	O
panel	O	O
,	O	O
and	O	O
space	O	O
to	O	O
add	O	O
these	O	O
forms	O	O
in	O	O
the	O	O
other	O	O
.	O	O
Once	O	O
they	O	O
are	O	O
added	O	O
,	O	O
they	O	O
could	O	O
be	O	O
flipped	O	O
through	O	O
using	O	O
or	O	O
methods	O	O
.	O	O
SeparateForm	O	O
f	O	O
=	O	O
new	O	O
SeparateForm	B-API	O
(	I-API	O
)	I-API	O
;	O	O
MainFormSplitContainer.Panel2.Controls.Add	B-API	B-API
(	I-API	I-API
f	I-API	I-API
)	I-API	I-API
;	O	O
f.Show	B-API	B-API
(	I-API	I-API
)	I-API	I-API
;	O	O
Greg	O	O
Hurlman	O	O
wrote	O	O
:	O	O
Why	O	O
not	O	O
just	O	O
show/hide	O	O
the	O	O
proper	O	O
container	O	O
when	O	O
a	O	O
node	O	O
is	O	O
selected	O	O
in	O	O
the	O	O
grid	O	O
?	O	O
Have	O	O
the	O	O
containers	O	O
all	O	O
sized	O	O
appropriately	O	O
in	O	O
the	O	O
same	O	O
spot	O	O
,	O	O
and	O	O
hide	O	O
all	O	O
but	O	O
the	O	O
default	O	O
,	O	O
which	O	O
would	O	O
be	O	O
preselected	O	O
in	O	O
the	O	O
grid	O	O
on	O	O
load	O	O
.	O	O
Unfortunately	O	O
,	O	O
that	O	O
's	O	O
what	O	O
I	O	O
'm	O	O
trying	O	O
to	O	O
avoid	O	O
.	O	O
I	O	O
'm	O	O
looking	O	O
for	O	O
an	O	O
easy	O	O
way	O	O
to	O	O
handle	O	O
the	O	O
interface	O	O
during	O	O
design	O	O
time	O	O
,	O	O
with	O	O
minimal	O	O
reformatting	O	O
code	O	O
needed	O	O
to	O	O
get	O	O
it	O	O
working	O	O
during	O	O
run	O	O
time	O	O
.	O	O
I	O	O
like	O	O
Duncan	O	O
's	O	O
answer	O	O
because	O	O
it	O	O
means	O	O
the	O	O
design	O	O
of	O	O
each	O	O
node	O	O
's	O	O
interface	O	O
can	O	O
be	O	O
kept	O	O
completely	O	O
separate	O	O
.	O	O
This	O	O
means	O	O
I	O	O
do	O	O
n't	O	O
get	O	O
overlap	O	O
on	O	O
the	O	O
snapping	O	O
guidelines	O	O
and	O	O
other	O	O
design	O	O
time	O	O
advantages	O	O
.	O	O
Static	B-API	O
methods	O	O
can	O	O
not	O	O
be	O	O
inherited	O	O
or	O	O
overridden	O	O
,	O	O
and	O	O
that	O	O
is	O	O
why	O	O
they	O	O
ca	O	O
n't	O	O
be	O	O
abstract	O	O
.	O	O
Since	O	O
static	B-API	O
methods	O	O
are	O	O
defined	O	O
on	O	O
the	O	O
type	O	O
,	O	O
not	O	O
the	O	O
instance	O	O
,	O	O
of	O	O
a	O	O
class	O	O
,	O	O
they	O	O
must	O	O
be	O	O
called	O	O
explicitly	O	O
on	O	O
that	O	O
type	O	O
.	O	O
So	O	O
when	O	O
you	O	O
want	O	O
to	O	O
call	O	O
a	O	O
method	O	O
on	O	O
a	O	O
child	O	O
class	O	O
,	O	O
you	O	O
need	O	O
to	O	O
use	O	O
its	O	O
name	O	O
to	O	O
call	O	O
it	O	O
.	O	O
This	O	O
makes	O	O
inheritance	O	O
irrelevant	O	O
.	O	O
Assume	O	O
you	O	O
could	O	O
,	O	O
for	O	O
a	O	O
moment	O	O
,	O	O
inherit	O	O
static	B-API	O
methods	O	O
.	O	O
Imagine	O	O
this	O	O
scenario	O	O
:	O	O
public	O	O
static	B-API	O
class	O	O
Base	O	O
{	O	O
public	O	O
static	B-API	O
virtual	I-API	O
int	I-API	O
{	I-API	O
return	I-API	O
5	I-API	O
;	I-API	O
}	I-API	O
}	O	O
public	O	O
static	B-API	O
class	I-API	O
Child1	I-API	O
:	I-API	O
Base	I-API	O
{	O	O
public	O	O
static	B-API	O
override	I-API	O
int	I-API	O
{	O	O
return	O	O
1	O	O
;	O	O
}	O	O
}	O	O
public	O	O
static	B-API	O
class	I-API	O
Child2	I-API	O
:	I-API	O
Base	I-API	O
{	O	O
public	O	O
static	B-API	O
override	I-API	O
int	I-API	O
{	O	O
return	O	O
2	O	O
;	O	O
GetNumber	B-API	B-API
(	I-API	I-API
)	I-API	I-API
GetNumber	B-API	B-API
(	I-API	I-API
)	I-API	I-API
GetNumber	B-API	B-API
(	I-API	I-API
)	I-API	I-API
If	O	O
you	O	O
call	O	O
Base.GetNumber	B-API	B-API
(	I-API	I-API
)	I-API	I-API
,	O	O
which	O	O
method	O	O
would	O	O
be	O	O
called	O	O
?	O	O
Which	O	O
value	O	O
returned	O	O
?	O	O
Its	O	O
pretty	O	O
easy	O	O
to	O	O
see	O	O
that	O	O
without	O	O
creating	O	O
instances	O	O
of	O	O
objects	O	O
,	O	O
inheritance	O	O
is	O	O
rather	O	O
hard	O	O
.	O	O
Abstract	O	O
methods	O	O
without	O	O
inheritance	O	O
are	O	O
just	O	O
methods	O	O
that	O	O
do	O	O
n't	O	O
have	O	O
a	O	O
body	O	O
,	O	O
so	O	O
ca	O	O
n't	O	O
be	O	O
called	O	O
.	O	O
To	O	O
add	O	O
to	O	O
the	O	O
previous	O	O
explanations	O	O
,	O	O
static	B-API	O
method	O	O
calls	O	O
are	O	O
bound	O	O
to	O	O
a	O	O
specific	O	O
method	O	O
at	O	O
compile-time	O	O
,	O	O
which	O	O
rather	O	O
rules	O	O
out	O	O
polymorphic	O	O
behavior	O	O
.	O	O
Static	B-API	O
methods	O	O
are	O	O
not	O	O
instantiated	O	O
as	O	O
such	O	O
,	O	O
they	O	O
're	O	O
just	O	O
available	O	O
without	O	O
an	O	O
object	O	O
reference	O	O
.	O	O
A	O	O
call	O	O
to	O	O
a	O	O
static	B-API	O
method	O	O
is	O	O
done	O	O
through	O	O
the	O	O
class	O	O
name	O	O
,	O	O
not	O	O
through	O	O
an	O	O
object	O	O
reference	O	O
,	O	O
and	O	O
the	O	O
IL	O	O
code	O	O
to	O	O
call	O	O
it	O	O
will	O	O
call	O	O
the	O	O
abstract	O	O
method	O	O
through	O	O
the	O	O
name	O	O
of	O	O
the	O	O
class	O	O
that	O	O
defined	O	O
it	O	O
,	O	O
not	O	O
necessarily	O	O
the	O	O
name	O	O
of	O	O
the	O	O
class	O	O
you	O	O
used	O	O
.	O	O
Let	O	O
me	O	O
show	O	O
an	O	O
example	O	O
.	O	O
With	O	O
the	O	O
following	O	O
code	O	O
:	O	O
public	O	O
class	O	O
A	O	O
{	O	O
public	O	O
static	B-API	O
void	I-API	O
{	I-API	O
}	I-API	O
}	O	O
public	O	O
class	B-API	O
B	I-API	O
:	I-API	O
Test	I-API	B-API
(	I-API	I-API
)	I-API	I-API
If	O	O
you	O	O
call	O	O
B.Test	B-API	O
,	O	O
like	O	O
this	O	O
:	O	O
class	O	O
Program	O	O
{	O	O
static	B-API	O
void	I-API	O
{	I-API	O
;	I-API	O
(	I-API	O
string	B-API	B-API
[	I-API	I-API
]	I-API	I-API
args	O	I-API
)	O	I-API
B.Test	B-API	B-API
(	I-API	I-API
)	I-API	I-API
Then	O	O
the	O	O
actual	O	O
code	O	O
inside	O	O
the	O	O
Main	O	O
method	O	O
is	O	O
as	O	O
follows	O	O
:	O	O
.entrypoint.maxstack	B-API	O
8L0000	O	O
:	O	O
nop	O	O
L0001	O	O
:	O	O
call	O	O
void	O	O
L0006	O	O
:	O	O
nop	O	O
L0007	O	O
:	O	O
ret	O	O
ConsoleApplication1.A	B-API	O
:	I-API	O
:Test	I-API	B-API
(	I-API	I-API
)	I-API	I-API
As	O	O
you	O	O
can	O	O
see	O	O
,	O	O
the	O	O
call	O	O
is	O	O
made	O	O
to	O	O
A.Test	B-API	O
,	O	O
because	O	O
it	O	O
was	O	O
the	O	O
A	O	O
class	O	O
that	O	O
defined	O	O
it	O	O
,	O	O
and	O	O
not	O	O
to	O	O
B.Test	B-API	O
,	O	O
even	O	O
though	O	O
you	O	O
can	O	O
write	O	O
the	O	O
code	O	O
that	O	O
way	O	O
.	O	O
If	O	O
you	O	O
had	O	O
class	O	O
types	O	O
,	O	O
like	O	O
in	O	O
Delphi	O	O
,	O	O
where	O	O
you	O	O
can	O	O
make	O	O
a	O	O
variable	O	O
referring	O	O
to	O	O
a	O	O
type	O	O
and	O	O
not	O	O
an	O	O
object	O	O
,	O	O
you	O	O
would	O	O
have	O	O
more	O	O
use	O	O
for	O	O
virtual	O	O
and	O	O
thus	O	O
abstract	O	O
static	B-API	O
methods	O	O
(	O	O
and	O	O
also	O	O
constructors	O	O
)	O	O
,	O	O
but	O	O
they	O	O
are	O	O
n't	O	O
available	O	O
and	O	O
thus	O	O
static	O	O
calls	O	O
are	O	O
non-virtual	O	O
in	O	O
.NET	B-API	O
.	O	O
I	O	O
realize	O	O
that	O	O
the	O	O
IL	O	O
designers	O	O
could	O	O
allow	O	O
the	O	O
code	O	O
to	O	O
be	O	O
compiled	O	O
to	O	O
call	O	O
B.Test	B-API	O
,	O	O
and	O	O
resolve	O	O
the	O	O
call	O	O
at	O	O
runtime	O	O
,	O	O
but	O	O
it	O	O
still	O	O
would	O	O
n't	O	O
be	O	O
virtual	O	O
,	O	O
as	O	O
you	O	O
would	O	O
still	O	O
have	O	O
to	O	O
write	O	O
some	O	O
kind	O	O
of	O	O
class	O	O
name	O	O
there	O	O
.	O	O
Virtual	O	O
methods	O	O
,	O	O
and	O	O
thus	O	O
abstract	O	O
ones	O	O
,	O	O
are	O	O
only	O	O
useful	O	O
when	O	O
you	O	O
're	O	O
using	O	O
a	O	O
variable	O	O
which	O	O
,	O	O
at	O	O
runtime	O	O
,	O	O
can	O	O
contain	O	O
many	O	O
different	O	O
types	O	O
of	O	O
objects	O	O
,	O	O
and	O	O
you	O	O
thus	O	O
want	O	O
to	O	O
call	O	O
the	O	O
right	O	O
method	O	O
for	O	O
the	O	O
current	O	O
object	O	O
you	O	O
have	O	O
in	O	O
the	O	O
variable	O	O
.	O	O
With	O	O
static	O	O
methods	O	O
you	O	O
need	O	O
to	O	O
go	O	O
through	O	O
a	O	O
class	O	O
name	O	O
anyway	O	O
,	O	O
so	O	O
the	O	O
exact	O	O
method	O	O
to	O	O
call	O	O
is	O	O
known	O	O
at	O	O
compile	O	O
time	O	O
because	O	O
it	O	O
ca	O	O
n't	O	O
and	O	O
wo	O	O
n't	O	O
change	O	O
.	O	O
Thus	O	O
,	O	O
virtual/abstract	O	O
static	O	O
methods	O	O
are	O	O
not	O	O
available	O	O
in	O	O
.NET	B-API	O
.	O	O
using	O	O
System.Net	B-API	B-API
;	O	O
foreach	B-API	O
(	O	O
IPAddress	B-API	O
address	O	O
in	O	O
Dns.GetHostAddresses	B-API	B-API
(	I-API	I-API
``	I-API	I-API
www.google.com	I-API	I-API
''	I-API	I-API
)	I-API	I-API
)	O	O
{	O	O
Console.WriteLine	B-API	B-API
(	O	I-API
address.ToString	B-API	I-API
(	I-API	I-API
)	I-API	I-API
)	O	I-API
;	O	O
}	O	O
Try	O	O
using	O	O
the	O	O
System.Net.Dns	B-API	O
class	O	O
Well	O	O
,	O	O
here	O	O
's	O	O
how	O	O
we	O	O
do	O	O
it	O	O
on	O	O
Stack	O	O
Overflow	O	O
.	O	O
var	B-API	O
ts	O	O
=	O	O
new	O	O
TimeSpan	B-API	O
(	O	O
DateTime.UtcNow.Ticks	B-API	B-API
-	O	O
dt.Ticks	B-API	O
)	O	O
;	O	O
double	O	O
delta	O	O
=	O	O
Math.Abs	B-API	B-API
(	I-API	I-API
ts.TotalSeconds	I-API	I-API
)	I-API	I-API
;	O	O
if	B-API	O
(	I-API	O
delta	I-API	O
60	I-API	O
)	I-API	O
{	O	O
return	O	O
ts.Seconds	B-API	O
==	O	O
1	O	O
?	O	O
``	O	O
one	O	O
second	O	O
ago	O	O
''	O	O
:	O	O
ts.Seconds	B-API	B-API
+	O	O
``	O	O
seconds	O	O
ago	O	O
''	O	O
;	O	O
}	O	O
if	B-API	O
(	I-API	O
delta	I-API	O
120	I-API	O
)	I-API	O
{	O	O
return	O	O
``	O	O
a	O	O
minute	O	O
ago	O	O
''	O	O
;	O	O
}	O	O
if	B-API	O
(	I-API	O
delta	I-API	O
2700	I-API	O
)	I-API	O
//	O	O
45	O	O
*	O	O
60	O	O
{	O	O
return	O	O
ts.Minutes	B-API	B-API
+	O	O
``	O	O
minutes	O	O
ago	O	O
''	O	O
;	O	O
}	O	O
if	B-API	O
(	I-API	O
delta	I-API	O
5400	I-API	O
)	I-API	O
//	O	O
90	O	O
*	O	O
60	O	O
{	O	O
return	O	O
``	O	O
an	O	O
hour	O	O
ago	O	O
''	O	O
;	O	O
}	O	O
if	B-API	O
(	I-API	O
delta	I-API	O
86400	I-API	O
)	I-API	O
//	O	O
24	O	O
*	O	O
60	O	O
*	O	O
60	O	O
{	O	O
return	O	O
ts.Hours	B-API	B-API
+	O	O
``	O	O
hours	O	O
ago	O	O
''	O	O
;	O	O
}	O	O
if	B-API	O
(	I-API	O
delta	I-API	O
172800	I-API	O
)	I-API	O
//	O	O
48	O	O
*	O	O
60	O	O
*	O	O
60	O	O
{	O	O
return	O	O
``	O	O
yesterday	O	O
''	O	O
;	O	O
}	O	O
if	B-API	O
(	I-API	O
delta	I-API	O
2592000	I-API	O
)	I-API	O
//	O	O
30	O	O
*	O	O
24	O	O
*	O	O
60	O	O
*	O	O
60	O	O
{	O	O
return	O	O
ts.Days	B-API	B-API
+	O	O
``	O	O
days	O	O
ago	O	O
''	O	O
;	O	O
}	O	O
if	B-API	O
(	I-API	O
delta	I-API	O
31104000	I-API	O
)	I-API	O
//	O	O
12	O	O
*	O	O
30	O	O
*	O	O
24	O	O
*	O	O
60	O	O
*	O	O
60	O	O
{	O	O
int	O	O
months	O	O
=	O	O
Convert.ToInt32	B-API	O
(	O	O
Math.Floor	B-API	B-API
(	O	I-API
(	O	I-API
double	O	I-API
)	O	I-API
ts.Days	O	O
/	O	O
30	O	O
)	O	O
)	O	O
;	O	O
return	O	O
months	O	O
=	O	O
1	O	O
?	O	O
``	O	O
one	O	O
month	O	O
ago	O	O
''	O	O
:	O	O
months	O	O
+	O	O
``	O	O
months	O	O
ago	O	O
''	O	O
;	O	O
}	O	O
int	O	O
years	O	O
=	O	O
Convert.ToInt32	B-API	O
(	O	O
Math.Floor	B-API	B-API
(	O	I-API
(	O	I-API
double	O	I-API
)	O	I-API
ts.Days	O	O
/	O	O
365	O	O
)	O	O
)	O	O
;	O	O
return	O	O
years	O	O
=	O	O
1	O	O
?	O	O
``	O	O
one	O	O
year	O	O
ago	O	O
''	O	O
:	O	O
years	O	O
+	O	O
``	O	O
years	O	O
ago	O	O
''	O	O
;	O	O
Suggestions	O	O
?	O	O
Comments	O	O
?	O	O
Ways	O	O
to	O	O
improve	O	O
this	O	O
algorithm	O	O
?	O	O
@	O	O
jeff	O	O
IMHO	O	O
yours	O	O
seems	O	O
a	O	O
little	O	O
long	O	O
.	O	O
However	O	O
it	O	O
does	O	O
seem	O	O
a	O	O
little	O	O
more	O	O
robust	O	O
with	O	O
support	O	O
for	O	O
``	O	O
yesterday	O	O
''	O	O
and	O	O
``	O	O
years	O	O
''	O	O
.	O	O
But	O	O
in	O	O
my	O	O
experience	O	O
when	O	O
this	O	O
is	O	O
used	O	O
the	O	O
person	O	O
is	O	O
most	O	O
likely	O	O
to	O	O
view	O	O
the	O	O
content	O	O
in	O	O
the	O	O
first	O	O
30	O	O
days	O	O
.	O	O
It	O	O
is	O	O
only	O	O
the	O	O
really	O	O
hardcore	O	O
people	O	O
that	O	O
come	O	O
after	O	O
that	O	O
.	O	O
So	O	O
that	O	O
is	O	O
why	O	O
I	O	O
usually	O	O
elect	O	O
to	O	O
keep	O	O
this	O	O
short	O	O
and	O	O
simple	O	O
.	O	O
This	O	O
is	O	O
the	O	O
method	O	O
I	O	O
am	O	O
currently	O	O
using	O	O
on	O	O
one	O	O
of	O	O
my	O	O
websites	O	O
.	O	O
This	O	O
only	O	O
returns	O	O
a	O	O
relative	O	O
day	O	O
,	O	O
hour	O	O
,	O	O
time	O	O
.	O	O
And	O	O
then	O	O
the	O	O
user	O	O
has	O	O
to	O	O
slap	O	O
on	O	O
``	O	O
ago	O	O
''	O	O
in	O	O
the	O	O
output	O	O
.	O	O
public	B-API	O
static	I-API	O
string	I-API	O
{	0-API	O
string	O	O
output	O	O
=	O	O
String.Empty	B-API	B-API
;	O	O
if	B-API	O
(	I-API	O
time.Days	I-API	O
0	I-API	O
)	I-API	O
output	O	O
+=	O	O
time.Days	O	O
+	O	O
``	O	O
days	O	O
``	O	O
;	O	O
if	B-API	O
time.Hours	I-API	O
0	I-API	O
)	I-API	O
output	O	O
+=	O	O
time.Hours	O	O
+	O	O
``	O	O
hr	O	O
``	O	O
;	O	O
if	B-API	O
(	I-API	O
time.Days	I-API	O
==	I-API	O
0	I-API	O
time.Minutes	I-API	O
0	I-API	O
)	I-API	O
output	O	O
+=	O	O
time.Minutes	B-API	O
+	O	O
``	O	O
min	O	O
``	O	O
;	O	O
if	B-API	O
(	I-API	O
output.Length	I-API	O
==	I-API	O
0	I-API	O
)	I-API	O
output	O	O
+=	O	O
time.Seconds	B-API	O
+	O	O
``	O	O
sec	O	O
''	O	O
;	O	O
return	O	O
(	O	O
this	O	O
TimeSpan	O	O
time	O	O
)	O	O
(	O	O
time.Days	B-API	O
==	O	O
0	O	O
||	O	O
time.Days	B-API	O
==	O	O
1	O	O
)	O	O
output.Trim	B-API	B-API
(	I-API	I-API
)	I-API	I-API
Jeff	O	O
,	O	O
your	O	O
code	O	O
is	O	O
nice	O	O
but	O	O
could	O	O
be	O	O
clearer	O	O
with	O	O
constants	O	O
(	O	O
as	O	O
suggested	O	O
in	O	O
Code	O	O
Complete	O	O
)	O	O
.	O	O
const	B-API	O
int	I-API	O
SECOND	I-API	O
=	I-API	O
1	I-API	O
;	O	O
const	B-API	O
int	I-API	O
MINUTE	I-API	O
=	I-API	O
60	I-API	O
*	I-API	O
SECOND	I-API	O
;	O	O
const	B-API	O
int	I-API	O
HOUR	I-API	O
=	I-API	O
60	I-API	O
*	I-API	O
MINUTE	I-API	O
;	O	O
const	B-API	O
int	I-API	O
DAY	I-API	O
=	I-API	O
24	I-API	O
*	I-API	O
HOUR	I-API	O
;	O	O
const	B-API	O
int	I-API	O
MONTH	I-API	O
=	I-API	O
30	I-API	O
*	I-API	O
DAY	I-API	O
;	O	O
var	O	O
ts	O	O
=	O	O
new	O	O
TimeSpan	B-API	O
(	O	O
DateTime.UtcNow.Ticks	B-API	B-API
-	O	O
yourDate.Ticks	B-API	O
)	O	O
;	O	O
double	O	O
delta	O	O
=	O	O
Math.Abs	B-API	B-API
(	I-API	I-API
ts.TotalSeconds	I-API	I-API
)	I-API	I-API
;	O	O
if	B-API	O
(	I-API	O
delta	I-API	O
1	I-API	O
*	I-API	O
MINUTE	I-API	O
)	I-API	O
return	O	O
ts.Seconds	O	O
==	O	O
1	O	O
?	O	O
``	O	O
one	O	O
second	O	O
ago	O	O
''	O	O
:	O	O
ts.Seconds	O	B-API
+	O	O
``	O	O
seconds	O	O
ago	O	O
''	O	O
;	O	O
if	B-API	O
(	I-API	O
delta	I-API	O
2	I-API	O
*	I-API	O
MINUTE	I-API	O
)	I-API	O
return	O	O
``	O	O
a	O	O
minute	O	O
ago	O	O
''	O	O
;	O	O
if	B-API	O
(	I-API	O
delta	I-API	O
45	I-API	O
*	I-API	O
MINUTE	I-API	O
)	I-API	O
return	O	O
ts.Minutes	O	B-API
+	O	O
``	O	O
minutes	O	O
ago	O	O
''	O	O
;	O	O
if	B-API	O
(	I-API	O
delta	I-API	O
90	I-API	O
*	I-API	O
MINUTE	I-API	O
)	I-API	O
return	O	O
``	O	O
an	O	O
hour	O	O
ago	O	O
''	O	O
;	O	O
if	B-API	O
(	I-API	O
delta	I-API	O
24	I-API	O
*	I-API	O
HOUR	I-API	O
)	I-API	O
return	O	O
ts.Hours	O	B-API
+	O	O
``	O	O
hours	O	O
ago	O	O
''	O	O
;	O	O
if	B-API	O
(	I-API	O
delta	I-API	O
48	I-API	O
*	I-API	O
HOUR	I-API	O
)	I-API	O
return	O	O
``	O	O
yesterday	O	O
''	O	O
;	O	O
if	B-API	O
(	I-API	O
delta	I-API	O
30	I-API	O
*	I-API	O
DAY	I-API	O
)	I-API	O
return	O	O
ts.Days	O	B-API
+	O	O
``	O	O
days	O	O
ago	O	O
''	O	O
;	O	O
if	B-API	O
(	I-API	O
delta	I-API	O
12	I-API	O
*	I-API	O
MONTH	I-API	O
)	I-API	O
{	O	O
int	O	O
months	O	O
=	O	O
Convert.ToInt32	B-API	O
(	O	O
Math.Floor	B-API	B-API
(	O	I-API
(	O	I-API
double	O	I-API
)	O	I-API
ts.Days	O	O
/	O	O
30	O	O
)	O	O
)	O	O
;	O	O
return	O	O
months	O	O
=	O	O
1	O	O
?	O	O
``	O	O
one	O	O
month	O	O
ago	O	O
''	O	O
:	O	O
months	O	O
+	O	O
``	O	O
months	O	O
ago	O	O
''	O	O
;	O	O
}	O	O
else	O	O
{	O	O
int	O	O
years	O	O
=	O	O
Convert.ToInt32	B-API	O
(	O	O
Math.Floor	B-API	B-API
(	O	I-API
(	O	I-API
double	O	I-API
)	O	I-API
ts.Days	O	O
/	O	O
365	O	O
)	O	O
)	O	O
;	O	O
return	O	O
years	O	O
=	O	O
1	O	O
?	O	O
``	O	O
one	O	O
year	O	O
ago	O	O
''	O	O
:	O	O
years	O	O
+	O	O
``	O	O
years	O	O
ago	O	O
''	O	O
;	O	O
}	O	O
I	O	O
thought	O	O
I	O	O
'd	O	O
give	O	O
this	O	O
a	O	O
shot	O	O
using	O	O
classes	O	O
and	O	O
polymorphism	O	O
.	O	O
I	O	O
had	O	O
a	O	O
previous	O	O
iteration	O	O
which	O	O
used	O	O
sub-classing	O	O
which	O	O
ended	O	O
up	O	O
having	O	O
way	O	O
too	O	O
much	O	O
overhead	O	O
.	O	O
I	O	O
've	O	O
switched	O	O
to	O	O
a	O	O
more	O	O
flexible	O	O
delegate	O	O
/	O	O
public	O	O
property	O	O
object	O	O
model	O	O
which	O	O
is	O	O
significantly	O	O
better	O	O
.	O	O
My	O	O
code	O	O
is	O	O
very	O	O
slightly	O	O
more	O	O
accurate	O	O
,	O	O
I	O	O
wish	O	O
I	O	O
could	O	O
come	O	O
up	O	O
with	O	O
a	O	O
better	O	O
way	O	O
to	O	O
generate	O	O
``	O	O
months	O	O
ago	O	O
''	O	O
that	O	O
did	O	O
n't	O	O
seem	O	O
too	O	O
over-engineered	O	O
.	O	O
I	O	O
think	O	O
I	O	O
'd	O	O
still	O	O
stick	O	O
with	O	O
Jeff	O	O
's	O	O
if-then	O	O
cascade	O	O
because	O	O
it	O	O
's	O	O
less	O	O
code	O	O
and	O	O
it	O	O
's	O	O
simpler	O	O
(	O	O
it	O	O
's	O	O
definitely	O	O
easier	O	O
to	O	O
ensure	O	O
it	O	O
'll	O	O
work	O	O
as	O	O
expected	O	O
)	O	O
.	O	O
For	O	O
the	O	O
below	O	O
code	O	O
PrintRelativeTime.GetRelativeTimeMessage	B-API	B-API
(	I-API	I-API
TimeSpan	I-API	I-API
ago	I-API	I-API
)	I-API	I-API
returns	O	O
the	O	O
relative	O	O
time	O	O
message	O	O
(	O	O
e.g	O	O
.	O	O
``	O	O
yesterday	O	O
''	O	O
)	O	O
.	O	O
public	B-API	O
class	I-API	O
RelativeTimeRange	I-API	O
:	I-API	O
IComparable	I-API	O
{	O	O
public	O	O
TimeSpan	O	O
UpperBound	O	O
{	O	O
get	O	O
;	O	O
set	O	O
;	O	O
}	O	O
public	O	O
delegate	B-API	O
string	I-API	O
;	O	O
public	O	O
RelativeTimeTextDelegate	B-API	O
MessageCreator	I-API	O
{	O	O
get	O	O
;	O	O
set	O	O
;	O	O
}	O	O
public	O	O
int	O	O
{	O	O
if	O	O
)	O	O
{	O	O
return	O	O
1	O	O
;	O	O
}	O	O
//	O	O
note	O	O
that	O	O
this	O	O
sorts	O	O
in	O	O
reverse	O	O
order	O	O
to	O	O
the	O	O
way	O	O
you	O	O
'd	O	O
expect	O	O
,	O	O
//	O	O
this	O	O
saves	O	O
having	O	O
to	O	O
reverse	O	O
a	O	O
list	O	O
later	O	O
return	O	O
(	O	O
obj	O	O
as	O	O
;	O	O
}	O	O
}	O	O
public	O	O
class	B-API	O
PrintRelativeTime	I-API	O
{	O	O
private	O	O
static	B-API	O
ListRelativeTimeRange	I-API	O
timeRanges	I-API	O
;	O	O
static	O	O
{	O	O
timeRanges	O	O
=	O	O
new	O	O
ListRelativeTimeRange	B-API	O
{	O	O
new	O	O
RelativeTimeRange	B-API	O
{	O	O
UpperBound	B-API	O
=	O	O
,	O	O
MessageCreator	B-API	O
=	O	O
(	O	O
delta	O	O
)	O	O
=	O	O
{	O	O
return	O	O
``	O	O
one	O	O
second	O	O
ago	O	O
''	O	O
;	O	O
}	O	O
}	O	O
,	O	O
new	O	O
RelativeTimeRange	B-API	O
{	O	O
UpperBound	B-API	O
=	O	O
,	O	O
MessageCreator	B-API	O
=	O	O
(	O	O
delta	O	O
)	O	O
=	O	O
{	O	O
return	O	O
delta.Seconds	B-API	O
+	O	O
``	O	O
seconds	O	O
ago	O	O
''	O	O
;	O	O
}	O	O
}	O	O
,	O	O
new	O	O
RelativeTimeRange	B-API	O
{	O	O
UpperBound	B-API	O
=	O	O
,	O	O
MessageCreator	B-API	O
=	O	O
(	O	O
delta	O	O
)	O	O
=	O	O
{	O	O
return	O	O
``	O	O
one	O	O
minute	O	O
ago	O	O
''	O	O
;	O	O
}	O	O
}	O	O
,	O	O
new	O	O
RelativeTimeRange	B-API	O
{	O	O
UpperBound	B-API	O
=	O	O
,	O	O
MessageCreator	B-API	O
=	O	O
(	O	O
delta	O	O
)	O	O
=	O	O
{	O	O
return	O	O
delta.Minutes	O	O
+	O	O
``	O	O
minutes	O	O
ago	O	O
''	O	O
;	O	O
}	O	O
}	O	O
,	O	O
new	O	O
RelativeTimeRange	B-API	O
{	O	O
UpperBound	B-API	O
=	O	O
,	O	O
MessageCreator	B-API	O
=	O	O
(	O	O
delta	O	O
)	O	O
=	O	O
{	O	O
return	O	O
``	O	O
one	O	O
hour	O	O
ago	O	O
''	O	O
;	O	O
}	O	O
}	O	O
,	O	O
new	O	O
RelativeTimeRange	B-API	O
{	O	O
UpperBound	B-API	O
=	O	O
,	O	O
MessageCreator	B-API	O
=	O	O
(	O	O
delta	O	O
)	O	O
=	O	O
{	O	O
return	O	O
delta.Hours	O	O
+	O	O
``	O	O
hours	O	O
ago	O	O
''	O	O
;	O	O
}	O	O
}	O	O
,	O	O
new	O	O
RelativeTimeRange	B-API	O
{	O	O
UpperBound	B-API	O
=	O	O
,	O	O
MessageCreator	B-API	O
=	O	O
(	O	O
delta	O	O
)	O	O
=	O	O
{	O	O
return	O	O
``	O	O
yesterday	O	O
''	O	O
;	O	O
}	O	O
}	O	O
,	O	O
new	O	O
RelativeTimeRange	B-API	O
{	O	O
UpperBound	B-API	O
=	O	O
)	O	O
,	O	O
MessageCreator	B-API	O
=	O	O
(	O	O
delta	O	O
)	O	O
=	O	O
{	O	O
return	O	O
delta.Days	O	O
+	O	O
``	O	O
days	O	O
ago	O	O
''	O	O
;	O	O
}	O	O
}	O	O
,	I-API	O
new	O	O
RelativeTimeRange	B-API	O
{	O	O
UpperBound	B-API	O
=	O	O
)	O	O
,	O	O
MessageCreator	B-API	O
=	O	O
(	O	O
delta	O	O
)	O	O
=	O	O
{	O	O
return	O	O
``	O	O
one	O	O
month	O	O
ago	O	O
''	O	O
;	O	O
}	O	O
}	O	O
,	O	O
new	O	O
RelativeTimeRange	B-API	O
{	O	O
UpperBound	B-API	O
=	O	O
)	O	O
,	O	O
MessageCreator	B-API	O
=	O	O
(	O	O
delta	O	O
)	O	O
=	O	O
{	O	O
return	O	O
+	O	O
``	O	O
months	O	O
ago	O	O
''	O	O
;	O	O
}	O	O
}	O	O
,	O	O
new	O	O
RelativeTimeRange	B-API	O
{	O	O
UpperBound	B-API	O
=	O	O
)	O	O
,	O	O
MessageCreator	B-API	O
=	O	O
(	O	O
delta	O	O
)	O	O
=	O	O
{	O	O
return	O	O
``	O	O
one	O	O
year	O	O
ago	O	O
''	O	O
;	O	O
}	O	O
}	O	O
,	O	O
new	O	O
RelativeTimeRange	B-API	O
{	O	O
UpperBound	B-API	O
=	O	O
TimeSpan.MaxValue	B-API	O
,	O	O
MessageCreator	B-API	O
=	O	O
(	O	O
delta	O	O
)	O	O
=	O	O
{	O	O
return	O	O
+	O	O
``	O	O
years	O	O
ago	O	O
''	O	O
;	O	O
}	O	O
}	O	O
}	O	O
;	O	O
;	O	O
}	O	O
public	O	O
static	B-API	O
string	I-API	O
{	O	O
RelativeTimeRange	B-API	O
postRelativeDateRange	O	O
=	O	O
timeRanges	B-API	O
[	I-API	O
0	I-API	O
]	I-API	O
;	O	O
foreach	B-API	O
(	I-API	O
var	I-API	O
timeRange	I-API	O
in	I-API	O
timeRanges	I-API	O
)	I-API	O
{	O	O
if	O	O
=	O	O
0	O	O
)	O	O
{	O	O
postRelativeDateRange	O	O
=	O	O
timeRange	O	O
;	O	O
}	O	O
}	O	O
return	O	O
;	O	O
(	O	O
TimeSpan	O	O
timeDelta	B-API	O
)	I-API	O
(	I-API	O
object	O	O
obj	O	O
)	O	O
!	O	O
(	O	O
obj	O	O
is	O	O
RelativeTimeRange	B-API	O
)	O	O
RelativeTimeRange	B-API	O
)	O	O
.UpperBound.CompareTo	B-API	O
(	I-API	O
UpperBound	I-API	O
)	I-API	O
PrintRelativeTime	B-API	O
(	I-API	O
)	I-API	O
TimeSpan.FromSeconds	B-API	B-API
(	I-API	I-API
1	I-API	I-API
)	I-API	I-API
TimeSpan.FromSeconds	B-API	B-API
(	I-API	I-API
60	I-API	I-API
)	I-API	I-API
TimeSpan.FromMinutes	B-API	B-API
(	I-API	I-API
2	I-API	I-API
)	I-API	I-API
TimeSpan.FromMinutes	B-API	B-API
(	I-API	I-API
60	I-API	I-API
)	I-API	I-API
TimeSpan.FromHours	B-API	B-API
(	I-API	I-API
2	I-API	I-API
)	I-API	I-API
TimeSpan.FromHours	B-API	B-API
(	I-API	I-API
24	I-API	I-API
)	I-API	I-API
TimeSpan.FromDays	B-API	B-API
(	I-API	I-API
2	I-API	I-API
)	I-API	I-API
DateTime.Now.Subtract	B-API	O
(	O	O
DateTime.Now.AddMonths	I-API	B-API
(	I-API	I-API
-1	I-API	I-API
)	I-API	I-API
DateTime.Now.Subtract	B-API	O
(	O	O
DateTime.Now.AddMonths	I-API	B-API
(	I-API	I-API
-2	I-API	I-API
)	I-API	I-API
DateTime.Now.Subtract	B-API	B-API
(	O	O
DateTime.Now.AddYears	I-API	B-API
(	I-API	I-API
-1	I-API	I-API
)	I-API	I-API
int	O	O
)	O	O
Math.Floor	B-API	B-API
(	I-API	O
delta.TotalDays	I-API	O
/	I-API	O
30	I-API	O
)	I-API	O
DateTime.Now.Subtract	B-API	B-API
(	O	O
DateTime.Now.AddYears	I-API	B-API
(	I-API	I-API
-2	I-API	I-API
)	I-API	I-API
int	O	O
)	O	O
Math.Floor	B-API	B-API
(	I-API	O
delta.TotalDays	I-API	O
/	I-API	O
365.24D	I-API	O
)	I-API	O
timeRanges.Sort	B-API	B-API
(	I-API	I-API
)	I-API	I-API
(	O	O
TimeSpan	O	O
ago	O	O
)	O	O
(	O	O
ago.CompareTo	B-API	B-API
(	I-API	I-API
timeRange.UpperBound	I-API	I-API
)	I-API	I-API
postRelativeDateRange.MessageCreator	B-API	B-API
(	I-API	I-API
ago	I-API	I-API
)	I-API	I-API
The	O	O
size	O	O
of	O	O
the	O	O
file	O	O
is	O	O
sent	O	O
as	O	O
the	O	O
Content-Length	O	O
header	O	O
.	O	O
Here	O	O
is	O	O
how	O	O
to	O	O
get	O	O
it	O	O
with	O	O
urllib	B-API	O
:	O	O
site	O	O
=	O	O
meta	O	O
=	O	O
print	B-API	O
urllib.urlopen	B-API	B-API
(	I-API	I-API
``	I-API	I-API
http	I-API	I-API
:	I-API	I-API
//python.org	I-API	I-API
''	I-API	I-API
)	I-API	I-API
site.info	B-API	B-API
(	I-API	I-API
)	I-API	I-API
meta.getheaders	B-API	B-API
(	I-API	I-API
``	I-API	I-API
Content-Length	I-API	I-API
''	I-API	I-API
)	I-API	I-API
Using	O	O
the	O	O
returned-urllib-object	B-API	O
method	O	O
info	B-API	B-API
(	I-API	I-API
)	I-API	I-API
,	O	O
you	O	O
can	O	O
get	O	O
various	O	O
information	O	O
on	O	O
the	O	O
retrived	O	O
document	O	O
.	O	O
Example	O	O
of	O	O
grabbing	O	O
the	O	O
current	O	O
Google	O	O
logo	O	O
:	O	O
import	B-API	O
urllib	I-API	O
d	O	O
=	O	O
print	B-API	O
Content-Type	O	O
:	O	O
image/gifLast-Modified	O	O
:	O	O
Thu	O	O
,	O	O
07	O	O
Aug	O	O
2008	O	O
16:20:19	O	O
GMT	O	O
Expires	O	O
:	O	O
Sun	O	O
,	O	O
17	O	O
Jan	O	O
2038	O	O
19:14:07	O	O
GMT	O	O
Cache-Control	O	O
:	O	O
public	O	O
Date	B-API	O
:	O	O
Fri	O	O
,	O	O
08	O	O
Aug	O	O
2008	O	O
13:40:41	O	O
GMT	O	O
Server	O	O
:	O	O
gws	O	O
Content-Length	O	O
:	O	O
20172	O	O
Connection	O	O
:	O	O
urllib.urlopen	B-API	B-API
(	I-API	I-API
``	I-API	I-API
http	I-API	I-API
:	I-API	I-API
//www.google.co.uk/logos/olympics08_opening.gif	I-API	I-API
''	I-API	I-API
)	I-API	I-API
d.info	B-API	B-API
(	I-API	I-API
)	I-API	I-API
It	O	O
's	O	O
a	O	O
dict	O	O
,	O	O
so	O	O
to	O	O
get	O	O
the	O	O
size	O	O
of	O	O
the	O	O
file	O	O
,	O	O
you	O	O
do	O	O
urllibobject.info	B-API	B-API
(	I-API	I-API
)	I-API	I-API
print	B-API	O
f.info	B-API	B-API
(	I-API	I-API
)	I-API	I-API
And	O	O
to	O	O
get	O	O
the	O	O
size	O	O
of	O	O
the	O	O
local	O	O
file	O	O
(	O	O
for	O	O
comparison	O	O
)	O	O
,	O	O
you	O	O
can	O	O
use	O	O
the	O	O
os.stat	B-API	B-API
(	I-API	I-API
)	I-API	I-API
command	O	O
:	O	O
os.stat	B-API	B-API
(	I-API	I-API
``	I-API	I-API
/the/local/file.zip	I-API	I-API
''	I-API	I-API
)	I-API	I-API
Also	O	O
if	O	O
the	O	O
server	O	O
you	O	O
are	O	O
connecting	O	O
to	O	O
supports	O	O
it	O	O
,	O	O
look	O	O
at	O	O
Etags	O	O
and	O	O
the	O	O
If-Modified-Since	O	O
and	O	O
If-None-Match	O	O
headers	O	O
.	O	O
Using	O	O
these	O	O
will	O	O
take	O	O
advantage	O	O
of	O	O
the	O	O
webserver	O	O
's	O	O
caching	O	O
rules	O	O
and	O	O
will	O	O
return	O	O
a	O	O
304	O	O
Not	O	O
Modified	O	O
status	O	O
code	O	O
if	O	O
the	O	O
content	O	O
has	O	O
n't	O	O
changed	O	O
.	O	O
I	O	O
have	O	O
reproduced	O	O
what	O	O
you	O	O
are	O	O
seeing	O	O
:	O	O
import	B-API	O
urllib	B-API	O
,	O	O
oslink	O	O
=	O	O
``	O	O
http	O	O
:	O	O
//python.org	O	O
''	O	O
print	I-API	O
``	O	O
opening	O	O
url	O	O
:	O	O
''	O	O
,	O	O
linksite	O	O
=	O	O
meta	O	O
=	O	O
print	B-API	O
``	O	O
Content-Length	O	O
:	O	O
''	O	O
,	O	O
[	O	O
0	O	O
]	O	O
f	O	O
=	O	O
print	B-API	O
``	O	O
File	B-API	O
on	O	O
f	O	O
=	O	O
f	O	O
=	O	O
print	B-API	O
``	O	O
File	B-API	O
on	O	O
disk	O	O
after	O	O
print	O	O
.st_size	O	O
returns	O	O
:	O	O
''	O	O
,	O	O
urllib.urlopen	B-API	B-API
(	I-API	I-API
link	I-API	I-API
)	I-API	I-API
site.info	B-API	B-API
(	I-API	I-API
)	I-API	I-API
meta.getheaders	B-API	B-API
(	I-API	I-API
``	I-API	I-API
Content-Length	I-API	I-API
''	I-API	I-API
)	I-API	I-API
(	O	O
``	O	O
out.txt	O	O
''	O	O
,	O	O
``	O	O
r	O	O
''	O	O
)	O	O
disk	O	O
:	O	O
''	O	O
,	O	O
len	O	O
(	O	O
f.read	B-API	B-API
(	I-API	I-API
)	I-API	I-API
)	O	I-API
f.close	B-API	B-API
(	I-API	I-API
)	I-API	I-API
(	O	O
``	O	O
out.txt	O	O
''	O	O
,	O	O
``	O	O
w	O	O
''	O	O
)	O	O
f.write	B-API	O
(	O	O
site.read	B-API	B-API
(	I-API	I-API
)	I-API	I-API
)	O	I-API
site.close	B-API	B-API
(	I-API	I-API
)	I-API	I-API
f.close	B-API	B-API
(	I-API	I-API
)	I-API	I-API
(	O	O
``	O	O
out.txt	O	O
''	O	O
,	O	O
``	O	O
r	O	O
''	O	O
)	O	O
download	O	O
:	O	O
''	O	O
,	O	O
len	O	O
(	O	O
f.read	B-API	B-API
(	I-API	I-API
)	I-API	I-API
)	O	I-API
f.close	B-API	B-API
(	I-API	I-API
)	I-API	I-API
``	O	O
os.stat	B-API	B-API
(	I-API	I-API
)	I-API	I-API
os.stat	B-API	B-API
(	I-API	I-API
``	I-API	I-API
out.txt	I-API	I-API
''	I-API	I-API
)	I-API	I-API
Outputs	O	O
this	O	O
:	O	O
opening	O	O
url	O	O
:	O	O
http	O	O
:	O	O
//python.orgContent-Length	O	O
:	O	O
16535File	O	O
on	O	O
disk	O	O
:	O	O
16535File	O	O
on	O	O
disk	O	O
after	O	O
download	O	O
:	O	O
.st_size	O	O
returns	O	O
:	O	O
16535os.stat	B-API	B-API
(	I-API	I-API
)	I-API	I-API
What	O	O
am	O	O
I	O	O
doing	O	O
wrong	O	O
here	O	O
?	O	O
Is	O	O
os.stat	B-API	B-API
(	I-API	I-API
)	I-API	I-API
.st_size	I-API	O
not	O	O
returning	O	O
the	O	O
correct	O	O
size	O	O
?	O	O
Edit	O	O
:	O	O
OK	O	O
,	O	O
I	O	O
figured	O	O
out	O	O
what	O	O
the	O	O
problem	O	O
was	O	O
:	O	O
import	B-API	O
urllib	B-API	O
,	O	O
oslink	O	O
=	O	O
``	O	O
http	O	O
:	O	O
//python.org	O	O
''	O	O
print	B-API	O
``	O	O
opening	O	O
url	O	O
:	O	O
''	O	O
,	O	O
linksite	O	O
=	O	O
meta	O	O
=	O	O
print	B-API	O
``	O	O
Content-Length	O	O
:	O	O
''	O	O
,	O	O
[	O	O
0	O	O
]	O	O
f	O	O
=	O	O
print	B-API	O
``	O	O
File	B-API	O
on	O	O
f	O	O
=	O	O
f	O	O
=	O	O
print	O	O
``	O	O
File	B-API	O
on	O	O
disk	O	O
after	O	O
print	B-API	O
.st_size	O	O
returns	O	O
:	O	O
''	O	O
,	O	O
urllib.urlopen	B-API	B-API
(	I-API	I-API
link	I-API	I-API
)	I-API	I-API
site.info	B-API	B-API
(	I-API	I-API
)	I-API	I-API
meta.getheaders	B-API	B-API
(	O	I-API
``	O	I-API
Content-Length	O	I-API
''	O	I-API
)	O	I-API
(	O	O
``	O	O
out.txt	O	O
''	O	O
,	O	O
``	O	O
rb	O	O
''	O	O
)	O	O
disk	B-API	O
:	O	O
''	O	O
,	O	O
len	O	O
(	O	O
f.read	B-API	B-API
(	I-API	I-API
)	I-API	I-API
)	O	I-API
f.close	B-API	B-API
(	I-API	I-API
)	I-API	I-API
(	O	O
``	O	O
out.txt	O	O
''	O	O
,	O	O
``	O	O
wb	O	O
''	O	O
)	O	O
f.write	B-API	O
(	O	O
site.read	B-API	B-API
(	I-API	I-API
)	I-API	I-API
)	O	I-API
site.close	B-API	B-API
(	I-API	I-API
)	I-API	I-API
f.close	B-API	B-API
(	I-API	I-API
)	I-API	I-API
(	O	O
``	O	O
out.txt	O	O
''	O	O
,	O	O
``	O	O
rb	O	O
''	O	O
)	O	O
download	O	O
:	O	O
''	O	O
,	O	O
len	O	O
(	O	O
f.read	B-API	B-API
(	I-API	I-API
)	I-API	I-API
)	O	I-API
f.close	B-API	B-API
(	I-API	I-API
)	I-API	I-API
``	O	O
os.stat	B-API	B-API
(	I-API	I-API
)	I-API	I-API
os.stat	B-API	B-API
(	I-API	I-API
``	I-API	I-API
out.txt	I-API	I-API
''	I-API	I-API
)	I-API	I-API
this	O	O
outputs	O	O
:	O	O
$	O	O
python	O	O
test.pyopening	O	O
url	O	O
:	O	O
http	O	O
:	O	O
//python.orgContent-Length	O	O
:	O	O
16535File	O	O
on	O	O
disk	O	O
:	O	O
16535File	O	O
on	O	O
disk	O	O
after	O	O
download	O	O
:	O	O
.st_size	O	O
returns	O	O
:	O	O
16535os.stat	B-API	B-API
(	I-API	I-API
)	I-API	I-API
Make	O	O
sure	O	O
you	O	O
are	O	O
opening	O	O
both	O	O
files	O	O
for	O	O
binary	O	O
read/write	O	O
.	O	O
//	O	O
open	O	O
for	O	O
binary	O	O
//	O	O
open	O	O
for	O	O
binary	O	B-API
(	O	I-API
filename	O	I-API
,	O	I-API
``	O	I-API
wb	O	I-API
''	O	I-API
)	O	I-API
(	O	O
filename	O	O
,	O	O
``	O	O
rb	O	O
''	O	O
)	O	O
Would	O	O
use	O	O
double.TryParse	B-API	O
,	O	O
it	O	O
has	O	O
performance	O	O
benefits	O	O
.	O	O
I	O	O
'd	O	O
personally	O	O
use	O	O
int.tryparse	B-API	O
,	O	O
then	O	O
double.tryparse	B-API	O
.	O	O
Performance	O	O
on	O	O
those	O	O
methods	O	O
is	O	O
quite	O	O
fast	O	O
.	O	O
They	O	O
both	O	O
return	O	O
a	O	O
Boolean	B-API	O
.	O	O
If	O	O
both	O	O
fail	O	O
then	O	O
you	O	O
have	O	O
a	O	O
string	O	O
,	O	O
per	O	O
how	O	O
you	O	O
defined	O	O
your	O	O
data	O	O
.	O	O
I	O	O
would	O	O
say	O	O
,	O	O
do	O	O
n't	O	O
worry	O	O
so	O	O
much	O	O
about	O	O
such	O	O
micro	O	O
performance	O	O
.	O	O
It	O	O
is	O	O
much	O	O
better	O	O
to	O	O
just	O	O
get	O	O
something	O	O
to	O	O
work	O	O
,	O	O
and	O	O
then	O	O
make	O	O
it	O	O
as	O	O
clear	O	O
and	O	O
concise	O	O
and	O	O
easy	O	O
to	O	O
read	O	O
as	O	O
possible	O	O
.	O	O
The	O	O
worst	O	O
thing	O	O
you	O	O
can	O	O
do	O	O
is	O	O
sacrifice	O	O
readability	O	O
for	O	O
an	O	O
insignificant	O	O
amount	O	O
of	O	O
performance	O	O
.	O	O
In	O	O
the	O	O
end	O	O
,	O	O
the	O	O
best	O	O
way	O	O
to	O	O
deal	O	O
with	O	O
performance	O	O
issues	O	O
is	O	O
to	O	O
save	O	O
them	O	O
for	O	O
when	O	O
you	O	O
have	O	O
data	O	O
that	O	O
indicates	O	O
there	O	O
is	O	O
an	O	O
actual	O	O
performance	O	O
problem	O	O
...	O	O
otherwise	O	O
you	O	O
will	O	O
spend	O	O
a	O	O
lot	O	O
of	O	O
time	O	O
micro-optimizing	O	O
and	O	O
actually	O	O
cause	O	O
higher	O	O
maintenance	O	O
costs	O	O
for	O	O
later	O	O
on	O	O
.	O	O
If	O	O
you	O	O
find	O	O
this	O	O
parsing	O	O
situation	O	O
is	O	O
really	O	O
the	O	O
bottleneck	O	O
in	O	O
your	O	O
application	O	O
,	O	O
THEN	O	O
is	O	O
the	O	O
time	O	O
to	O	O
try	O	O
and	O	O
figure	O	O
out	O	O
what	O	O
the	O	O
fastest	O	O
way	O	O
to	O	O
solve	O	O
the	O	O
problem	O	O
is	O	O
.	O	O
I	O	O
think	O	O
Jeff	O	O
(	O	O
and	O	O
many	O	O
others	O	O
)	O	O
have	O	O
blogged	O	O
about	O	O
this	O	O
sort	O	O
of	O	O
thing	O	O
a	O	O
lot	O	O
.	O	O
If	O	O
the	O	O
data	O	O
modification	O	O
is	O	O
not	O	O
too	O	O
time	O	O
consuming	O	O
(	O	O
meaning	O	O
,	O	O
if	O	O
the	O	O
main	O	O
purpose	O	O
of	O	O
the	O	O
background	O	O
thread	O	O
is	O	O
not	O	O
the	O	O
actual	O	O
data	O	O
modification	O	O
)	O	O
,	O	O
try	O	O
moving	O	O
the	O	O
section	O	O
that	O	O
modifies	O	O
the	O	O
data	O	O
to	O	O
a	O	O
delegate	O	O
and	O	O
Invoke'ing	O	O
that	O	O
delegate	O	O
.	O	O
If	O	O
the	O	O
actual	O	O
heavy	O	O
work	O	O
is	O	O
on	O	O
the	O	O
data	O	O
,	O	O
you	O	O
'll	O	O
probably	O	O
have	O	O
to	O	O
create	O	O
a	O	O
deep	O	O
copy	O	O
of	O	O
this	O	O
data	O	O
to	O	O
pass	O	O
to	O	O
the	O	O
background	O	O
thread	O	O
,	O	O
which	O	O
will	O	O
send	O	O
the	O	O
processed	O	O
data	O	O
back	O	O
to	O	O
the	O	O
UI	O	O
thread	O	O
via	O	O
Invoke	O	O
again	O	O
.	O	O
You	O	O
should	O	O
be	O	O
able	O	O
to	O	O
do	O	O
something	O	O
like	O	O
:	O	O
if	B-API	O
(	I-API	O
control.InvokeRequired	I-API	B-API
)	I-API	O
{	O	O
;	O	O
}	O	O
else	O	O
{	O	O
control.Invoke	B-API	B-API
(	I-API	I-API
delegateWithMyCode	I-API	I-API
)	I-API	I-API
delegateWithMyCode	B-API	B-API
(	I-API	I-API
)	I-API	I-API
InvokeRequired	O	B-API
is	O	O
a	O	O
property	O	O
on	O	O
Controls	O	O
to	O	O
see	O	O
if	O	O
you	O	O
are	O	O
on	O	O
the	O	O
correct	O	O
thread	O	O
,	O	O
then	O	O
Invoke	O	O
will	O	O
invoke	O	O
the	O	O
delegate	O	O
on	O	O
the	O	O
correct	O	O
thread	O	O
.	O	O
UPDATE	O	O
:	O	O
Actually	O	O
,	O	O
at	O	O
my	O	O
last	O	O
job	O	O
we	O	O
did	O	O
something	O	O
like	O	O
this	O	O
:	O	O
private	O	O
void	O	O
{	O	O
if	B-API	O
(	I-API	O
this.InvokeRequired	I-API	B-API
)	I-API	O
{	O	O
,	O	O
someParam	O	O
)	O	O
;	O	O
}	O	O
//	O	O
Regular	O	O
handling	O	O
(	O	O
Object	O	O
someParam	O	O
)	O	O
(	O	O
new	O	O
SomeEventHandlerDelegate	O	O
(	O	O
SomeEventHandler	O	O
)	O	O
which	O	O
removes	O	O
the	O	O
need	O	O
for	O	O
the	O	O
else	O	O
block	O	O
and	O	O
kind	O	O
of	O	O
tightens	O	O
up	O	O
the	O	O
code	O	O
.	O	O
As	O	O
I	O	O
do	O	O
n't	O	O
have	O	O
a	O	O
test	O	O
case	O	O
to	O	O
go	O	O
from	O	O
I	O	O
ca	O	O
n't	O	O
guarantee	O	O
this	O	O
solution	O	O
,	O	O
but	O	O
it	O	O
seems	O	O
to	O	O
me	O	O
that	O	O
a	O	O
scenario	O	O
similar	O	O
to	O	O
the	O	O
one	O	O
used	O	O
to	O	O
update	O	O
progress	O	O
bars	O	O
in	O	O
different	O	O
threads	O	O
(	O	O
use	O	O
a	O	O
delegate	O	O
)	O	O
would	O	O
be	O	O
suitable	O	O
here	O	O
.	O	O
public	O	O
delegate	B-API	O
void	I-API	O
;	O	O
public	O	O
DataBindDelegate	B-API	O
BindData	O	O
=	O	O
new	O	O
;	O	O
public	O	O
void	O	O
{	O	O
DataBindDelegate	B-API	O
(	I-API	O
)	I-API	O
DataBindDelegate	B-API	O
(	I-API	O
DoDataBind	I-API	O
)	I-API	O
DoDataBind	B-API	B-API
(	I-API	I-API
)	I-API	I-API
DataBind	B-API	B-API
(	I-API	I-API
)	I-API	I-API
If	O	O
the	O	O
data	O	O
binding	O	O
needs	O	O
to	O	O
be	O	O
done	O	O
by	O	O
a	O	O
particular	O	O
thread	O	O
,	O	O
then	O	O
let	O	O
that	O	O
thread	O	O
do	O	O
the	O	O
work	O	O
!	O	O
Re	O	O
:	O	O
2004	O	O
No	O	O
,	O	O
you	O	O
will	O	O
only	O	O
move	O	O
the	O	O
code	O	O
that	O	O
changes	O	O
the	O	O
data	O	O
into	O	O
the	O	O
delegate	O	O
function	O	O
(	O	O
because	O	O
the	O	O
data	O	O
change	O	O
is	O	O
what	O	O
triggers	O	O
the	O	O
control	O	O
update	O	O
)	O	O
.	O	O
Other	O	O
than	O	O
that	O	O
,	O	O
you	O	O
should	O	O
not	O	O
have	O	O
to	O	O
write	O	O
anything	O	O
extra	O	O
.	O	O
If	O	O
the	O	O
thread	O	O
call	O	O
is	O	O
``	O	O
illegal	O	O
''	O	O
(	O	O
i.e	O	O
.	O	O
the	O	O
DataBind	O	O
call	O	O
affects	O	O
controls	O	O
that	O	O
were	O	O
not	O	O
created	O	O
in	O	O
the	O	O
thread	O	O
it	O	O
is	O	O
being	O	O
called	O	O
from	O	O
)	O	O
then	O	O
you	O	O
need	O	O
to	O	O
create	O	O
a	O	O
delegate	O	O
so	O	O
that	O	O
even	O	O
if	O	O
the	O	O
decision	O	O
/	O	O
preparation	O	O
for	O	O
the	O	O
DataBind	O	O
is	O	O
not	O	O
done	O	O
in	O	O
the	O	O
control-creating	O	O
thread	O	O
,	O	O
any	O	O
resultant	O	O
modification	O	O
of	O	O
them	O	O
(	O	O
i.e	O	O
.	O	O
DataBind	O	B-API
(	O	I-API
)	O	I-API
)	O	O
will	O	O
be	O	O
.	O	O
You	O	O
would	O	O
call	O	O
my	O	O
code	O	O
from	O	O
the	O	O
worker	O	O
thread	O	O
like	O	O
so	O	O
:	O	O
this.BindData.Invoke	B-API	B-API
(	I-API	I-API
)	I-API	I-API
This	O	O
would	O	O
then	O	O
cause	O	O
the	O	O
original	O	O
thread	O	O
to	O	O
do	O	O
the	O	O
binding	O	O
,	O	O
which	O	O
(	O	O
presuming	O	O
it	O	O
is	O	O
the	O	O
thread	O	O
that	O	O
created	O	O
the	O	O
controls	O	O
)	O	O
should	O	O
work	O	O
.	O	O

[0x7FFD166670E3] ANOMALY: use of REX.w is meaningless (default operand size is 64)
