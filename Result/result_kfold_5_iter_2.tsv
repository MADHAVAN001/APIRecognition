Note	O	O
that	O	O
there	O	O
is	O	O
a	O	O
difference	O	O
between	O	O
and	O	O
regarding	O	O
how	O	O
much	O	O
of	O	O
your	O	O
expression	O	O
is	O	O
evaluated	O	O
.	O	O
is	O	O
known	O	O
as	O	O
a	O	O
short-circuited	O	O
boolean	O	O
AND	O	O
,	O	O
and	O	O
will	O	O
,	O	O
as	O	O
noted	O	O
by	O	O
others	O	O
here	O	O
,	O	O
stop	O	O
early	O	O
if	O	O
the	O	O
result	O	O
can	O	O
be	O	O
determined	O	O
before	O	O
all	O	O
the	O	O
sub-expressions	O	O
are	O	O
evaluated	O	O
.	O	O
is	O	O
known	O	O
as	O	O
a	O	O
logical	O	O
bitwise	O	O
operator	O	O
and	O	O
will	O	O
always	O	O
evaluate	O	O
all	O	O
the	O	O
sub-expressions	O	O
.	O	O
As	O	O
such	O	O
:	O	O
if	O	O
(	O	O
a	O	O
(	O	O
)	O	O
b	O	O
(	O	O
)	O	O
)	O	O
Will	O	O
only	O	O
call	O	O
b	O	O
if	O	O
a	O	O
returns	O	O
true	O	O
.	O	O
however	O	O
,	O	O
this	O	O
:	O	O
if	O	O
(	O	O
a	O	O
(	O	O
)	O	O
b	O	O
(	O	O
)	O	O
)	O	O
Will	O	O
always	O	O
call	O	O
both	O	O
a	O	O
and	O	O
b	O	O
,	O	O
even	O	O
though	O	O
the	O	O
result	O	O
of	O	O
calling	O	O
a	O	O
is	O	O
false	O	O
and	O	O
thus	O	O
known	O	O
to	O	O
be	O	O
false	O	O
regardless	O	O
of	O	O
the	O	O
result	O	O
of	O	O
calling	O	O
b	O	O
.	O	O
This	O	O
same	O	O
difference	O	O
exists	O	O
for	O	O
the	O	O
||	O	O
and	O	O
|	O	O
operators	O	O
.	O	O
Some	O	O
languages	O	O
have	O	O
interesting	O	O
situations	O	O
where	O	O
expressions	O	O
are	O	O
executed	O	O
in	O	O
a	O	O
different	O	O
order	O	O
.	O	O
I	O	O
am	O	O
specifically	O	O
thinking	O	O
of	O	O
Ruby	O	O
,	O	O
but	O	O
I	O	O
'm	O	O
sure	O	O
they	O	O
borrowed	O	O
it	O	O
from	O	O
elsewhere	O	O
(	O	O
probably	O	O
Perl	O	O
)	O	O
.	O	O
The	O	O
expressions	O	O
in	O	O
the	O	O
logic	O	O
will	O	O
stay	O	O
left	O	O
to	O	O
right	O	O
,	O	O
but	O	O
for	O	O
example	O	O
:	O	O
puts	O	O
message	O	O
unless	O	O
The	O	O
above	O	O
will	O	O
evaluate	O	O
``	O	O
message.nil	B-API	O
?	O	O
''	O	O
first	O	O
,	O	O
then	O	O
if	O	O
it	O	O
evaluates	O	O
to	O	O
false	O	O
(	O	O
unless	O	O
is	O	O
like	O	O
if	O	O
except	O	O
it	O	O
executes	O	O
when	O	O
the	O	O
condition	O	O
is	O	O
false	O	O
instead	O	O
of	O	O
true	O	O
)	O	O
,	O	O
``	O	O
puts	O	O
message	O	O
''	O	O
will	O	O
execute	O	O
,	O	O
which	O	O
prints	O	O
the	O	O
contents	O	O
of	O	O
the	O	O
message	O	O
variable	O	O
to	O	O
the	O	O
screen	O	O
.	O	O
It	O	O
's	O	O
kind	O	O
of	O	O
an	O	O
interesting	O	O
way	O	O
to	O	O
structure	O	O
your	O	O
code	O	O
sometimes	O	O
...	O	O
I	O	O
personally	O	O
like	O	O
to	O	O
use	O	O
it	O	O
for	O	O
very	O	O
short	O	O
1	O	O
liners	O	O
like	O	O
the	O	O
above	O	O
.	O	O
Edit	O	O
:	O	O
To	O	O
make	O	O
it	O	O
a	O	O
little	O	O
clearer	O	O
,	O	O
the	O	O
above	O	O
is	O	O
the	O	O
same	O	O
as	O	O
:	O	O
unless	O	O
message.nil	B-API	O
?	O	O
puts	O	O
Nopes	O	O
,	O	O
at	O	O
least	O	O
the	O	O
C	O	B-API
#	O	I-API
compiler	O	O
does	O	O
n't	O	O
work	O	O
backwards	O	O
(	O	O
in	O	O
either	O	O
or	O	O
||	O	O
)	O	O
.	O	O
It	O	O
's	O	O
left	O	O
to	O	O
right	O	O
.	O	O
What	O	O
is	O	O
a	O	O
good	O	O
example	O	O
of	O	O
when	O	O
to	O	O
use	O	O
the	O	O
bitwise	O	O
operator	O	O
instead	O	O
of	O	O
the	O	O
``	O	O
short-circuited	O	O
boolean	O	O
''	O	O
?	O	O
Suppose	O	O
you	O	O
have	O	O
flags	O	O
,	O	O
say	O	O
for	O	O
file	O	O
attributes	O	O
.	O	O
Suppose	O	O
you	O	O
've	O	O
defined	O	O
READ	O	O
as	O	O
4	O	O
,	O	O
WRITE	O	O
as	O	O
2	O	O
,	O	O
and	O	O
EXEC	O	O
as	O	O
1	O	O
.	O	O
In	O	O
binary	O	O
,	O	O
that	O	O
's	O	O
:	O	O
READ	B-API	O
0100	O	O
WRITE	B-API	O
0010	O	O
EXEC	B-API	O
Each	O	O
flag	O	O
has	O	O
one	O	O
bit	O	O
set	O	O
,	O	O
and	O	O
each	O	O
one	O	O
is	O	O
unique	O	O
.	O	O
The	O	O
bitwise	O	O
operators	O	O
let	O	O
you	O	O
combine	O	O
these	O	O
flags	B-API	O
:	O	O
flags	B-API	O
=	O	O
READ	B-API	O
EXEC	B-API	O
;	O	O
//	O	O
value	O	O
of	O	O
flags	B-API	O
is	O	O
@	O	O
shsteimer	O	O
The	O	O
concept	O	O
modesty	O	O
is	O	O
referring	O	O
to	O	O
is	O	O
operator	O	O
overloading	O	O
.	O	O
in	O	O
the	O	O
statement	O	O
:	O	O
...	O	O
A	O	O
is	O	O
evaluated	O	O
first	O	O
,	O	O
if	O	O
it	O	O
evaluates	O	O
to	O	O
false	O	O
,	O	O
B	O	O
is	O	O
never	O	O
evaluated	O	O
.	O	O
The	O	O
same	O	O
applies	O	O
to	O	O
That	O	O
's	O	O
not	O	O
operator	O	O
overloading	O	O
.	O	O
Operator	O	O
overloading	O	O
is	O	O
the	O	O
term	O	O
given	O	O
for	O	O
letting	O	O
you	O	O
define	O	O
custom	O	O
behaviour	O	O
for	O	O
operators	O	O
,	O	O
such	O	O
as	O	O
*	O	O
,	O	O
+	O	O
,	O	O
=	O	O
and	O	O
so	O	O
on	O	O
.	O	O
This	O	O
would	O	O
let	O	O
you	O	O
write	O	O
your	O	O
own	O	O
'Log	O	O
'	O	O
class	O	O
,	O	O
and	O	O
then	O	O
do	O	O
a	O	O
=	O	O
new	O	O
;	O	O
//	O	O
Log	O	O
class	O	O
overloads	O	O
the	O	O
+	O	O
operatora	O	O
+	O	O
``	O	O
some	O	O
string	O	O
''	O	O
;	O	O
//	O	O
Call	O	O
the	O	O
overloaded	O	O
method	O	O
-	O	O
otherwise	O	O
this	O	O
would	O	O
n't	O	O
work	O	O
because	O	O
you	O	O
ca	O	O
n't	O	O
normally	O	O
add	O	O
strings	O	O
to	O	O
Log	B-API	O
(	I-API	O
)	I-API	O
Doing	O	O
this	O	O
||	O	O
//	O	O
be	O	O
never	O	O
runs	O	O
if	O	O
a	O	O
is	O	O
a	O	O
(	O	O
)	O	O
b	O	O
(	O	O
)	O	O
is	O	O
actually	O	O
called	O	O
Short	O	O
Circuit	O	O
Evaluation	O	O
You	O	O
use	O	O
when	O	O
you	O	O
specifically	O	O
want	O	O
to	O	O
evaluate	O	O
all	O	O
the	O	O
sub-expressions	O	O
,	O	O
most	O	O
likely	O	O
because	O	O
they	O	O
have	O	O
side-effects	O	O
you	O	O
want	O	O
,	O	O
even	O	O
though	O	O
the	O	O
final	O	O
result	O	O
will	O	O
be	O	O
false	O	O
and	O	O
thus	O	O
not	O	O
execute	O	O
your	O	O
then	O	O
part	O	O
of	O	O
your	O	O
if-statement	O	O
.	O	O
Note	O	O
that	O	O
and	O	O
|	O	O
operates	O	O
for	O	O
both	O	O
bitwise	O	O
masks	O	O
and	O	O
boolean	O	O
values	O	O
and	O	O
is	O	O
not	O	O
just	O	O
for	O	O
bitwise	O	O
operations	O	O
.	O	O
They	O	O
're	O	O
called	O	O
bitwise	O	O
,	O	O
but	O	O
they	O	O
are	O	O
defined	O	O
for	O	O
both	O	O
integers	O	O
and	O	O
boolean	O	O
data	O	O
types	O	O
in	O	O
C	O	O
#	O	O
.	O	O
When	O	O
things	O	O
are	O	O
all	O	O
in-line	O	O
,	O	O
they	O	O
're	O	O
executed	O	O
left-to-right	O	O
.	O	O
When	O	O
things	O	O
are	O	O
nested	O	O
,	O	O
they	O	O
're	O	O
executed	O	O
inner-to-outer	O	O
.	O	O
This	O	O
may	O	O
seem	O	O
confusing	O	O
as	O	O
usually	O	O
what	O	O
's	O	O
``	O	O
innermost	O	O
''	O	O
is	O	O
on	O	O
the	O	O
right-hand	O	O
side	O	O
of	O	O
the	O	O
line	O	O
,	O	O
so	O	O
it	O	O
seems	O	O
like	O	O
it	O	O
's	O	O
going	O	O
backwards	O	O
...	O	O
For	O	O
example	O	O
a	B-API	O
=	B-API	O
)	B-API	O
(	O	O
5	O	O
,	O	O
GetSummary	B-API	O
(	I-API	O
``	I-API	O
Orion	I-API	O
''	I-API	O
,	I-API	O
GetAddress	B-API	O
(	I-API	O
``	I-API	O
Orion	I-API	O
''	I-API	O
)	I-API	O
Things	O	O
happen	O	O
like	O	O
this	O	O
:	O	O
Call	O	O
with	O	O
the	O	O
literal	O	O
Call	O	O
with	O	O
the	O	O
literal	O	O
and	O	O
the	O	O
result	O	O
of	O	O
Call	O	O
with	O	O
the	O	O
literal	O	O
and	O	O
the	O	O
result	O	O
of	O	O
Assign	O	O
this	O	O
v	O	O
lue	O	O
to	O	O
a	O	O
I	O	O
realise	O	O
this	O	O
question	O	O
has	O	O
already	O	O
been	O	O
answered	O	O
,	O	O
but	O	O
I	O	O
'd	O	O
like	O	O
to	O	O
throw	O	O
in	O	O
another	O	O
bit	O	O
of	O	O
information	O	O
which	O	O
is	O	O
related	O	O
to	O	O
the	O	O
topic	O	O
.	O	O
In	O	O
languages	O	O
,	O	O
like	O	O
C++	O	O
,	O	O
where	O	O
you	O	O
can	O	O
actually	O	O
overload	O	O
the	O	O
behaviour	O	O
of	O	O
the	O	O
and	O	O
||	O	O
operators	O	O
,	O	O
it	O	O
is	O	O
highly	O	O
recommended	O	O
that	O	O
you	O	O
do	O	O
not	O	O
do	O	O
this	O	O
.	O	O
This	O	O
is	O	O
because	O	O
when	O	O
you	O	O
overload	O	O
this	O	O
behaviour	O	O
,	O	O
you	O	O
end	O	O
up	O	O
forcing	O	O
the	O	O
evaluation	O	O
of	O	O
both	O	O
sides	O	O
of	O	O
the	O	O
operation	O	O
.	O	O
This	O	O
does	O	O
two	O	O
things	O	O
:	O	O
It	O	O
breaks	O	O
the	O	O
lazy	O	O
evaluation	O	O
mechanism	O	O
because	O	O
the	O	O
overload	O	O
is	O	O
a	O	O
function	O	O
which	O	O
has	O	O
to	O	O
be	O	O
invoked	O	O
,	O	O
and	O	O
hence	O	O
both	O	O
parameters	O	O
are	O	O
evaluated	O	O
before	O	O
calling	O	O
the	O	O
function	O	O
.	O	O
The	O	O
order	O	O
of	O	O
evaluation	O	O
of	O	O
said	O	O
parameters	O	O
is	O	O
n't	O	O
guaranteed	O	O
and	O	O
can	O	O
be	O	O
compiler	O	O
specific	O	O
.	O	O
Hence	O	O
the	O	O
objects	O	O
would	O	O
n't	O	O
behave	O	O
in	O	O
the	O	O
same	O	O
manner	O	O
as	O	O
they	O	O
do	O	O
in	O	O
the	O	O
examples	O	O
listed	O	O
in	O	O
the	O	O
question/previous	O	O
answers	O	O
.	O	O
For	O	O
more	O	O
info	O	O
,	O	O
have	O	O
a	O	O
read	O	O
of	O	O
Scott	O	O
Meyers	O	O
'	O	O
book	O	O
,	O	O
More	O	O
Effective	O	O
C++	O	O
.	O	O
Cheers	O	O
!	O	O
I	O	O
like	O	O
Orion	O	O
's	O	O
responses	O	O
.	O	O
I	O	O
'll	O	O
add	O	O
two	O	O
things	O	O
:	O	O
The	O	O
left-to-right	O	O
still	O	O
applies	O	O
first	O	O
The	O	O
inner-to-outer	O	O
to	O	O
ensure	O	O
that	O	O
all	O	O
arguments	O	O
are	O	O
resolved	O	O
before	O	O
calling	O	O
the	O	O
function	O	O
Say	O	O
we	O	O
have	O	O
the	O	O
following	O	O
example	O	O
:	O	O
a	O	O
=	O	O
)	O	O
,	O	O
(	O	O
5	O	O
,	O	O
GetSummary	B-API	O
(	I-API	O
``	I-API	O
Orion	I-API	O
''	I-API	O
,	I-API	O
GetAddress	B-API	B-API
(	I-API	I-API
``	I-API	I-API
Orion	I-API	I-API
''	I-API	I-API
)	I-API	I-API
(	O	O
``	O	O
Chris	O	O
''	O	O
,	O	O
GetAddress	B-API	B-API
(	I-API	I-API
``	I-API	I-API
Chris	I-API	I-API
''	I-API	I-API
)	I-API	I-API
Here	O	O
's	O	O
the	O	O
order	O	O
of	O	O
execution	O	O
:	O	O
GetAddress	B-API	O
(	I-API	O
``	I-API	O
Orion	I-API	O
''	I-API	O
)	I-API	O
(	O	O
``	O	O
Orion	O	O
''	O	O
,	O	O
...	O	O
)	O	O
GetAddress	B-API	O
(	I-API	O
``	I-API	O
Chris	I-API	O
''	I-API	O
)	I-API	O
(	O	O
``	O	O
Chris	O	O
''	O	O
,	O	O
...	O	O
)	O	O
Foo	O	O
(	O	O
...	O	O
)	O	O
Assigns	O	O
to	O	O
I	O	O
ca	O	O
n't	O	O
speak	O	O
about	O	O
C	O	O
#	O	O
's	O	O
legal	O	O
requirements	O	O
(	O	O
although	O	O
I	O	O
did	O	O
test	O	O
a	O	O
similar	O	O
example	O	O
using	O	O
Mono	O	O
before	O	O
writing	O	O
this	O	O
post	O	O
)	O	O
,	O	O
but	O	O
this	O	O
order	O	O
is	O	O
guaranteed	O	O
in	O	O
Java	O	O
.	O	O
And	O	O
just	O	O
for	O	O
completeness	O	O
(	O	O
since	O	O
this	O	O
is	O	O
a	O	O
language-agnostic	O	O
thread	O	O
as	O	O
well	O	O
)	O	O
,	O	O
there	O	O
are	O	O
languages	O	O
like	O	O
C	O	O
and	O	O
C++	O	O
,	O	O
where	O	O
the	O	O
order	O	O
is	O	O
not	O	O
guaranteed	O	O
unless	O	O
there	O	O
is	O	O
a	O	O
sequence	O	O
point	O	O
.	O	O
References	O	O
:	O	O
1	O	O
,	O	O
2	O	O
.	O	O
In	O	O
answering	O	O
the	O	O
thread	O	O
's	O	O
question	O	O
,	O	O
however	O	O
,	O	O
and	O	O
are	O	O
sequence	O	O
points	O	O
in	O	O
C++	O	O
(	O	O
unless	O	O
overloaded	O	O
;	O	O
also	O	O
see	O	O
OJ	O	O
's	O	O
excellent	O	O
answer	O	O
)	O	O
.	O	O
So	O	O
some	O	O
examples	O	O
:	O	O
foo	O	B-API
(	O	I-API
)	O	I-API
bar	O	B-API
(	O	I-API
)	O	I-API
foo	O	B-API
(	O	I-API
)	O	I-API
bar	O	B-API
(	O	I-API
)	O	I-API
In	O	O
the	O	O
case	O	O
,	O	O
foo	O	B-API
(	O	I-API
)	O	I-API
is	O	O
guaranteed	O	O
to	O	O
run	O	O
before	O	O
bar	O	O
(	O	O
)	O	O
(	O	O
if	O	O
the	O	O
latter	O	O
is	O	O
run	O	O
at	O	O
all	O	O
)	O	O
,	O	O
since	O	O
is	O	O
a	O	O
sequence	O	O
point	O	O
.	O	O
In	O	O
the	O	O
case	O	O
,	O	O
no	O	O
such	O	O
guarantee	O	O
is	O	O
made	O	O
(	O	O
in	O	O
C	O	O
and	O	O
C++	O	O
)	O	O
,	O	O
and	O	O
indeed	O	O
bar	O	O
(	O	O
)	O	O
can	O	O
run	O	O
before	O	O
foo	O	B-API
(	O	I-API
)	O	I-API
,	O	O
or	O	O
vice	O	O
versa	O	O
.	O	O
``	O	O
C	O	O
#	O	O
:	O	O
Left	O	O
to	O	O
right	O	O
,	O	O
and	O	O
processing	O	O
stops	O	O
if	O	O
a	O	O
match	O	O
(	O	O
evaluates	O	O
to	O	O
true	O	O
)	O	O
is	O	O
found	O	O
.	O	O
''	O	O
Zombie	O	O
sheep	O	O
is	O	O
wrong	O	O
,	O	O
not	O	O
enough	O	O
rep	O	O
to	O	O
down	O	O
vote	O	O
it	O	O
.	O	O
The	O	O
question	O	O
is	O	O
about	O	O
the	O	O
operator	O	O
,	O	O
not	O	O
the	O	O
||	O	O
operator	O	O
.	O	O
In	O	O
the	O	O
case	O	O
of	O	O
evaluation	O	O
will	O	O
stop	O	O
if	O	O
a	O	O
FALSE	O	O
is	O	O
found	O	O
.	O	O
In	O	O
the	O	O
case	O	O
of	O	O
||	O	O
evaluation	O	O
stops	O	O
if	O	O
a	O	O
TRUE	O	O
is	O	O
found	O	O
.	O	O
Do	O	O
you	O	O
need	O	O
to	O	O
open	O	O
the	O	O
locfile	O	O
in	O	O
binary	O	O
using	O	O
?	O	O
f	O	O
=	O	O
open	B-API	B-API
(	I-API	I-API
locfile	I-API	I-API
,	I-API	I-API
``	I-API	I-API
rb	I-API	I-API
''	I-API	I-API
)	I-API	I-API
Well	O	O
if	O	O
you	O	O
go	O	O
under	O	O
the	O	O
properties	O	O
of	O	O
your	O	O
file	O	O
in	O	O
Windows	O	O
or	O	O
a	O	O
*nix	O	O
environment	O	O
,	O	O
you	O	O
will	O	O
notice	O	O
two	O	O
sizes	O	O
.	O	O
One	O	O
is	O	O
the	O	O
sector	O	O
size	O	O
,	O	O
and	O	O
one	O	O
is	O	O
the	O	O
actual	O	O
size	O	O
.	O	O
The	O	O
sector	O	O
size	O	O
is	O	O
the	O	O
number	O	O
of	O	O
sectors	O	O
in	O	O
bytes	O	O
that	O	O
are	O	O
used	O	O
up	O	O
on	O	O
your	O	O
hard	O	O
disk	O	O
.	O	O
That	O	O
is	O	O
because	O	O
two	O	O
files	O	O
can	O	O
not	O	O
be	O	O
in	O	O
the	O	O
same	O	O
sector	O	O
with	O	O
most	O	O
modern	O	O
file	O	O
systems	O	O
,	O	O
so	O	O
if	O	O
your	O	O
file	O	O
fills	O	O
up	O	O
half	O	O
of	O	O
the	O	O
sector	O	O
the	O	O
whole	O	O
sector	O	O
is	O	O
marked	O	O
as	O	O
filled	O	O
.	O	O
So	O	O
you	O	O
might	O	O
be	O	O
comparing	O	O
the	O	O
sector	O	O
file	O	O
size	O	O
to	O	O
the	O	O
actual	O	O
file	O	O
size	O	O
on	O	O
the	O	O
FTP	O	O
server	O	O
or	O	O
vice	O	O
versa	O	O
.	O	O
Small	O	O
files	O	O
take	O	O
up	O	O
a	O	O
whole	O	O
node	O	O
on	O	O
the	O	O
filesystem	O	O
whatever	O	O
size	O	O
that	O	O
is	O	O
.	O	O
My	O	O
host	O	O
tends	O	O
to	O	O
report	O	O
all	O	O
small	O	O
files	O	O
as	O	O
4kb	O	O
in	O	O
ftp	O	O
but	O	O
in	O	O
a	O	O
shell	O	O
gives	O	O
an	O	O
accurate	O	O
size	O	O
so	O	O
it	O	O
might	O	O
be	O	O
a	O	O
'feature	O	O
'	O	O
common	O	O
to	O	O
ftp	O	O
clients	O	O
.	O	O
One	O	O
possibility	O	O
is	O	O
Hudson	O	O
.	O	O
It	O	O
's	O	O
written	O	O
in	O	O
Java	O	O
,	O	O
but	O	O
there	O	O
's	O	O
integration	O	O
with	O	O
Python	O	O
projects	O	O
:	O	O
Hudson	O	O
embraces	O	O
Python	O	O
I	O	O
've	O	O
never	O	O
tried	O	O
it	O	O
myself	O	O
,	O	O
however	O	O
.	O	O
(	O	O
Update	O	O
,	O	O
Sept.	O	O
2011	O	O
:	O	O
After	O	O
a	O	O
trademark	O	O
dispute	O	O
Hudson	O	O
has	O	O
been	O	O
renamed	O	O
to	O	O
Jenkins	O	O
.	O	O
)	O	O
We	O	O
run	O	O
Buildbot	O	O
-	O	O
Trac	O	O
at	O	O
work	O	O
,	O	O
I	O	O
have	O	O
n't	O	O
used	O	O
it	O	O
too	O	O
much	O	O
since	O	O
my	O	O
code	O	O
base	O	O
is	O	O
n't	O	O
part	O	O
of	O	O
the	O	O
release	O	O
cycle	O	O
yet	O	O
.	O	O
But	O	O
we	O	O
run	O	O
the	O	O
tests	O	O
on	O	O
different	O	O
environments	B-API	O
(	I-API	O
OSX/Linux/Win	I-API	O
)	I-API	O
and	O	O
it	O	O
sends	O	O
emails	O	O
--	O	O
and	O	O
it	O	O
's	O	O
written	O	O
in	O	O
python	O	O
.	O	O
Second	O	O
the	O	O
Buildbot	O	O
-	O	O
Trac	O	O
integration	O	O
.	O	O
You	O	O
can	O	O
find	O	O
more	O	O
information	O	O
about	O	O
the	O	O
integration	O	O
on	O	O
the	O	O
Buildbot	O	O
website	O	O
.	O	O
At	O	O
my	O	O
previous	O	O
job	O	O
,	O	O
we	O	O
wrote	O	O
and	O	O
used	O	O
the	O	O
plugin	O	O
they	O	O
mention	B-API	O
(	I-API	O
tracbb	I-API	O
)	I-API	O
.	O	O
What	O	O
the	O	O
plugin	O	O
does	O	O
is	O	O
rewriting	O	O
all	O	O
of	O	O
the	O	O
Buildbot	O	O
urls	O	O
so	O	O
you	O	O
can	O	O
use	O	O
Buildbot	O	O
from	O	O
within	O	O
Trac	B-API	O
.	I-API	O
(	I-API	O
http	I-API	O
:	I-API	O
//example.com/tracbb	I-API	O
)	I-API	O
.	O	O
The	O	O
really	O	O
nice	O	O
thing	O	O
about	O	O
Buildbot	O	O
is	O	O
that	O	O
the	O	O
configuration	O	O
is	O	O
written	O	O
in	O	O
Python	O	O
.	O	O
You	O	O
can	O	O
integrate	O	O
your	O	O
own	O	O
Python	O	O
code	O	O
directly	O	O
to	O	O
the	O	O
configuration	O	O
.	O	O
It	O	O
's	O	O
also	O	O
very	O	O
easy	O	O
to	O	O
write	O	O
your	O	O
own	O	O
BuildSteps	O	O
to	O	O
execute	O	O
specific	O	O
tasks	O	O
.	O	O
We	O	O
used	O	O
BuildSteps	O	O
to	O	O
get	O	O
the	O	O
source	O	O
from	O	O
SVN	O	O
,	O	O
pull	O	O
the	O	O
dependencies	O	O
,	O	O
publish	O	O
test	O	O
results	O	O
to	O	O
WebDAV	O	O
,	O	O
etcetera	O	O
.	O	O
I	O	O
wrote	O	O
an	O	O
X10	O	O
interface	O	O
so	O	O
we	O	O
could	O	O
send	O	O
signals	O	O
with	O	O
build	O	O
results	O	O
.	O	O
When	O	O
the	O	O
build	O	O
failed	O	O
,	O	O
we	O	O
switched	O	O
on	O	O
a	O	O
red	O	O
lava	O	O
lamp	O	O
.	O	O
When	O	O
the	O	O
build	O	O
succeeded	O	O
,	O	O
a	O	O
green	O	O
lava	O	O
lamp	O	O
switched	O	O
on	O	O
.	O	O
Good	O	O
times	O	O
:	O	O
-	O	O
)	O	O
I	O	O
'm	O	O
not	O	O
sure	O	O
if	O	O
this	O	O
would	O	O
be	O	O
handled	O	O
exactly	O	O
the	O	O
same	O	O
way	O	O
for	O	O
webstart	O	O
,	O	O
but	O	O
we	O	O
ran	O	O
into	O	O
this	O	O
situation	O	O
in	O	O
a	O	O
desktop	O	O
application	O	O
when	O	O
dealing	O	O
with	O	O
a	O	O
set	O	O
of	O	O
native	O	O
libraries	O	O
(	O	O
dlls	O	O
in	O	O
our	O	O
case	O	O
)	O	O
.	O	O
Loading	O	O
libA	O	O
before	O	O
libB	O	O
should	O	O
work	O	O
,	O	O
unless	O	O
one	O	O
of	O	O
those	O	O
libraries	O	O
has	O	O
a	O	O
dependency	O	O
that	O	O
is	O	O
unaccounted	O	O
for	O	O
and	O	O
not	O	O
in	O	O
the	O	O
path	O	O
.	O	O
My	O	O
understanding	O	O
is	O	O
that	O	O
once	O	O
it	O	O
gets	O	O
to	O	O
a	O	O
system	O	O
loadLibrary	O	O
call	O	O
(	O	O
i.e	O	O
.	O	O
Java	O	O
has	O	O
found	O	O
the	O	O
library	O	O
in	O	O
its	O	O
java.library.path	B-API	O
and	O	O
is	O	O
now	O	O
telling	O	O
the	O	O
OS	O	O
to	O	O
load	O	O
it	O	O
)	O	O
-	O	O
it	O	O
is	O	O
completely	O	O
dependent	O	O
on	O	O
the	O	O
operating	O	O
system	O	O
to	O	O
find	O	O
any	O	O
dependent	O	O
libraries	O	O
,	O	O
because	O	O
at	O	O
that	O	O
point	O	O
it	O	O
is	O	O
the	O	O
operating	O	O
system	O	O
that	O	O
is	O	O
loading	O	O
the	O	O
library	O	O
for	O	O
the	O	O
process	O	O
,	O	O
and	O	O
the	O	O
OS	O	O
only	O	O
knows	O	O
how	O	O
to	O	O
look	O	O
in	O	O
the	O	O
system	O	O
path	O	O
.	O	O
That	O	O
seems	O	O
hard	O	O
to	O	O
set	O	O
in	O	O
the	O	O
case	O	O
of	O	O
a	O	O
Webstart	O	O
app	O	O
,	O	O
but	O	O
there	O	O
is	O	O
a	O	O
way	O	O
around	O	O
this	O	O
that	O	O
does	O	O
not	O	O
involve	O	O
static	O	O
compiling	O	O
.	O	O
You	O	O
may	O	O
be	O	O
able	O	O
to	O	O
shuffle	O	O
where	O	O
your	O	O
libraries	O	O
are	O	O
-	O	O
I	O	O
am	O	O
unsure	O	O
If	O	O
you	O	O
use	O	O
a	O	O
custom	O	O
classloader	O	O
,	O	O
you	O	O
can	O	O
override	O	O
loadLibrary	O	O
and	O	O
findLibrary	O	O
so	O	O
that	O	O
it	O	O
can	O	O
locate	O	O
your	O	O
libraries	O	O
from	O	O
within	O	O
a	O	O
jar	O	O
in	O	O
your	O	O
classpath	O	O
,	O	O
and	O	O
if	O	O
you	O	O
also	O	O
make	O	O
it	O	O
aware	O	O
of	O	O
your	O	O
native	O	O
library	O	O
dependencies	O	O
(	O	O
i.e	O	O
.	O	O
libB	O	O
depends	O	O
on	O	O
libA	O	O
depends	O	O
on	O	O
libX	O	O
,	O	O
then	O	O
when	O	O
loading	O	O
libB	O	O
you	O	O
can	O	O
catch	O	O
yourself	O	O
and	O	O
ensure	O	O
you	O	O
load	O	O
libA	O	O
first	O	O
,	O	O
and	O	O
in	O	O
checking	O	O
that	O	O
notice	O	O
and	O	O
load	O	O
libX	O	O
first	O	O
.	O	O
Then	O	O
the	O	O
OS	O	O
does	O	O
n't	O	O
try	O	O
to	O	O
find	O	O
a	O	O
library	O	O
that	O	O
is	O	O
n't	O	O
in	O	O
your	O	O
path	O	O
.	O	O
It	O	O
's	O	O
klunky	O	O
and	O	O
a	O	O
bit	O	O
painful	O	O
,	O	O
but	O	O
ensuring	O	O
Java	O	O
finds	O	O
them	O	O
and	O	O
loads	O	O
them	O	O
all	O	O
in	O	O
the	O	O
correct	O	O
order	O	O
can	O	O
work	O	O
.	O	O
Hrm	O	O
.	O	O
I	O	O
do	O	O
n't	O	O
know	O	O
about	O	O
yahoo	O	O
,	O	O
but	O	O
there	O	O
is	O	O
another	O	O
mapping	O	O
website	O	O
that	O	O
provides	O	O
an	O	O
API	O	O
for	O	O
India	O	O
.	O	O
http	O	O
:	O	O
//biz.mapmyindia.com/APIs.html	O	O
Open	O	O
your	O	O
csproj	O	O
file	O	O
in	O	O
notepad	O	O
(	O	O
or	O	O
notepad++	O	O
)	O	O
Find	O	O
the	O	O
line	O	O
:	O	O
Import	O	O
Project=	O	O
''	O	O
$	O	O
(	O	O
MSBuildToolsPath	O	O
)	O	O
\Microsoft.CSharp.targets	O	O
''	O	O
/	O	O
and	O	O
change	O	O
it	O	O
to	O	O
Import	O	O
Project=	O	O
''	O	O
$	O	O
(	O	O
MSBuildBinPath	O	O
)	O	O
\Microsoft.CSharp.targets	O	O
''	O	O
/	O	O
if	O	O
its	O	O
.net	O	O
on	O	O
both	O	O
sides	O	O
:	O	O
think	O	O
you	O	O
should	O	O
use	O	O
binary	O	O
serialization	O	O
and	O	O
send	O	O
the	O	O
byte	O	O
[	O	O
]	O	O
result	O	O
.	O	O
trusting	O	O
your	O	O
struct	O	O
to	O	O
be	O	O
fully	O	O
blittable	O	O
can	O	O
be	O	O
trouble	O	O
.	O	O
you	O	O
will	O	O
pay	O	O
in	O	O
some	O	O
overhead	O	O
(	O	O
both	O	O
cpu	O	O
and	O	O
network	O	O
)	O	O
but	O	O
will	O	O
be	O	O
safe	O	O
.	O	O
If	O	O
you	O	O
need	O	O
to	O	O
populate	O	O
each	O	O
member	O	O
variable	O	O
by	O	O
hand	O	O
you	O	O
can	O	O
generalize	O	O
it	O	O
a	O	O
bit	O	O
as	O	O
far	O	O
as	O	O
the	O	O
primitives	O	O
are	O	O
concerned	O	O
by	O	O
using	O	O
FormatterServices	O	O
to	O	O
retrieve	O	O
in	O	O
order	O	O
the	O	O
list	O	O
of	O	O
variable	O	O
types	O	O
associated	O	O
with	O	O
an	O	O
object	O	O
.	O	O
I	O	O
've	O	O
had	O	O
to	O	O
do	O	O
this	O	O
in	O	O
a	O	O
project	O	O
where	O	O
I	O	O
had	O	O
a	O	O
lot	O	O
of	O	O
different	O	O
message	O	O
types	O	O
coming	O	O
off	O	O
the	O	O
stream	O	O
and	O	O
I	O	O
definitely	O	O
did	O	O
n't	O	O
want	O	O
to	O	O
write	O	O
the	O	O
serializer/deserializer	O	O
for	O	O
each	O	O
message	O	O
.	O	O
Here	O	O
's	O	O
the	O	O
code	O	O
I	O	O
used	O	O
to	O	O
generalize	O	O
the	O	O
deserialization	O	O
from	O	O
a	O	O
byte	O	O
[	O	O
]	O	O
.	O	O
public	O	O
virtual	O	O
bool	O	O
{	O	O
MemberInfo	O	B-API
[	O	I-API
]	O	I-API
members	O	O
=	O	O
)	O	O
;	O	O
object	O	O
[	O	O
]	O	O
values	O	O
=	O	O
;	O	O
int	O	O
j	O	O
=	O	O
0	O	O
;	O	O
for	O	O
(	O	O
int	O	O
i	O	O
=	O	O
0	O	O
;	O	O
i	O	O
members.Length	B-API	B-API
;	O	O
i++	O	O
)	O	O
{	O	O
string	O	O
[	O	O
]	O	O
var	O	O
=	O	O
;	O	O
switch	O	O
(	O	O
var	O	O
[	O	O
0	O	O
]	O	O
)	O	O
{	O	O
case	O	O
``	O	O
UInt32	O	O
''	O	O
:	O	O
values	B-API	O
[	I-API	O
i	I-API	O
]	I-API	O
=	I-API	O
+	I-API	O
(	I-API	O
message	B-API	O
[	I-API	O
j	I-API	O
+	I-API	O
1	I-API	O
]	I-API	O
16	I-API	O
)	I-API	O
+	I-API	O
(	I-API	O
message	B-API	O
[	I-API	O
j	I-API	O
+	I-API	O
2	I-API	O
]	I-API	O
8	I-API	O
)	I-API	O
+	I-API	O
message	B-API	O
[	I-API	O
j	I-API	O
+	I-API	O
3	I-API	O
]	I-API	O
)	I-API	O
;	I-API	O
j	I-API	O
+=	I-API	O
4	I-API	O
;	I-API	O
break	O	O
;	O	O
case	O	O
``	O	O
UInt16	O	O
''	O	O
:	O	O
values	B-API	O
[	I-API	O
i	I-API	O
]	I-API	O
=	I-API	O
+	I-API	O
message	B-API	O
[	I-API	O
j	I-API	O
+	I-API	O
1	I-API	O
]	I-API	O
)	I-API	O
;	I-API	O
j	I-API	O
+=	I-API	O
2	I-API	O
;	I-API	O
break	O	O
;	O	O
case	O	O
``	O	O
Byte	O	O
''	O	O
:	O	O
values	B-API	O
[	I-API	O
i	I-API	O
]	I-API	O
=	I-API	O
(	I-API	O
byte	I-API	O
)	I-API	O
message	B-API	O
[	I-API	O
j++	I-API	O
]	I-API	O
;	I-API	O
break	O	O
;	O	O
case	O	O
``	O	O
UInt32	O	B-API
[	O	I-API
]	O	I-API
''	O	O
:	O	O
if	O	O
(	O	O
values	B-API	O
[	I-API	O
i	I-API	O
]	I-API	O
!	I-API	O
=	I-API	O
null	I-API	O
)	I-API	O
{	I-API	O
int	I-API	O
len	I-API	O
=	I-API	O
values	B-API	O
[	I-API	O
i	I-API	O
]	I-API	O
)	I-API	O
.Length	I-API	O
;	O	O
byte	O	O
[	O	O
]	O	O
b	O	O
=	O	O
new	O	O
byte	O	O
[	O	O
len	O	O
*	O	O
4	O	O
]	O	O
;	O	O
;	O	O
,	O	O
(	O	O
UInt32	O	O
[	O	O
]	O	O
)	O	O
values	B-API	O
[	I-API	O
i	I-API	O
]	I-API	O
,	I-API	O
len	I-API	O
)	I-API	O
;	I-API	O
j	I-API	O
+=	I-API	O
len	I-API	O
*	I-API	O
4	I-API	O
;	I-API	O
}	I-API	O
break	I-API	O
;	I-API	O
case	I-API	O
``	I-API	O
Byte	B-API	B-API
[	I-API	I-API
]	I-API	I-API
''	O	O
:	O	O
if	O	O
(	O	O
values	B-API	O
[	I-API	O
i	I-API	O
]	I-API	O
!	I-API	O
=	I-API	O
null	I-API	O
)	I-API	O
{	O	O
int	O	O
len	O	O
=	O	O
values	B-API	O
[	I-API	O
i	I-API	O
]	I-API	O
)	I-API	O
.Length	I-API	O
;	I-API	O
(	I-API	O
values	B-API	O
[	I-API	O
i	I-API	O
]	I-API	O
)	I-API	O
,	I-API	O
0	I-API	O
,	I-API	O
len	I-API	O
)	I-API	O
;	I-API	O
j	I-API	O
+=	I-API	O
len	I-API	O
;	I-API	O
}	I-API	O
break	O	O
;	O	O
default	O	O
:	O	O
throw	O	O
new	O	O
;	O	O
}	O	O
}	O	O
;	O	O
return	O	O
true	O	O
;	O	O
(	O	O
byte	O	O
[	O	O
]	O	O
message	B-API	O
)	I-API	O
(	O	O
this.GetType	O	B-API
(	O	I-API
)	O	I-API
(	O	O
this	O	O
,	O	O
members	B-API	O
)	I-API	O
[	I-API	O
i	I-API	O
]	I-API	O
.ToString	I-API	B-API
(	I-API	I-API
)	I-API	I-API
.Split	I-API	B-API
(	I-API	I-API
new	I-API	I-API
char	I-API	I-API
[	I-API	I-API
]	I-API	I-API
{	I-API	O
'	I-API	O
'	I-API	O
}	I-API	O
)	I-API	O
UInt32	I-API	O
)	I-API	O
(	I-API	O
(	I-API	O
message	I-API	O
[	O	O
j	O	O
]	O	O
24	O	O
)	O	O
UInt16	O	O
)	O	O
(	O	O
(	O	O
message	O	O
[	O	O
j	O	O
]	O	O
8	O	O
)	O	O
(	B-API	O
(	I-API	O
UInt32	I-API	B-API
[	I-API	I-API
]	I-API	I-API
)	I-API	I-API
(	O	O
message	O	O
,	O	O
j	O	O
,	O	O
b	O	O
,	O	O
0	O	O
,	O	O
len	O	O
*	O	O
4	O	O
)	O	O
Array.Copy	B-API	B-API
(	I-API	I-API
Utilities.ByteArrayToUInt32Array	I-API	I-API
(	I-API	I-API
b	I-API	I-API
)	I-API	I-API
(	I-API	O
(	I-API	O
byte	I-API	O
[	I-API	O
]	I-API	O
)	I-API	O
(	O	O
message	O	O
,	O	O
j	O	O
,	O	O
(	O	O
byte	O	O
[	O	O
]	O	O
)	O	O
(	O	O
``	O	O
ByteExtractable	O	O
:	O	O
:SetMessageBytes	O	O
Unsupported	O	O
Type	O	O
:	O	O
``	O	O
+	O	O
var	O	O
[	O	O
1	O	O
]	O	O
+	O	O
``	O	O
is	O	O
of	O	O
type	O	O
``	O	O
+	O	O
var	O	O
[	O	O
0	O	O
]	O	O
)	O	O
(	O	O
this	O	O
,	O	O
members	O	O
,	O	O
values	O	O
)	O	O
Most	O	O
people	O	O
use	O	O
.NET	O	O
serialization	O	O
(	O	O
there	O	O
is	O	O
faster	O	O
binary	O	O
and	O	O
slower	O	O
XML	O	O
formatter	O	O
,	O	O
they	O	O
both	O	O
depend	O	O
on	O	O
reflection	O	O
and	O	O
are	O	O
version	O	O
tolerant	O	O
to	O	O
certain	O	O
degree	O	O
)	O	O
However	O	O
,	O	O
if	O	O
you	O	O
want	O	O
the	O	O
fastest	O	O
(	O	O
unsafe	O	O
)	O	O
way	O	O
-	O	O
why	O	O
not	O	O
:	O	O
Writing	O	O
:	O	O
YourStruct	O	O
o	O	O
=	O	O
new	O	O
YourStruct	O	O
(	O	O
)	O	O
;	O	O
byte	O	O
[	O	O
]	O	O
buffer	O	O
=	O	O
new	O	O
byte	O	O
[	O	O
Marshal.SizeOf	O	O
(	O	O
typeof	O	O
(	O	O
YourStruct	O	O
)	O	O
)	O	O
]	O	O
;	O	O
GCHandle	O	O
handle	O	O
=	O	O
GCHandle.Alloc	B-API	B-API
(	I-API	I-API
buffer	I-API	I-API
,	I-API	I-API
GCHandleType.Pinned	I-API	I-API
)	I-API	I-API
;	O	O
Marshal.StructureToPtr	B-API	O
(	I-API	O
o	I-API	O
,	I-API	O
handle.AddrOfPinnedObject	B-API	B-API
(	I-API	I-API
)	I-API	I-API
,	O	O
false	O	O
)	O	O
;	O	O
handle.Free	O	B-API
(	O	I-API
)	O	I-API
;	O	O
Reading	O	O
:	O	O
handle	O	O
=	O	O
GCHandle.Alloc	B-API	O
(	I-API	O
buffer	I-API	O
,	I-API	O
GCHandleType.Pinned	I-API	O
)	I-API	O
;	O	O
o	O	O
=	O	O
(	O	O
YourStruct	O	O
)	O	O
Marshal.PtrToStructure	B-API	O
(	I-API	O
handle.AddrOfPinnedObject	I-API	B-API
(	I-API	I-API
)	I-API	I-API
,	O	O
typeof	O	O
(	O	O
YourStruct	O	O
)	O	O
)	O	O
;	O	O
handle.Free	B-API	B-API
(	I-API	I-API
)	I-API	I-API
;	O	O
One	O	O
possibility	O	O
lies	O	O
with	O	O
Win32	O	O
ANSI/Unicode	O	O
``	O	O
name-mangling	O	O
''	O	O
,	O	O
which	O	O
turns	O	O
the	O	O
symbol	O	O
into	O	O
either	O	O
or	O	O
.	O	O
There	O	O
are	O	O
three	O	O
possibilities	O	O
:	O	O
Windows.h	O	O
has	O	O
n't	O	O
been	O	O
loaded	O	O
,	O	O
so	O	O
stays	O	O
Windows.h	O	O
was	O	O
loaded	O	O
with	O	O
symbols	O	O
set	O	O
for	O	O
ANSI	O	O
,	O	O
so	O	O
becomes	O	O
Windows.h	O	O
was	O	O
loaded	O	O
with	O	O
symbols	O	O
set	O	O
for	O	O
Unicode	O	O
,	O	O
so	O	O
becomes	O	O
If	O	O
you	O	O
've	O	O
compiled	O	O
two	O	O
different	O	O
files	O	O
in	O	O
ways	O	O
that	O	O
trigger	O	O
two	O	O
different	O	O
scenarios	O	O
,	O	O
you	O	O
'll	O	O
get	O	O
a	O	O
linker	O	O
error	O	O
.	O	O
The	O	O
error	O	O
message	O	O
indicates	O	O
that	O	O
the	O	O
class	O	O
was	O	O
an	O	O
instance	O	O
of	O	O
#	O	O
2	O	O
,	O	O
above	O	O
--	O	O
perhaps	O	O
it	O	O
's	O	O
used	O	O
somewhere	O	O
that	O	O
windows.h	O	O
has	O	O
n't	O	O
been	O	O
loaded	O	O
?	O	O
Other	O	O
things	O	O
I	O	O
'd	O	O
do	O	O
in	O	O
your	O	O
place	O	O
,	O	O
just	O	O
as	O	O
a	O	O
matter	O	O
of	O	O
routine	O	O
:	O	O
1	O	O
)	O	O
Ensure	O	O
that	O	O
my	O	O
include	O	O
and	O	O
library	O	O
paths	O	O
do	O	O
n't	O	O
contain	O	O
anything	O	O
that	O	O
I	O	O
'm	O	O
not	O	O
expecting	O	O
.	O	O
2	O	O
)	O	O
Do	O	O
a	O	O
``	O	O
build	O	O
clean	O	O
''	O	O
and	O	O
then	O	O
manually	O	O
verify	O	O
it	O	O
,	O	O
deleting	O	O
any	O	O
extra	O	O
object	O	O
files	O	O
if	O	O
necessary	O	O
.	O	O
3	O	O
)	O	O
Make	O	O
sure	O	O
there	O	O
are	O	O
n't	O	O
any	O	O
hardcoded	O	O
paths	O	O
in	O	O
include	O	O
statements	O	O
that	O	O
do	O	O
n't	O	O
mean	O	O
what	O	O
they	O	O
meant	O	O
when	O	O
the	O	O
project	O	O
was	O	O
originally	O	O
rebuilt	O	O
.	O	O
EDIT	O	O
:	O	O
Fighting	O	O
with	O	O
the	O	O
formatting	O	O
:	O	O
(	O	O
windows.h	O	O
is	O	O
declared	O	O
at	O	O
the	O	O
top	O	O
of	O	O
IOCompletionPort.h	O	O
as	O	O
an	O	O
include	O	O
-	O	O
I	O	O
was	O	O
sick	O	O
of	O	O
seeing	O	O
7	O	O
lines	O	O
just	O	O
to	O	O
include	O	O
1	O	O
file	O	O
so	O	O
I	O	O
have	O	O
wrapped	O	O
it	O	O
its	O	O
own	O	O
file	O	O
and	O	O
includes	O	O
that	O	O
itself	O	O
.	O	O
This	O	O
also	O	O
contains	O	O
some	O	O
additional	O	O
#	O	O
defines	O	O
(	O	O
ie	O	O
ULONG_PTR	O	O
)	O	O
as	O	O
our	O	O
main	O	O
app	O	O
wo	O	O
n't	O	O
compile	O	O
with	O	O
the	O	O
Platform	O	O
SDK	O	O
installed	O	O
:	O	O
-	O	O
(	O	O
That	O	O
is	O	O
confirmed	O	O
.	O	O
Nothing	O	O
is	O	O
out	O	O
of	O	O
place	O	O
.	O	O
I	O	O
've	O	O
done	O	O
that	O	O
-	O	O
deleted	O	O
the	O	O
build	O	O
directories	O	O
I	O	O
never	O	O
use	O	O
hard-coded	O	O
paths	O	O
.	O	O
Presuming	O	O
you	O	O
have	O	O
n't	O	O
futzed	O	O
around	O	O
with	O	O
the	O	O
Project	O	O
settings	O	O
deleting	O	O
something	O	O
you	O	O
ought	O	O
not	O	O
have	O	O
(	O	O
which	O	O
is	O	O
where	O	O
I	O	O
'd	O	O
expect	O	O
external	O	O
dependencies	O	O
like	O	O
User32.lib	O	O
to	O	O
be	O	O
)	O	O
:	O	O
Check	O	O
Tools	O	O
|	O	O
Options	O	O
|	O	O
Directories	O	O
|	O	O
Libraries	O	O
(	O	O
going	O	O
from	O	O
memory	O	O
here	O	O
)	O	O
and	O	O
ensure	O	O
that	O	O
you	O	O
're	O	O
not	O	O
missing	O	O
the	O	O
common-all-garden	O	O
variety	O	O
lib	O	O
directories	O	O
(	O	O
again	O	O
,	O	O
without	O	O
VC6	O	O
in	O	O
front	O	O
of	O	O
me	O	O
,	O	O
I	O	O
ca	O	O
n't	O	O
tell	O	O
you	O	O
what	O	O
they	O	O
are	O	O
)	O	O
Does	O	O
this	O	O
get	O	O
the	O	O
correct	O	O
answer	O	O
?	O	O
document.getElementById	B-API	B-API
(	I-API	I-API
``	I-API	I-API
newSkill	I-API	I-API
''	I-API	I-API
)	I-API	I-API
.innerHTML	I-API	O
.selectedIndex	B-API	O
]	I-API	O
.value	I-API	O
document.getElementById	B-API	B-API
(	I-API	I-API
'newSkill	I-API	I-API
'	I-API	I-API
)	I-API	I-API
.options	I-API	O
[	I-API	O
document.getElementById	I-API	B-API
(	I-API	I-API
'newSkill	I-API	I-API
'	I-API	I-API
)	I-API	I-API
Should	O	O
work	O	O
This	O	O
should	O	O
return	O	O
the	O	O
text	O	O
value	O	O
of	O	O
the	O	O
selected	O	O
value	O	O
var	O	O
vSkill	O	O
=	O	O
document.getElementById	B-API	B-API
(	I-API	I-API
'newSkill	I-API	I-API
'	I-API	I-API
)	I-API	I-API
;	O	O
var	O	O
vSkillText	O	O
=	O	O
vSkill.options	B-API	O
[	I-API	O
vSkill.selectedIndex	I-API	O
]	I-API	O
.innerHTML	I-API	O
;	O	O
alert	B-API	B-API
(	I-API	I-API
vSkillText	I-API	I-API
)	I-API	I-API
;	O	O
Props	O	O
:	O	O
@	O	O
Tanerax	O	O
for	O	O
reading	O	O
the	O	O
question	O	O
,	O	O
knowing	O	O
what	O	O
was	O	O
asked	O	O
and	O	O
answering	O	O
it	O	O
before	O	O
others	O	O
figured	O	O
it	O	O
out	O	O
.	O	O
Edit	O	O
:	O	O
DownModed	O	O
,	O	O
cause	O	O
I	O	O
actually	O	O
read	O	O
a	O	O
question	O	O
fully	O	O
,	O	O
and	O	O
answered	O	O
it	O	O
,	O	O
sad	O	O
world	O	O
it	O	O
is	O	O
.	O	O
Based	O	O
on	O	O
your	O	O
example	O	O
HTML	O	O
code	O	O
,	O	O
here	O	O
's	O	O
one	O	O
way	O	O
to	O	O
get	O	O
the	O	O
displayed	O	O
text	O	O
of	O	O
the	O	O
currently	O	O
selected	O	O
option	O	O
:	O	O
var	O	O
skillsSelect	O	O
=	O	O
document.getElementById	B-API	B-API
(	I-API	I-API
``	I-API	I-API
newSkill	I-API	I-API
''	I-API	I-API
)	I-API	I-API
;	O	O
var	O	O
selectedText	O	O
=	O	O
skillsSelect.options	B-API	O
[	I-API	O
skillsSelect.selectedIndex	I-API	O
]	I-API	O
.text	I-API	O
;	O	O
in	O	O
1.x	O	O
there	O	O
used	O	O
to	O	O
be	O	O
things	O	O
DataTables	O	O
could	O	O
n't	O	O
do	O	O
which	O	O
DataSets	O	O
could	O	O
(	O	O
do	O	O
n't	O	O
remember	O	O
exactly	O	O
what	O	O
)	O	O
.	O	O
All	O	O
that	O	O
was	O	O
changed	O	O
in	O	O
2.x	O	O
.	O	O
My	O	O
guess	O	O
is	O	O
that	O	O
's	O	O
why	O	O
a	O	O
lot	O	O
of	O	O
examples	O	O
still	O	O
use	O	O
DataSets	O	O
.	O	O
DataTables	O	O
should	O	O
be	O	O
quicker	O	O
as	O	O
they	O	O
are	O	O
more	O	O
lightweight	O	O
.	O	O
If	O	O
you	O	O
're	O	O
only	O	O
pulling	O	O
a	O	O
single	O	O
resultset	O	O
,	O	O
its	O	O
your	O	O
best	O	O
choice	O	O
between	O	O
the	O	O
two	O	O
.	O	O
It	O	O
really	O	O
depends	O	O
on	O	O
the	O	O
sort	O	O
of	O	O
data	O	O
you	O	O
're	O	O
bringing	O	O
back	O	O
.	O	O
Since	O	O
a	O	O
DataSet	O	O
is	O	O
(	O	O
in	O	O
effect	O	O
)	O	O
just	O	O
a	O	O
collection	O	O
of	O	O
DataTable	O	O
objects	O	O
,	O	O
you	O	O
can	O	O
return	O	O
multiple	O	O
distinct	O	O
sets	O	O
of	O	O
data	O	O
into	O	O
a	O	O
single	O	O
,	O	O
and	O	O
therefore	O	O
more	O	O
manageable	O	O
,	O	O
object	O	O
.	O	O
Performance-wise	O	O
,	O	O
you	O	O
're	O	O
more	O	O
likely	O	O
to	O	O
get	O	O
inefficiency	O	O
from	O	O
unoptimized	O	O
queries	O	O
than	O	O
from	O	O
the	O	O
``	O	O
wrong	O	O
''	O	O
choice	O	O
of	O	O
.NET	O	O
construct	O	O
.	O	O
At	O	O
least	O	O
,	O	O
that	O	O
's	O	O
been	O	O
my	O	O
experience	O	O
.	O	O
One	O	O
feature	O	O
of	O	O
the	O	O
DataSet	O	O
is	O	O
that	O	O
if	O	O
you	O	O
can	O	O
call	O	O
multiple	O	O
select	O	O
statements	O	O
in	O	O
your	O	O
stored	O	O
procedures	O	O
,	O	O
the	O	O
DataSet	O	O
will	O	O
have	O	O
one	O	O
DataTable	O	O
for	O	O
each	O	O
.	O	O
There	O	O
are	O	O
three	O	O
ways	O	O
to	O	O
iterate	O	O
over	O	O
a	O	O
result	O	O
set	O	O
.	O	O
The	O	O
best	O	O
way	O	O
in	O	O
terms	O	O
of	O	O
both	O	O
readability	O	O
and	O	O
performance	O	O
is	O	O
usually	O	O
to	O	O
use	O	O
the	O	O
built-in	O	O
cursor	O	O
iterator	O	O
.	O	O
curs.execute	B-API	B-API
(	I-API	I-API
'select	I-API	I-API
*	I-API	I-API
from	I-API	I-API
people	I-API	I-API
'	I-API	I-API
)	I-API	I-API
for	O	O
row	O	O
in	O	O
curs	O	O
:	O	O
print	O	O
row	O	O
You	O	O
can	O	O
fetch	O	O
all	O	O
the	O	O
rows	O	O
into	O	O
a	O	O
list	O	O
,	O	O
but	O	O
this	O	O
can	O	O
have	O	O
some	O	O
bad	O	O
side	O	O
effects	O	O
if	O	O
the	O	O
result	O	O
set	O	O
is	O	O
large	O	O
.	O	O
You	O	O
have	O	O
to	O	O
wait	O	O
for	O	O
the	O	O
entire	O	O
result	O	O
set	O	O
to	O	O
be	O	O
returned	O	O
to	O	O
your	O	O
client	O	O
process	O	O
.	O	O
You	O	O
may	O	O
eat	O	O
up	O	O
a	O	O
lot	O	O
of	O	O
memory	O	O
in	O	O
your	O	O
client	O	O
to	O	O
hold	O	O
the	O	O
built-up	O	O
list	O	O
.	O	O
It	O	O
may	O	O
take	O	O
a	O	O
while	O	O
for	O	O
Python	O	O
to	O	O
construct	O	O
and	O	O
deconstruct	O	O
the	O	O
list	O	O
which	O	O
you	O	O
are	O	O
going	O	O
to	O	O
immediately	O	O
discard	O	O
anyways	O	O
.	O	O
for	O	O
row	O	O
in	O	O
curs.fetchall	B-API	B-API
(	I-API	I-API
)	I-API	I-API
:	O	O
print	O	O
row	O	O
Finally	O	O
,	O	O
you	O	O
can	O	O
loop	O	O
over	O	O
the	O	O
result	O	O
set	O	O
fetching	O	O
one	O	O
row	O	O
at	O	O
a	O	O
time	O	O
.	O	O
In	O	O
general	O	O
,	O	O
there	O	O
's	O	O
no	O	O
particular	O	O
advantage	O	O
in	O	O
doing	O	O
this	O	O
over	O	O
using	O	O
the	O	O
iterator	O	O
.	O	O
If	O	O
there	O	O
is	O	O
something	O	O
in	O	O
your	O	O
programming	O	O
logic	O	O
that	O	O
seems	O	O
to	O	O
indicate	O	O
there	O	O
is	O	O
an	O	O
advantage	O	O
in	O	O
doing	O	O
this	O	O
,	O	O
perhaps	O	O
you	O	O
should	O	O
reconsider	O	O
your	O	O
programming	O	O
logic	O	O
.	O	O
row	O	O
=	O	O
curs.fetchone	B-API	B-API
(	I-API	I-API
)	I-API	I-API
while	O	O
row	O	O
:	O	O
print	O	O
row	O	O
row	O	O
=	O	O
curs.fetchone	B-API	B-API
(	I-API	I-API
)	I-API	I-API
Application.Run	O	O
method	O	O
displays	O	O
one	O	O
(	O	O
or	O	O
more	O	O
)	O	O
forms	O	O
and	O	O
initiates	O	O
the	O	O
standard	O	O
message	O	O
loop	O	O
which	O	O
runs	O	O
until	O	O
all	O	O
the	O	O
forms	O	O
are	O	O
closed	O	O
.	O	O
You	O	O
can	O	O
not	O	O
force	O	O
a	O	O
return	O	O
from	O	O
that	O	O
method	O	O
except	O	O
by	O	O
closing	O	O
all	O	O
your	O	O
forms	O	O
or	O	O
forcing	O	O
an	O	O
application	O	O
shutdown	O	O
.	O	O
You	O	O
can	O	O
,	O	O
however	O	O
,	O	O
pass	O	O
an	O	O
ApplicationContext	O	O
(	O	O
instad	O	O
of	O	O
a	O	O
new	O	O
Form	O	O
(	O	O
)	O	O
)	O	O
to	O	O
Application.Run	O	B-API
method	O	O
and	O	O
ApplicationContext	O	O
can	O	O
be	O	O
used	O	O
to	O	O
launch	O	O
several	O	O
forms	O	O
at	O	O
once	O	O
.	O	O
Your	O	O
application	O	O
will	O	O
only	O	O
end	O	O
when	O	O
all	O	O
of	O	O
those	O	O
are	O	O
closed	O	O
.	O	O
See	O	O
here	O	O
:	O	O
http	O	O
:	O	O
//msdn.microsoft.com/en-us/library/system.windows.forms.application.run.aspx	O	O
Also	O	O
,	O	O
any	O	O
forms	O	O
that	O	O
you	O	O
Show	O	O
non-modally	O	O
will	O	O
continue	O	O
to	O	O
run	O	O
alongside	O	O
your	O	O
main	O	O
form	O	O
,	O	O
which	O	O
will	O	O
enable	O	O
you	O	O
to	O	O
have	O	O
more	O	O
than	O	O
one	O	O
windows	O	O
that	O	O
do	O	O
not	O	O
block	O	O
each	O	O
other	O	O
.	O	O
I	O	O
believe	O	O
this	O	O
is	O	O
actually	O	O
what	O	O
you	O	O
are	O	O
trying	O	O
to	O	O
accomplish	O	O
.	O	O
I	O	O
'm	O	O
sure	O	O
this	O	O
is	O	O
possible	O	O
if	O	O
you	O	O
hack	O	O
at	O	O
it	O	O
hard	O	O
enough	O	O
,	O	O
but	O	O
I	O	O
'd	O	O
suggest	O	O
it	O	O
is	O	O
not	O	O
a	O	O
good	O	O
idea	O	O
.	O	O
'Windows	O	O
'	O	O
(	O	O
that	O	O
you	O	O
see	O	O
on	O	O
the	O	O
screen	O	O
)	O	O
are	O	O
highly	O	O
coupled	O	O
to	O	O
processes	O	O
.	O	O
That	O	O
is	O	O
,	O	O
each	O	O
process	O	O
which	O	O
displays	O	O
any	O	O
GUI	O	O
is	O	O
expected	O	O
to	O	O
have	O	O
a	O	O
Message	O	O
Loop	O	O
,	O	O
which	O	O
processes	O	O
all	O	O
of	O	O
the	O	O
messages	O	O
which	O	O
are	O	O
involved	O	O
with	O	O
creating	O	O
and	O	O
managing	O	O
windows	O	O
(	O	O
things	O	O
like	O	O
'clicked	O	O
the	O	O
button	O	O
'	O	O
,	O	O
'closed	O	O
the	O	O
app	O	O
'	O	O
,	O	O
'redraw	O	O
the	O	O
screen	O	O
'	O	O
and	O	O
so	O	O
on	O	O
.	O	O
Because	O	O
of	O	O
this	O	O
,	O	O
it	O	O
is	O	O
more	O	O
or	O	O
less	O	O
assumed	O	O
that	O	O
if	O	O
you	O	O
have	O	O
any	O	O
message	O	O
loop	O	O
,	O	O
it	O	O
must	O	O
be	O	O
available	O	O
for	O	O
the	O	O
lifetime	O	O
of	O	O
your	O	O
process	O	O
.	O	O
For	O	O
example	O	O
windows	O	O
might	O	O
send	O	O
you	O	O
a	O	O
'quit	O	O
'	O	O
message	O	O
,	O	O
and	O	O
you	O	O
need	O	O
to	O	O
have	O	O
a	O	O
message	O	O
loop	O	O
available	O	O
to	O	O
handle	O	O
that	O	O
,	O	O
even	O	O
if	O	O
you	O	O
've	O	O
got	O	O
nothing	O	O
on	O	O
the	O	O
screen	O	O
.	O	O
Your	O	O
best	O	O
bet	O	O
is	O	O
do	O	O
it	O	O
like	O	O
this	O	O
:	O	O
Make	O	O
a	O	O
fake	O	O
form	O	O
which	O	O
is	O	O
never	O	O
shown	O	O
which	O	O
is	O	O
your	O	O
'main	O	O
app'	O	O
Start	O	O
up	O	O
Call	O	O
Application.Run	B-API	O
and	O	O
pass	O	O
in	O	O
this	O	O
fake	O	O
form	O	O
.	O	O
Do	O	O
your	O	O
work	O	O
in	O	O
another	O	O
thread	O	O
,	O	O
and	O	O
fire	O	O
events	O	O
at	O	O
the	O	O
main	O	O
thread	O	O
when	O	O
you	O	O
need	O	O
to	O	O
do	O	O
Gui	O	O
stuff	O	O
.	O	O
I	O	O
do	O	O
n't	O	O
know	O	O
the	O	O
ASP.NET	O	O
side	O	O
of	O	O
the	O	O
problem	O	O
but	O	O
.NET	O	O
has	O	O
a	O	O
pretty	O	O
powerful	O	O
class	O	O
:	O	O
System.Globalization.CultureInfo	B-API	B-API
.	O	O
You	O	O
can	O	O
use	O	O
the	O	O
following	O	O
code	O	O
to	O	O
parse	O	O
a	O	O
string	O	O
containing	O	O
a	O	O
double	O	O
value	O	O
:	O	O
double	B-API	B-API
d	B-API	B-API
=	B-API	B-API
;	B-API	O
//	I-API	O
--	B-API	O
OR	B-API	O
--	B-API	O
double	I-API	O
d	B-API	O
=	B-API	O
(	O	O
``	O	O
100.20	O	O
''	O	O
,	O	O
CultureInfo.CurrentCulture	B-API	B-API
)	I-API	O
(	O	O
``	O	O
100.20	O	O
''	O	O
,	O	O
CultureInfo.CurrentUICulture	B-API	B-API
)	I-API	O
If	O	O
ASP.NET	O	O
somehow	O	O
(	O	O
i.e	O	O
.	O	O
using	O	O
HTTP	O	O
Request	O	O
headers	O	O
)	O	O
passes	O	O
current	O	O
user	O	O
's	O	O
CultureInfo	O	O
to	O	O
either	O	O
CultureInfo.CurrentCulture	B-API	B-API
or	O	O
CultureInfo.CurrentUICulture	B-API	O
,	O	O
these	O	O
will	O	O
work	O	O
fine	O	O
.	O	O
You	O	O
ca	O	O
n't	O	O
please	O	O
everyone	O	O
.	O	O
If	O	O
I	O	O
enter	O	O
ten	O	O
as	O	O
10.000	O	O
,	O	O
and	O	O
someone	O	O
enters	O	O
ten	O	O
thousand	O	O
as	O	O
10.000	O	O
,	O	O
you	O	O
can	O	O
not	O	O
handle	O	O
that	O	O
without	O	O
some	O	O
knowledge	O	O
of	O	O
the	O	O
culture	O	O
of	O	O
the	O	O
input	O	O
.	O	O
Detect	O	O
the	O	O
culture	O	O
somehow	O	O
(	O	O
browser	O	O
,	O	O
system	O	O
setting	O	O
-	O	O
what	O	O
is	O	O
the	O	O
use	O	O
case	O	O
?	O	O
ASP	O	O
?	O	O
Internal	O	O
app	O	O
,	O	O
or	O	O
open	O	O
to	O	O
the	O	O
world	O	O
?	O	O
)	O	O
,	O	O
or	O	O
provide	O	O
an	O	O
example	O	O
of	O	O
the	O	O
expected	O	O
formatting	O	O
,	O	O
and	O	O
use	O	O
the	O	O
most	O	O
lenient	O	O
parser	O	O
you	O	O
can	O	O
.	O	O
Probably	O	O
something	O	O
like	O	O
:	O	O
double	B-API	O
d	B-API	O
=	B-API	O
(	O	O
``	O	O
5,000.00	O	O
''	O	O
,	O	O
NumberStyles.Any	B-API	B-API
,	O	O
CultureInfo.InvariantCulture	B-API	B-API
)	O	O
I	O	O
think	O	O
the	O	O
best	O	O
you	O	O
can	O	O
do	O	O
in	O	O
this	O	O
case	O	O
is	O	O
to	O	O
take	O	O
their	O	O
input	O	O
and	O	O
then	O	O
show	O	O
them	O	O
what	O	O
you	O	O
think	O	O
they	O	O
meant	O	O
.	O	O
If	O	O
they	O	O
disagree	O	O
,	O	O
show	O	O
them	O	O
the	O	O
format	O	O
you	O	O
're	O	O
expecting	O	O
and	O	O
get	O	O
them	O	O
to	O	O
enter	O	O
it	O	O
again	O	O
.	O	O
The	O	O
difference	O	O
between	O	O
12.345	O	O
in	O	O
French	O	O
and	O	O
English	O	O
is	O	O
a	O	O
factor	O	O
of	O	O
1000	O	O
.	O	O
If	O	O
you	O	O
supply	O	O
an	O	O
expected	O	O
range	O	O
where	O	O
max	O	O
1000*min	O	O
,	O	O
you	O	O
can	O	O
easily	O	O
guess	O	O
.	O	O
Take	O	O
for	O	O
example	O	O
the	O	O
height	O	O
of	O	O
a	O	O
person	O	O
(	O	O
including	O	O
babies	O	O
and	O	O
children	O	O
)	O	O
in	O	O
mm	O	O
.	O	O
By	O	O
using	O	O
a	O	O
range	O	O
of	O	O
200-3000	O	O
,	O	O
an	O	O
input	O	O
of	O	O
1.800	O	O
or	O	O
1,800	O	O
can	O	O
unambiguously	O	O
be	O	O
interpreted	O	O
as	O	O
1	O	O
meter	O	O
and	O	O
80	O	O
centimeters	O	O
,	O	O
whereas	O	O
an	O	O
input	O	O
of	O	O
912.300	O	O
or	O	O
912,300	O	O
can	O	O
unambiguously	O	O
be	O	O
interpreted	O	O
as	O	O
91	O	O
centimeters	O	O
and	O	O
2.3	O	O
millimeters	O	O
.	O	O
From	O	O
my	O	O
experience	O	O
,	O	O
and	O	O
from	O	O
what	O	O
I	O	O
've	O	O
read	O	O
across	O	O
the	O	O
internet	O	O
,	O	O
the	O	O
answer	O	O
is	O	O
``	O	O
No	O	O
,	O	O
''	O	O
it	O	O
is	O	O
not	O	O
guaranteed	O	O
.	O	O
It	O	O
depends	O	O
on	O	O
CPU	O	O
speed	O	O
,	O	O
operating	O	O
system	O	O
,	O	O
flavor	O	O
of	O	O
Linux	O	O
,	O	O
etc	O	O
.	O	O
Maybe	O	O
.	O	O
But	O	O
you	O	O
have	O	O
bigger	O	O
problems	O	O
.	O	O
gettimeofday	B-API	B-API
(	I-API	I-API
)	I-API	I-API
can	O	O
result	O	O
in	O	O
incorrect	O	O
timings	O	O
if	O	O
there	O	O
are	O	O
processes	O	O
on	O	O
your	O	O
system	O	O
that	O	O
change	O	O
the	O	O
timer	O	O
(	O	O
ie	O	O
,	O	O
ntpd	O	O
)	O	O
.	O	O
On	O	O
a	O	O
``	O	O
normal	O	O
''	O	O
linux	O	O
,	O	O
though	O	O
,	O	O
I	O	O
believe	O	O
the	O	O
resolution	O	O
of	O	O
gettimeofday	B-API	O
(	I-API	O
)	I-API	O
is	O	O
10us	O	O
.	O	O
It	O	O
can	O	O
jump	O	O
forward	O	O
and	O	O
backward	O	O
and	O	O
time	O	O
,	O	O
consequently	O	O
,	O	O
based	O	O
on	O	O
the	O	O
processes	O	O
running	O	O
on	O	O
your	O	O
system	O	O
.	O	O
This	O	O
effectively	O	O
makes	O	O
the	O	O
answer	O	O
to	O	O
your	O	O
question	O	O
no	O	O
.	O	O
You	O	O
should	O	O
look	O	O
into	O	O
clock_gettime	B-API	O
(	I-API	O
CLOCK_MONOTONIC	I-API	O
)	I-API	O
for	O	O
timing	O	O
intervals	O	O
.	O	O
It	O	O
suffers	O	O
from	O	O
several	O	O
less	O	O
issues	O	O
due	O	O
to	O	O
things	O	O
like	O	O
multi-core	O	O
systems	O	O
and	O	O
external	O	O
clock	O	O
settings	O	O
.	O	O
Also	O	O
,	O	O
look	O	O
into	O	O
the	O	O
clock_getres	B-API	B-API
(	I-API	I-API
)	I-API	I-API
function	O	O
.	O	O
The	O	O
actual	O	O
resolution	O	O
of	O	O
gettimeofday	B-API	B-API
(	I-API	I-API
)	I-API	I-API
depends	O	O
on	O	O
the	O	O
hardware	O	O
architecture	O	O
.	O	O
Intel	O	O
processors	O	O
as	O	O
well	O	O
as	O	O
SPARC	O	O
machines	O	O
offer	O	O
high	O	O
resolution	O	O
timers	O	O
that	O	O
measure	O	O
microseconds	O	O
.	O	O
Other	O	O
hardware	O	O
architectures	O	O
fall	O	O
back	O	O
to	O	O
the	O	O
systems	O	O
timer	O	O
,	O	O
which	O	O
is	O	O
typically	O	O
set	O	O
to	O	O
100	O	O
Hz	O	O
.	O	O
In	O	O
such	O	O
cases	O	O
,	O	O
the	O	O
time	O	O
resolution	O	O
will	O	O
be	O	O
less	O	O
accurate	O	O
.	O	O
I	O	O
obtained	O	O
this	O	O
answer	O	O
from	O	O
High	O	O
Resolution	O	O
Time	O	O
Measurement	O	O
and	O	O
Timers	O	O
,	O	O
Part	O	O
I	O	O
High	O	O
Resolution	O	O
,	O	O
Low	O	O
Overhead	O	O
Timing	O	O
for	O	O
Intel	O	O
Processors	O	O
If	O	O
you	O	O
're	O	O
on	O	O
Intel	O	O
hardware	O	O
,	O	O
here	O	O
's	O	O
how	O	O
to	O	O
read	O	O
the	O	O
CPU	O	O
real-time	O	O
instruction	O	O
counter	O	O
.	O	O
It	O	O
will	O	O
tell	O	O
you	O	O
the	O	O
number	O	O
of	O	O
CPU	O	O
cycles	O	O
executed	O	O
since	O	O
the	O	O
processor	O	O
was	O	O
booted	O	O
.	O	O
This	O	O
is	O	O
probably	O	O
the	O	O
finest-grained	O	O
counter	O	O
you	O	O
can	O	O
get	O	O
for	O	O
performance	O	O
measurement	O	O
.	O	O
Note	O	O
that	O	O
this	O	O
is	O	O
the	O	O
number	O	O
of	O	O
CPU	O	O
cycles	O	O
.	O	O
On	O	O
linux	O	O
you	O	O
can	O	O
get	O	O
the	O	O
CPU	O	O
speed	O	O
from	O	O
/proc/cpuinfo	O	O
and	O	O
divide	O	O
to	O	O
get	O	O
the	O	O
number	O	O
of	O	O
seconds	O	O
.	O	O
Converting	O	O
this	O	O
to	O	O
a	O	O
double	O	O
is	O	O
quite	O	O
handy	O	O
.	O	O
When	O	O
I	O	O
run	O	O
this	O	O
on	O	O
my	O	O
box	O	O
,	O	O
I	O	O
get	O	O
11867927879484732	O	O
11867927879692217	O	O
it	O	O
took	O	O
this	O	O
long	O	O
to	O	O
call	O	O
printf	O	O
:	O	O
207485	O	O
Here	O	O
's	O	O
the	O	O
Intel	O	O
developer	O	O
's	O	O
guide	O	O
that	O	O
gives	O	O
tons	O	O
of	O	O
detail	O	O
.	O	O
#	O	O
include	O	O
stdio.h	O	O
#	O	O
include	O	O
stdint.h	O	O
inline	O	O
uint64_t	O	O
rdtsc	O	O
(	O	O
)	O	O
{	O	O
uint32_t	O	O
lo	O	O
,	O	O
hi	O	O
;	O	O
__asm__	O	O
__volatile__	O	O
(	O	O
``	O	O
xorl	O	O
%	O	O
%	O	O
eax	O	O
,	O	O
%	O	O
%	O	O
eax\n	O	O
''	O	O
``	O	O
cpuid\n	O	O
''	O	O
``	O	O
rdtsc\n	O	O
''	O	O
:	O	O
``	O	O
=a	O	O
''	O	O
(	O	O
lo	O	O
)	O	O
,	O	O
``	O	O
=d	O	O
''	O	O
(	O	O
hi	O	O
)	O	O
:	O	O
:	O	O
``	O	O
%	O	O
ebx	O	O
''	O	O
,	O	O
``	O	O
%	O	O
ecx	O	O
''	O	O
)	O	O
;	O	O
return	O	O
(	O	O
uint64_t	O	O
)	O	O
hi	O	O
32	O	O
|	O	O
lo	O	O
;	O	O
}	O	O
main	O	O
(	O	O
)	O	O
{	O	O
unsigned	O	O
long	O	O
long	O	O
x	O	O
;	O	O
unsigned	O	O
long	O	O
long	O	O
y	O	O
;	O	O
x	O	O
=	O	O
rdtsc	B-API	B-API
(	I-API	I-API
)	I-API	I-API
;	O	O
printf	B-API	B-API
(	I-API	I-API
``	I-API	I-API
%	I-API	I-API
lld\n	I-API	I-API
''	I-API	I-API
,	I-API	I-API
x	I-API	I-API
)	I-API	I-API
;	O	O
y	O	O
=	O	O
rdtsc	B-API	B-API
(	I-API	I-API
)	I-API	I-API
;	O	O
printf	N-API	B-API
(	I-API	I-API
``	I-API	I-API
%	I-API	I-API
lld\n	I-API	I-API
''	I-API	I-API
,	I-API	I-API
y	I-API	I-API
)	I-API	I-API
;	O	O
printf	B-API	O
(	I-API	O
``	I-API	O
it	I-API	O
took	I-API	O
this	I-API	O
long	I-API	O
to	I-API	O
call	I-API	O
printf	I-API	O
:	I-API	O
%	I-API	O
lld\n	I-API	O
''	I-API	O
,	I-API	O
y-x	I-API	O
)	I-API	O
;	O	O
}	O	O
So	O	O
it	O	O
says	O	O
microseconds	O	O
explicitly	O	O
,	O	O
but	O	O
says	O	O
the	O	O
resolution	O	O
of	O	O
the	O	O
system	O	O
clock	O	O
is	O	O
unspecified	O	O
.	O	O
I	O	O
suppose	O	O
resolution	O	O
in	O	O
this	O	O
context	O	O
means	O	O
how	O	O
the	O	O
smallest	O	O
amount	O	O
it	O	O
will	O	O
ever	O	O
be	O	O
incremented	O	O
?	O	O
The	O	O
data	O	O
structure	O	O
is	O	O
defined	O	O
as	O	O
having	O	O
microseconds	O	O
as	O	O
a	O	O
unit	O	O
of	O	O
measurement	O	O
,	O	O
but	O	O
that	O	O
does	O	O
n't	O	O
mean	O	O
that	O	O
the	O	O
clock	O	O
or	O	O
operating	O	O
system	O	O
is	O	O
actually	O	O
capable	O	O
of	O	O
measuring	O	O
that	O	O
finely	O	O
.	O	O
Like	O	O
other	O	O
people	O	O
have	O	O
suggested	O	O
,	O	O
gettimeofday	B-API	O
(	I-API	O
)	I-API	O
is	O	O
bad	O	O
because	O	O
setting	O	O
the	O	O
time	O	O
can	O	O
cause	O	O
clock	O	O
skew	O	O
and	O	O
throw	O	O
off	O	O
your	O	O
calculation	O	O
.	O	O
clock_gettime	B-API	O
(	I-API	O
CLOCK_MONOTONIC	I-API	O
)	I-API	O
is	O	O
what	O	O
you	O	O
want	O	O
,	O	O
and	O	O
clock_getres	B-API	B-API
(	I-API	I-API
)	I-API	I-API
will	O	O
tell	O	O
you	O	O
the	O	O
precision	O	O
of	O	O
your	O	O
clock	O	O
.	O	O
@	O	O
Bernard	O	O
:	O	O
I	O	O
have	O	O
to	O	O
admit	O	O
,	O	O
most	O	O
of	O	O
your	O	O
example	O	O
went	O	O
straight	O	O
over	O	O
my	O	O
head	O	O
.	O	O
It	O	O
does	O	O
compile	O	O
,	O	O
and	O	O
seems	O	O
to	O	O
work	O	O
,	O	O
though	O	O
.	O	O
Is	O	O
this	O	O
safe	O	O
for	O	O
SMP	O	O
systems	O	O
or	O	O
SpeedStep	O	O
?	O	O
That	O	O
's	O	O
a	O	O
good	O	O
question	O	O
...	O	O
I	O	O
think	O	O
the	O	O
code	O	O
's	O	O
ok.	O	O
From	O	O
a	O	O
practical	O	O
standpoint	O	O
,	O	O
we	O	O
use	O	O
it	O	O
in	O	O
my	O	O
company	O	O
every	O	O
day	O	O
,	O	O
and	O	O
we	O	O
run	O	O
on	O	O
a	O	O
pretty	O	O
wide	O	O
array	O	O
of	O	O
boxes	O	O
,	O	O
everything	O	O
from	O	O
2-8	O	O
cores	O	O
.	O	O
Of	O	O
course	O	O
,	O	O
YMMV	O	O
,	O	O
etc	O	O
,	O	O
but	O	O
it	O	O
seems	O	O
to	O	O
be	O	O
a	O	O
reliable	O	O
and	O	O
low-overhead	O	O
(	O	O
because	O	O
it	O	O
does	O	O
n't	O	O
make	O	O
a	O	O
context	O	O
switch	O	O
into	O	O
system-space	O	O
)	O	O
method	O	O
of	O	O
timing	O	O
.	O	O
Generally	O	O
how	O	O
it	O	O
works	O	O
is	O	O
:	O	O
declare	O	O
the	O	O
block	O	O
of	O	O
code	O	O
to	O	O
be	O	O
assembler	O	O
(	O	O
and	O	O
volatile	O	O
,	O	O
so	O	O
the	O	O
optimizer	O	O
will	O	O
leave	O	O
it	O	O
alone	O	O
)	O	O
.	O	O
execute	O	O
the	O	O
CPUID	O	O
instruction	O	O
.	O	O
In	O	O
addition	O	O
to	O	O
getting	O	O
some	O	O
CPU	O	O
information	O	O
(	O	O
which	O	O
we	O	O
do	O	O
n't	O	O
do	O	O
anything	O	O
with	O	O
)	O	O
it	O	O
synchronizes	O	O
the	O	O
CPU	O	O
's	O	O
execution	O	O
buffer	O	O
so	O	O
that	O	O
the	O	O
timings	O	O
are	O	O
n't	O	O
affected	O	O
by	O	O
out-of-order	O	O
execution	O	O
.	O	O
execute	O	O
the	O	O
rdtsc	B-API	O
(	I-API	O
read	I-API	O
timestamp	I-API	O
)	I-API	O
execution	O	O
.	O	O
This	O	O
fetches	O	O
the	O	O
number	O	O
of	O	O
machine	O	O
cycles	O	O
executed	O	O
since	O	O
the	O	O
processor	O	O
was	O	O
reset	O	O
.	O	O
This	O	O
is	O	O
a	O	O
64-bit	O	O
value	O	O
,	O	O
so	O	O
with	O	O
current	O	O
CPU	O	O
speeds	O	O
it	O	O
will	O	O
wrap	O	O
around	O	O
every	O	O
194	O	O
years	O	O
or	O	O
so	O	O
.	O	O
Interestingly	O	O
,	O	O
in	O	O
the	O	O
original	O	O
Pentium	O	O
reference	O	O
,	O	O
they	O	O
note	O	O
it	O	O
wraps	O	O
around	O	O
every	O	O
5800	O	O
years	O	O
or	O	O
so	O	O
.	O	O
the	O	O
last	O	O
couple	O	O
of	O	O
lines	O	O
store	O	O
the	O	O
values	O	O
from	O	O
the	O	O
registers	O	O
into	O	O
the	O	O
variables	O	O
hi	O	O
and	O	O
lo	O	O
,	O	O
and	O	O
put	O	O
that	O	O
into	O	O
the	O	O
64-bit	O	O
return	O	O
value	O	O
.	O	O
Specific	O	O
notes	O	O
:	O	O
out-of-order	O	O
execution	O	O
can	O	O
cause	O	O
incorrect	O	O
results	O	O
,	O	O
so	O	O
we	O	O
execute	O	O
the	O	O
''	O	O
cpuid	O	O
''	O	O
instruction	O	O
which	O	O
in	O	O
addition	O	O
to	O	O
giving	O	O
you	O	O
some	O	O
information	O	O
about	O	O
the	O	O
cpu	O	O
also	O	O
synchronizes	O	O
any	O	O
out-of-order	O	O
instruction	O	O
execution	O	O
.	O	O
Most	O	O
OS	O	O
's	O	O
synchronize	O	O
the	O	O
counters	O	O
on	O	O
the	O	O
CPUs	O	O
when	O	O
they	O	O
start	O	O
,	O	O
so	O	O
the	O	O
answer	O	O
is	O	O
good	O	O
to	O	O
within	O	O
a	O	O
couple	O	O
of	O	O
nano-seconds	O	O
.	O	O
The	O	O
hibernating	O	O
comment	O	O
is	O	O
probably	O	O
true	O	O
,	O	O
but	O	O
in	O	O
practice	O	O
you	O	O
probably	O	O
do	O	O
n't	O	O
care	O	O
about	O	O
timings	O	O
across	O	O
hibernation	O	O
boundaries	O	O
.	O	O
regarding	O	O
speedstep	O	O
:	O	O
Newer	O	O
Intel	O	O
CPUs	O	O
compensate	O	O
for	O	O
the	O	O
speed	O	O
changes	O	O
and	O	O
returns	O	O
an	O	O
adjusted	O	O
count	O	O
.	O	O
I	O	O
did	O	O
a	O	O
quick	O	O
scan	O	O
over	O	O
some	O	O
of	O	O
the	O	O
boxes	O	O
on	O	O
our	O	O
network	O	O
and	O	O
found	O	O
only	O	O
one	O	O
box	O	O
that	O	O
did	O	O
n't	O	O
have	O	O
it	O	O
:	O	O
a	O	O
Pentium	O	O
3	O	O
running	O	O
some	O	O
old	O	O
database	O	O
server	O	O
.	O	O
(	O	O
these	O	O
are	O	O
linux	O	O
boxes	O	O
,	O	O
so	O	O
I	O	O
checked	O	O
with	O	O
:	O	O
grep	O	O
constant_tsc	O	O
/proc/cpuinfo	O	O
)	O	O
I	O	O
'm	O	O
not	O	O
sure	O	O
about	O	O
the	O	O
AMD	O	O
CPUs	O	O
,	O	O
we	O	O
're	O	O
primarily	O	O
an	O	O
Intel	O	O
shop	O	O
,	O	O
although	O	O
I	O	O
know	O	O
some	O	O
of	O	O
our	O	O
low-level	O	O
systems	O	O
gurus	O	O
did	O	O
an	O	O
AMD	O	O
evaluation	O	O
.	O	O
Hope	O	O
this	O	O
satisfies	O	O
your	O	O
curiosity	O	O
,	O	O
it	O	O
's	O	O
an	O	O
interesting	O	O
and	O	O
(	O	O
IMHO	O	O
)	O	O
under-studied	O	O
area	O	O
of	O	O
programming	O	O
.	O	O
You	O	O
know	O	O
when	O	O
Jeff	O	O
and	O	O
Joel	O	O
were	O	O
talking	O	O
about	O	O
whether	O	O
or	O	O
not	O	O
a	O	O
programmer	O	O
should	O	O
know	O	O
C	O	O
?	O	O
I	O	O
was	O	O
shouting	O	O
at	O	O
them	O	O
,	O	O
``	O	O
hey	O	O
forget	O	O
that	O	O
high-level	O	O
C	O	O
stuff	O	O
...	O	O
assembler	O	O
is	O	O
what	O	O
you	O	O
should	O	O
learn	O	O
if	O	O
you	O	O
want	O	O
to	O	O
know	O	O
what	O	O
the	O	O
computer	O	O
is	O	O
doing	O	O
!	O	O
''	O	O
Wine	O	O
is	O	O
actually	O	O
using	O	O
gettimeofday	B-API	B-API
(	I-API	I-API
)	I-API	I-API
to	O	O
implement	O	O
QueryPerformanceCounter	B-API	O
(	I-API	O
)	I-API	O
and	O	O
it	O	O
is	O	O
known	O	O
to	O	O
make	O	O
many	O	O
Windows	O	O
games	O	O
work	O	O
on	O	O
Linux	O	O
and	O	O
Mac	O	O
.	O	O
Starts	O	O
http	O	O
:	O	O
//source.winehq.org/source/dlls/kernel32/cpu.c	O	O
#	O	O
L312	O	O
leads	O	O
to	O	O
http	O	O
:	O	O
//source.winehq.org/source/dlls/ntdll/time.c	O	O
#	O	O
L448	O	O
No	O	O
,	O	O
it	O	O
ca	O	O
n't	O	O
do	O	O
that	O	O
since	O	O
there	O	O
is	O	O
no	O	O
way	O	O
to	O	O
express	O	O
constant	O	O
over	O	O
time	O	O
for	O	O
a	O	O
value	O	O
.	O	O
If	O	O
the	O	O
compiler	O	O
should	O	O
be	O	O
able	O	O
to	O	O
do	O	O
that	O	O
,	O	O
there	O	O
would	O	O
have	O	O
to	O	O
be	O	O
a	O	O
guarantee	O	O
from	O	O
the	O	O
code	O	O
returning	O	O
the	O	O
value	O	O
that	O	O
the	O	O
value	O	O
is	O	O
constant	O	O
,	O	O
and	O	O
for	O	O
the	O	O
duration	O	O
of	O	O
the	O	O
loop	O	O
wo	O	O
n't	O	O
change	O	O
.	O	O
But	O	O
,	O	O
in	O	O
this	O	O
case	O	O
,	O	O
you	O	O
're	O	O
free	O	O
to	O	O
add	O	O
new	O	O
rows	O	O
to	O	O
the	O	O
data	O	O
table	O	O
as	O	O
part	O	O
of	O	O
your	O	O
loop	O	O
,	O	O
and	O	O
thus	O	O
it	O	O
's	O	O
up	O	O
to	O	O
you	O	O
to	O	O
make	O	O
that	O	O
guarantee	O	O
,	O	O
in	O	O
the	O	O
way	O	O
you	O	O
have	O	O
done	O	O
it	O	O
.	O	O
So	O	O
in	O	O
short	O	O
,	O	O
the	O	O
compiler	O	O
will	O	O
not	O	O
do	O	O
that	O	O
optimization	O	O
if	O	O
the	O	O
end-index	O	O
is	O	O
anything	O	O
other	O	O
than	O	O
a	O	O
variable	O	O
.	O	O
In	O	O
the	O	O
case	O	O
of	O	O
a	O	O
variable	O	O
,	O	O
where	O	O
the	O	O
compiler	O	O
can	O	O
just	O	O
look	O	O
at	O	O
the	O	O
loop-code	O	O
and	O	O
see	O	O
that	O	O
this	O	O
particular	O	O
variable	O	O
is	O	O
not	O	O
changed	O	O
,	O	O
it	O	O
might	O	O
do	O	O
that	O	O
and	O	O
load	O	O
the	O	O
value	O	O
into	O	O
a	O	O
register	O	O
before	O	O
starting	O	O
the	O	O
loop	O	O
,	O	O
but	O	O
any	O	O
performance	O	O
gain	O	O
from	O	O
this	O	O
would	O	O
most	O	O
likely	O	O
be	O	O
negligible	O	O
,	O	O
unless	O	O
your	O	O
loop	O	O
body	O	O
is	O	O
empty	O	O
.	O	O
Conclusion	O	O
:	O	O
If	O	O
you	O	O
know	O	O
,	O	O
or	O	O
is	O	O
willing	O	O
to	O	O
accept	O	O
,	O	O
that	O	O
the	O	O
end	O	O
loop	O	O
index	O	O
is	O	O
constant	O	O
for	O	O
the	O	O
duration	O	O
of	O	O
the	O	O
loop	O	O
,	O	O
place	O	O
it	O	O
into	O	O
a	O	O
variable	O	O
.	O	O
Edit	O	O
:	O	O
Re-read	O	O
your	O	O
post	O	O
,	O	O
and	O	O
yes	O	O
,	O	O
you	O	O
might	O	O
see	O	O
negligible	O	O
performance	O	O
gains	O	O
for	O	O
your	O	O
two	O	O
cases	O	O
as	O	O
well	O	O
,	O	O
because	O	O
the	O	O
JITter	O	O
optimizes	O	O
the	O	O
code	O	O
.	O	O
The	O	O
JITter	O	O
might	O	O
optimize	O	O
your	O	O
end-index	O	O
read	O	O
into	O	O
a	O	O
direct	O	O
access	O	O
to	O	O
the	O	O
variable	O	O
inside	O	O
the	O	O
data	O	O
table	O	O
that	O	O
contains	O	O
the	O	O
row	O	O
count	O	O
,	O	O
and	O	O
a	O	O
memory	O	O
read	O	O
is	O	O
n't	O	O
all	O	O
that	O	O
expensive	O	O
anyway	O	O
.	O	O
If	O	O
,	O	O
on	O	O
the	O	O
other	O	O
hand	O	O
,	O	O
reading	O	O
that	O	O
property	O	O
was	O	O
a	O	O
very	O	O
expensive	O	O
operation	O	O
,	O	O
you	O	O
'd	O	O
see	O	O
a	O	O
more	O	O
noticable	O	O
difference	O	O
.	O	O
At	O	O
least	O	O
in	O	O
VS	O	O
2008	O	O
,	O	O
its	O	O
very	O	O
easy	O	O
.	O	O
It	O	O
took	O	O
me	O	O
about	O	O
a	O	O
couple	O	O
of	O	O
minutes	O	O
to	O	O
code	O	O
the	O	O
answer	O	O
after	O	O
reading	O	O
your	O	O
question	O	O
.	O	O
Here	O	O
's	O	O
where	O	O
I	O	O
borrowed	O	O
it	O	O
from	O	O
:	O	O
http	O	O
:	O	O
//msdn.microsoft.com/en-us/library/6he9hz8c.aspx	O	O
I	O	O
tested	O	O
this	O	O
,	O	O
and	O	O
it	O	O
works	O	O
.	O	O
A	O	O
solution	O	O
,	O	O
albeit	O	O
one	O	O
that	O	O
defers	O	O
handling	O	O
of	O	O
the	O	O
null	O	O
value	O	O
to	O	O
the	O	O
code	O	O
,	O	O
could	O	O
be	O	O
:	O	O
DateTime	O	O
yesterday	O	O
=	O	O
DateTime.Now.Date.AddDays	B-API	B-API
(	I-API	I-API
-1	I-API	I-API
)	I-API	I-API
;	O	O
var	O	O
collection=	O	O
from	O	O
u	O	O
in	O	O
db.Universe	B-API	O
select	O	O
new	O	O
{	O	O
u.id	O	O
,	O	O
u.name	O	O
,	O	O
MaxDate	B-API	O
=	O	O
(	O	O
DateTime	O	I-API
?	O	I-API
)	O	I-API
(	O	O
from	O	O
h	O	O
in	O	O
db.History	O	O
where	O	O
u.Id	O	O
==	O	O
h.Id	O	O
h.dateCol	O	O
yesterday	O	O
select	O	O
h.dateCol	O	O
)	O	O
.Max	O	O
(	O	O
)	O	O
}	O	O
;	O	O
This	O	O
does	O	O
not	O	O
produce	O	O
exactly	O	O
the	O	O
same	O	O
SQL	O	O
,	O	O
but	O	O
does	O	O
provide	O	O
the	O	O
same	O	O
logical	O	O
result	O	O
.	O	O
Translating	O	O
``	O	O
complex	O	O
''	O	O
SQL	O	O
queries	O	O
to	O	O
LINQ	O	O
is	O	O
not	O	O
always	O	O
straightforward	O	O
.	O	O
You	O	O
'll	O	O
want	O	O
the	O	O
struct	O	O
package	O	O
.	O	O
My	O	O
Environment	O	O
:	O	O
Fedora	O	O
8	O	O
;	O	O
WAS	O	O
6.1	O	O
(	O	O
as	O	O
installed	O	O
with	O	O
Rational	O	O
Application	O	O
Developer	O	O
7	O	O
)	O	O
The	O	O
documentation	O	O
is	O	O
very	O	O
poor	O	O
in	O	O
this	O	O
area	O	O
and	O	O
there	O	O
is	O	O
a	O	O
dearth	O	O
of	O	O
practical	O	O
examples	O	O
.	O	O
Using	O	O
the	O	O
WebSphere	O	O
Application	O	O
Server	O	B-API
(	O	I-API
WAS	O	I-API
)	O	I-API
Ant	O	O
tasks	O	O
To	O	O
run	O	O
as	O	O
described	O	O
here	O	O
,	O	O
you	O	O
need	O	O
to	O	O
run	O	O
them	O	O
from	O	O
your	O	O
server	O	O
profile	O	O
bin	O	O
directory	O	O
using	O	O
the	O	O
ws_ant.sh	O	O
or	O	O
ws_ant.bat	O	O
commands	O	O
.	O	O
?	O	O
xml	O	O
version=	O	O
''	O	O
1.0	O	O
''	O	O
?	O	O
project	O	O
name=	O	O
''	O	O
project	O	O
''	O	O
default=	O	O
''	O	O
wasListApps	O	O
''	O	O
basedir=	O	O
''	O	O
.	O	O
''	O	O
description	O	O
Script	O	O
for	O	O
listing	O	O
installed	O	O
apps	O	O
.	O	O
Example	O	O
run	O	O
from	O	O
:	O	O
/opt/IBM/SDP70/runtimes/base_v61/profiles/AppSrv01/bin	O	O
/description	O	O
property	O	O
name=	O	O
''	O	O
was_home	O	O
''	O	O
value=	O	O
''	O	O
/opt/IBM/SDP70/runtimes/base_v61/	O	O
''	O	O
/property	O	O
path	O	O
id=	O	O
''	O	O
was.runtime	O	O
''	O	O
fileset	O	O
dir=	O	O
''	O	O
$	O	O
{	O	O
was_home	O	O
}	O	O
/lib	O	O
''	O	O
include	O	O
name=	O	O
''	O	O
**/*.jar	O	O
''	O	O
/	O	O
/fileset	O	O
fileset	O	O
dir=	O	O
''	O	O
$	O	O
{	O	O
was_home	O	O
}	O	O
/plugins	O	O
''	O	O
include	O	O
name=	O	O
''	O	O
**/*.jar	O	O
''	O	O
/	O	O
/fileset	O	O
/path	O	O
property	O	O
name=	O	O
''	O	O
was_cp	O	O
''	O	O
value=	O	O
''	O	O
$	O	O
{	O	O
toString	O	O
:	O	O
was.runtime	O	O
}	O	O
''	O	O
/property	O	O
property	O	O
environment=	O	O
''	O	O
env	O	O
''	O	O
/property	O	O
target	O	O
name=	O	O
''	O	O
wasListApps	O	O
''	O	O
taskdef	O	O
name=	O	O
''	O	O
wsListApp	O	O
''	O	O
classname=	O	O
''	O	O
com.ibm.websphere.ant.tasks.ListApplications	O	O
''	O	O
classpath=	O	O
''	O	O
$	O	O
{	O	O
was_cp	O	O
}	O	O
''	O	O
/taskdef	O	O
wsListApp	O	O
wasHome=	O	O
''	O	O
$	O	O
{	O	O
was_home	O	O
}	O	O
''	O	O
/	O	O
/target	O	O
/project	O	O
Command	O	O
:	O	O
./ws_ant.sh	O	O
-buildfile	O	O
~/IBM/rationalsdp7.0/workspace/mywebappDeploy/applist.xml	O	O
A	O	O
Deployment	O	O
Script	O	O
?	O	O
xml	O	O
version=	O	O
''	O	O
1.0	O	O
''	O	O
?	O	O
project	O	O
name=	O	O
''	O	O
project	O	O
''	O	O
default=	O	O
''	O	O
default	O	O
''	O	O
basedir=	O	O
''	O	O
.	O	O
''	O	O
description	O	O
Build/Deploy	O	O
an	O	O
EAR	O	O
to	O	O
WebSphere	O	O
Application	O	O
Server	O	O
6.1	O	O
/description	O	O
property	O	O
name=	O	O
''	O	O
was_home	O	O
''	O	O
value=	O	O
''	O	O
/opt/IBM/SDP70/runtimes/base_v61/	O	O
''	O	O
/	O	O
path	O	O
id=	O	O
''	O	O
was.runtime	O	O
''	O	O
fileset	O	O
dir=	O	O
''	O	O
$	O	O
{	O	O
was_home	O	O
}	O	O
/lib	O	O
''	O	O
include	O	O
name=	O	O
''	O	O
**/*.jar	O	O
''	O	O
/	O	O
/fileset	O	O
fileset	O	O
dir=	O	O
''	O	O
$	O	O
{	O	O
was_home	O	O
}	O	O
/plugins	O	O
''	O	O
include	O	O
name=	O	O
''	O	O
**/*.jar	O	O
''	O	O
/	O	O
/fileset	O	O
/path	O	O
property	O	O
name=	O	O
''	O	O
was_cp	O	O
''	O	O
value=	O	O
''	O	O
$	O	O
{	O	O
toString	O	O
:	O	O
was.runtime	O	O
}	O	O
''	O	O
/	O	O
property	O	O
environment=	O	O
''	O	O
env	O	O
''	O	O
/	O	O
property	O	O
name=	O	O
''	O	O
ear	O	O
''	O	O
value=	O	O
''	O	O
$	O	O
{	O	O
env.HOME	O	O
}	O	O
/IBM/rationalsdp7.0/workspace/mywebappDeploy/mywebappEAR.ear	O	O
''	O	O
/	O	O
target	O	O
name=	O	O
''	O	O
default	O	O
''	O	O
depends=	O	O
''	O	O
deployEar	O	O
''	O	O
/target	O	O
target	O	O
name=	O	O
''	O	O
generateWar	O	O
''	O	O
depends=	O	O
''	O	O
compileWarClasses	O	O
''	O	O
jar	O	O
destfile=	O	O
''	O	O
mywebapp.war	O	O
''	O	O
fileset	O	O
dir=	O	O
''	O	O
../mywebapp/WebContent	O	O
''	O	O
/fileset	O	O
/jar	O	O
/target	O	O
target	O	O
name=	O	O
''	O	O
compileWarClasses	O	O
''	O	O
echo	O	O
message=	O	O
''	O	O
was_cp=	O	O
$	O	O
{	O	O
was_cp	O	O
}	O	O
''	O	O
/	O	O
javac	O	O
srcdir=	O	O
''	O	O
../mywebapp/src	O	O
''	O	O
destdir=	O	O
''	O	O
../mywebapp/WebContent/WEB-INF/classes	O	O
''	O	O
classpath=	O	O
''	O	O
$	O	O
{	O	O
was_cp	O	O
}	O	O
''	O	O
/javac	O	O
/target	O	O
target	O	O
name=	O	O
''	O	O
generateEar	O	O
''	O	O
depends=	O	O
''	O	O
generateWar	O	O
''	O	O
mkdir	O	O
dir=	O	O
''	O	O
./earbin/META-INF	O	O
''	O	O
/	O	O
move	O	O
file=	O	O
''	O	O
mywebapp.war	O	O
''	O	O
todir=	O	O
''	O	O
./earbin	O	O
''	O	O
/	O	O
copy	O	O
file=	O	O
''	O	O
../mywebappEAR/META-INF/application.xml	O	O
''	O	O
todir=	O	O
''	O	O
./earbin/META-INF	O	O
''	O	O
/	O	O
jar	O	O
destfile=	O	O
''	O	O
$	O	O
{	O	O
ear	O	O
}	O	O
''	O	O
fileset	O	O
dir=	O	O
''	O	O
./earbin	O	O
''	O	O
/	O	O
/jar	O	O
/target	O	O
!	O	O
--	O	O
http	O	O
:	O	O
//publib.boulder.ibm.com/infocenter/wasinfo/v6r1/index.jsp	O	O
?	O	O
topic=/com.ibm.websphere.javadoc.doc/public_html/api/com/ibm/websphere/ant/tasks/package-summary.html	O	O
--	O	O
target	O	O
name=	O	O
''	O	O
deployEar	O	O
''	O	O
depends=	O	O
''	O	O
generateEar	O	O
''	O	O
taskdef	O	O
name=	O	O
''	O	O
wsInstallApp	O	O
''	O	O
classname=	O	O
''	O	O
com.ibm.websphere.ant.tasks.InstallApplication	O	B-API
''	O	O
classpath=	O	O
''	O	O
$	O	O
{	O	O
was_cp	O	O
}	O	O
''	O	O
/	O	O
wsInstallApp	O	O
ear=	O	O
''	O	O
$	O	O
{	O	O
ear	O	O
}	O	O
''	O	O
failonerror=	O	O
''	O	O
true	O	O
''	O	O
debug=	O	O
''	O	O
true	O	O
''	O	O
taskname=	O	O
''	O	O
''	O	O
washome=	O	O
''	O	O
$	O	O
{	O	O
was_home	O	O
}	O	O
''	O	O
/	O	O
/target	O	O
/project	O	O
Notes	O	O
:	O	O
You	O	O
can	O	O
only	O	O
run	O	O
this	O	O
once	O	O
!	O	O
You	O	O
can	O	O
not	O	O
install	O	O
if	O	O
the	O	O
app	O	O
name	O	O
is	O	O
in	O	O
use	O	O
-	O	O
see	O	O
other	O	O
tasks	O	O
like	O	O
wsUninstallApp	O	O
It	O	O
probably	O	O
wo	O	O
n't	O	O
start	O	O
the	O	O
app	O	O
either	O	O
You	O	O
need	O	O
to	O	O
run	O	O
this	O	O
on	O	O
the	O	O
server	O	O
and	O	O
the	O	O
script	O	O
is	O	O
quite	O	O
fragile	O	O
Alternatives	O	O
I	O	O
would	O	O
probably	O	O
use	O	O
Java	O	O
Management	O	O
Extensions	O	O
(	O	O
JMX	O	O
)	O	O
.	O	O
You	O	O
could	O	O
write	O	O
a	O	O
file-upload	O	O
servlet	O	O
that	O	O
accepts	O	O
an	O	O
EAR	O	O
and	O	O
uses	O	O
the	O	O
deployment	O	O
MBeans	O	O
to	O	O
deploy	O	O
the	O	O
EAR	O	O
on	O	O
the	O	O
server	O	O
.	O	O
You	O	O
would	O	O
just	O	O
POST	O	O
the	O	O
file	O	O
over	O	O
HTTP	O	O
.	O	O
This	O	O
would	O	O
avoid	O	O
any	O	O
WAS	O	O
API	O	O
dependencies	O	O
on	O	O
your	O	O
dev/build	O	O
machine	O	O
and	O	O
could	O	O
be	O	O
independent	O	O
of	O	O
any	O	O
one	O	O
project	O	O
.	O	O
The	O	O
quick	O	O
and	O	O
simple	O	O
answer	O	O
is	O	O
No	O	O
.	O	O
Javascript	O	O
is	O	O
quite	O	O
a	O	O
high	O	O
level	O	O
language	O	O
and	O	O
does	O	O
not	O	O
have	O	O
access	O	O
to	O	O
this	O	O
sort	O	O
of	O	O
information	O	O
.	O	O
If	O	O
this	O	O
is	O	O
for	O	O
an	O	O
intranet	O	O
application	O	O
and	O	O
all	O	O
of	O	O
the	O	O
clients	O	O
use	O	O
DHCP	O	O
,	O	O
you	O	O
can	O	O
query	O	O
the	O	O
DHCP	O	O
server	O	O
for	O	O
the	O	O
MAC	O	O
address	O	O
for	O	O
a	O	O
given	O	O
IP	O	O
address	O	O
.	O	O
Nope	O	O
.	O	O
The	O	O
reason	O	O
ActiveX	O	O
can	O	O
do	O	O
it	O	O
is	O	O
because	O	O
ActiveX	O	O
is	O	O
a	O	O
little	O	O
application	O	O
that	O	O
runs	O	O
on	O	O
the	O	O
client	O	O
's	O	O
machine	O	O
.	O	O
I	O	O
would	O	O
imagine	O	O
access	O	O
to	O	O
such	O	O
information	O	O
via	O	O
JavaScript	O	O
would	O	O
be	O	O
a	O	O
security	O	O
vulnerability	O	O
.	O	O
A	O	O
dictionary	O	O
may	O	O
also	O	O
contain	O	O
overhead	O	O
,	O	O
depending	O	O
on	O	O
the	O	O
actual	O	O
implementation	O	O
.	O	O
A	O	O
hashtable	O	O
usually	O	O
contain	O	O
some	O	O
prime	O	O
number	O	O
of	O	O
available	O	O
nodes	O	O
to	O	O
begin	O	O
with	O	O
,	O	O
even	O	O
though	O	O
you	O	O
might	O	O
only	O	O
use	O	O
a	O	O
couple	O	O
of	O	O
the	O	O
nodes	O	O
.	O	O
Judging	O	O
by	O	O
your	O	O
example	O	O
,	O	O
``	O	O
Property	O	O
''	O	O
,	O	O
would	O	O
you	O	O
be	O	O
better	O	O
of	O	O
with	O	O
a	O	O
class	O	O
approach	O	O
for	O	O
the	O	O
final	O	O
level	O	O
and	O	O
real	O	O
properties	O	O
?	O	O
Or	O	O
is	O	O
the	O	O
names	O	O
of	O	O
the	O	O
properties	O	O
changing	O	O
a	O	O
lot	O	O
from	O	O
node	O	O
to	O	O
node	O	O
?	O	O
I	O	O
'd	O	O
say	O	O
that	O	O
what	O	O
``	O	O
efficient	O	O
''	O	O
means	O	O
depends	O	O
on	O	O
a	O	O
lot	O	O
of	O	O
things	O	O
,	O	O
like	O	O
:	O	O
speed	O	O
of	O	O
updates	O	O
(	O	O
insert	O	O
,	O	O
update	O	O
,	O	O
delete	O	O
)	O	O
speed	O	O
of	O	O
random	O	O
access	O	O
retrieval	O	O
speed	O	O
of	O	O
sequential	O	O
retrieval	O	O
memory	O	O
used	O	O
I	O	O
think	O	O
that	O	O
you	O	O
'll	O	O
find	O	O
that	O	O
a	O	O
data	O	O
structure	O	O
that	O	O
is	O	O
speedy	O	O
will	O	O
generally	O	O
consume	O	O
more	O	O
memory	O	O
than	O	O
one	O	O
that	O	O
is	O	O
slow	O	O
.	O	O
This	O	O
is	O	O
n't	O	O
always	O	O
the	O	O
case	O	O
,	O	O
but	O	O
most	O	O
data	O	O
structures	O	O
seems	O	O
to	O	O
follow	O	O
this	O	O
.	O	O
A	O	O
dictionary	O	O
might	O	O
be	O	O
easy	O	O
to	O	O
use	O	O
,	O	O
and	O	O
give	O	O
you	O	O
relatively	O	O
uniformly	O	O
fast	O	O
access	O	O
,	O	O
it	O	O
will	O	O
most	O	O
likely	O	O
use	O	O
more	O	O
memory	O	O
than	O	O
,	O	O
as	O	O
you	O	O
suggest	O	O
,	O	O
lists	O	O
.	O	O
Lists	O	O
,	O	O
however	O	O
,	O	O
generally	O	O
tend	O	O
to	O	O
contain	O	O
more	O	O
overhead	O	O
when	O	O
you	O	O
insert	O	O
data	O	O
into	O	O
it	O	O
,	O	O
unless	O	O
they	O	O
preallocate	O	O
X	O	O
nodes	O	O
,	O	O
in	O	O
which	O	O
they	O	O
will	O	O
again	O	O
use	O	O
more	O	O
memory	O	O
.	O	O
My	O	O
suggestion	O	O
,	O	O
in	O	O
general	O	O
,	O	O
would	O	O
be	O	O
to	O	O
just	O	O
use	O	O
the	O	O
method	O	O
that	O	O
seems	O	O
the	O	O
most	O	O
natural	O	O
to	O	O
you	O	O
,	O	O
and	O	O
then	O	O
do	O	O
a	O	O
``	O	O
stress	O	O
test	O	O
''	O	O
of	O	O
the	O	O
system	O	O
,	O	O
adding	O	O
a	O	O
substantial	O	O
amount	O	O
of	O	O
data	O	O
to	O	O
it	O	O
and	O	O
see	O	O
if	O	O
it	O	O
becomes	O	O
a	O	O
problem	O	O
.	O	O
You	O	O
might	O	O
also	O	O
consider	O	O
adding	O	O
a	O	O
layer	O	O
of	O	O
abstraction	O	O
to	O	O
your	O	O
system	O	O
,	O	O
so	O	O
that	O	O
you	O	O
do	O	O
n't	O	O
have	O	O
to	O	O
change	O	O
the	O	O
programming	O	O
interface	O	O
if	O	O
you	O	O
later	O	O
on	O	O
need	O	O
to	O	O
change	O	O
the	O	O
internal	O	O
data	O	O
structure	O	O
.	O	O
Making	O	O
a	O	O
class-based	O	O
structure	O	O
would	O	O
probably	O	O
have	O	O
more	O	O
overhead	O	O
than	O	O
the	O	O
dict-based	O	O
structure	O	O
,	O	O
since	O	O
in	O	O
python	O	O
classes	O	O
actually	O	O
use	O	O
dicts	O	O
when	O	O
they	O	O
are	O	O
implemented	O	O
.	O	O
As	O	O
I	O	O
understand	O	O
it	O	O
,	O	O
random	O	O
access	O	O
is	O	O
in	O	O
constant	O	O
time	O	O
for	O	O
both	O	O
Python	O	O
's	O	O
dicts	O	O
and	O	O
lists	O	O
,	O	O
the	O	O
difference	O	O
is	O	O
that	O	O
you	O	O
can	O	O
only	O	O
do	O	O
random	O	O
access	O	O
of	O	O
integer	O	O
indexes	O	O
with	O	O
lists	O	O
.	O	O
I	O	O
'm	O	O
assuming	O	O
that	O	O
you	O	O
need	O	O
to	O	O
lookup	O	O
a	O	O
node	O	O
by	O	O
its	O	O
label	O	O
,	O	O
so	O	O
you	O	O
want	O	O
a	O	O
dict	O	O
of	O	O
dicts	O	O
.	O	O
However	O	O
,	O	O
on	O	O
the	O	O
performance	O	O
front	O	O
,	O	O
loading	O	O
it	O	O
into	O	O
memory	O	O
may	O	O
not	O	O
be	O	O
a	O	O
problem	O	O
,	O	O
but	O	O
if	O	O
you	O	O
use	O	O
too	O	O
much	O	O
you	O	O
'll	O	O
end	O	O
up	O	O
swapping	O	O
to	O	O
disk	O	O
,	O	O
which	O	O
will	O	O
kill	O	O
the	O	O
performance	O	O
of	O	O
even	O	O
Python	O	O
's	O	O
highly	O	O
efficient	O	O
dicts	O	O
.	O	O
Try	O	O
to	O	O
keep	O	O
memory	O	O
usage	O	O
down	O	O
as	O	O
much	O	O
as	O	O
possible	O	O
.	O	O
Also	O	O
,	O	O
RAM	O	O
is	O	O
amazingly	O	O
cheap	O	O
right	O	O
now	O	O
;	O	O
if	O	O
you	O	O
do	O	O
this	O	O
kind	O	O
of	O	O
thing	O	O
a	O	O
lot	O	O
,	O	O
there	O	O
's	O	O
no	O	O
reason	O	O
not	O	O
to	O	O
have	O	O
at	O	O
least	O	O
4GB	O	O
.	O	O
If	O	O
you	O	O
'd	O	O
like	O	O
advice	O	O
on	O	O
keeping	O	O
memory	O	O
usage	O	O
down	O	O
,	O	O
give	O	O
some	O	O
more	O	O
information	O	O
about	O	O
the	O	O
kind	O	O
of	O	O
information	O	O
you	O	O
're	O	O
tracking	O	O
for	O	O
each	O	O
node	O	O
.	O	O
erm..	O	O
HTML	O	O
?	O	O
(	O	O
trying	O	O
to	O	O
be	O	O
funny	O	O
here	O	O
...	O	O
while	O	O
we	O	O
wait	O	O
for	O	O
real	O	O
answers..	O	O
)	O	O
The	O	O
wxWidgets	O	O
(	O	O
formerly	O	O
known	O	O
as	O	O
wxWindows	O	O
)	O	O
library	O	O
might	O	O
be	O	O
what	O	O
you	O	O
're	O	O
looking	O	O
for	O	O
.	O	O
There	O	O
's	O	O
a	O	O
particularly	O	O
good	O	O
port	O	O
for	O	O
Python	O	O
,	O	O
wxPython	O	O
,	O	O
as	O	O
well	O	O
as	O	O
versions	O	O
for	O	O
different	O	O
languages	O	O
--	O	O
C	O	O
#	O	O
,	O	O
C++	O	O
,	O	O
Perl	O	O
and	O	O
Ruby	O	O
come	O	O
to	O	O
mind	O	O
--	O	O
and	O	O
for	O	O
various	O	O
GUIs	O	O
:	O	O
Win32	O	O
,	O	O
Mac	O	O
OS	O	O
X	O	O
,	O	O
GTK+	O	O
,	O	O
X11	O	O
,	O	O
Motif	O	O
,	O	O
WinCE	O	O
.	O	O
The	O	O
library	O	O
's	O	O
been	O	O
around	O	O
for	O	O
a	O	O
while	O	O
and	O	O
is	O	O
pretty	O	O
solid	O	O
.	O	O
Not	O	O
sure	O	O
if	O	O
this	O	O
is	O	O
what	O	O
you	O	O
're	O	O
looking	O	O
for	O	O
,	O	O
but	O	O
there	O	O
's	O	O
Glade	O	O
(	O	O
or	O	O
Windows	O	O
download	O	O
)	O	O
which	O	O
is	O	O
a	O	O
designer	O	O
for	O	O
GTK+	O	O
.	O	O
It	O	O
generates	O	O
an	O	O
XML	O	O
file	O	O
which	O	O
can	O	O
then	O	O
be	O	O
used	O	O
to	O	O
build	O	O
the	O	O
GUI	O	O
in	O	O
a	O	O
number	O	O
of	O	O
different	O	O
languages	O	O
.	O	O
Qt	O	O
(	O	O
pronounced	O	O
``	O	O
cute	O	O
''	O	O
by	O	O
its	O	O
creators	O	O
[	O	O
1	O	O
]	O	O
)	O	O
is	O	O
a	O	O
cross-platform	O	O
application	O	O
development	O	O
framework	O	O
,	O	O
widely	O	O
used	O	O
for	O	O
the	O	O
development	O	O
of	O	O
GUI	O	O
programs	O	O
.	O	O
Qt	O	O
uses	O	O
C++	O	O
with	O	O
several	O	O
non-standard	O	O
extensions	O	O
implemented	O	O
by	O	O
an	O	O
additional	O	O
pre-processor	O	O
that	O	O
generates	O	O
standard	O	O
C++	O	O
code	O	O
before	O	O
compilation	O	O
.	O	O
Qt	O	O
can	O	O
also	O	O
be	O	O
used	O	O
in	O	O
several	O	O
other	O	O
programming	O	O
languages	O	O
;	O	O
bindings	O	O
exist	O	O
for	O	O
Ada	O	O
(	O	O
QtAda	O	O
)	O	O
[	O	O
4	O	O
]	O	O
,	O	O
C	O	O
#	O	O
(	O	O
Qyoto/Kimono	O	O
)	O	O
[	O	O
5	O	O
]	O	O
,	O	O
Java	O	B-API
(	O	I-API
Qt	O	I-API
Jambi	O	I-API
)	O	I-API
[	O	O
6	O	O
]	O	O
,	O	O
Pascal	O	O
,	O	O
Perl	O	O
,	O	O
PHP	O	B-API
(	O	I-API
PHP-Qt	O	I-API
)	O	I-API
,	O	O
Ruby	O	B-API
(	O	I-API
RubyQt	O	I-API
)	O	I-API
,	O	O
and	O	O
Python	O	B-API
(	O	I-API
PyQt	O	I-API
)	O	I-API
.	O	O
It	O	O
runs	O	O
on	O	O
all	O	O
major	O	O
platforms	O	O
,	O	O
and	O	O
has	O	O
extensive	O	O
internationalization	O	O
support	O	O
.	O	O
Non-GUI	O	O
features	O	O
include	O	O
SQL	O	O
database	O	O
access	O	O
,	O	O
XML	O	O
parsing	O	O
,	O	O
thread	O	O
management	O	O
,	O	O
network	O	O
support	O	O
and	O	O
a	O	O
unified	O	O
cross-platform	O	O
API	O	O
for	O	O
file	O	O
handling	O	O
.	O	O
import	O	O
os	O	O
print	O	O
os.name	O	O
posix	O	O
import	O	O
platform	O	O
platform.system	B-API	B-API
(	I-API	I-API
)	I-API	I-API
'Linux'	O	O
platform.release	B-API	B-API
(	I-API	I-API
)	I-API	I-API
'2.6.22-15-generic'	O	O
See	O	O
:	O	O
platform	O	O
Access	O	O
to	O	O
underlying	O	O
platforms	O	O
identifying	O	O
data	O	O
Dang	O	O
--	O	O
lbrandy	O	O
beat	O	O
me	O	O
to	O	O
the	O	O
punch	O	O
,	O	O
but	O	O
that	O	O
does	O	O
n't	O	O
mean	O	O
I	O	O
ca	O	O
n't	O	O
provide	O	O
you	O	O
with	O	O
the	O	O
system	O	O
results	O	O
for	O	O
Vista	O	O
!	O	O
import	O	O
os	O	O
os.name	O	O
'nt'	O	O
import	O	O
platform	O	O
platform.system	B-API	B-API
(	I-API	I-API
)	I-API	I-API
'Windows'	O	O
platform.release	B-API	B-API
(	I-API	I-API
)	I-API	I-API
'Vista'	O	O
For	O	O
the	O	O
record	O	O
here	O	O
's	O	O
the	O	O
results	O	O
on	O	O
Mac	O	O
:	O	O
import	O	O
os	O	O
os.name	O	O
'posix'	O	O
import	O	O
platform	O	O
platform.system	B-API	B-API
(	I-API	I-API
)	I-API	I-API
'Darwin'	O	O
platform.release	B-API	B-API
(	I-API	I-API
)	I-API	I-API
'8.11.1'	O	O
Take	O	O
a	O	O
look	O	O
at	O	O
the	O	O
open	O	O
street	O	O
map	O	O
project	O	O
to	O	O
see	O	O
how	O	O
this	O	O
sort	O	O
of	O	O
thing	O	O
is	O	O
being	O	O
tackled	O	O
in	O	O
a	O	O
truely	O	O
free	O	O
software	O	O
project	O	O
using	O	O
only	O	O
user	O	O
supplied	O	O
and	O	O
licensed	O	O
data	O	O
and	O	O
have	O	O
a	O	O
wiki	O	O
containing	O	O
stuff	O	O
you	O	O
might	O	O
find	O	O
interesting	O	O
.	O	O
A	O	O
few	O	O
years	O	O
back	O	O
the	O	O
guys	O	O
involved	O	O
where	O	O
pretty	O	O
easy	O	O
going	O	O
and	O	O
answered	O	O
lots	O	O
of	O	O
questions	O	O
I	O	O
had	O	O
so	O	O
I	O	O
see	O	O
no	O	O
reason	O	O
why	O	O
they	O	O
still	O	O
are	O	O
n't	O	O
a	O	O
nice	O	O
bunch	O	O
.	O	O
Instead	O	O
of	O	O
learning	O	O
APIs	O	O
to	O	O
each	O	O
map	O	O
service	O	O
provider	O	O
(	O	O
like	O	O
Gmaps	O	O
,	O	O
Ymaps	O	O
api	O	O
)	O	O
Its	O	O
good	O	O
to	O	O
learn	O	O
Mapstraction	O	O
''	O	O
Mapstraction	O	O
is	O	O
a	O	O
library	O	O
that	O	O
provides	O	O
a	O	O
common	O	O
API	O	O
for	O	O
various	O	O
javascript	O	O
mapping	O	O
APIs	O	O
''	O	O
I	O	O
would	O	O
suggest	O	O
you	O	O
go	O	O
to	O	O
the	O	O
URL	O	O
and	O	O
learn	O	O
a	O	O
general	O	O
API	O	O
.	O	O
There	O	O
is	O	O
good	O	O
amount	O	O
of	O	O
How-Tos	O	O
too	O	O
.	O	O
Try	O	O
this	O	O
:	O	O
using	O	O
(	O	O
FileStream	B-API	O
stream	O	O
=	O	O
new	O	O
)	O	O
{	O	O
BinaryFormatter	B-API	B-API
formatter	O	I-API
=	O	I-API
new	O	I-API
;	O	O
StructType	B-API	O
aStruct	O	O
=	O	O
(	O	O
fileName	O	O
,	O	O
FileMode.Open	B-API	B-API
)	O	O
BinaryFormatter	B-API	B-API
(	I-API	I-API
)	I-API	I-API
(	O	I-API
StructType	O	I-API
)	O	I-API
formatter.Deserialize	B-API	B-API
(	I-API	I-API
filestream	I-API	I-API
)	I-API	I-API
I	O	O
do	O	O
n't	O	O
see	O	O
any	O	O
problem	O	O
with	O	O
your	O	O
code	O	O
.	O	O
just	O	O
out	O	O
of	O	O
my	O	O
head	O	O
,	O	O
what	O	O
if	O	O
you	O	O
try	O	O
to	O	O
do	O	O
it	O	O
manually	O	O
?	O	O
does	O	O
it	O	O
work	O	O
?	O	O
BinaryReader	B-API	O
reader	O	O
=	O	O
new	O	O
;	O	O
StructType	B-API	O
o	O	O
=	O	O
new	O	O
;	O	O
o.FileDate	B-API	O
=	O	O
)	O	O
;	O	O
o.FileTime	B-API	O
=	O	O
BinaryReader	B-API	O
(	I-API	O
stream	I-API	O
)	I-API	O
StructType	B-API	B-API
(	I-API	I-API
)	I-API	I-API
Encoding.ASCII.GetString	B-API	B-API
(	I-API	I-API
reader.ReadBytes	I-API	I-API
(	I-API	I-API
8	I-API	I-API
)	I-API	I-API
Encoding.ASCII.GetString	B-API	B-API
(	I-API	I-API
reader.ReadBytes	I-API	I-API
(	I-API	I-API
8	I-API	I-API
)	I-API	I-API
also	O	O
try	O	O
StructType	B-API	O
o	O	O
=	O	O
new	O	O
;	O	O
byte	O	O
[	O	O
]	O	O
buffer	O	O
=	O	O
new	O	O
)	O	O
]	O	O
;	O	O
GCHandle	B-API	O
handle	O	O
=	O	O
,	O	O
StructType	B-API	B-API
(	I-API	I-API
)	I-API	I-API
byte	O	O
[	O	O
Marshal.SizeOf	B-API	B-API
(	I-API	I-API
typeof	I-API	I-API
(	I-API	I-API
StructType	I-API	I-API
)	I-API	I-API
(	O	I-API
buffer	O	I-API
,	O	I-API
GCHandleType.Pinned	B-API	I-API
)	O	I-API
Marshal.StructureToPtr	B-API	B-API
(	I-API	O
o	I-API	O
,	I-API	O
handle.AddrOfPinnedObject	B-API	B-API
(	I-API	I-API
)	I-API	I-API
false	O	O
)	O	O
;	O	O
handle.Free	B-API	O
(	I-API	O
)	I-API	O
then	O	O
use	O	O
buffer	O	O
[	O	O
]	O	O
in	O	O
your	O	O
BinaryReader	O	O
instead	O	O
of	O	O
reading	O	O
data	O	O
from	O	O
FileStream	O	O
to	O	O
see	O	O
whether	O	O
you	O	O
still	O	O
get	O	O
AccessViolation	O	O
exception	O	O
.	O	O
I	O	O
had	O	O
no	O	O
luck	O	O
using	O	O
the	O	O
BinaryFormatter	O	O
,	O	O
I	O	O
guess	O	O
I	O	O
have	O	O
to	O	O
have	O	O
a	O	O
complete	O	O
struct	O	O
that	O	O
matches	O	O
the	O	O
content	O	O
of	O	O
the	O	O
file	O	O
exactly	O	O
.	O	O
That	O	O
makes	O	O
sense	O	O
,	O	O
BinaryFormatter	O	O
has	O	O
its	O	O
own	O	O
data	O	O
format	O	O
,	O	O
completely	O	O
incompatible	O	O
with	O	O
yours	O	O
.	O	O
I	O	O
had	O	O
no	O	O
luck	O	O
using	O	O
the	O	O
BinaryFormatter	O	O
,	O	O
I	O	O
guess	O	O
I	O	O
have	O	O
to	O	O
have	O	O
a	O	O
complete	O	O
struct	O	O
that	O	O
matches	O	O
the	O	O
content	O	O
of	O	O
the	O	O
file	O	O
exactly	O	O
.	O	O
I	O	O
realised	O	O
that	O	O
in	O	O
the	O	O
end	O	O
I	O	O
was	O	O
n't	O	O
interested	O	O
in	O	O
very	O	O
much	O	O
of	O	O
the	O	O
file	O	O
content	O	O
anyway	O	O
so	O	O
I	O	O
went	O	O
with	O	O
the	O	O
solution	O	O
of	O	O
reading	O	O
part	O	O
of	O	O
stream	O	O
into	O	O
a	O	O
bytebuffer	O	O
and	O	O
then	O	O
converting	O	O
it	O	O
using	O	O
Encoding.ASCII.GetString	B-API	B-API
(	I-API	I-API
)	I-API	I-API
for	O	O
strings	O	O
and	O	O
BitConverter.ToInt32	B-API	B-API
(	I-API	I-API
)	I-API	I-API
for	O	O
the	O	O
integers	O	O
.	O	O
I	O	O
will	O	O
need	O	O
to	O	O
be	O	O
able	O	O
to	O	O
parse	O	O
more	O	O
of	O	O
the	O	O
file	O	O
later	O	O
on	O	O
but	O	O
for	O	O
this	O	O
version	O	O
I	O	O
got	O	O
away	O	O
with	O	O
just	O	O
a	O	O
couple	O	O
of	O	O
lines	O	O
of	O	O
code	O	O
.	O	O
Check	O	O
out	O	O
Google	O	O
Charts	O	O
Flot	O	O
can	O	O
create	O	O
some	O	O
really	O	O
nice	O	O
looking	O	O
charts	O	O
.	O	O
It	O	O
's	O	O
a	O	O
JavaScript	O	O
library	O	O
rather	O	O
than	O	O
a	O	O
service	O	O
like	O	O
Google	O	O
Charts	O	O
.	O	O
It	O	O
does	O	O
require	O	O
jQuery	O	O
though	O	O
.	O	O
If	O	O
you	O	O
use	O	O
jquery	O	O
:	O	O
http	O	O
:	O	O
//code.google.com/p/flot/	O	O
For	O	O
the	O	O
YUI	O	O
users	O	O
:	O	O
http	O	O
:	O	O
//developer.yahoo.com/yui/charts/	O	O
10	O	O
JavaScript	O	O
Graphing/Charting	O	O
Libraries	O	O
I	O	O
noticed	O	O
that	O	O
a	O	O
few	O	O
people	O	O
mentioned	O	O
Flot	O	O
but	O	O
nobody	O	O
mentioned	O	O
Flotr	O	O
!	O	O
Also	O	O
on	O	O
Google	O	O
Code	O	O
http	O	O
:	O	O
//code.google.com/p/flotr/	O	O
.	O	O
Check	O	O
a	O	O
JSON	O	O
example	O	O
,	O	O
complete	O	O
with	O	O
the	O	O
code	O	O
to	O	O
do	O	O
it	O	O
,	O	O
right	O	O
here	O	O
.	O	O
It	O	O
requires	O	O
the	O	O
Prototype.js	O	O
Javascript	O	O
library	O	O
and	O	O
works	O	O
in	O	O
all	O	O
modern	O	O
browsers	O	O
!	O	O
When	O	O
you	O	O
're	O	O
using	O	O
.Net	O	O
2.0	O	O
and	O	O
Ajax	O	O
-	O	O
you	O	O
should	O	O
use	O	O
:	O	O
ScriptManager.RegisterClientScriptBlock	B-API	B-API
It	O	O
will	O	O
work	O	O
better	O	O
in	O	O
Ajax	O	O
environments	O	O
then	O	O
the	O	O
old	O	O
Page.ClientScript	B-API	O
version	O	O
Try	O	O
changing	O	O
the	O	O
argument	O	O
names	O	O
to	O	O
``	O	O
sender	O	O
''	O	O
and	O	O
``	O	O
args	O	O
''	O	O
.	O	O
And	O	O
,	O	O
after	O	O
you	O	O
have	O	O
it	O	O
working	O	O
,	O	O
switch	O	O
the	O	O
call	O	O
over	O	O
to	O	O
ScriptManager.RegisterClientScriptBlock	B-API	B-API
,	O	O
regardless	O	O
of	O	O
AJAX	O	O
use	O	O
.	O	O
While	O	O
I	O	O
would	O	O
still	O	O
like	O	O
an	O	O
answer	O	O
to	O	O
why	O	O
my	O	O
JS	O	O
was	O	O
n't	O	O
being	O	O
recognized	O	O
,	O	O
the	O	O
solution	O	O
I	O	O
found	O	O
in	O	O
the	O	O
meantime	O	O
(	O	O
and	O	O
should	O	O
have	O	O
done	O	O
in	O	O
the	O	O
first	O	O
place	O	O
)	O	O
is	O	O
to	O	O
use	O	O
an	O	O
Asp	O	O
:	O	O
CompareValidator	B-API	O
instead	O	O
of	O	O
an	O	O
Asp	O	O
:	O	O
CustomValidator	B-API	B-API
.	O	O
While	O	O
you	O	O
can	O	O
not	O	O
prevent	O	O
usage	O	O
of	O	O
those	O	O
inherited	O	O
members	O	O
to	O	O
my	O	O
knowledge	O	O
,	O	O
you	O	O
should	O	O
be	O	O
able	O	O
to	O	O
hide	O	O
them	O	O
from	O	O
IntelliSense	B-API	O
using	O	O
the	O	O
EditorBrowsableAttribute	B-API	O
:	O	O
Using	O	O
System.ComponentModel	B-API	B-API
;	O	O
[	O	O
EditorBrowsable	B-API	O
(	I-API	O
EditorBrowsableState.Never	I-API	O
)	I-API	O
]	O	O
private	O	O
string	O	O
MyHiddenString	O	O
=	O	O
``	O	O
Muahahahahahahahaha	O	O
''	O	O
;	O	O
Edit	O	O
:	O	O
Just	O	O
saw	O	O
this	O	O
in	O	O
the	O	O
documentation	O	O
comments	O	O
,	O	O
which	O	O
makes	O	O
it	O	O
kinda	O	O
useless	O	O
for	O	O
this	O	O
purpose	O	O
:	O	O
There	O	O
is	O	O
a	O	O
prominent	O	O
note	O	O
that	O	O
states	O	O
that	O	O
this	O	O
attribute	O	O
``	O	O
does	O	O
not	O	O
suppress	O	O
members	O	O
from	O	O
a	O	O
class	O	O
in	O	O
the	O	O
same	O	O
assembly	O	O
''	O	O
.	O	O
That	O	O
is	O	O
true	O	O
but	O	O
not	O	O
complete	O	O
.	O	O
Actually	O	O
,	O	O
the	O	O
attribute	O	O
does	O	O
not	O	O
suppress	O	O
members	O	O
from	O	O
a	O	O
class	O	O
in	O	O
the	O	O
same	O	O
solution	O	O
.	O	O
I	O	O
think	O	O
you	O	O
're	O	O
best	O	O
least	O	O
hackish	O	O
way	O	O
is	O	O
to	O	O
consider	O	O
composition	O	O
as	O	O
opposed	O	O
to	O	O
inheritance	O	O
.	O	O
Or	O	O
,	O	O
you	O	O
could	O	O
create	O	O
an	O	O
interface	O	O
that	O	O
has	O	O
the	O	O
members	O	O
you	O	O
want	O	O
,	O	O
have	O	O
your	O	O
derived	O	O
class	O	O
implement	O	O
that	O	O
interface	O	O
,	O	O
and	O	O
program	O	O
against	O	O
the	O	O
interface	O	O
.	O	O
One	O	O
potential	O	O
thing	O	O
you	O	O
can	O	O
do	O	O
is	O	O
contain	O	O
the	O	O
object	O	O
rather	O	O
than	O	O
extend	O	O
from	O	O
the	O	O
other	O	O
class	O	O
.	O	O
This	O	O
will	O	O
give	O	O
you	O	O
the	O	O
most	O	O
flexibility	O	O
in	O	O
terms	O	O
of	O	O
exposing	O	O
what	O	O
you	O	O
want	O	O
to	O	O
expose	O	O
,	O	O
but	O	O
if	O	O
you	O	O
absolutely	O	O
need	O	O
the	O	O
object	O	O
to	O	O
be	O	O
of	O	O
that	O	O
type	O	O
it	O	O
is	O	O
not	O	O
the	O	O
ideal	O	O
solution	O	O
(	O	O
however	O	O
you	O	O
could	O	O
expose	O	O
the	O	O
object	O	O
from	O	O
a	O	O
getter	B-API	O
)	O	O
.	O	O
Thus	O	O
:	O	O
public	O	O
class	O	O
MyClass	O	O
:	O	O
BaseClass	O	O
{	O	O
//	O	O
Your	O	O
stuff	O	O
Becomes	O	O
:	O	O
public	O	O
class	O	O
MyClass	O	O
{	O	O
private	O	O
BaseClass	O	O
baseClass	O	O
;	O	O
public	O	O
void	O	O
{	O	O
;	O	O
ExposeThisMethod	B-API	B-API
(	I-API	I-API
)	I-API	I-API
baseClass.ExposeThisMethod	B-API	B-API
(	I-API	I-API
)	I-API	I-API
Or	O	O
:	O	O
public	O	O
class	O	O
MyClass	O	O
{	O	O
private	O	O
BaseClass	O	O
baseClass	O	O
;	O	O
public	O	O
BaseClass	O	O
BaseClass	O	O
{	O	O
get	O	O
{	O	O
return	O	O
baseClass	O	O
;	O	O
}	O	O
Override	O	O
them	O	O
like	O	O
Michael	O	O
Suggests	O	O
above	O	O
and	O	O
to	O	O
prevent	O	O
folks	O	O
from	O	O
using	O	O
the	O	O
overridden	B-API	O
(	I-API	O
sp	I-API	O
?	I-API	O
)	I-API	O
methods	O	O
,	O	O
mark	O	O
them	O	O
as	O	O
obsolete	O	O
:	O	O
]	O	O
public	O	O
override	B-API	O
Obsolete	B-API	O
(	I-API	O
``	I-API	O
These	I-API	O
are	I-API	O
not	I-API	O
supported	I-API	O
in	I-API	O
this	I-API	O
class	I-API	O
.	I-API	O
``	I-API	O
,	I-API	O
true	I-API	O
)	I-API	O
dontcallmeanymore	I-API	B-API
(	I-API	I-API
)	I-API	I-API
If	O	O
the	O	O
second	O	O
parm	O	O
is	O	O
set	O	O
to	O	O
true	O	O
,	O	O
a	O	O
compiler	O	O
error	O	O
will	O	O
be	O	O
generated	O	O
if	O	O
anyone	O	O
tries	O	O
to	O	O
call	O	O
that	O	O
method	O	O
and	O	O
the	O	O
string	O	O
in	O	O
the	O	O
first	O	O
parm	O	O
is	O	O
the	O	O
message	O	O
.	O	O
If	O	O
parm2	O	O
is	O	O
false	O	O
only	O	O
a	O	O
compiler	O	O
warning	O	O
will	O	O
be	O	O
generated	O	O
.	O	O
I	O	O
am	O	O
thinking	O	O
off	O	O
the	O	O
top	O	O
of	O	O
my	O	O
head	O	O
here	O	O
.	O	O
If	O	O
you	O	O
load	O	O
both	O	O
as	O	O
Data	O	O
Tables	O	O
in	O	O
the	O	O
same	O	O
Data	O	O
Sets	O	O
,	O	O
and	O	O
define	O	O
a	O	O
relation	O	O
between	O	O
the	O	O
two	O	O
over	O	O
SKU	O	O
,	O	O
and	O	O
then	O	O
run	O	O
a	O	O
query	O	O
on	O	O
the	O	O
Data	O	O
Set	O	O
which	O	O
produces	O	O
the	O	O
desired	O	O
result	O	O
.	O	O
As	O	O
long	O	O
as	O	O
the	O	O
two	O	O
databases	O	O
are	O	O
on	O	O
the	O	O
same	O	O
physical	O	O
server	O	O
(	O	O
assuming	O	O
MSSQL	O	O
)	O	O
and	O	O
the	O	O
username/password	O	O
being	O	O
used	O	O
in	O	O
the	O	O
connection	O	O
string	O	O
has	O	O
rights	O	O
to	O	O
both	O	O
DBs	O	O
,	O	O
then	O	O
you	O	O
should	O	O
be	O	O
able	O	O
to	O	O
perform	O	O
a	O	O
join	O	O
across	O	O
the	O	O
two	O	O
databases	O	O
.	O	O
Example	O	O
:	O	O
select	O	O
p.Date	B-API	O
,	O	O
p.Amount	O	O
,	O	O
d.SoftwareName	O	O
,	O	O
d.DownloadLinkfrom	O	O
PurchaseDB.dbo.Purchases	B-API	B-API
as	O	O
pjoin	O	O
ProductDB.dbo.Products	B-API	O
as	O	O
d	O	O
on	O	O
d.sku	O	O
=	O	O
p.skuwhere	O	O
p.UserID	O	O
=	O	O
12345	O	O
Why	O	O
not	O	O
create	O	O
a	O	O
Domain	O	O
object	O	O
based	O	O
approach	O	O
to	O	O
this	O	O
problem	O	O
:	O	O
public	O	O
class	O	O
CustomerDownloadInfo	O	O
{	O	O
private	O	O
string	O	O
sku	O	O
;	O	O
private	O	O
readonly	O	O
ICustomer	O	O
customer	O	O
;	O	O
public	O	O
{	O	O
customer	O	O
=	O	O
Customer	O	O
;	O	O
}	O	O
public	O	O
void	O	O
{	O	O
sku	O	O
=	O	O
Sku	O	O
;	O	O
}	O	O
public	O	O
string	O	O
Sku	O	O
{	O	O
get	O	O
{	O	O
return	O	O
sku	O	O
;	O	O
}	O	O
}	O	O
public	O	O
string	O	O
Link	O	O
{	O	O
get	O	O
{	O	O
//	O	O
etc	O	O
...	O	O
etc	O	O
...	O	O
}	O	O
(	O	O
ICustomer	O	O
Customer	O	O
)	O	O
(	O	O
string	O	O
Sku	O	O
)	O	O
There	O	O
are	O	O
a	O	O
million	O	O
variations	O	O
on	O	O
this	O	O
,	O	O
but	O	O
once	O	O
you	O	O
aggregate	O	O
this	O	O
information	O	O
,	O	O
would	O	O
n't	O	O
it	O	O
be	O	O
easier	O	O
to	O	O
present	O	O
?	O	O
Why	O	O
not	O	O
use	O	O
SQLite	O	O
?	O	O
There	O	O
is	O	O
good	O	O
support	O	O
in	O	O
Python	O	O
and	O	O
you	O	O
can	O	O
write	O	O
SQL	O	O
queries	O	O
to	O	O
get	O	O
the	O	O
data	O	O
out	O	O
.	O	O
Here	O	O
is	O	O
the	O	O
Python	O	O
docs	O	O
for	O	O
sqlite3	O	O
If	O	O
you	O	O
do	O	O
n't	O	O
want	O	O
to	O	O
use	O	O
SQLite	O	O
you	O	O
could	O	O
do	O	O
an	O	O
array	O	O
of	O	O
dicts	O	O
.	O	O
episodes	O	O
=	O	O
]	O	O
episodes.append	B-API	B-API
(	I-API	I-API
{	I-API	I-API
'season':1	I-API	I-API
,	I-API	I-API
'episode	I-API	I-API
'	I-API	I-API
:	I-API	I-API
2	I-API	I-API
,	I-API	I-API
'name	I-API	I-API
'	I-API	I-API
:	I-API	I-API
'Something	I-API	I-API
'	I-API	I-API
}	I-API	I-API
)	I-API	I-API
(	O	O
{	O	O
'season':1	O	O
,	O	O
'episode	O	O
'	O	O
:	O	O
2	O	O
,	O	O
'name	O	O
'	O	O
:	O	O
'Something	O	O
'	O	O
,	O	O
'actors	O	O
'	O	O
:	O	O
[	O	O
'Billy	O	O
Bob	O	O
'	O	O
,	O	O
'Sean	O	O
Penn	O	O
'	O	O
]	O	O
}	O	O
)	O	O
That	O	O
way	O	O
you	O	O
add	O	O
metadata	O	O
to	O	O
any	O	O
record	O	O
and	O	O
search	O	O
it	O	O
very	O	O
easily	O	O
season_1	B-API	O
=	B-API	O
[	B-API	O
e	I-API	O
for	B-API	O
e	B-API	O
in	B-API	O
episodes	B-API	O
if	B-API	O
e	B-API	O
[	I-API	O
'season	I-API	O
'	I-API	O
]	I-API	O
==	B-API	O
1	B-API	O
]	I-API	O
billy_bob	I-API	O
=	B-API	O
[	B-API	O
e	I-API	O
for	B-API	O
e	B-API	O
in	B-API	O
episodes	B-API	O
if	B-API	O
'actors	B-API	O
'	I-API	O
in	B-API	O
e	B-API	O
and	B-API	O
'Billy	B-API	O
Bob	B-API	O
'	I-API	O
in	B-API	O
e	B-API	O
[	I-API	O
'actors	I-API	O
'	I-API	O
]	I-API	O
]	I-API	O
for	I-API	O
episode	B-API	O
in	B-API	O
billy_bob	B-API	O
:	I-API	O
print	B-API	O
``	B-API	O
Billy	I-API	O
bob	B-API	O
was	B-API	O
in	B-API	O
Season	B-API	O
%	B-API	O
s	I-API	O
Episode	B-API	O
%	B-API	O
s	I-API	O
''	I-API	O
%	B-API	O
(	B-API	O
episode	I-API	O
[	I-API	O
'season	I-API	O
'	I-API	O
]	I-API	O
,	I-API	O
There	O	O
are	O	O
several	O	O
ways	O	O
to	O	O
do	O	O
this	O	O
.	O	O
Common	O	O
methods	O	O
use	O	O
recursion	O	O
,	O	O
memoization	O	O
,	O	O
or	O	O
dynamic	O	O
programming	O	O
.	O	O
The	O	O
basic	O	O
idea	O	O
is	O	O
that	O	O
you	O	O
produce	O	O
a	O	O
list	O	O
of	O	O
all	O	O
strings	O	O
of	O	O
length	O	O
1	O	O
,	O	O
then	O	O
in	O	O
each	O	O
iteration	O	O
,	O	O
for	O	O
all	O	O
strings	O	O
produced	O	O
in	O	O
the	O	O
last	O	O
iteration	O	O
,	O	O
add	O	O
that	O	O
string	O	O
concatenated	O	O
with	O	O
each	O	O
character	O	O
in	O	O
the	O	O
string	O	O
individually	O	O
.	O	O
(	O	O
the	O	O
variable	O	O
index	O	O
in	O	O
the	O	O
code	O	O
below	O	O
keeps	O	O
track	O	O
of	O	O
the	O	O
start	O	O
of	O	O
the	O	O
last	O	O
and	O	O
the	O	O
next	O	O
iteration	O	O
)	O	O
Some	O	O
pseudocode	O	O
:	O	O
list	O	O
=	O	O
originalString.split	B-API	B-API
(	I-API	I-API
''	I-API	I-API
)	I-API	I-API
index	O	O
=	O	O
(	O	O
0,0	O	O
)	O	O
list	O	O
=	O	O
[	O	O
``	O	O
''	O	O
]	O	O
for	O	O
iteration	O	O
n	O	O
in	O	O
1	O	O
to	O	O
y	O	O
:	O	O
index	O	O
=	O	O
(	O	O
index	O	O
[	O	O
1	O	O
]	O	O
,	O	O
len	O	B-API
(	O	I-API
list	O	I-API
)	O	I-API
)	O	O
for	O	O
string	O	O
s	O	O
in	O	O
list.subset	B-API	O
(	I-API	O
index	I-API	O
[	I-API	O
0	I-API	O
]	I-API	O
to	I-API	O
end	I-API	O
)	I-API	O
:	O	O
for	O	O
character	O	O
c	O	O
in	O	O
originalString	O	O
:	O	O
list.add	B-API	B-API
(	I-API	I-API
s	I-API	I-API
+	I-API	I-API
c	I-API	I-API
)	I-API	I-API
you	O	O
'd	O	O
then	O	O
need	O	O
to	O	O
remove	O	O
all	O	O
strings	O	O
less	O	O
than	O	O
x	O	O
in	O	O
length	O	O
,	O	O
they	O	O
'll	O	O
be	O	O
the	O	O
first	O	O
(	O	O
x-1	O	O
)	O	O
*	O	O
len	B-API	O
(	I-API	O
originalString	I-API	O
)	I-API	O
entries	O	O
in	O	O
the	O	O
list	O	O
.	O	O
I	O	O
just	O	O
whipped	O	O
this	O	O
up	O	O
quick	O	O
in	O	O
Ruby	O	O
:	O	O
def	O	B-API
all	O	O
=	O	O
[	O	O
``	O	O
''	O	O
]	O	O
current_array	B-API	O
=	O	O
all.clone	B-API	O
{	O	O
|iteration|	O	O
next_array	O	O
=	O	O
[	O	O
]	O	O
current_array.each	B-API	O
{	O	O
|string|	O	O
possible_characters.each	B-API	O
{	O	O
|c|	O	O
value	O	O
=	O	O
string	O	O
+	O	O
c	O	O
next_array.insert	B-API	O
next_array.length	B-API	O
,	O	O
value	O	O
all.insert	O	O
all.length	O	O
,	O	O
value	O	O
}	O	O
}	O	O
current_array	O	O
=	O	O
next_array	O	O
}	O	O
all.delete_if	O	O
{	O	O
|string|	O	O
string.length	B-API	B-API
x	O	O
(	O	O
x	O	O
,	O	O
y	O	O
,	O	O
possible_characters	O	O
)	O	O
1.upto	B-API	O
(	I-API	O
y	I-API	O
)	I-API	O
You	O	O
might	O	O
look	O	O
into	O	O
language	O	O
API	O	O
for	O	O
built	O	O
in	O	O
permutation	O	O
type	O	O
functions	O	O
,	O	O
and	O	O
you	O	O
might	O	O
be	O	O
able	O	O
to	O	O
write	O	O
more	O	O
optimized	O	O
code	O	O
,	O	O
but	O	O
if	O	O
the	O	O
numbers	O	O
are	O	O
all	O	O
that	O	O
high	O	O
,	O	O
I	O	O
'm	O	O
not	O	O
sure	O	O
there	O	O
is	O	O
much	O	O
of	O	O
a	O	O
way	O	O
around	O	O
having	O	O
a	O	O
lot	O	O
of	O	O
results	O	O
.	O	O
Anyways	O	O
,	O	O
the	O	O
idea	O	O
behind	O	O
the	O	O
code	O	O
is	O	O
start	O	O
with	O	O
string	O	O
of	O	O
length	O	O
0	O	O
,	O	O
then	O	O
keep	O	O
track	O	O
of	O	O
all	O	O
the	O	O
strings	O	O
of	O	O
length	O	O
Z	O	O
where	O	O
Z	O	O
is	O	O
the	O	O
current	O	O
size	O	O
in	O	O
the	O	O
iteration	O	O
.	O	O
Then	O	O
,	O	O
go	O	O
through	O	O
each	O	O
string	O	O
and	O	O
append	O	O
each	O	O
character	O	O
onto	O	O
each	O	O
string	O	O
.	O	O
Finally	O	O
at	O	O
the	O	O
end	O	O
,	O	O
remove	O	O
any	O	O
that	O	O
were	O	O
below	O	O
the	O	O
x	O	O
threshold	O	O
and	O	O
return	O	O
the	O	O
result	O	O
.	O	O
I	O	O
did	O	O
n't	O	O
test	O	O
it	O	O
with	O	O
potentially	O	O
meaningless	O	O
input	O	O
(	O	O
null	O	O
character	O	O
list	O	O
,	O	O
weird	O	O
values	O	O
of	O	O
x	O	O
and	O	O
y	O	O
,	O	O
etc	O	O
)	O	O
.	O	O
I	O	O
'm	O	O
not	O	O
sure	O	O
why	O	O
you	O	O
would	O	O
want	O	O
to	O	O
do	O	O
this	O	O
in	O	O
the	O	O
first	O	O
place	O	O
.	O	O
The	O	O
resulting	O	O
set	O	O
for	O	O
any	O	O
moderately	O	O
large	O	O
values	O	O
of	O	O
x	O	O
and	O	O
y	O	O
will	O	O
be	O	O
huge	O	O
,	O	O
and	O	O
will	O	O
grow	O	O
exponentially	O	O
as	O	O
x	O	O
and/or	O	O
y	O	O
get	O	O
bigger	O	O
.	O	O
Lets	O	O
say	O	O
your	O	O
set	O	O
of	O	O
possible	O	O
characters	O	O
is	O	O
the	O	O
26	O	O
lowercase	O	O
letters	O	O
of	O	O
the	O	O
alphabet	O	O
,	O	O
and	O	O
you	O	O
ask	O	O
your	O	O
application	O	O
to	O	O
generate	O	O
all	O	O
permutations	O	O
where	O	O
length	O	O
=	O	O
5	O	O
.	O	O
Assuming	O	O
you	O	O
do	O	O
n't	O	O
run	O	O
out	O	O
of	O	O
memory	O	O
you	O	O
'll	O	O
get	O	O
11,881,376	O	O
(	O	O
i.e	O	O
.	O	O
26	O	O
to	O	O
the	O	O
power	O	O
of	O	O
5	O	O
)	O	O
strings	O	O
back	O	O
.	O	O
Bump	O	O
that	O	O
length	O	O
up	O	O
to	O	O
6	O	O
,	O	O
and	O	O
you	O	O
'll	O	O
get	O	O
308,915,776	O	O
strings	O	O
back	O	O
.	O	O
These	O	O
numbers	O	O
get	O	O
painfully	O	O
large	O	O
,	O	O
very	O	O
quickly	O	O
.	O	O
Here	O	O
's	O	O
a	O	O
solution	O	O
I	O	O
put	O	O
together	O	O
in	O	O
Java	O	O
.	O	O
You	O	O
'll	O	O
need	O	O
to	O	O
provide	O	O
two	O	O
runtime	O	O
arguments	O	O
(	O	O
corresponding	O	O
to	O	O
x	O	O
and	O	O
y	O	O
)	O	O
.	O	O
Have	O	O
fun	O	O
.	O	O
public	O	O
class	O	O
GeneratePermutations	B-API	O
{	O	O
public	O	O
static	O	O
void	O	O
{	O	O
int	O	O
lower	O	O
=	O	O
;	O	O
int	O	O
upper	O	O
=	O	O
;	O	O
if	O	O
(	O	O
upper	O	O
lower	O	O
||	O	O
upper	O	O
==	O	O
0	O	O
||	O	O
lower	O	O
==	O	O
0	O	O
)	O	O
{	O	O
;	O	O
}	O	O
for	O	O
(	O	O
int	O	O
length	O	O
=	O	O
lower	O	O
;	O	O
length	O	O
=	O	O
upper	O	O
;	O	O
length++	O	O
)	O	O
{	O	O
;	O	O
}	O	O
}	O	O
private	O	O
static	O	O
void	O	O
{	O	O
if	O	O
(	O	O
length	O	O
=	O	O
0	O	O
)	O	O
{	O	O
;	O	O
}	O	O
else	O	O
{	O	O
for	O	O
(	O	O
char	O	O
c	O	O
=	O	O
'a	O	O
'	O	O
;	O	O
c	O	O
=	O	O
'z	O	O
'	O	O
;	O	O
c++	O	O
)	O	O
{	O	O
;	O	O
}	O	O
}	O	O
(	O	O
String	O	B-API
[	O	I-API
]	O	I-API
args	O	O
)	O	O
Integer.parseInt	B-API	B-API
(	I-API	I-API
args	I-API	I-API
[	I-API	I-API
0	I-API	I-API
]	I-API	I-API
)	I-API	I-API
Integer.parseInt	B-API	B-API
(	I-API	O
args	I-API	O
[	I-API	O
1	I-API	O
]	I-API	O
)	I-API	O
System.exit	B-API	B-API
(	I-API	I-API
0	I-API	I-API
)	I-API	I-API
(	O	O
length	O	O
,	O	O
``	O	O
''	O	O
)	O	O
(	O	O
int	O	O
length	O	O
,	O	O
String	O	O
partial	O	O
)	O	O
System.out.println	B-API	O
(	I-API	O
partial	I-API	O
)	I-API	O
(	O	O
length	O	O
-	O	O
1	O	O
,	O	O
partial	O	O
+	O	O
c	O	O
)	O	O
You	O	O
are	O	O
going	O	O
to	O	O
get	O	O
a	O	O
lot	O	O
of	O	O
strings	O	O
,	O	O
that	O	O
's	O	O
for	O	O
sure	O	O
...	O	O
Where	O	O
,	O	O
x	O	O
and	O	O
y	O	O
is	O	O
how	O	O
you	O	O
define	O	O
them	O	O
and	O	O
r	O	O
is	O	O
the	O	O
number	O	O
of	O	O
characters	O	O
we	O	O
are	O	O
selecting	O	O
from	O	O
--	O	O
if	O	O
I	O	O
am	O	O
understanding	O	O
you	O	O
correctly	O	O
.	O	O
You	O	O
should	O	O
definitely	O	O
generate	O	O
these	O	O
as	O	O
needed	O	O
and	O	O
not	O	O
get	O	O
sloppy	O	O
and	O	O
say	O	O
,	O	O
generate	O	O
a	O	O
powerset	O	O
and	O	O
then	O	O
filter	O	O
the	O	O
length	O	O
of	O	O
strings	O	O
.	O	O
The	O	O
following	O	O
definitely	O	O
is	O	O
n't	O	O
the	O	O
best	O	O
way	O	O
to	O	O
generate	O	O
these	O	O
,	O	O
but	O	O
it	O	O
's	O	O
an	O	O
interesting	O	O
aside	O	O
,	O	O
none-the-less	O	O
.	O	O
Knuth	O	B-API
(	O	I-API
volume	O	I-API
4	O	I-API
,	O	I-API
fascicle	O	I-API
2	O	I-API
,	O	I-API
7.2.1.3	O	I-API
)	O	I-API
tells	O	O
us	O	O
that	O	O
(	O	O
s	O	O
,	O	O
t	O	O
)	O	O
-combination	O	O
is	O	O
equivalent	O	O
to	O	O
s+1	O	O
things	O	O
taken	O	O
t	O	O
at	O	O
a	O	O
time	O	O
with	O	O
repetition	O	O
--	O	O
an	O	O
(	O	O
s	O	O
,	O	O
t	O	O
)	O	O
-combination	O	O
is	O	O
notation	O	O
used	O	O
by	O	O
Knuth	O	O
that	O	O
is	O	O
equal	O	O
to	O	O
.	O	O
We	O	O
can	O	O
figure	O	O
this	O	O
out	O	O
by	O	O
first	O	O
generating	O	O
each	O	B-API
(	O	I-API
s	O	I-API
,	O	I-API
t	O	I-API
)	O	I-API
-combination	O	O
in	O	O
binary	O	O
form	O	O
(	O	O
so	O	O
,	O	O
of	O	O
length	O	O
(	O	O
s+t	O	O
)	O	O
)	O	O
and	O	O
counting	O	O
the	O	O
number	O	O
of	O	O
0	O	O
's	O	O
to	O	O
the	O	O
left	O	O
of	O	O
each	O	O
1	O	O
.	O	O
10001000011101	O	O
--	O	O
becomes	O	O
the	O	O
permutation	O	O
:	O	O
{	O	O
0	O	O
,	O	O
3	O	O
,	O	O
4	O	O
,	O	O
4	O	O
,	O	O
4	O	O
,	O	O
1	O	O
}	O	O
First	O	O
you	O	O
will	O	O
need	O	O
some	O	O
GUI	O	O
library	O	O
with	O	O
Python	O	O
bindings	O	O
and	O	O
then	O	O
(	O	O
if	O	O
you	O	O
want	O	O
)	O	O
some	O	O
program	O	O
that	O	O
will	O	O
convert	O	O
your	O	O
python	O	O
scripts	O	O
into	O	O
standalone	O	O
executables	O	O
.	O	O
Cross-platform	O	O
GUI	O	O
libraries	O	O
with	O	O
Python	O	O
bindings	O	O
(	O	O
Windows	O	O
,	O	O
Linux	O	O
,	O	O
Mac	O	O
)	O	O
Of	O	O
course	O	O
,	O	O
there	O	O
are	O	O
many	O	O
,	O	O
but	O	O
the	O	O
most	O	O
popular	O	O
that	O	O
I	O	O
've	O	O
seen	O	O
in	O	O
wild	O	O
are	O	O
:	O	O
Tkinter	O	O
-	O	O
based	O	O
on	O	O
Tk	O	O
GUI	O	O
toolkit	O	O
(	O	O
de-facto	O	O
standard	O	O
GUI	O	O
library	O	O
for	O	O
python	O	O
,	O	O
free	O	O
for	O	O
commercial	O	O
projects	O	O
)	O	O
WxPython	B-API	O
-	O	O
based	O	O
on	O	O
WxWidgets	O	O
(	O	O
very	O	O
popular	O	O
,	O	O
free	O	O
for	O	O
commercial	O	O
projects	O	O
)	O	O
PyQt	O	O
-	O	O
based	O	O
on	O	O
Qt	O	O
(	O	O
also	O	O
very	O	O
popular	O	O
and	O	O
more	O	O
stable	O	O
than	O	O
WxWidgets	O	O
but	O	O
costly	O	O
license	O	O
for	O	O
commercial	O	O
projects	O	O
)	O	O
Complete	O	O
list	O	O
is	O	O
at	O	O
http	O	O
:	O	O
//wiki.python.org/moin/GuiProgramming	O	O
Single	O	O
executable	O	O
(	O	O
Windows	O	O
)	O	O
py2exe	O	O
-	O	O
Probably	O	O
the	O	O
most	O	O
popular	O	O
out	O	O
there	O	O
(	O	O
PyInstaller	B-API	O
is	O	O
also	O	O
gaining	O	O
in	O	O
popularity	O	O
)	O	O
Single	O	O
executable	O	O
(	O	O
Linux	O	O
)	O	O
Freeze	O	O
-	O	O
works	O	O
the	O	O
same	O	O
way	O	O
like	O	O
py2exe	O	O
but	O	O
targets	O	O
Linux	O	O
platform	O	O
Single	O	O
executable	O	O
(	O	O
Mac	O	O
)	O	O
py2app	O	O
-	O	O
again	O	O
,	O	O
works	O	O
like	O	O
py2exe	O	O
but	O	O
targets	O	O
Mac	O	O
OS	O	O
You	O	O
do	O	O
n't	O	O
need	O	O
to	O	O
compile	O	O
python	O	O
for	O	O
Mac/Windows/Linux	O	O
.	O	O
It	O	O
is	O	O
an	O	O
interpreted	O	O
language	O	O
,	O	O
so	O	O
you	O	O
simply	O	O
need	O	O
to	O	O
have	O	O
the	O	O
Python	O	O
interpreter	O	O
installed	O	O
on	O	O
the	O	O
system	O	O
of	O	O
your	O	O
choice	O	O
(	O	O
it	O	O
is	O	O
available	O	O
for	O	O
all	O	O
three	O	O
platforms	O	O
)	O	O
.	O	O
As	O	O
for	O	O
a	O	O
GUI	O	O
library	O	O
that	O	O
works	O	O
cross	O	O
platform	O	O
,	O	O
Python	O	O
's	O	O
Tk/Tcl	O	O
widget	O	O
library	O	O
works	O	O
very	O	O
well	O	O
,	O	O
and	O	O
I	O	O
believe	O	O
is	O	O
sufficiently	O	O
cross	O	O
platform	O	O
.	O	O
Tkinter	O	O
is	O	O
the	O	O
python	O	O
interface	O	O
to	O	O
Tk/Tcl	O	O
From	O	O
the	O	O
python	O	O
project	O	O
webpage	O	O
:	O	O
Tkinter	O	O
is	O	O
not	O	O
the	O	O
only	O	O
GuiProgramming	O	O
toolkit	O	O
for	O	O
Python	O	O
.	O	O
It	O	O
is	O	O
however	O	O
the	O	O
most	O	O
commonly	O	O
used	O	O
one	O	O
,	O	O
and	O	O
almost	O	O
the	O	O
only	O	O
one	O	O
that	O	O
is	O	O
portable	O	O
between	O	O
Unix	O	O
,	O	O
Mac	O	O
and	O	O
Windows	O	O
Since	O	O
python	O	O
is	O	O
installed	O	O
on	O	O
nearly	O	O
every	O	O
non-Windows	O	O
OS	O	O
by	O	O
default	O	O
now	O	O
,	O	O
the	O	O
only	O	O
thing	O	O
you	O	O
really	O	O
need	O	O
to	O	O
make	O	O
sure	O	O
of	O	O
is	O	O
that	O	O
all	O	O
of	O	O
the	O	O
non-standard	O	O
libraries	O	O
you	O	O
use	O	O
are	O	O
installed	O	O
.	O	O
Having	O	O
said	O	O
that	O	O
,	O	O
it	O	O
is	O	O
possible	O	O
to	O	O
build	O	O
executables	O	O
that	O	O
include	O	O
the	O	O
python	O	O
interpreter	O	O
,	O	O
and	O	O
any	O	O
libraries	O	O
you	O	O
use	O	O
.	O	O
This	O	O
is	O	O
likely	O	O
to	O	O
create	O	O
a	O	O
large	O	O
executable	O	O
,	O	O
however	O	O
.	O	O
MacOS	O	O
X	O	O
even	O	O
includes	O	O
support	O	O
in	O	O
the	O	O
Xcode	O	O
IDE	O	O
for	O	O
creating	O	O
full	O	O
standalone	O	O
GUI	O	O
apps	O	O
.	O	O
These	O	O
can	O	O
be	O	O
run	O	O
by	O	O
any	O	O
user	O	O
running	O	O
OS	O	O
X	O	O
.	O	O
I	O	O
'm	O	O
not	O	O
a	O	O
PHP	O	O
dev	O	O
but	O	O
Google	O	O
says	O	O
that	O	O
PHP	O	O
5+	O	O
can	O	O
instantiate	O	O
COM	O	O
components	O	O
.	O	O
If	O	O
you	O	O
can	O	O
install	O	O
Outlook	O	O
on	O	O
a	O	O
box	O	O
you	O	O
could	O	O
write	O	O
a	O	O
PHP	O	O
web	O	O
service	O	O
around	O	O
the	O	O
COM	O	O
component	O	O
to	O	O
handle	O	O
the	O	O
requests	O	O
you	O	O
need	O	O
.	O	O
$	O	O
outlook	O	O
=	O	O
COM	B-API	B-API
(	I-API	I-API
``	I-API	I-API
Outlook.Application	I-API	I-API
''	I-API	I-API
)	I-API	I-API
Outlook	O	O
API	O	O
referance	O	O
I	O	O
have	O	O
not	O	O
used	O	O
PHP	O	O
to	O	O
do	O	O
this	O	O
but	O	O
have	O	O
experience	O	O
in	O	O
using	O	O
C	O	O
#	O	O
to	O	O
achieve	O	O
the	O	O
same	O	O
thing	O	O
.	O	O
The	O	O
Outlook	O	O
API	O	O
is	O	O
a	O	O
way	O	O
of	O	O
automating	O	O
Outlook	O	O
rather	O	O
than	O	O
connecting	O	O
to	O	O
Exchange	O	O
directly	O	O
.	O	O
I	O	O
have	O	O
previously	O	O
taken	O	O
this	O	O
approach	O	O
in	O	O
a	O	O
C	O	O
#	O	O
application	O	O
and	O	O
it	O	O
does	O	O
work	O	O
although	O	O
can	O	O
be	O	O
buggy	O	O
.	O	O
If	O	O
you	O	O
wish	O	O
to	O	O
connect	O	O
directly	O	O
to	O	O
the	O	O
Exchange	O	O
server	O	O
you	O	O
will	O	O
need	O	O
to	O	O
research	O	O
extended	O	O
MAPI	O	B-API
.	O	O
In	O	O
the	O	O
past	O	O
I	O	O
used	O	O
this	O	O
wrapper	O	O
MAPIEx	O	O
:	O	O
Extended	O	O
MAPI	O	O
Wrapper	O	O
.	O	O
It	O	O
is	O	O
a	O	O
C	O	O
#	O	O
project	O	O
but	O	O
I	O	O
believe	O	O
you	O	O
can	O	O
use	O	O
some	O	O
.NET	O	O
code	O	O
on	O	O
a	O	O
PHP5	O	O
Windows	O	O
server	O	O
.	O	O
Alternatively	O	O
it	O	O
has	O	O
a	O	O
C++	O	O
core	O	O
DLL	O	O
that	O	O
you	O	O
may	O	O
be	O	O
a	O	O
able	O	O
to	O	O
use	O	O
.	O	O
I	O	O
have	O	O
found	O	O
it	O	O
to	O	O
be	O	O
very	O	O
good	O	O
and	O	O
there	O	O
are	O	O
some	O	O
good	O	O
example	O	O
applications	O	O
.	O	O
Update	O	O
:	O	O
Sorry	O	O
for	O	O
the	O	O
delay	O	O
no	O	O
current	O	O
way	O	O
to	O	O
keep	O	O
track	O	O
of	O	O
posts	O	O
yet	O	O
.	O	O
I	O	O
do	O	O
agree	O	O
adding	O	O
more	O	O
layer	O	O
on	O	O
to	O	O
your	O	O
application	O	O
and	O	O
relying	O	O
on	O	O
3rd	O	O
party	O	O
code	O	O
can	O	O
be	O	O
scary	O	O
(	O	O
and	O	O
rightfully	O	O
so	O	O
.	O	O
)	O	O
Today	O	O
I	O	O
read	O	O
another	O	O
interesting	O	O
post	O	O
tagged	O	O
up	O	O
as	O	O
MAPI	O	B-API
that	O	O
is	O	O
on	O	O
a	O	O
different	O	O
subject	O	O
.	O	O
The	O	O
key	O	O
thing	O	O
here	O	O
though	O	O
is	O	O
that	O	O
it	O	O
has	O	O
linked	O	O
to	O	O
this	O	O
important	O	O
MS	O	O
article	O	O
.	O	O
I	O	O
have	O	O
been	O	O
unaware	O	O
of	O	O
the	O	O
issues	O	O
until	O	O
now	O	O
on	O	O
using	O	O
managed	O	O
code	O	O
to	O	O
interface	O	O
to	O	O
MAPI	O	B-API
although	O	O
the	O	O
C++	O	O
code	O	O
in	O	O
the	O	O
component	O	O
should	O	O
be	O	O
unaffected	O	O
by	O	O
this	O	O
error	O	O
as	O	O
it	O	O
is	O	O
unmanaged	O	O
.	O	O
This	O	O
blog	O	O
entry	O	O
also	O	O
suggests	O	O
other	O	O
ways	O	O
to	O	O
connect	O	O
to	O	O
MAPI/Exchange	O	O
server	O	O
.	O	O
In	O	O
this	O	O
case	O	O
due	O	O
to	O	O
these	O	O
new	O	O
facts	O	O
http	O	O
:	O	O
//us3.php.net/imap	O	O
may	O	O
be	O	O
the	O	O
answer	O	O
as	O	O
suggested	O	O
by	O	O
the	O	O
other	O	O
user	O	O
.	O	O
I	O	O
would	O	O
look	O	O
into	O	O
IMAP	O	O
IMAP	O	O
,	O	O
POP3	O	O
and	O	O
NNTP	O	O
Is	O	O
your	O	O
customer	O	O
using	O	O
Exchange	O	O
2007	O	O
?	O	O
If	O	O
so	O	O
,	O	O
I	O	O
'd	O	O
have	O	O
a	O	O
look	O	O
at	O	O
Exchange	O	O
Web	O	O
Services	O	O
.	O	O
If	O	O
not	O	O
,	O	O
as	O	O
hairy	O	O
as	O	O
it	O	O
can	O	O
be	O	O
,	O	O
I	O	O
think	O	O
WebDAV	O	O
is	O	O
your	O	O
best	O	O
bet	O	O
.	O	O
Personally	O	O
I	O	O
do	O	O
n't	O	O
like	O	O
using	O	O
the	O	O
Outlook.Application	B-API	B-API
COM	O	O
object	O	O
route	O	O
,	O	O
as	O	O
its	O	O
security	O	O
prompts	O	O
(	O	O
``	O	O
An	O	O
application	O	O
is	O	O
attempting	O	O
to	O	O
access	O	O
your	O	O
contacts	O	O
.	O	O
Allow	O	O
this	O	O
?	O	O
``	O	O
,	O	O
etc	O	O
.	O	O
)	O	O
can	O	O
cause	O	O
problems	O	O
on	O	O
a	O	O
server	O	O
.	O	O
I	O	O
also	O	O
think	O	O
it	O	O
would	O	O
be	O	O
difficult	O	O
to	O	O
accomplish	O	O
your	O	O
impersonation-like	O	O
tasks	O	O
using	O	O
Outlook	O	O
,	O	O
such	O	O
as	O	O
sending	O	O
mail	O	O
as	O	O
a	O	O
given	O	O
user	O	O
.	O	O
var	O	O
element	O	O
=	O	O
;	O	O
element.style.background	B-API	B-API
=	O	O
document.getElementById	B-API	B-API
(	I-API	I-API
'element	I-API	I-API
'	I-API	I-API
)	I-API	I-API
In	O	O
general	O	O
,	O	O
CSS	O	O
properties	O	O
are	O	O
converted	O	O
to	O	O
JavaScript	O	O
by	O	O
making	O	O
them	O	O
camelCase	O	O
without	O	O
any	O	O
dashes	O	O
.	O	O
So	O	O
becomes	O	O
.	O	O
function	O	O
setColor	B-API	O
(	I-API	O
element	I-API	O
,	I-API	O
color	I-API	O
)	I-API	O
{	O	O
element.style.backgroundColor	B-API	B-API
=	O	O
color	O	O
;	O	O
}	O	O
Or	O	O
,	O	O
using	O	O
a	O	O
little	O	O
jQuery	O	O
:	O	O
(	O	O
'	O	O
#	O	O
fieldID	O	O
'	O	O
)	O	O
.css	O	O
(	O	O
'background-color	O	O
'	O	O
,	O	O
'	O	O
#	O	O
FF6600	O	O
'	O	O
)	O	O
This	O	O
warning	O	O
is	O	O
there	O	O
because	O	O
Java	O	O
is	O	O
not	O	O
actually	O	O
storing	O	O
type	O	O
information	O	O
at	O	O
run-time	O	O
in	O	O
an	O	O
that	O	O
uses	O	O
generics	O	O
.	O	O
Thus	O	O
,	O	O
if	O	O
object	O	O
is	O	O
actually	O	O
a	O	O
,	O	O
there	O	O
will	O	O
be	O	O
no	O	O
at	O	O
run-time	O	O
except	O	O
until	O	O
an	O	O
item	O	O
is	O	O
accessed	O	O
from	O	O
the	O	O
list	O	O
that	O	O
does	O	O
n't	O	O
match	O	O
the	O	O
generic	O	O
type	O	O
defined	O	O
in	O	O
the	O	O
variable	O	O
.	O	O
This	O	O
can	O	O
cause	O	O
further	O	O
complications	O	O
if	O	O
items	O	O
are	O	O
added	O	O
to	O	O
the	O	O
list	O	O
,	O	O
with	O	O
this	O	O
incorrect	O	O
generic	O	O
type	O	O
information	O	O
.	O	O
Any	O	O
code	O	O
still	O	O
holding	O	O
a	O	O
reference	O	O
to	O	O
the	O	O
list	O	O
but	O	O
with	O	O
the	O	O
correct	O	O
generic	O	O
type	O	O
information	O	O
will	O	O
now	O	O
have	O	O
an	O	O
inconsistent	O	O
list	O	O
.	O	O
To	O	O
remove	O	O
the	O	O
warning	O	O
,	O	O
try	O	O
:	O	O
List	O	O
?	O	O
list	O	O
=	O	O
(	O	O
List	O	O
?	O	O
)	O	O
object	O	O
;	O	O
However	O	O
,	O	O
note	O	O
that	O	O
you	O	O
will	O	O
not	O	O
be	O	O
able	O	O
to	O	O
use	O	O
certain	O	O
methods	O	O
such	O	O
as	O	O
add	O	O
because	O	O
the	O	O
compiler	O	O
does	O	O
n't	O	O
know	O	O
if	O	O
you	O	O
are	O	O
trying	O	O
to	O	O
add	O	O
an	O	O
object	O	O
of	O	O
incorrect	O	O
type	O	O
.	O	O
The	O	O
above	O	O
will	O	O
work	O	O
in	O	O
a	O	O
lot	O	O
of	O	O
situations	O	O
,	O	O
but	O	O
if	O	O
you	O	O
have	O	O
to	O	O
use	O	O
add	O	O
,	O	O
or	O	O
some	O	O
similarly	O	O
restricted	O	O
method	O	O
,	O	O
you	O	O
will	O	O
just	O	O
have	O	O
to	O	O
suffer	O	O
the	O	O
yellow	O	O
underline	O	O
in	O	O
Eclipse	O	O
(	O	O
or	O	O
a	O	O
annotation	O	O
)	O	O
.	O	O
Try	O	O
removing	O	O
the	O	O
first	O	O
and	O	O
then	O	O
call	O	O
.	O	O
I	O	O
think	O	O
that	O	O
may	O	O
work	O	O
.	O	O
Essentially	O	O
:	O	O
0x44004500	O	O
Remove	O	O
the	O	O
0x	O	O
,	O	O
and	O	O
then	O	O
always	O	O
two	O	O
bytes	O	O
are	O	O
one	O	O
character	O	O
:	O	O
44	O	O
00	O	O
=	O	O
D	O	O
45	O	O
00	O	O
=	O	O
E	O	O
6F	O	O
00	O	O
=	O	O
o	O	O
72	O	O
00	O	O
=	O	O
r	O	O
So	O	O
it	O	O
's	O	O
definitely	O	O
a	O	O
Unicode/UTF	O	O
format	O	O
with	O	O
two	O	O
bytes/character	O	O
.	O	O
Hazzah	O	O
!	O	O
!	O	O
!	O	O
!	O	O
I	O	O
went	O	O
back	O	O
to	O	O
Michael	O	O
's	O	O
post	O	O
,	O	O
did	O	O
some	O	O
more	O	O
poking	O	O
and	O	O
realized	O	O
that	O	O
I	O	O
did	O	O
need	O	O
to	O	O
do	O	O
a	O	O
double	O	O
conversion	O	O
,	O	O
and	O	O
eventually	O	O
worked	O	O
out	O	O
this	O	O
little	O	O
nugget	O	O
:	O	O
Convert.ToString	B-API	B-API
(	I-API	O
Convert.ToChar	B-API	B-API
(	I-API	I-API
Int32.Parse	B-API	I-API
(	I-API	I-API
EncodedString.Substring	B-API	I-API
(	I-API	I-API
intParseIndex	B-API	I-API
,	I-API	I-API
2	I-API	I-API
)	I-API	I-API
,	I-API	O
System.Globalization.NumberStyles.HexNumber	B-API	B-API
)	I-API	O
)	I-API	O
)	I-API	O
;	O	O
From	O	O
there	O	O
I	O	O
simply	O	O
made	O	O
a	O	O
loop	O	O
to	O	O
go	O	O
through	O	O
all	O	O
the	O	O
characters	O	O
2	O	O
by	O	O
2	O	O
and	O	O
get	O	O
them	O	O
``	O	O
hexified	O	O
''	O	O
and	O	O
then	O	O
translated	O	O
to	O	O
a	O	O
string	O	O
.	O	O
To	O	O
Nick	O	O
,	O	O
and	O	O
anybody	O	O
else	O	O
interested	O	O
,	O	O
I	O	O
went	O	O
ahead	O	O
and	O	O
posted	O	O
my	O	O
little	O	O
application	O	O
over	O	O
in	O	O
CodePlex	O	O
.	O	O
Feel	O	O
free	O	O
to	O	O
use/modify	O	O
as	O	O
you	O	O
need	O	O
.	O	O
The	O	O
solution	O	O
is	O	O
to	O	O
use	O	O
the	O	O
TempData	O	O
property	O	O
to	O	O
store	O	O
the	O	O
desired	O	O
Request	O	O
components	O	O
.	O	O
For	O	O
instance	O	O
:	O	O
public	O	O
ActionResult	O	O
Send	O	O
(	O	O
)	O	O
{	O	O
TempData	O	O
[	O	O
``	O	O
form	O	O
''	O	O
]	O	O
=	O	O
Request.Form	B-API	B-API
;	O	O
return	O	O
this.RedirectToAction	B-API	O
(	I-API	O
a	I-API	O
=	I-API	O
a.Form	B-API	B-API
(	I-API	I-API
)	I-API	I-API
)	I-API	I-API
;	O	O
}	O	O
Then	O	O
in	O	O
your	O	O
``	O	O
Form	O	O
''	O	O
action	O	O
you	O	O
can	O	O
go	O	O
:	O	O
public	O	O
ActionResult	O	O
Form	O	O
(	O	O
)	O	O
{	O	O
/*	O	O
Declare	O	O
viewData	O	O
etc	O	O
.	O	O
*/	O	O
if	O	O
(	O	O
TempData	O	O
[	O	O
``	O	O
form	O	O
''	O	O
]	O	O
!	O	O
=	O	O
null	O	O
)	O	O
{	O	O
/*	O	O
Cast	O	O
TempData	O	O
[	O	O
``	O	O
form	O	O
''	O	O
]	O	O
to	O	O
System.Collections.Specialized.NameValueCollection	B-API	B-API
and	O	O
use	O	O
it	O	O
*/	O	O
}	O	O
return	O	O
View	B-API	O
(	I-API	O
``	I-API	O
Form	I-API	O
''	I-API	O
,	I-API	O
viewData	I-API	O
)	I-API	O
;	O	O
}	O	O
Keep	O	O
in	O	O
mind	O	O
that	O	O
TempData	O	O
stores	O	O
the	O	O
form	O	O
collection	O	O
in	O	O
session	O	O
.	O	O
If	O	O
you	O	O
do	O	O
n't	O	O
like	O	O
that	O	O
behavior	O	O
,	O	O
you	O	O
can	O	O
implement	O	O
the	O	O
new	O	O
ITempDataProvider	O	O
interface	O	O
and	O	O
use	O	O
some	O	O
other	O	O
mechanism	O	O
for	O	O
storing	O	O
temp	O	O
data	O	O
.	O	O
I	O	O
would	O	O
n't	O	O
do	O	O
that	O	O
unless	O	O
you	O	O
know	O	O
for	O	O
a	O	O
fact	O	O
(	O	O
via	O	O
measurement	O	O
and	O	O
profiling	O	O
)	O	O
that	O	O
the	O	O
use	O	O
of	O	O
Session	O	O
state	O	O
is	O	O
hurting	O	O
you	O	O
.	O	O
Not	O	O
Java	O	O
per-se	O	O
,	O	O
but	O	O
you	O	O
may	O	O
run	O	O
into	O	O
issues	O	O
where	O	O
you	O	O
have	O	O
written	O	O
something	O	O
to	O	O
a	O	O
file	O	O
,	O	O
but	O	O
it	O	O
has	O	O
n't	O	O
been	O	O
actually	O	O
written	O	O
yet	O	O
-	O	O
it	O	O
might	O	O
be	O	O
in	O	O
a	O	O
cache	O	O
somewhere	O	O
,	O	O
and	O	O
reading	O	O
from	O	O
the	O	O
same	O	O
file	O	O
may	O	O
not	O	O
actually	O	O
give	O	O
you	O	O
the	O	O
new	O	O
information	O	O
.	O	O
Short	O	O
version	O	O
-	O	O
use	O	O
flush	B-API	B-API
(	I-API	I-API
)	I-API	I-API
or	O	O
whatever	O	O
the	O	O
relevant	O	O
system	O	O
call	O	O
is	O	O
to	O	O
ensure	O	O
that	O	O
your	O	O
data	O	O
is	O	O
actually	O	O
written	O	O
to	O	O
the	O	O
file	O	O
.	O	O
Note	O	O
I	O	O
am	O	O
not	O	O
talking	O	O
about	O	O
the	O	O
OS	O	O
level	O	O
disk	O	O
cache	O	O
-	O	O
if	O	O
your	O	O
data	O	O
gets	O	O
into	O	O
here	O	O
,	O	O
it	O	O
should	O	O
appear	O	O
in	O	O
a	O	O
read	B-API	B-API
(	I-API	I-API
)	I-API	I-API
after	O	O
this	O	O
point	O	O
.	O	O
It	O	O
may	O	O
be	O	O
that	O	O
the	O	O
language	O	O
itself	O	O
caches	O	O
writes	O	O
,	O	O
waiting	O	O
until	O	O
a	O	O
buffer	O	O
fills	O	O
up	O	O
or	O	O
file	O	O
is	O	O
flushed/closed	O	O
.	O	O
I	O	O
've	O	O
never	O	O
tried	O	O
it	O	O
,	O	O
but	O	O
you	O	O
should	O	O
write	O	O
a	O	O
test	O	O
case	O	O
to	O	O
see	O	O
if	O	O
reading	O	O
from	O	O
a	O	O
stream	O	O
after	O	O
you	O	O
have	O	O
hit	O	O
the	O	O
end	O	O
will	O	O
work	O	O
,	O	O
regardless	O	O
of	O	O
if	O	O
there	O	O
is	O	O
more	O	O
data	O	O
written	O	O
to	O	O
the	O	O
file	O	O
.	O	O
Is	O	O
there	O	O
a	O	O
reason	O	O
you	O	O
ca	O	O
n't	O	O
use	O	O
a	O	O
piped	O	O
input/output	O	O
stream	O	O
?	O	O
Is	O	O
the	O	O
data	O	O
being	O	O
written	O	O
and	O	O
read	O	O
from	O	O
the	O	O
same	O	O
application	O	O
(	O	O
if	O	O
so	O	O
,	O	O
you	O	O
have	O	O
the	O	O
data	O	O
,	O	O
why	O	O
do	O	O
you	O	O
need	O	O
to	O	O
read	O	O
from	O	O
the	O	O
file	O	O
)	O	O
?	O	O
Otherwise	O	O
,	O	O
maybe	O	O
read	O	O
till	O	O
end	O	O
of	O	O
file	O	O
,	O	O
then	O	O
monitor	O	O
for	O	O
changes	O	O
and	O	O
seek	O	O
to	O	O
where	O	O
you	O	O
left	O	O
off	O	O
and	O	O
continue	O	O
...	O	O
though	O	O
watch	O	O
out	O	O
for	O	O
race	O	O
conditions	O	O
.	O	O
The	O	O
answer	O	O
seems	O	O
to	O	O
be	O	O
``	O	O
no	O	O
''	O	O
...	O	O
and	O	O
``	O	O
yes	O	O
''	O	O
.	O	O
There	O	O
seems	O	O
to	O	O
be	O	O
no	O	O
real	O	O
way	O	O
to	O	O
know	O	O
if	O	O
a	O	O
file	O	O
is	O	O
open	O	O
for	O	O
writing	O	O
by	O	O
another	O	O
application	O	O
.	O	O
So	O	O
,	O	O
reading	O	O
from	O	O
such	O	O
a	O	O
file	O	O
will	O	O
just	O	O
progress	O	O
until	O	O
content	O	O
is	O	O
exhausted	O	O
.	O	O
I	O	O
took	O	O
Mike	O	O
's	O	O
advice	O	O
and	O	O
wrote	O	O
some	O	O
test	O	O
code	O	O
:	O	O
Writer.java	O	O
writes	O	O
a	O	O
string	O	O
to	O	O
file	O	O
and	O	O
then	O	O
waits	O	O
for	O	O
the	O	O
user	O	O
to	O	O
hit	O	O
enter	O	O
before	O	O
writing	O	O
another	O	O
line	O	O
to	O	O
file	O	O
.	O	O
The	O	O
idea	O	O
being	O	O
that	O	O
it	O	O
could	O	O
be	O	O
started	O	O
up	O	O
,	O	O
then	O	O
a	O	O
reader	O	O
can	O	O
be	O	O
started	O	O
to	O	O
see	O	O
how	O	O
it	O	O
copes	O	O
with	O	O
the	O	O
``	O	O
partial	O	O
''	O	O
file	O	O
.	O	O
The	O	O
reader	O	O
I	O	O
wrote	O	O
is	O	O
in	O	O
Reader.java	O	O
.	O	O
Writer.java	O	O
public	B-API	O
class	B-API	O
Writer	B-API	O
extends	B-API	O
Object	B-API	O
{	I-API	O
Writer	B-API	O
(	B-API	O
)	I-API	O
{	B-API	O
}	B-API	O
public	B-API	O
static	B-API	O
String	B-API	B-API
[	I-API	I-API
]	I-API	I-API
strings	B-API	O
=	B-API	O
{	B-API	O
``	B-API	O
Hello	I-API	O
World	B-API	O
''	I-API	O
,	I-API	O
``	B-API	O
Goodbye	I-API	O
World	B-API	O
''	I-API	O
}	B-API	O
;	I-API	O
public	B-API	O
static	B-API	O
void	B-API	O
throws	B-API	O
java.io.IOException	B-API	B-API
{	B-API	O
java.io.PrintWriter	B-API	B-API
pw	B-API	I-API
=	B-API	I-API
new	B-API	I-API
,	B-API	I-API
true	B-API	I-API
)	I-API	I-API
;	I-API	O
{	B-API	O
;	B-API	O
;	B-API	O
}	B-API	O
;	B-API	O
(	O	O
String	O	B-API
[	O	I-API
]	O	I-API
args	O	I-API
)	O	I-API
(	O	O
new	O	O
java.io.FileOutputStream	O	B-API
(	O	I-API
``	O	I-API
out.txt	O	I-API
''	O	I-API
)	O	I-API
(	O	O
String	O	O
s	O	O
:	O	O
strings	O	O
)	O	O
pw.println	B-API	B-API
(	I-API	I-API
s	I-API	I-API
)	I-API	I-API
System.in.read	B-API	B-API
(	I-API	I-API
)	I-API	I-API
pw.close	B-API	B-API
(	I-API	I-API
)	I-API	I-API
Reader.java	O	O
public	B-API	O
class	B-API	O
Reader	B-API	O
extends	B-API	O
Object	B-API	O
{	I-API	O
Reader	B-API	O
(	B-API	O
)	I-API	O
{	B-API	O
}	B-API	O
public	B-API	O
static	B-API	O
void	B-API	O
throws	B-API	O
Exception	B-API	O
{	B-API	O
java.io.FileInputStream	B-API	B-API
in	B-API	O
=	B-API	O
new	B-API	O
;	B-API	O
java.nio.channels.FileChannel	B-API	B-API
fc	B-API	O
=	B-API	O
;	B-API	O
java.nio.ByteBuffer	B-API	B-API
bb	B-API	O
=	B-API	O
;	B-API	O
=	B-API	O
0	B-API	O
)	I-API	O
{	B-API	O
;	B-API	O
)	B-API	O
{	B-API	O
)	B-API	O
;	I-API	O
}	B-API	O
;	B-API	O
}	B-API	O
;	B-API	O
(	O	O
String	O	B-API
[	O	I-API
]	O	I-API
args	O	O
)	O	O
java.io.FileInputStream	B-API	B-API
(	I-API	I-API
``	I-API	I-API
out.txt	I-API	I-API
''	I-API	I-API
)	I-API	I-API
in.getChannel	B-API	B-API
(	I-API	I-API
)	I-API	I-API
java.nio.ByteBuffer.allocate	B-API	B-API
(	I-API	I-API
10	I-API	I-API
)	I-API	I-API
while	B-API	O
(	I-API	O
fc.read	I-API	B-API
(	I-API	I-API
bb	I-API	I-API
)	I-API	I-API
bb.flip	B-API	B-API
(	I-API	I-API
)	I-API	I-API
while	B-API	O
(	I-API	O
bb.hasRemaining	I-API	B-API
(	I-API	I-API
)	I-API	I-API
System.out.println	B-API	B-API
(	I-API	I-API
(	I-API	I-API
char	I-API	I-API
)	I-API	I-API
bb.get	I-API	B-API
(	I-API	I-API
)	I-API	I-API
bb.clear	B-API	B-API
(	I-API	I-API
)	I-API	I-API
System.exit	B-API	B-API
(	I-API	I-API
0	I-API	I-API
)	I-API	I-API
No	O	O
guarantees	O	O
that	O	O
this	O	O
code	O	O
is	O	O
best	O	O
practice	O	O
.	O	O
This	O	O
leaves	O	O
the	O	O
option	O	O
suggested	O	O
by	O	O
Mike	O	O
of	O	O
periodically	O	O
checking	O	O
if	O	O
there	O	O
is	O	O
new	O	O
data	O	O
to	O	O
be	O	O
read	O	O
from	O	O
the	O	O
file	O	O
.	O	O
This	O	O
then	O	O
requires	O	O
user	O	O
intervention	O	O
to	O	O
close	O	O
the	O	O
file	O	O
reader	O	O
when	O	O
it	O	O
is	O	O
determined	O	O
that	O	O
the	O	O
reading	O	O
is	O	O
completed	O	O
.	O	O
Or	O	O
,	O	O
the	O	O
reader	O	O
needs	O	O
to	O	O
be	O	O
made	O	O
aware	O	O
the	O	O
content	O	O
of	O	O
the	O	O
file	O	O
and	O	O
be	O	O
able	O	O
to	O	O
determine	O	O
and	O	O
end	O	O
of	O	O
write	O	O
condition	O	O
.	O	O
If	O	O
the	O	O
content	O	O
were	O	O
XML	O	O
,	O	O
the	O	O
end	O	O
of	O	O
document	O	O
could	O	O
be	O	O
used	O	O
to	O	O
signal	O	O
this	O	O
.	O	O
As	O	O
the	O	O
compiler	O	O
is	O	O
telling	O	O
you	O	O
,	O	O
you	O	O
need	O	O
to	O	O
change	O	O
your	O	O
return	O	O
type	O	O
to	O	O
IEnumerable	O	O
.	O	O
That	O	O
is	O	O
how	O	O
the	O	O
yield	O	O
return	O	O
syntax	O	O
works	O	O
.	O	O
//	O	O
Generic	O	O
function	O	O
that	O	O
gets	O	O
all	O	O
child	O	O
controls	O	O
of	O	O
a	O	O
certain	O	O
type	O	O
,	O	O
//	O	O
returned	O	O
in	O	O
a	O	O
List	O	O
collection	O	O
private	O	O
static	O	O
ListT	O	O
GetChildTextBoxesT	O	O
(	O	O
Control	O	O
ctrl	O	O
)	O	O
where	O	O
T	O	O
:	O	O
Control	O	O
{	O	O
ListT	O	O
tbs	O	O
=	O	O
new	O	O
ListT	O	O
(	O	O
)	O	O
;	O	O
foreach	O	O
(	O	O
Control	O	O
c	O	O
in	O	O
ctrl.Controls	O	O
)	O	O
{	O	O
//	O	O
If	O	O
c	O	O
is	O	O
of	O	O
type	O	O
T	O	O
,	O	O
add	O	O
it	O	O
to	O	O
the	O	O
collection	O	O
if	O	O
(	O	O
c	O	O
is	O	O
T	O	O
)	O	O
{	O	O
tbs.Add	O	B-API
(	O	I-API
(	O	I-API
T	O	I-API
)	O	I-API
c	O	O
)	O	O
;	O	O
}	O	O
}	O	O
return	O	O
tbs	O	O
;	O	O
}	O	O
private	O	O
static	O	O
void	O	O
SetChildTextBoxesHeight	O	O
(	O	O
Control	O	O
ctrl	O	O
,	O	O
int	O	O
height	O	O
)	O	O
{	O	O
foreach	O	O
(	O	O
TextBox	O	O
t	O	O
in	O	O
GetChildTextBoxesTextBox	O	O
(	O	O
ctrl	O	O
)	O	O
)	O	O
{	O	O
t.Height	O	O
=	O	O
height	O	O
;	O	O
}	O	O
}	O	O
If	O	O
you	O	O
return	O	O
IEnumerator	O	O
,	O	O
it	O	O
will	O	O
be	O	O
a	O	O
different	O	O
enumerator	O	O
object	O	O
each	O	O
time	O	O
call	O	O
that	O	O
method	O	O
(	O	O
acting	O	O
as	O	O
though	O	O
you	O	O
reset	O	O
the	O	O
enumerator	O	O
on	O	O
each	O	O
iteration	O	O
)	O	O
.	O	O
If	O	O
you	O	O
return	O	O
IEnumerable	O	O
then	O	O
a	O	O
foreach	O	O
can	O	O
enumerate	O	O
based	O	O
on	O	O
the	O	O
method	O	O
with	O	O
the	O	O
yield	O	O
statement	O	O
.	O	O
Just	O	O
to	O	O
clarify	O	O
private	B-API	O
static	B-API	O
IEnumeratorTextBox	B-API	O
(	O	O
Control	O	O
rootControl	O	O
)	O	O
Changes	O	O
to	O	O
private	B-API	O
static	B-API	O
IEnumerableTextBox	B-API	O
(	O	O
Control	O	O
rootControl	O	O
)	O	O
That	O	O
should	O	O
be	O	O
all	O	O
:	O	O
-	O	O
)	O	O
Does	O	O
calling	O	O
the	O	O
method	O	O
twice	O	O
work	O	O
?	O	O
Seems	O	O
to	O	O
me	O	O
that	O	O
your	O	O
authentication	O	O
is	O	O
being	O	O
approved	O	O
after	O	O
the	O	O
content	O	O
arrives	O	O
,	O	O
so	O	O
then	O	O
a	O	O
second	O	O
attempt	O	O
now	O	O
works	O	O
because	O	O
you	O	O
have	O	O
the	O	O
correct	O	O
cookies	O	O
.	O	O
Unfortunately	O	O
,	O	O
compilers	O	O
ca	O	O
n't	O	O
work	O	O
on	O	O
theoretical	O	O
principles	O	O
,	O	O
and	O	O
even	O	O
though	O	O
you	O	O
may	O	O
know	O	O
that	O	O
it	O	O
is	O	O
safe	O	O
in	O	O
your	O	O
case	O	O
,	O	O
if	O	O
they	O	O
allowed	O	O
it	O	O
,	O	O
it	O	O
would	O	O
have	O	O
to	O	O
be	O	O
safe	O	O
for	O	O
all	O	O
cases	O	O
.	O	O
In	O	O
other	O	O
words	O	O
,	O	O
the	O	O
compiler	O	O
is	O	O
n't	O	O
stopping	O	O
just	O	O
you	O	O
,	O	O
it	O	O
's	O	O
stopping	O	O
everyone	O	O
,	O	O
including	O	O
all	O	O
those	O	O
that	O	O
do	O	O
n't	O	O
know	O	O
that	O	O
it	O	O
is	O	O
unsafe	O	O
and	O	O
needs	O	O
special	O	O
handling	O	O
.	O	O
There	O	O
are	O	O
probably	O	O
other	O	O
reasons	O	O
for	O	O
this	O	O
as	O	O
well	O	O
,	O	O
as	O	O
all	O	O
languages	O	O
usually	O	O
have	O	O
ways	O	O
to	O	O
do	O	O
unsafe	O	O
things	O	O
if	O	O
one	O	O
knows	O	O
how	O	O
to	O	O
deal	O	O
with	O	O
them	O	O
.	O	O
In	O	O
C	O	B-API
#	O	I-API
.NET	O	O
there	O	O
are	O	O
similar	O	O
provisions	O	O
,	O	O
and	O	O
the	O	O
only	O	O
way	O	O
to	O	O
declare	O	O
a	O	O
constructor	O	O
that	O	O
calls	O	O
a	O	O
base	O	O
constructor	O	O
is	O	O
this	O	O
:	O	O
public	B-API	O
:	B-API	O
ClassName	B-API	O
(	I-API	O
...	I-API	O
)	I-API	O
base	B-API	O
(	I-API	O
...	I-API	O
)	I-API	O
in	O	O
doing	O	O
so	O	O
,	O	O
the	O	O
base	O	O
constructor	O	O
will	O	O
be	O	O
called	O	O
before	O	O
the	O	O
body	O	O
of	O	O
the	O	O
constructor	O	O
,	O	O
and	O	O
you	O	O
can	O	O
not	O	O
change	O	O
this	O	O
order	O	O
.	O	O
I	O	O
do	O	O
n't	O	O
know	O	O
how	O	O
Java	O	O
is	O	O
implemented	O	O
internally	O	O
,	O	O
but	O	O
if	O	O
the	O	O
constructor	O	O
of	O	O
the	O	O
superclass	O	O
throws	O	O
an	O	O
exception	O	O
,	O	O
then	O	O
there	O	O
is	O	O
n't	O	O
a	O	O
instance	O	O
of	O	O
the	O	O
class	O	O
you	O	O
extend	O	O
.	O	O
It	O	O
would	O	O
be	O	O
impossible	O	O
to	O	O
call	O	O
the	O	O
toString	B-API	B-API
(	I-API	I-API
)	I-API	I-API
or	O	O
equals	B-API	O
(	I-API	O
)	I-API	O
methods	O	O
,	O	O
for	O	O
example	O	O
,	O	O
since	O	O
they	O	O
are	O	O
inherited	O	O
in	O	O
most	O	O
cases	O	O
.	O	O
Java	O	O
may	O	O
allow	O	O
a	O	O
try/catch	O	O
around	O	O
the	O	O
super	O	O
(	O	O
)	O	O
call	O	O
in	O	O
the	O	O
constructor	O	O
if	O	O
1.	O	O
you	O	O
override	O	O
ALL	O	O
methods	O	O
from	O	O
the	O	O
superclasses	O	O
,	O	O
and	O	O
2.	O	O
you	O	O
do	O	O
n't	O	O
use	O	O
the	O	O
super.XXX	O	B-API
(	O	I-API
)	O	I-API
clause	O	O
,	O	O
but	O	O
that	O	O
all	O	O
sounds	O	O
too	O	O
complicated	O	O
to	O	O
me	O	O
.	O	O
I	O	O
ca	O	O
n't	O	O
presume	O	O
to	O	O
have	O	O
a	O	O
deep	O	O
understanding	O	O
of	O	O
Java	O	O
internals	O	O
,	O	O
but	O	O
it	O	O
is	O	O
my	O	O
understanding	O	O
that	O	O
,	O	O
when	O	O
a	O	O
compiler	O	O
needs	O	O
to	O	O
instantiate	O	O
a	O	O
derived	O	O
class	O	O
,	O	O
it	O	O
has	O	O
to	O	O
first	O	O
create	O	O
the	O	O
base	O	O
(	O	O
and	O	O
its	O	O
base	O	O
before	O	O
that	O	O
(	O	O
...	O	O
)	O	O
)	O	O
and	O	O
then	O	O
slap	O	O
on	O	O
the	O	O
extensions	O	O
made	O	O
in	O	O
the	O	O
subclass	O	O
.	O	O
So	O	O
it	O	O
is	O	O
not	O	O
even	O	O
the	O	O
danger	O	O
of	O	O
uninited	O	O
variables	O	O
or	O	O
anything	O	O
like	O	O
that	O	O
at	O	O
all	O	O
.	O	O
When	O	O
you	O	O
try	O	O
to	O	O
do	O	O
something	O	O
in	O	O
the	O	O
subclass	O	O
'	O	O
constructor	O	O
before	O	O
the	O	O
base	O	O
class	O	O
'	O	O
constructor	O	O
,	O	O
you	O	O
are	O	O
basically	O	O
asking	O	O
the	O	O
compiler	O	O
to	O	O
extend	O	O
a	O	O
base	O	O
object	O	O
instance	O	O
that	O	O
does	O	O
n't	O	O
exist	O	O
yet	O	O
.	O	O
Edit	O	O
:	O	O
In	O	O
your	O	O
case	O	O
,	O	O
MyClass	O	O
becomes	O	O
the	O	O
base	O	O
object	O	O
,	O	O
and	O	O
MyClassMock	O	O
is	O	O
a	O	O
subclass	O	O
.	O	O
The	O	O
list	O	O
[	O	O
1,2,3	O	O
]	O	O
is	O	O
dynamic	O	O
and	O	O
flexible	O	O
but	O	O
that	O	O
flexibility	O	O
comes	O	O
at	O	O
a	O	O
speed	O	O
cost	O	O
.	O	O
The	O	O
tuple	O	O
(	O	O
1,2,3	O	O
)	O	O
is	O	O
fixed	O	O
(	O	O
immutable	O	O
)	O	O
and	O	O
therefore	O	O
faster	O	O
.	O	O
From	O	O
the	O	O
Python	O	O
FAQ	O	O
:	O	O
Lists	O	O
and	O	O
tuples	O	O
,	O	O
while	O	O
similar	O	O
in	O	O
many	O	O
respects	O	O
,	O	O
are	O	O
generally	O	O
used	O	O
in	O	O
fundamentally	O	O
different	O	O
ways	O	O
.	O	O
Tuples	O	O
can	O	O
be	O	O
thought	O	O
of	O	O
as	O	O
being	O	O
similar	O	O
to	O	O
Pascal	O	O
records	O	O
or	O	O
C	O	O
structs	O	O
;	O	O
they	O	O
're	O	O
small	O	O
collections	O	O
of	O	O
related	O	O
data	O	O
which	O	O
may	O	O
be	O	O
of	O	O
different	O	O
types	O	O
which	O	O
are	O	O
operated	O	O
on	O	O
as	O	O
a	O	O
group	O	O
.	O	O
For	O	O
example	O	O
,	O	O
a	O	O
Cartesian	O	O
coordinate	O	O
is	O	O
appropriately	O	O
represented	O	O
as	O	O
a	O	O
tuple	O	O
of	O	O
two	O	O
or	O	O
three	O	O
numbers	O	O
.	O	O
Lists	O	O
,	O	O
on	O	O
the	O	O
other	O	O
hand	O	O
,	O	O
are	O	O
more	O	O
like	O	O
arrays	O	O
in	O	O
other	O	O
languages	O	O
.	O	O
They	O	O
tend	O	O
to	O	O
hold	O	O
a	O	O
varying	O	O
number	O	O
of	O	O
objects	O	O
all	O	O
of	O	O
which	O	O
have	O	O
the	O	O
same	O	O
type	O	O
and	O	O
which	O	O
are	O	O
operated	O	O
on	O	O
one-by-one	O	O
.	O	O
Generally	O	O
by	O	O
convention	O	O
you	O	O
would	O	O
n't	O	O
choose	O	O
a	O	O
list	O	O
or	O	O
a	O	O
tuple	O	O
just	O	O
based	O	O
on	O	O
its	O	O
(	O	O
im	O	O
)	O	O
mutability	O	O
.	O	O
You	O	O
would	O	O
choose	O	O
a	O	O
tuple	O	O
for	O	O
small	O	O
collections	O	O
of	O	O
completely	O	O
different	O	O
pieces	O	O
of	O	O
data	O	O
in	O	O
which	O	O
a	O	O
full-blown	O	O
class	O	O
would	O	O
be	O	O
too	O	O
heavyweight	O	O
,	O	O
and	O	O
a	O	O
list	O	O
for	O	O
collections	O	O
of	O	O
any	O	O
reasonable	O	O
size	O	O
where	O	O
you	O	O
have	O	O
a	O	O
homogeneous	O	O
set	O	O
of	O	O
data	O	O
.	O	O
Tuples	O	O
are	O	O
a	O	O
quick\flexible	O	O
way	O	O
to	O	O
create	O	O
composite	O	O
data-types	O	O
.	O	O
Lists	O	O
are	O	O
containers	O	O
for	O	O
,	O	O
well	O	O
,	O	O
lists	O	O
of	O	O
objects	O	O
.	O	O
For	O	O
example	O	O
,	O	O
you	O	O
would	O	O
use	O	O
a	O	O
List	O	O
to	O	O
store	O	O
a	O	O
list	O	O
of	O	O
student	O	O
details	O	O
in	O	O
a	O	O
class	O	O
.	O	O
Each	O	O
student	O	O
detail	O	O
in	O	O
that	O	O
list	O	O
may	O	O
be	O	O
a	O	O
3-tuple	O	O
containing	O	O
their	O	O
roll	O	O
number	O	O
,	O	O
name	O	O
and	O	O
test	O	O
score	O	O
.	O	O
`	B-API	O
[	I-API	O
(	I-API	O
1	I-API	O
,	I-API	O
'Mark',86	I-API	O
)	I-API	O
,	I-API	O
(	I-API	O
2	I-API	O
,	I-API	O
'John',34	I-API	O
)	I-API	O
Also	O	O
,	O	O
because	O	O
tuples	O	O
are	O	O
immutable	O	O
they	O	O
can	O	O
be	O	O
used	O	O
as	O	O
keys	O	O
in	O	O
dictionaries	O	O
.	O	O
As	O	O
others	O	O
have	O	O
mentioned	O	O
,	O	O
Lists	O	O
and	O	O
tuples	O	O
are	O	O
both	O	O
containers	O	O
which	O	O
can	O	O
be	O	O
used	O	O
to	O	O
store	O	O
python	O	O
objects	O	O
.	O	O
Lists	O	O
are	O	O
extensible	O	O
and	O	O
their	O	O
contents	O	O
can	O	O
change	O	O
by	O	O
assignment	O	O
,	O	O
on	O	O
the	O	O
other	O	O
hand	O	O
tuples	O	O
are	O	O
immutable	O	O
.	O	O
Also	O	O
,	O	O
lists	O	O
can	O	O
not	O	O
be	O	O
used	O	O
as	O	O
keys	O	O
in	O	O
a	O	O
dictionary	O	O
whereas	O	O
tuples	O	O
can	O	O
.	O	O
If	O	O
you	O	O
can	O	O
find	O	O
a	O	O
solution	O	O
that	O	O
works	O	O
with	O	O
tuples	O	O
,	O	O
use	O	O
them	O	O
,	O	O
as	O	O
it	O	O
forces	O	O
immutability	O	O
which	O	O
kind	O	O
of	O	O
drives	O	O
you	O	O
down	O	O
a	O	O
more	O	O
functional	O	O
path	O	O
.	O	O
You	O	O
almost	O	O
never	O	O
regret	O	O
going	O	O
down	O	O
the	O	O
functional/immutable	O	O
path	O	O
.	O	O
I	O	O
've	O	O
seen	O	O
it	O	O
done	O	O
in	O	O
a	O	O
kind	O	O
of	O	O
iffy	O	O
,	O	O
but	O	O
pretty	O	O
reliable	O	O
way	O	O
.	O	O
Basically	O	O
,	O	O
an	O	O
element	O	O
is	O	O
set	O	O
to	O	O
use	O	O
a	O	O
specific	O	O
font	O	O
and	O	O
a	O	O
string	O	O
is	O	O
set	O	O
to	O	O
that	O	O
element	O	O
.	O	O
If	O	O
the	O	O
font	O	O
set	O	O
for	O	O
the	O	O
element	O	O
does	O	O
not	O	O
exist	O	O
,	O	O
it	O	O
takes	O	O
the	O	O
font	O	O
of	O	O
the	O	O
parent	O	O
element	O	O
.	O	O
So	O	O
,	O	O
what	O	O
they	O	O
do	O	O
is	O	O
measure	O	O
the	O	O
width	O	O
of	O	O
the	O	O
rendered	O	O
string	O	O
.	O	O
If	O	O
it	O	O
matches	O	O
what	O	O
they	O	O
expected	O	O
for	O	O
the	O	O
desired	O	O
font	O	O
as	O	O
opposed	O	O
to	O	O
the	O	O
derived	O	O
font	O	O
,	O	O
it	O	O
's	O	O
present	O	O
.	O	O
Here	O	O
's	O	O
where	O	O
it	O	O
came	O	O
from	O	O
:	O	O
Javascript/CSS	O	O
Font	O	O
Detector	O	O
(	O	O
ajaxian.com	O	O
;	O	O
12	O	O
Mar	O	O
2007	O	O
)	O	O
This	O	O
is	O	O
an	O	O
active	O	O
area	O	O
of	O	O
research	O	O
.	O	O
There	O	O
are	O	O
literally	O	O
oodles	O	O
of	O	O
academic	O	O
papers	O	O
on	O	O
the	O	O
subject	O	O
.	O	O
It	O	O
's	O	O
going	O	O
to	O	O
be	O	O
difficult	O	O
to	O	O
give	O	O
you	O	O
assistance	O	O
especially	O	O
w/o	O	O
more	O	O
deatails	O	O
.	O	O
Are	O	O
you	O	O
looking	O	O
for	O	O
specific	O	O
types	O	O
of	O	O
text	O	O
?	O	O
Fonts	O	O
?	O	O
English-only	O	O
?	O	O
Are	O	O
you	O	O
familiar	O	O
with	O	O
the	O	O
academic	O	O
literature	O	O
?	O	O
``	O	O
Text	O	O
detection	O	O
''	O	O
is	O	O
a	O	O
standard	O	O
problem	O	O
in	O	O
any	O	O
OCR	O	O
(	O	O
optical	O	O
character	O	O
recognition	O	O
)	O	O
system	O	O
and	O	O
consequently	O	O
there	O	O
are	O	O
lots	O	O
of	O	O
bits	O	O
of	O	O
code	O	O
on	O	O
the	O	O
interwebs	O	O
that	O	O
deal	O	O
with	O	O
it	O	O
.	O	O
I	O	O
could	O	O
start	O	O
listing	O	O
piles	O	O
of	O	O
links	O	O
from	O	O
google	O	O
but	O	O
I	O	O
suggest	O	O
you	O	O
just	O	O
do	O	O
a	O	O
search	O	O
for	O	O
``	O	O
text	O	O
detection	O	O
''	O	O
and	O	O
start	O	O
reading	O	O
:	O	O
)	O	O
.	O	O
There	O	O
is	O	O
ample	O	O
example	O	O
code	O	O
available	O	O
as	O	O
well	O	O
.	O	O
recognizing	O	O
text	O	O
inside	O	O
an	O	O
image	O	O
is	O	O
indeed	O	O
a	O	O
hot	O	O
topic	O	O
for	O	O
researchers	O	O
in	O	O
that	O	O
field	O	O
,	O	O
but	O	O
only	O	O
begun	O	O
to	O	O
grow	O	O
out	O	O
of	O	O
control	O	O
when	O	O
captcha	O	O
's	O	O
became	O	O
the	O	O
``	O	O
norm	O	O
''	O	O
in	O	O
terms	O	O
of	O	O
defense	O	O
against	O	O
spam	O	O
bots	O	O
.	O	O
Why	O	O
use	O	O
captcha	O	O
's	O	O
as	O	O
protection	O	O
?	O	O
well	O	O
because	O	O
it	O	O
is/was	O	O
very	O	O
hard	O	O
to	O	O
locate	O	O
(	O	O
and	O	O
read	O	O
)	O	O
text	O	O
inside	O	O
an	O	O
image	O	O
!	O	O
The	O	O
reason	O	O
why	O	O
I	O	O
mention	O	O
captcha	O	O
's	O	O
is	O	O
because	O	O
the	O	O
most	O	O
advancement*	O	O
is	O	O
made	O	O
within	O	O
that	O	O
tiny	O	O
area	O	O
,	O	O
and	O	O
I	O	O
think	O	O
that	O	O
your	O	O
solution	O	O
could	O	O
be	O	O
best	O	O
found	O	O
there	O	O
.	O	O
especially	O	O
because	O	O
captcha	O	O
's	O	O
are	O	O
indeed	O	O
about	O	O
locating	O	O
text	O	O
(	O	O
or	O	O
something	O	O
that	O	O
resembles	O	O
text	O	O
)	O	O
inside	O	O
a	O	O
cluttered	O	O
image	O	O
and	O	O
afterwards	O	O
trying	O	O
to	O	O
read	O	O
the	O	O
letters	O	O
correctly	O	O
.	O	O
so	O	O
if	O	O
you	O	O
can	O	O
find	O	O
yourself	O	O
a	O	O
good	O	O
open	O	O
source	O	O
captcha	O	O
breaking	O	O
tool	O	O
you	O	O
probably	O	O
have	O	O
all	O	O
you	O	O
need	O	O
to	O	O
continue	O	O
your	O	O
quest	O	O
...	O	O
You	O	O
could	O	O
probably	O	O
even	O	O
throw	O	O
away	O	O
the	O	O
most	O	O
dificult	O	O
code	O	O
that	O	O
handles	O	O
the	O	O
character	O	O
recognition	O	O
itself	O	O
,	O	O
because	O	O
those	O	O
OCR	O	O
's	O	O
are	O	O
used	O	O
to	O	O
read	O	O
distorted	O	O
text	O	O
,	O	O
something	O	O
you	O	O
do	O	O
n't	O	O
have	O	O
to	O	O
do	O	O
.	O	O
*	O	O
:	O	O
advancement	O	O
in	O	O
terms	O	O
of	O	O
visible	O	O
,	O	O
usable	O	O
,	O	O
and	O	O
practical	O	O
information	O	O
for	O	O
a	O	O
``	O	O
non-researcher	O	O
''	O	O
I	O	O
think	O	O
you	O	O
're	O	O
looking	O	O
for	O	O
GetModuleFileName	O	O
.	O	O
http	O	O
:	O	O
//www.swissdelphicenter.ch/torry/showcode.php	O	O
?	O	O
id=143	O	O
:	O	O
{	O	O
If	O	O
you	O	O
are	O	O
working	O	O
on	O	O
a	O	O
DLL	O	O
and	O	O
are	O	O
interested	O	O
in	O	O
the	O	O
filename	O	O
of	O	O
the	O	O
DLL	O	O
rather	O	O
than	O	O
the	O	O
filename	O	O
of	O	O
the	O	O
application	O	O
,	O	O
then	O	O
you	O	O
can	O	O
use	O	O
this	O	O
function	O	O
:	O	O
}	O	O
function	O	O
GetModuleName	O	O
:	O	O
string	O	O
;	O	O
var	O	O
szFileName	O	O
:	O	O
array	O	O
[	O	O
0..MAX_PATH	O	O
]	O	O
of	O	O
Char	O	O
;	O	O
begin	O	O
FillChar	O	O
(	O	O
szFileName	O	O
,	O	O
SizeOf	O	B-API
(	O	I-API
szFileName	O	I-API
)	O	I-API
,	O	O
#	O	O
0	O	O
)	O	O
;	O	O
GetModuleFileName	O	O
(	O	O
hInstance	O	O
,	O	O
szFileName	O	O
,	O	O
MAX_PATH	O	O
)	O	O
;	O	O
Result	O	O
:	O	O
=	O	O
szFileName	O	O
;	O	O
end	O	O
;	O	O
Untested	O	O
though	O	O
,	O	O
been	O	O
some	O	O
time	O	O
since	O	O
I	O	O
worked	O	O
with	O	O
Delphi	O	O
:	O	O
)	O	O
Focus	O	O
on	O	O
the	O	O
shorter	O	O
time	O	O
needed	O	O
for	O	O
development/prototype	O	O
and	O	O
possibly	O	O
easier	O	O
maintenance	O	O
(	O	O
none	O	O
of	O	O
this	O	O
may	O	O
apply	O	O
against	O	O
Ruby	B-API	O
)	O	O
.	O	O
This	O	O
is	O	O
one	O	O
of	O	O
those	O	O
cases	O	O
that	O	O
really	O	O
boil	O	O
down	O	O
to	O	O
personal	O	O
preference	O	O
or	O	O
situational	O	O
details	O	O
.	O	O
If	O	O
you	O	O
're	O	O
more	O	O
comfortable	O	O
and	O	O
experienced	O	O
with	O	O
Python	B-API	O
,	O	O
then	O	O
say	O	O
so	O	O
.	O	O
Are	O	O
they	O	O
asking	O	O
you	O	O
to	O	O
justify	O	O
it	O	O
because	O	O
they	O	O
're	O	O
more	O	O
comfortable	O	O
with	O	O
one	O	O
of	O	O
the	O	O
other	O	O
environments	O	O
?	O	O
After	O	O
you	O	O
're	O	O
done	O	O
,	O	O
will	O	O
the	O	O
system	O	O
be	O	O
passed	O	O
off	O	O
to	O	O
someone	O	O
else	O	O
for	O	O
long-term	O	O
maintenance	O	O
?	O	O
If	O	O
they	O	O
ask	O	O
you	O	O
to	O	O
use	O	O
a	O	O
technology	O	O
or	O	O
language	O	O
that	O	O
you	O	O
're	O	O
not	O	O
as	O	O
familiar	O	O
with	O	O
,	O	O
then	O	O
make	O	O
sure	O	O
they	O	O
know	O	O
up-front	O	O
that	O	O
it	O	O
's	O	O
going	O	O
to	O	O
take	O	O
you	O	O
longer	O	O
.	O	O
I	O	O
would	O	O
consider	O	O
that	O	O
using	O	O
python	O	O
on	O	O
a	O	O
new	O	O
project	O	O
is	O	O
completely	O	O
dependent	O	O
on	O	O
what	O	O
problem	O	O
you	O	O
are	O	O
trying	O	O
to	O	O
solve	O	O
with	O	O
python	O	O
.	O	O
If	O	O
you	O	O
want	O	O
someone	O	O
to	O	O
agree	O	O
with	O	O
you	O	O
that	O	O
you	O	O
should	O	O
use	O	O
python	O	O
,	O	O
then	O	O
show	O	O
them	O	O
how	O	O
python	O	O
's	O	O
features	O	O
apply	O	O
specifically	O	O
to	O	O
that	O	O
problem	O	O
.	O	O
In	O	O
the	O	O
case	O	O
of	O	O
web	O	O
development	O	O
with	O	O
python	O	O
,	O	O
talk	O	O
about	O	O
WSGI	B-API	O
and	O	O
other	O	O
web	O	O
libraries	O	O
and	O	O
frameworks	O	O
you	O	O
could	O	O
use	O	O
that	O	O
would	O	O
make	O	O
your	O	O
life	O	O
easier	O	O
.	O	O
One	O	O
note	O	O
for	O	O
python	O	O
is	O	O
that	O	O
most	O	O
of	O	O
the	O	O
frameworks	O	O
for	O	O
python	O	O
web	O	O
development	O	O
can	O	O
be	O	O
plugged	O	O
right	O	O
into	O	O
any	O	O
current	O	O
project	O	O
.	O	O
With	O	O
ruby	O	O
on	O	O
rails	O	O
,	O	O
you	O	O
're	O	O
practically	O	O
working	O	O
in	O	O
a	O	O
DSL	O	O
that	O	O
anyone	O	O
who	O	O
uses	O	O
your	O	O
project	O	O
will	O	O
have	O	O
to	O	O
learn	O	O
.	O	O
If	O	O
they	O	O
know	O	O
python	O	O
,	O	O
then	O	O
they	O	O
can	O	O
figure	O	O
out	O	O
what	O	O
you	O	O
are	O	O
doing	O	O
with	O	O
django	O	O
,	O	O
etc	O	O
in	O	O
a	O	O
day	O	O
.	O	O
I	O	O
'm	O	O
only	O	O
talking	O	O
about	O	O
web	O	O
development	O	O
because	O	O
it	O	O
appears	O	O
that	O	O
's	O	O
what	O	O
you	O	O
are	O	O
going	O	O
to	O	O
be	O	O
working	O	O
on	O	O
seeing	O	O
ruby	O	O
,	O	O
python	O	O
and	O	O
PHP	B-API	O
in	O	O
the	O	O
same	O	O
list	O	O
.	O	O
The	O	O
real	O	O
message	O	O
that	O	O
's	O	O
important	O	O
is	O	O
applying	O	O
to	O	O
whatever	O	O
it	O	O
is	O	O
you	O	O
like	O	O
about	O	O
python	O	O
directly	O	O
to	O	O
some	O	O
problem	O	O
you	O	O
are	O	O
trying	O	O
to	O	O
solve	O	O
.	O	O
I	O	O
do	O	O
n't	O	O
have	O	O
Visual	O	O
Studio	O	O
installed	O	O
on	O	O
my	O	O
machine	O	O
anymore	O	O
(	O	O
and	O	O
I	O	O
'm	O	O
using	O	O
Linux	O	O
)	O	O
,	O	O
but	O	O
I	O	O
do	O	O
remember	O	O
that	O	O
there	O	O
was	O	O
an	O	O
wizard	O	O
hidden	O	O
somewhere	O	O
inside	O	O
one	O	O
of	O	O
the	O	O
menus	O	O
that	O	O
gave	O	O
access	O	O
to	O	O
a	O	O
class	O	O
builder	O	O
.	O	O
With	O	O
this	O	O
wizard	O	O
,	O	O
you	O	O
could	O	O
define	O	O
all	O	O
your	O	O
classes	O	O
'	O	O
details	O	O
,	O	O
including	O	O
methods	O	O
and	O	O
attributes	O	O
.	O	O
If	O	O
I	O	O
remember	O	O
well	O	O
,	O	O
there	O	O
was	O	O
an	O	O
option	O	O
through	O	O
which	O	O
you	O	O
could	O	O
ask	O	O
VS	O	O
to	O	O
create	O	O
the	O	O
setters	O	O
and	O	O
getters	O	O
automatically	O	O
for	O	O
you	O	O
.	O	O
I	O	O
know	O	O
it	O	O
's	O	O
quite	O	O
vague	O	O
,	O	O
but	O	O
check	O	O
it	O	O
out	O	O
and	O	O
you	O	O
might	O	O
find	O	O
it	O	O
.	O	O
By	O	O
generate	O	O
,	O	O
do	O	O
you	O	O
mean	O	O
auto-generate	O	O
?	O	O
If	O	O
that	O	O
's	O	O
not	O	O
what	O	O
you	O	O
mean	O	O
:	O	O
Visual	O	O
Studio	O	O
2008	O	O
has	O	O
the	O	O
easiest	O	O
implementation	O	O
for	O	O
this	O	O
:	O	O
public	B-API	O
PropertyType	B-API	O
PropertyName	B-API	O
{	B-API	O
get	B-API	O
;	I-API	O
set	B-API	O
;	I-API	O
In	O	O
the	O	O
background	O	O
this	O	O
creates	O	O
an	O	O
implied	O	O
instance	O	O
variable	O	O
to	O	O
which	O	O
your	O	O
property	O	O
is	O	O
stored	O	O
and	O	O
retrieved	O	O
.	O	O
However	O	O
if	O	O
you	O	O
want	O	O
to	O	O
put	O	O
in	O	O
more	O	O
logic	O	O
in	O	O
your	O	O
Properties	O	O
,	O	O
you	O	O
will	O	O
have	O	O
to	O	O
have	O	O
an	O	O
instance	O	O
variable	O	O
for	O	O
it	O	O
:	O	O
private	B-API	O
PropertyType	B-API	O
_property	B-API	O
;	I-API	O
public	I-API	O
PropertyType	B-API	O
PropertyName	B-API	O
{	I-API	O
get	B-API	O
{	B-API	O
//logic	B-API	O
here	B-API	O
return	B-API	O
_property	B-API	O
;	I-API	O
}	B-API	O
set	B-API	O
{	B-API	O
//logic	B-API	O
here	B-API	O
_property	B-API	O
=	B-API	O
value	B-API	O
;	I-API	O
}	B-API	O
Previous	O	O
versions	O	O
of	O	O
Visual	O	O
Studio	O	O
always	O	O
used	O	O
this	O	O
longhand	O	O
method	O	O
as	O	O
well	O	O
.	O	O
If	O	O
you	O	O
are	O	O
using	O	O
Visual	B-API	O
Studio	I-API	O
2005	I-API	O
and	O	O
up	O	O
you	O	O
can	O	O
create	O	O
a	O	O
setter/getter	O	O
real	O	O
fast	O	O
using	O	O
the	O	O
insert	O	O
snippet	O	O
command	O	O
.	O	O
Right	O	O
click	O	O
on	O	O
your	O	O
code	O	O
click	O	O
on	O	O
Insert	O	O
Snippet	O	B-API
(	O	I-API
Ctrl+k	O	I-API
,	O	I-API
x	O	I-API
)	O	I-API
and	O	O
then	O	O
choose	O	O
``	O	O
prop	O	O
''	O	O
form	O	O
the	O	O
list	O	O
.	O	O
Hope	O	O
this	O	O
helps	O	O
.	O	O
Rather	O	O
than	O	O
using	O	O
ctrl+k	O	O
,	O	O
x	O	O
you	O	O
can	O	O
also	O	O
just	O	O
type	O	O
and	O	O
then	O	O
hit	O	O
tab	O	O
twice	O	O
Visual	B-API	O
Studio	I-API	O
also	O	O
has	O	O
a	O	O
feature	O	O
that	O	O
will	O	O
generate	O	O
a	O	O
Property	O	O
from	O	O
a	O	O
private	O	O
variable	O	O
.	O	O
If	O	O
you	O	O
right-click	O	O
on	O	O
a	O	O
variable	O	O
,	O	O
in	O	O
the	O	O
context	O	O
menu	O	O
that	O	O
pops	O	O
up	O	O
click	O	O
on	O	O
the	O	O
``	O	O
Refactor	O	O
''	O	O
item	O	O
.	O	O
Then	O	O
choose	O	O
encapsulate	O	O
field	O	O
.	O	O
This	O	O
will	O	O
create	O	O
a	O	O
getter/setter	O	O
property	O	O
for	O	O
a	O	O
variable	O	O
.	O	O
I	O	O
'm	O	O
not	O	O
too	O	O
big	O	O
a	O	O
fan	O	O
of	O	O
this	O	O
technique	O	O
as	O	O
it	O	O
is	O	O
a	O	O
little	O	O
bit	O	O
awkward	O	O
to	O	O
use	O	O
if	O	O
you	O	O
have	O	O
to	O	O
create	O	O
a	O	O
lot	O	O
of	O	O
getters/setters	O	O
,	O	O
and	O	O
it	O	O
puts	O	O
the	O	O
property	O	O
directly	O	O
below	O	O
the	O	O
private	O	O
field	O	O
,	O	O
which	O	O
bugs	O	O
me	O	O
because	O	O
I	O	O
usually	O	O
have	O	O
all	O	O
of	O	O
my	O	O
private	O	O
fields	O	O
grouped	O	O
together	O	O
,	O	O
and	O	O
this	O	O
Visual	O	O
Studio	O	O
feature	O	O
breaks	O	O
my	O	O
class	O	O
'	O	O
formatting	O	O
.	O	O
When	O	O
I	O	O
needed	O	O
to	O	O
write	O	O
an	O	O
application	O	O
with	O	O
a	O	O
client-server	O	O
model	O	O
where	O	O
the	O	O
clients	O	O
could	O	O
leave	O	O
and	O	O
enter	O	O
whenever	O	O
they	O	O
want	O	O
,	O	O
(	O	O
I	O	O
assume	O	O
that	O	O
's	O	O
also	O	O
the	O	O
case	O	O
for	O	O
your	O	O
application	O	O
as	O	O
you	O	O
use	O	O
mobile	O	O
devices	O	O
)	O	O
I	O	O
made	O	O
sure	O	O
that	O	O
the	O	O
clients	O	O
send	O	O
an	O	O
online	O	O
message	O	O
to	O	O
the	O	O
server	O	O
,	O	O
indicating	O	O
they	O	O
were	O	O
connected	O	O
and	O	O
ready	O	O
to	O	O
do	O	O
whatever	O	O
they	O	O
needed	O	O
doing	O	O
.	O	O
at	O	O
that	O	O
time	O	O
the	O	O
server	O	O
could	O	O
send	O	O
messages	O	O
back	O	O
to	O	O
the	O	O
client	O	O
trough	O	O
the	O	O
same	O	O
open	O	O
connection	O	O
.	O	O
Also	O	O
,	O	O
but	O	O
I	O	O
do	O	O
n't	O	O
know	O	O
if	O	O
that	O	O
is	O	O
applicable	O	O
for	O	O
you	O	O
,	O	O
I	O	O
had	O	O
some	O	O
sort	O	O
of	O	O
heartbeat	O	O
the	O	O
clients	O	O
sent	O	O
to	O	O
the	O	O
server	O	O
,	O	O
letting	O	O
it	O	O
know	O	O
it	O	O
was	O	O
still	O	O
online	O	O
.	O	O
That	O	O
way	O	O
the	O	O
server	O	O
knows	O	O
when	O	O
a	O	O
client	O	O
was	O	O
forcibly	O	O
disconnected	O	O
from	O	O
the	O	O
network	O	O
and	O	O
it	O	O
could	O	O
mark	O	O
that	O	O
client	O	O
back	O	O
as	O	O
offline	O	O
.	O	O
I	O	O
'm	O	O
not	O	O
clear	O	O
on	O	O
whether	O	O
or	O	O
not	O	O
you	O	O
're	O	O
wanting	O	O
to	O	O
add	O	O
the	O	O
asynchronous	O	O
bits	O	O
to	O	O
the	O	O
server	O	O
in	O	O
C	B-API	O
#	I-API	O
or	O	O
the	O	O
client	O	O
in	O	O
C++	B-API	O
.	O	O
If	O	O
you	O	O
're	O	O
talking	O	O
about	O	O
doing	O	O
this	O	O
in	O	O
C++	B-API	O
,	O	O
desktop	O	O
Windows	O	O
platforms	O	O
can	O	O
do	O	O
socket	B-API	O
I/O	I-API	O
asynchronously	O	O
through	O	O
the	O	O
API	O	O
's	O	O
that	O	O
use	O	O
overlapped	O	O
I/O	O	O
.	O	O
For	O	O
sockets	O	O
,	O	O
WSASend	B-API	O
,	O	O
WSARecv	B-API	O
both	O	O
allow	O	O
async	O	O
I/O	O	O
(	O	O
read	O	O
the	O	O
documentation	O	O
on	O	O
their	O	O
LPOVERLAPPED	B-API	O
parameters	O	O
,	O	O
which	O	O
you	O	O
can	O	O
populate	O	O
with	O	O
events	O	O
that	O	O
get	O	O
set	O	O
when	O	O
the	O	O
I/O	O	O
completes	O	O
)	O	O
.	O	O
I	O	O
do	O	O
n't	O	O
know	O	O
if	O	O
Windows	O	O
Mobile	O	O
platforms	O	O
support	O	O
these	O	O
functions	O	O
,	O	O
so	O	O
you	O	O
might	O	O
have	O	O
to	O	O
do	O	O
some	O	O
additional	O	O
digging	O	O
.	O	O
Just	O	O
wondering	O	O
,	O	O
what	O	O
do	O	O
you	O	O
feel	O	O
your	O	O
method	O	O
leaves	O	O
to	O	O
be	O	O
desired	O	O
?	O	O
You	O	O
could	O	O
replace	O	O
the	O	O
anonymous	O	O
delegate	O	O
with	O	O
a..	O	O
named	O	O
?	O	O
delegate	O	O
,	O	O
something	O	O
like	O	O
public	B-API	O
delegate	B-API	B-API
void	B-API	I-API
;	B-API	O
public	B-API	O
void	B-API	O
{	B-API	O
;	B-API	O
}	B-API	O
public	B-API	O
void	B-API	O
{	B-API	O
;	B-API	O
}	B-API	O
public	B-API	O
void	B-API	O
{	B-API	O
RetryTimer	B-API	O
fileIORetryTimer	B-API	O
=	B-API	O
new	B-API	O
)	B-API	O
;	I-API	O
bool	B-API	O
success	B-API	O
=	B-API	O
false	B-API	O
;	I-API	O
while	B-API	O
(	B-API	O
!	I-API	O
success	I-API	O
)	I-API	O
{	B-API	O
try	B-API	O
{	B-API	O
;	B-API	O
success	B-API	O
=	B-API	O
true	B-API	O
;	I-API	O
}	B-API	O
catch	B-API	O
(	B-API	O
IOException	I-API	O
e	B-API	O
)	I-API	O
{	B-API	O
if	B-API	O
(	B-API	O
fileIORetryTimer.HasExceededRetryTimeout	I-API	B-API
)	I-API	O
{	B-API	O
throw	B-API	O
;	I-API	O
}	B-API	O
;	B-API	O
}	B-API	O
}	B-API	O
}	B-API	O
public	B-API	O
void	B-API	O
{	B-API	O
;	B-API	O
;	B-API	O
(	O	O
params	O	O
string	O	B-API
[	O	I-API
]	O	I-API
parameters	O	I-API
)	O	I-API
(	O	O
params	O	O
string	O	B-API
[	O	I-API
]	O	I-API
fileName	O	I-API
)	O	I-API
File.Delete	B-API	B-API
(	I-API	I-API
fileName	I-API	I-API
[	I-API	I-API
0	I-API	I-API
]	I-API	I-API
)	I-API	I-API
(	O	O
params	O	O
string	O	B-API
[	O	I-API
]	O	I-API
fileNames	O	I-API
)	O	I-API
(	O	O
fileNames	O	O
[	O	O
0	O	O
]	O	O
,	O	O
fileNames	O	O
[	O	O
1	O	O
]	O	O
)	O	O
(	O	O
IoOperation	O	O
operation	O	O
,	O	O
params	O	O
string	O	O
[	O	O
]	O	O
parameters	O	O
)	O	O
RetryTimer	B-API	O
(	I-API	O
TimeSpan.FromHours	I-API	B-API
(	I-API	I-API
10	I-API	I-API
)	I-API	I-API
operation	B-API	O
(	I-API	O
parameters	I-API	O
)	I-API	O
fileIORetryTimer.SleepUntilNextRetry	B-API	B-API
(	I-API	I-API
)	I-API	I-API
Foo	B-API	B-API
(	I-API	I-API
)	I-API	I-API
(	O	O
FileDeleteOperation	O	O
,	O	O
``	O	O
L	O	O
:	O	O
\file.to.delete	O	O
''	O	O
)	O	O
(	O	O
FileCopyOperation	O	O
,	O	O
``	O	O
L	O	O
:	O	O
\file.to.copy.source	O	O
''	O	O
,	O	O
``	O	O
L	O	O
:	O	O
\file.to.copy.destination	O	O
''	O	O
)	O	O
This	O	O
looks	O	O
like	O	O
an	O	O
excellent	O	O
opportunity	O	O
to	O	O
have	O	O
a	O	O
look	O	O
at	O	O
Aspect	B-API	O
Oriented	I-API	O
Programming	I-API	O
.	O	O
Here	O	O
is	O	O
a	O	O
good	O	O
article	O	O
on	O	O
AOP	B-API	O
in	O	O
.NET	B-API	O
.	O	O
The	O	O
general	O	O
idea	O	O
is	O	O
that	O	O
you	O	O
'd	O	O
extract	O	O
the	O	O
cross-functional	O	O
concern	O	O
(	O	O
i.e	O	O
.	O	O
Retry	O	O
for	O	O
x	O	O
hours	O	O
)	O	O
into	O	O
a	O	O
separate	O	O
class	O	O
and	O	O
then	O	O
you	O	O
'd	O	O
annotate	O	O
any	O	O
methods	O	O
that	O	O
need	O	O
to	O	O
modify	O	O
their	O	O
behaviour	O	O
in	O	O
that	O	O
way	O	O
.	O	O
Here	O	O
's	O	O
how	O	O
it	O	O
might	O	O
look	O	O
(	O	O
with	O	O
a	O	O
nice	O	O
extension	O	O
method	O	O
on	O	O
Int32	O	O
)	O	O
[	O	O
RetryFor	B-API	O
(	I-API	O
10.Hours	I-API	O
(	I-API	O
)	I-API	O
)	I-API	O
]	O	O
public	O	O
void	B-API	O
DeleteArchive	B-API	O
(	I-API	O
)	I-API	O
{	O	O
//..	O	O
code	O	O
to	O	O
just	O	O
delete	O	O
the	O	O
archive	O	O
}	O	O
You	O	O
could	O	O
also	O	O
use	O	O
a	O	O
more	O	O
OO	O	O
approach	O	O
:	O	O
Create	O	O
a	O	O
base	O	O
class	O	O
that	O	O
does	O	O
the	O	O
error	O	O
handling	O	O
and	O	O
calls	O	O
an	O	O
abstract	O	O
method	O	O
to	O	O
perform	O	O
the	O	O
concrete	O	O
work	O	O
.	O	O
(	O	O
Template	O	O
Method	O	O
pattern	O	O
)	O	O
Create	O	O
concrete	O	O
classes	O	O
for	O	O
each	O	O
operation	O	O
.	O	O
This	O	O
has	O	O
the	O	O
advantage	O	O
of	O	O
naming	O	O
each	O	O
type	O	O
of	O	O
operation	O	O
you	O	O
perform	O	O
and	O	O
gives	O	O
you	O	O
a	O	O
Command	O	O
pattern	O	O
-	O	O
operations	O	O
have	O	O
been	O	O
represented	O	O
as	O	O
objects	O	O
.	O	O
I	O	O
use	O	O
UnitTest++	B-API	O
.	O	O
While	O	O
the	O	O
example	O	O
tutorial	O	O
is	O	O
for	O	O
Visual	B-API	O
Studio	I-API	O
2005	I-API	O
,	O	O
the	O	O
concepts	O	O
are	O	O
similar	O	O
(	O	O
try	O	O
setting	O	O
one	O	O
up	O	O
for	O	O
VC6	O	O
...	O	O
)	O	O
.	O	O
Update	O	O
:	O	O
The	O	O
VC6	O	O
hacks	O	O
are	O	O
now	O	O
included	O	O
in	O	O
the	O	O
source	O	O
!	O	O
I	O	O
've	O	O
worked	O	O
on	O	O
a	O	O
SAN	O	O
system	O	O
in	O	O
the	O	O
past	O	O
with	O	O
telephony	O	O
audio	O	O
recordings	O	O
which	O	O
had	O	O
issues	O	O
with	O	O
numbers	O	O
of	O	O
files	O	O
in	O	O
a	O	O
single	O	O
folder	O	O
-	O	O
that	O	O
system	O	O
became	O	O
unusable	O	O
somewhere	O	O
near	O	O
5,000	O	O
(	O	O
on	O	O
Windows	B-API	O
2000	I-API	O
Advanced	I-API	O
Server	I-API	O
with	O	O
an	O	O
application	O	O
in	O	O
C	B-API	O
#	I-API	O
.Net	I-API	O
1.1	I-API	O
)	O	O
-	O	O
the	O	O
only	O	O
sensible	O	O
solution	O	O
that	O	O
we	O	O
came	O	O
up	O	O
with	O	O
was	O	O
to	O	O
change	O	O
the	O	O
folder	O	O
structure	O	O
so	O	O
that	O	O
there	O	O
were	O	O
a	O	O
more	O	O
reasonable	O	O
number	O	O
of	O	O
files	O	O
.	O	O
Interestingly	O	O
Explorer	O	O
would	O	O
also	O	O
time	O	O
out	O	O
!	O	O
The	O	O
convention	O	O
we	O	O
came	O	O
up	O	O
with	O	O
was	O	O
a	O	O
structure	O	O
that	O	O
broke	O	O
the	O	O
structure	O	O
up	O	O
in	O	O
years	O	O
,	O	O
months	O	O
and	O	O
days	O	O
-	O	O
but	O	O
that	O	O
will	O	O
depend	O	O
upon	O	O
your	O	O
system	O	O
and	O	O
whether	O	O
you	O	O
can	O	O
control	O	O
the	O	O
directory	O	O
structure	O	O
...	O	O
None	O	O
.	O	O
.NET	B-API	O
relies	O	O
on	O	O
underlying	O	O
Windows	O	B-API
API	O	I-API
calls	O	O
that	O	O
really	O	O
,	O	O
really	O	O
hate	O	O
that	O	O
amount	O	O
of	O	O
files	O	O
themselves	O	O
.	O	O
As	O	O
Ronnie	O	O
says	O	O
:	O	O
split	O	O
them	O	O
up	O	O
.	O	O
You	O	O
could	O	O
use	O	O
DOS	B-API	O
?	O	O
DIR	O	O
/s/b	O	O
Definitely	O	O
split	O	O
them	O	O
up	O	O
.	O	O
That	O	O
said	O	O
,	O	O
stay	O	O
as	O	O
far	O	O
away	O	O
from	O	O
the	O	O
Indexing	O	O
Service	O	O
as	O	O
you	O	O
can	O	O
.	O	O
You	O	O
could	O	O
also	O	O
look	O	O
at	O	O
either	O	O
indexing	O	O
the	O	O
files	O	O
yourself	O	O
,	O	O
or	O	O
getting	O	O
a	O	O
third	O	O
part	O	O
app	O	O
like	O	O
google	O	O
desktop	O	O
or	O	O
copernic	B-API	O
to	O	O
do	O	O
it	O	O
and	O	O
then	O	O
interface	O	O
with	O	O
their	O	O
index	O	O
.	O	O
I	O	O
know	O	O
copernic	B-API	O
has	O	O
an	O	O
API	O	O
that	O	O
you	O	O
can	O	O
use	O	O
to	O	O
search	O	O
for	O	O
any	O	O
file	O	O
in	O	O
their	O	O
index	O	O
and	O	O
it	O	O
also	O	O
supports	O	O
mapping	O	O
network	O	O
drives	O	O
.	O	O
The	O	O
second	O	O
example	O	O
will	O	O
execute	O	O
the	O	O
function	O	O
after	O	O
creating	O	O
it	O	O
.	O	O
edit	O	O
:	O	O
this	O	O
is	O	O
n't	O	O
really	O	O
true	O	O
.	O	O
@	O	O
Lance	O	O
:	O	O
the	O	O
first	O	O
one	O	O
is	O	O
also	O	O
executing	O	O
.	O	O
Compare	O	O
it	O	O
with	O	O
a	O	O
named	O	O
constructor	O	O
:	O	O
function	O	O
{	O	O
;	O	O
}	O	O
new	O	O
Blah	O	B-API
(	O	I-API
)	O	I-API
alert	B-API	B-API
(	I-API	I-API
'blah	I-API	I-API
'	I-API	I-API
)	I-API	I-API
Bla	O	B-API
(	O	I-API
)	O	I-API
this	O	O
is	O	O
actually	O	O
also	O	O
executing	O	O
code	O	O
.	O	O
The	O	O
same	O	O
goes	O	O
for	O	O
the	O	O
anonymous	O	O
constructor	O	O
...	O	O
But	O	O
that	O	O
was	O	O
not	O	O
the	O	O
question	O	O
;	O	O
-	O	O
)	O	O
Both	O	O
cases	O	O
will	O	O
execute	O	O
the	O	O
function	O	O
,	O	O
the	O	O
only	O	O
real	O	O
difference	O	O
is	O	O
what	O	O
the	O	O
return	O	O
value	O	O
of	O	O
the	O	O
expression	O	O
may	O	O
be	O	O
,	O	O
and	O	O
what	O	O
the	O	O
value	O	O
of	O	O
``	O	O
this	O	O
''	O	O
will	O	O
be	O	O
inside	O	O
the	O	O
function	O	O
.	O	O
Basically	O	O
behaviour	O	O
of	O	O
new	O	O
Is	O	O
effectively	O	O
equivalent	O	O
to	O	O
var	B-API	O
tempObject	O	O
=	O	O
{	O	O
}	O	O
;	O	O
var	B-API	O
result	O	O
=	O	O
;	O	O
if	B-API	O
(	I-API	O
result	I-API	O
is	I-API	O
not	I-API	O
an	I-API	O
object	I-API	O
)	I-API	O
result	O	O
=	O	O
expression.call	B-API	B-API
(	I-API	I-API
tempObject	I-API	I-API
)	I-API	I-API
Although	O	O
of	O	O
course	O	O
and	O	O
result	O	O
are	O	O
transient	O	O
values	O	O
you	O	O
can	O	O
never	O	O
see	O	O
(	O	O
they	O	O
're	O	O
implementation	O	O
details	O	O
in	O	O
the	O	O
interpreter	O	O
)	O	O
,	O	O
and	O	O
there	O	O
is	O	O
no	O	O
JS	B-API	O
mechanism	O	O
to	O	O
do	O	O
the	O	O
``	O	O
is	O	O
not	O	O
an	O	O
object	O	O
''	O	O
check	O	O
.	O	O
Broadly	O	O
speaking	O	O
the	O	O
``	O	O
new	O	O
function	B-API	O
(	I-API	O
)	I-API	O
{	O	O
..	O	O
}	O	O
''	O	O
method	O	O
will	O	O
be	O	O
slower	O	O
due	O	O
to	O	O
the	O	O
need	O	O
to	O	O
create	O	O
the	O	O
this	O	O
object	O	O
for	O	O
the	O	O
constructor	O	O
.	O	O
That	O	O
said	O	O
this	O	O
should	O	O
be	O	O
not	O	O
be	O	O
a	O	O
real	O	O
difference	O	O
as	O	O
object	O	O
allocation	O	O
is	O	O
not	O	O
slow	O	O
,	O	O
and	O	O
you	O	O
should	O	O
n't	O	O
be	O	O
using	O	O
such	O	O
code	O	O
in	O	O
hot	O	O
code	O	O
(	O	O
due	O	O
to	O	O
the	O	O
cost	O	O
of	O	O
creating	O	O
the	O	O
function	O	O
object	O	O
and	O	O
associated	O	O
closure	O	O
)	O	O
.	O	O
Edit	O	O
:	O	O
one	O	O
thing	O	O
i	O	O
realised	O	O
that	O	O
i	O	O
missed	O	O
from	O	O
this	O	O
is	O	O
that	O	O
the	O	O
tempObject	O	O
will	O	O
get	O	O
s	O	O
prototype	O	O
,	O	O
eg	O	O
.	O	O
(	O	O
before	O	O
the	O	O
)	O	O
tempObject.__proto__	B-API	O
=	O	O
Well	O	O
,	O	O
I	O	O
made	O	O
a	O	O
page	O	O
like	O	O
this	O	O
:	O	O
htmlbodyscript	B-API	O
type=	O	O
''	O	O
text/javascript	O	O
''	O	O
var	B-API	O
a	O	O
=	O	O
new	O	O
{	O	O
;	O	O
return	O	O
``	O	O
test	O	O
''	O	O
;	O	O
}	O	O
;	O	O
var	B-API	O
b	O	O
=	O	O
{	O	O
;	O	O
return	B-API	O
;	O	O
//a	O	O
is	O	O
a	O	O
;	O	O
//b	O	O
is	O	O
a	O	O
string	O	O
containing	O	O
function	B-API	O
(	I-API	O
)	I-API	O
(	O	O
``	O	O
method	O	O
1	O	O
''	O	O
)	O	O
(	O	O
function	B-API	O
(	I-API	O
)	I-API	O
(	O	O
``	O	O
method	O	O
2	O	O
''	O	O
)	O	O
``	O	O
test	O	O
''	O	O
;	O	O
}	O	O
)	O	O
(	O	O
)	O	O
;	O	O
alert	B-API	B-API
(	I-API	I-API
a	I-API	I-API
)	I-API	I-API
functionalert	B-API	O
(	I-API	O
b	I-API	O
)	I-API	O
Surprisingly	O	O
enough	O	O
(	O	O
to	O	O
me	O	O
anyway	O	O
)	O	O
it	O	O
alerted	O	O
both	O	O
``	O	O
method	O	O
1	O	O
''	O	O
and	O	O
method	O	O
2	O	O
''	O	O
.	O	O
I	O	O
did	O	O
n't	O	O
expect	O	O
``	O	O
method	O	O
1	O	O
''	O	O
to	O	O
be	O	O
alerted	O	O
.	O	O
The	O	O
difference	O	O
was	O	O
what	O	O
the	O	O
values	O	O
of	O	O
a	O	O
and	O	O
b	O	O
were	O	O
.	O	O
a	O	O
was	O	O
the	O	O
function	O	O
itself	O	O
,	O	O
while	O	O
b	O	O
was	O	O
the	O	O
string	O	O
that	O	O
the	O	O
function	O	O
returned	O	O
.	O	O
Yes	O	O
,	O	O
there	O	O
are	O	O
differences	O	O
between	O	O
the	O	O
two	O	O
.	O	O
Both	O	O
are	O	O
anonymous	O	O
functions	O	O
and	O	O
execute	O	O
in	O	O
the	O	O
exact	O	O
same	O	O
way	O	O
.	O	O
But	O	O
,	O	O
the	O	O
difference	O	O
between	O	O
the	O	O
two	O	O
is	O	O
that	O	O
in	O	O
the	O	O
second	O	O
case	O	O
scope	O	O
of	O	O
the	O	O
variables	O	O
is	O	O
restricted	O	O
to	O	O
the	O	O
anonymous	O	O
function	O	O
itself	O	O
.	O	O
There	O	O
is	O	O
no	O	O
chance	O	O
of	O	O
accidentally	O	O
adding	O	O
variables	O	O
to	O	O
the	O	O
global	O	O
scope	O	O
.	O	O
This	O	O
implies	O	O
that	O	O
by	O	O
using	O	O
the	O	O
second	O	O
method	O	O
,	O	O
you	O	O
are	O	O
not	O	O
cluttering	O	O
up	O	O
the	O	O
global	O	O
variables	O	O
scope	O	O
which	O	O
is	O	O
good	O	O
as	O	O
these	O	O
global	O	O
variable	O	O
values	O	O
can	O	O
interfere	O	O
with	O	O
some	O	O
other	O	O
global	O	O
variables	O	O
that	O	O
you	O	O
may	O	O
use	O	O
in	O	O
some	O	O
other	O	O
library	O	O
or	O	O
are	O	O
being	O	O
used	O	O
in	O	O
a	O	O
third	O	O
party	O	O
library	O	O
.	O	O
Example	O	O
:	O	O
html	O	O
body	O	O
script	O	O
type=	O	O
''	O	O
text/javascript	O	O
''	O	O
new	O	O
function	B-API	O
(	I-API	O
)	I-API	O
{	O	O
a	O	O
=	O	O
``	O	O
Hello	O	O
''	O	O
;	O	O
alert	B-API	B-API
(	I-API	I-API
a	I-API	I-API
+	O	I-API
``	O	I-API
Inside	O	I-API
Function	O	I-API
''	O	I-API
)	O	I-API
;	O	O
}	O	O
;	O	O
alert	O	O
(	O	O
a	O	O
+	O	O
``	O	O
Outside	O	O
Function	O	O
''	O	O
)	O	O
;	O	O
(	O	O
function	B-API	O
(	I-API	O
)	I-API	O
{	O	O
var	B-API	O
b	O	O
=	O	O
``	O	O
World	O	O
''	O	O
;	O	O
alert	O	B-API
(	O	I-API
b	O	I-API
+	O	I-API
``	O	I-API
Inside	O	I-API
Function	O	I-API
''	O	I-API
)	O	I-API
;	O	O
}	O	O
)	O	O
(	O	O
)	O	O
;	O	O
alert	O	B-API
(	O	I-API
b	O	I-API
+	O	I-API
``	O	I-API
Outside	O	I-API
Function	O	I-API
''	O	I-API
)	O	I-API
;	O	O
/script	O	O
/body	O	O
/html	O	O
In	O	O
the	O	O
above	O	O
code	O	O
the	O	O
output	O	O
is	O	O
something	O	O
like	O	O
:	O	O
Hello	O	O
Inside	O	O
Function	O	O
Hello	O	O
Outside	O	O
Function	O	O
World	O	O
Inside	O	O
Function	O	O
...	O	O
then	O	O
,	O	O
you	O	O
get	O	O
an	O	O
error	O	O
as	O	O
'b	O	O
'	O	O
is	O	O
not	O	O
defined	O	O
outside	O	O
the	O	O
function	O	O
!	O	O
Thus	O	O
,	O	O
I	O	O
believe	O	O
that	O	O
the	O	O
second	O	O
method	O	O
is	O	O
better	O	O
...	O	O
safer	O	O
!	O	O
They	O	O
both	O	O
create	O	O
a	O	O
closure	O	O
by	O	O
executing	O	O
the	O	O
code	O	O
block	O	O
.	O	O
As	O	O
a	O	O
matter	O	O
of	O	O
style	O	O
I	O	O
much	O	O
prefer	O	O
the	O	O
second	O	O
for	O	O
a	O	O
couple	O	O
of	O	O
reasons	O	O
:	O	O
It	O	O
's	O	O
not	O	O
immediately	O	O
obvious	O	O
by	O	O
glancing	O	O
at	O	O
the	O	O
first	O	O
that	O	O
the	O	O
code	O	O
will	O	O
actually	O	O
be	O	O
executed	O	O
;	O	O
the	O	O
line	O	O
looks	O	O
like	O	O
it	O	O
is	O	O
creating	O	O
a	O	O
new	O	O
function	O	O
,	O	O
rather	O	O
than	O	O
executing	O	O
it	O	O
as	O	O
a	O	O
constructor	O	O
,	O	O
but	O	O
that	O	O
's	O	O
not	O	O
what	O	O
's	O	O
actually	O	O
happening	O	O
.	O	O
Avoid	O	O
code	O	O
that	O	O
does	O	O
n't	O	O
do	O	O
what	O	O
it	O	O
looks	O	O
like	O	O
it	O	O
's	O	O
doing	O	O
!	O	O
Also	O	O
the	O	O
(	O	O
function	B-API	O
(	I-API	O
)	I-API	O
...	O	O
}	O	O
)	O	O
(	O	O
)	O	O
make	O	O
nice	O	O
bookend	O	O
tokens	O	O
so	O	O
that	O	O
you	O	O
can	O	O
immediately	O	O
see	O	O
that	O	O
you	O	O
're	O	O
entering	O	O
and	O	O
leaving	O	O
a	O	O
closure	O	O
scope	O	O
.	O	O
This	O	O
is	O	O
good	O	O
because	O	O
it	O	O
alerts	O	O
the	O	O
programmer	O	O
reading	O	O
it	O	O
to	O	O
the	O	O
scope	O	O
change	O	O
,	O	O
and	O	O
is	O	O
especially	O	O
useful	O	O
if	O	O
you	O	O
're	O	O
doing	O	O
some	O	O
postprocessing	O	O
of	O	O
the	O	O
file	O	O
,	O	O
eg	O	O
for	O	O
minification	O	O
.	O	O
The	O	O
reason	O	O
was	O	O
that	O	O
the	O	O
value	O	O
I	O	O
was	O	O
retrieving	O	O
was	O	O
from	O	O
a	O	O
form	O	O
element	O	O
,	O	O
but	O	O
the	O	O
submit	O	O
was	O	O
done	O	O
through	O	O
a	O	O
link	O	O
+	O	O
JQuery	B-API	O
,	O	O
not	O	O
through	O	O
a	O	O
form	O	O
button	O	O
submit	O	O
.	O	O
Request.Form	B-API	O
only	O	O
includes	O	O
variables	O	O
posted	O	O
through	O	O
a	O	O
form	O	O
,	O	O
while	O	O
Request.Params	B-API	O
includes	O	O
both	O	O
posted	O	O
form	O	O
variables	O	O
and	O	O
get	O	O
variables	O	O
specified	O	O
as	O	O
URL	O	O
parameters	O	O
.	O	O
Typically	O	O
,	O	O
integer	O	O
values	O	O
are	O	O
signed	O	O
,	O	O
unless	O	O
you	O	O
explicitly	O	O
need	O	O
an	O	O
unsigned	O	O
value	O	O
.	O	O
It	O	O
's	O	O
just	O	O
the	O	O
way	O	O
they	O	O
are	O	O
used	O	O
.	O	O
I	O	O
may	O	O
not	O	O
agree	O	O
with	O	O
that	O	O
choice	O	O
,	O	O
but	O	O
that	O	O
's	O	O
just	O	O
the	O	O
way	O	O
it	O	O
is	O	O
.	O	O
For	O	O
the	O	O
time	O	O
being	O	O
,	O	O
with	O	O
todays	O	O
typical	O	O
memory	O	O
constraints	O	O
,	O	O
if	O	O
your	O	O
array	O	O
or	O	O
similar	O	O
data	O	O
structure	O	O
needs	O	O
an	O	O
UInt32	B-API	O
length	O	O
,	O	O
you	O	O
should	O	O
consider	O	O
other	O	O
data	O	O
structures	O	O
.	O	O
With	O	O
an	O	O
array	O	O
of	O	O
bytes	O	O
,	O	O
Int32	B-API	O
will	O	O
give	O	O
you	O	O
2GB	O	O
of	O	O
values	O	O
Unsigned	O	O
int	O	O
is	O	O
n't	O	O
CLS	O	O
compliant	O	O
and	O	O
would	O	O
therefore	O	O
restrict	O	O
usage	O	O
of	O	O
the	O	O
property	O	O
to	O	O
those	O	O
languages	O	O
that	O	O
do	O	O
implement	O	O
a	O	O
.	O	O
See	O	O
here	O	O
:	O	O
Framework	B-API	O
1.1	I-API	O
Introduction	O	O
to	O	O
the	O	O
.NET	B-API	O
Framework	I-API	O
Class	I-API	O
Library	I-API	O
Framework	O	O
2.0	O	O
.NET	O	O
Framework	O	O
Class	O	O
Library	O	O
Overview	O	O
I	O	O
think	O	O
it	O	O
also	O	O
might	O	O
have	O	O
to	O	O
do	O	O
with	O	O
simplifying	O	O
things	O	O
on	O	O
a	O	O
lower	O	O
level	O	O
,	O	O
since	O	O
Array.Length	B-API	B-API
will	O	O
of	O	O
course	O	O
be	O	O
added	O	O
to	O	O
a	O	O
negative	O	O
number	O	O
at	O	O
some	O	O
point	O	O
,	O	O
if	O	O
Array.Length	B-API	B-API
were	O	O
unsigned	O	O
,	O	O
and	O	O
added	O	O
to	O	O
a	O	O
negative	O	O
int	O	O
(	O	O
two	O	O
's	O	O
complement	O	O
)	O	O
,	O	O
there	O	O
could	O	O
be	O	O
messy	O	O
results	O	O
.	O	O
Dive	O	O
Into	O	O
Python	B-API	O
has	O	O
a	O	O
chapter	O	O
.	O	O
Ca	O	O
n't	O	O
vouch	O	O
for	O	O
how	O	O
good	O	O
it	O	O
would	O	O
be	O	O
though	O	O
.	O	O
Personally	O	O
,	O	O
I	O	O
've	O	O
played	O	O
with	O	O
several	O	O
of	O	O
the	O	O
built-in	O	O
options	O	O
on	O	O
an	O	O
XML-heavy	O	O
project	O	O
and	O	O
have	O	O
settled	O	O
on	O	O
pulldom	B-API	O
as	O	O
the	O	O
best	O	O
choice	O	O
less	O	O
complex	O	O
documents	O	O
.	O	O
Especially	O	O
for	O	O
small	O	O
simple	O	O
stuff	O	O
,	O	O
I	O	O
like	O	O
the	O	O
event-driven	O	O
theory	O	O
of	O	O
parsing	O	O
rather	O	O
than	O	O
setting	O	O
up	O	O
a	O	O
whole	O	O
slew	O	O
of	O	O
callbacks	O	O
for	O	O
a	O	O
relatively	O	O
simple	O	O
structure	O	O
.	O	O
Here	O	O
is	O	O
a	O	O
good	O	O
quick	O	O
discussion	O	O
of	O	O
how	O	O
to	O	O
use	O	O
the	O	O
API	O	O
.	O	O
What	O	O
I	O	O
like	O	O
:	O	O
you	O	O
can	O	O
handle	O	O
the	O	O
parsing	O	O
in	O	O
a	O	O
for	O	O
loop	O	O
rather	O	O
than	O	O
using	O	O
callbacks	O	O
.	O	O
You	O	O
also	O	O
delay	O	O
full	O	O
parsing	O	O
(	O	O
the	O	O
``	O	O
pull	O	O
''	O	O
part	O	O
)	O	O
and	O	O
only	O	O
get	O	O
additional	O	O
detail	O	O
when	O	O
you	O	O
call	O	O
expandNode	B-API	B-API
(	I-API	I-API
)	I-API	I-API
.	O	O
This	O	O
satisfies	O	O
my	O	O
general	O	O
requirement	O	O
for	O	O
``	O	O
responsible	O	O
''	O	O
efficiency	O	O
without	O	O
sacrificing	O	O
ease	O	O
of	O	O
use	O	O
and	O	O
simplicity	O	O
.	O	O
ElementTree	B-API	O
has	O	O
a	O	O
nice	O	O
pythony	O	O
API	O	O
.	O	O
I	O	O
think	O	O
it	O	O
's	O	O
even	O	O
shipped	O	O
as	O	O
part	O	O
of	O	O
python	B-API	O
2.5	I-API	O
It	O	O
's	O	O
in	O	O
pure	O	O
python	O	O
and	O	O
as	O	O
I	O	O
say	O	O
,	O	O
pretty	O	O
nice	O	O
,	O	O
but	O	O
if	O	O
you	O	O
wind	O	O
up	O	O
needing	O	O
more	O	O
performance	O	O
,	O	O
then	O	O
lxml	O	O
exposes	O	O
the	O	O
same	O	O
API	O	O
and	O	O
uses	O	O
libxml2	B-API	O
under	O	O
the	O	O
hood	O	O
.	O	O
You	O	O
can	O	O
theoretically	O	O
just	O	O
swap	O	O
it	O	O
in	O	O
when	O	O
you	O	O
discover	O	O
you	O	O
need	O	O
it	O	O
.	O	O
Since	O	O
you	O	O
mentioned	O	O
that	O	O
you	O	O
'll	O	O
be	O	O
building	O	O
``	O	O
fairly	O	O
simple	O	O
''	O	O
XML	B-API	O
,	O	O
the	O	O
minidom	O	O
module	O	O
(	O	O
part	O	O
of	O	O
the	O	O
Python	B-API	O
Standard	I-API	O
Library	I-API	O
)	O	O
will	O	O
likely	O	O
suit	O	O
your	O	O
needs	O	O
.	O	O
If	O	O
you	O	O
have	O	O
any	O	O
experience	O	O
with	O	O
the	O	O
DOM	B-API	O
representation	O	O
of	O	O
XML	B-API	O
,	O	O
you	O	O
should	O	O
find	O	O
the	O	O
API	O	O
quite	O	O
straight	O	O
forward	O	O
.	O	O
I	O	O
write	O	O
a	O	O
SOAP	B-API	O
server	I-API	O
that	O	O
receives	O	O
XML	B-API	O
requests	O	O
,	O	O
and	O	O
creates	O	O
XML	B-API	O
responses	O	O
.	O	O
(	O	O
Unfortunately	O	O
,	O	O
it	O	O
's	O	O
not	O	O
my	O	O
project	O	O
,	O	O
so	O	O
it	O	O
's	O	O
closed	O	O
source	O	O
,	O	O
but	O	O
that	O	O
's	O	O
another	O	O
problem	O	O
)	O	O
.	O	O
It	O	O
turned	O	O
out	O	O
for	O	O
me	O	O
that	O	O
creating	O	O
(	O	O
SOAP	B-API	O
)	O	O
XML	B-API	O
documents	O	O
is	O	O
fairly	O	O
simple	O	O
,	O	O
if	O	O
you	O	O
have	O	O
a	O	O
data	O	O
structure	O	O
that	O	O
``	O	O
fits	O	O
''	O	O
the	O	O
schema	O	O
.	O	O
I	O	O
keep	O	O
the	O	O
envelope	O	O
,	O	O
since	O	O
the	O	O
response	O	O
envelope	O	O
is	O	O
(	O	O
almost	O	O
)	O	O
the	O	O
same	O	O
as	O	O
the	O	O
request	O	O
envelope	O	O
.	O	O
Then	O	O
,	O	O
since	O	O
my	O	O
data	O	O
structure	O	O
is	O	O
a	O	O
(	O	O
possibly	O	O
nested	O	O
)	O	O
dictionary	O	O
,	O	O
I	O	O
create	O	O
a	O	O
string	O	O
that	O	O
turns	O	O
this	O	O
dictionary	O	O
into	O	O
key	O	O
>	O	O
value/key	O	O
>	O	O
items	O	O
.	O	O
This	O	O
is	O	O
a	O	O
task	O	O
that	O	O
recursion	O	O
makes	O	O
simple	O	O
,	O	O
and	O	O
I	O	O
end	O	O
up	O	O
with	O	O
the	O	O
right	O	O
structure	O	O
.	O	O
This	O	O
is	O	O
all	O	O
done	O	O
in	O	O
python	O	O
code	O	O
,	O	O
and	O	O
is	O	O
currently	O	O
fast	O	O
enough	O	O
for	O	O
production	O	O
use	O	O
.	O	O
You	O	O
can	O	O
also	O	O
(	O	O
relatively	O	O
)	O	O
easily	O	O
build	O	O
lists	O	O
as	O	O
well	O	O
,	O	O
although	O	O
depending	O	O
upon	O	O
your	O	O
client	O	O
,	O	O
you	O	O
may	O	O
hit	O	O
problems	O	O
unless	O	O
you	O	O
give	O	O
length	O	O
hints	O	O
.	O	O
For	O	O
me	O	O
,	O	O
this	O	O
was	O	O
much	O	O
simpler	O	O
,	O	O
since	O	O
a	O	O
dictionary	O	O
is	O	O
a	O	O
much	O	O
easier	O	O
way	O	O
of	O	O
working	O	O
than	O	O
some	O	O
custom	O	O
class	O	O
.	O	O
For	O	O
the	O	O
books	O	O
,	O	O
generating	O	O
XML	B-API	O
is	O	O
much	O	O
easier	O	O
than	O	O
parsing	O	O
!	O	O
I	O	O
would	O	O
be	O	O
a	O	O
bit	O	O
reluctant	O	O
to	O	O
use	O	O
nested	O	O
classes	O	O
here	O	O
.	O	O
What	O	O
if	O	O
you	O	O
created	O	O
an	O	O
abstract	O	O
base	O	O
class	O	O
for	O	O
a	O	O
``	O	O
multimedia	O	O
driver	O	O
''	O	O
to	O	O
handle	O	O
the	O	O
back-end	O	O
stuff	O	O
(	O	O
workhorse	O	O
)	O	O
,	O	O
and	O	O
a	O	O
separate	O	O
class	O	O
for	O	O
the	O	O
front-end	O	O
work	O	O
?	O	O
The	O	O
front-end	O	O
class	O	O
could	O	O
take	O	O
a	O	O
pointer/reference	O	O
to	O	O
an	O	O
implemented	O	O
driver	O	O
class	O	O
(	O	O
for	O	O
the	O	O
appropriate	O	O
media	O	O
type	O	O
and	O	O
situation	O	O
)	O	O
and	O	O
perform	O	O
the	O	O
abstract	O	O
operations	O	O
on	O	O
the	O	O
workhorse	O	O
structure	O	O
.	O	O
My	O	O
philosophy	O	O
would	O	O
be	O	O
to	O	O
go	O	O
ahead	O	O
and	O	O
make	O	O
both	O	O
structures	O	O
accessible	O	O
to	O	O
the	O	O
client	O	O
in	O	O
a	O	O
polished	O	O
way	O	O
,	O	O
just	O	O
under	O	O
the	O	O
assumption	O	O
they	O	O
would	O	O
be	O	O
used	O	O
in	O	O
tandem	O	O
.	O	O
I	O	O
would	O	O
reference	O	O
something	O	O
like	O	O
a	O	O
QTextDocument	B-API	O
in	O	O
Qt	O	O
.	O	O
You	O	O
provide	O	O
a	O	O
direct	O	O
interface	O	O
to	O	O
the	O	O
bare	O	O
metal	O	O
data	O	O
handling	O	O
,	O	O
but	O	O
pass	O	O
the	O	O
authority	O	O
along	O	O
to	O	O
an	O	O
object	O	O
like	O	O
a	O	O
QTextEdit	B-API	O
to	O	O
do	O	O
the	O	O
manipulation	O	O
.	O	O
One	O	O
way	O	O
of	O	O
deciding	O	O
whether	O	O
or	O	O
not	O	O
to	O	O
use	O	O
nested	O	O
classes	O	O
is	O	O
to	O	O
think	O	O
whether	O	O
or	O	O
not	O	O
this	O	O
class	O	O
plays	O	O
a	O	O
supporting	O	O
role	O	O
or	O	O
it	O	O
's	O	O
own	O	O
part	O	O
.	O	O
If	O	O
it	O	O
exists	O	O
solely	O	O
for	O	O
the	O	O
purpose	O	O
of	O	O
helping	O	O
another	O	O
class	O	O
then	O	O
I	O	O
generally	O	O
make	O	O
it	O	O
a	O	O
nested	O	O
class	O	O
.	O	O
There	O	O
are	O	O
a	O	O
whole	O	O
load	O	O
of	O	O
caveats	O	O
to	O	O
that	O	O
,	O	O
some	O	O
of	O	O
which	O	O
seem	O	O
contradictory	O	O
but	O	O
it	O	O
all	O	O
comes	O	O
down	O	O
to	O	O
experience	O	O
and	O	O
gut-feeling	O	O
.	O	O
sounds	O	O
like	O	O
a	O	O
case	O	O
where	O	O
you	O	O
could	O	O
use	O	O
the	O	O
strategy	O	O
pattern	O	O
Assuming	O	O
your	O	O
master	O	O
page	O	O
was	O	O
named	O	O
MyMaster	B-API	O
:	I-API	O
(	I-API	O
Master	I-API	O
as	I-API	O
MyMaster	I-API	O
)	I-API	O
.PeopleListView.DataBind	I-API	B-API
(	I-API	I-API
)	I-API	I-API
;	O	O
Edit	O	O
:	O	O
since	O	O
PeopleListView	O	O
will	O	O
be	O	O
declared	O	O
protected	O	O
by	O	O
default	O	O
,	O	O
you	O	O
will	O	O
either	O	O
need	O	O
to	O	O
change	O	O
this	O	O
to	O	O
public	O	O
,	O	O
or	O	O
create	O	O
a	O	O
public	O	O
property	O	O
wrapper	O	O
so	O	O
that	O	O
you	O	O
can	O	O
access	O	O
it	O	O
from	O	O
your	O	O
page	O	O
.	O	O
I	O	O
believe	O	O
you	O	O
could	O	O
do	O	O
this	O	O
by	O	O
using	O	O
this.Master.FindControl	B-API	B-API
or	O	O
something	O	O
similar	O	O
,	O	O
but	O	O
you	O	O
probably	O	O
should	O	O
n't	O	O
-	O	O
it	O	O
requires	O	O
the	O	O
content	O	O
page	O	O
to	O	O
know	O	O
too	O	O
much	O	O
about	O	O
the	O	O
structure	O	O
of	O	O
the	O	O
master	O	O
page	O	O
.	O	O
I	O	O
would	O	O
suggest	O	O
another	O	O
method	O	O
,	O	O
such	O	O
as	O	O
firing	O	O
an	O	O
event	O	O
in	O	O
the	O	O
content	O	O
area	O	O
that	O	O
the	O	O
master	O	O
could	O	O
listen	O	O
for	O	O
and	O	O
re-bind	O	O
when	O	O
fired	O	O
.	O	O
Assuming	O	O
the	O	O
control	O	O
is	O	O
called	O	O
``	O	O
PeopleListView	O	O
''	O	O
on	O	O
the	O	O
master	O	O
page	O	O
ListView	B-API	O
peopleListView	O	O
=	O	O
(	B-API	O
ListView	I-API	O
)	I-API	O
this.Master.FindControl	B-API	B-API
(	I-API	I-API
``	I-API	I-API
PeopleListView	I-API	I-API
''	I-API	I-API
)	I-API	I-API
;	O	O
peopleListView.DataSource	B-API	O
=	O	O
[	O	O
whatever	O	O
]	O	O
;	O	O
peopleListView.DataBind	B-API	B-API
(	I-API	I-API
)	I-API	I-API
;	O	O
But	O	O
@	O	O
palmsey	O	O
is	O	O
more	O	O
correct	O	O
,	O	O
especially	O	O
if	O	O
your	O	O
page	O	O
could	O	O
have	O	O
the	O	O
possibility	O	O
of	O	O
more	O	O
than	O	O
one	O	O
master	O	O
page	O	O
.	O	O
Decouple	O	O
them	O	O
and	O	O
use	O	O
an	O	O
event	O	O
.	O	O
I	O	O
've	O	O
been	O	O
doing	O	O
a	O	O
little	O	O
research	O	O
into	O	O
this	O	O
and	O	O
whilst	O	O
I	O	O
'm	O	O
not	O	O
entirely	O	O
sure	O	O
its	O	O
the	O	O
cause	O	O
I	O	O
believe	O	O
it	O	O
is	O	O
because	O	O
Safari	O	O
is	O	O
not	O	O
returning	O	O
the	O	O
full	O	O
result	O	O
set	O	O
(	O	O
hence	O	O
cropping	O	O
it	O	O
)	O	O
.	O	O
I	O	O
have	O	O
been	O	O
in	O	O
dicussion	O	O
with	O	O
another	O	O
developer	O	O
and	O	O
found	O	O
the	O	O
following	O	O
post	O	O
on	O	O
Channel	O	O
9	O	O
as	O	O
well	O	O
which	O	O
recommends	O	O
making	O	O
use	O	O
of	O	O
the	O	O
SQL	B-API	O
State	I-API	O
service	O	O
to	O	O
store	O	O
the	O	O
viewstate	O	O
avoiding	O	O
the	O	O
postback	O	O
issue	O	O
and	O	O
also	O	O
page	O	O
size	O	O
.	O	O
http	O	O
:	O	O
//channel9.msdn.com/forums/TechOff/250549-ASPNET-ViewState-flawed-architecture/	O	O
?	O	O
CommentID=270477	O	O
#	O	O
263702	O	O
Does	O	O
this	O	O
seem	O	O
like	O	O
the	O	O
best	O	O
solution	O	O
?	O	O
My	O	O
first	O	O
port	O	O
of	O	O
call	O	O
would	O	O
be	O	O
to	O	O
go	O	O
through	O	O
the	O	O
elements	O	O
on	O	O
the	O	O
page	O	O
and	O	O
see	O	O
which	O	O
controls	O	O
:	O	O
Will	O	O
still	O	O
work	O	O
when	O	O
I	O	O
switch	O	O
ViewState	O	O
off	O	O
Can	O	O
be	O	O
moved	O	O
out	O	O
of	O	O
the	O	O
page	O	O
and	O	O
into	O	O
an	O	O
AJAX	B-API	O
call	O	O
to	O	O
be	O	O
loaded	O	O
when	O	O
required	O	O
Failing	O	O
that	O	O
,	O	O
and	O	O
here	O	O
's	O	O
the	O	O
disclaimer	O	O
-	O	O
I	O	O
've	O	O
never	O	O
used	O	O
this	O	O
solution	O	O
on	O	O
a	O	O
web-facing	O	O
site	O	O
-	O	O
but	O	O
in	O	O
the	O	O
past	O	O
where	O	O
I	O	O
've	O	O
wanted	O	O
to	O	O
eliminate	O	O
massive	O	O
ViewStates	O	O
in	O	O
limited-audience	O	O
applications	O	O
I	O	O
have	O	O
stored	O	O
the	O	O
ViewState	O	O
in	O	O
the	O	O
Session	O	O
.	O	O
It	O	O
has	O	O
worked	O	O
for	O	O
me	O	O
because	O	O
the	O	O
hit	O	O
to	O	O
memory	O	O
is	O	O
n't	O	O
significant	O	O
for	O	O
the	O	O
number	O	O
of	O	O
users	O	O
,	O	O
but	O	O
if	O	O
you	O	O
're	O	O
running	O	O
a	O	O
fairly	O	O
popular	O	O
site	O	O
I	O	O
would	O	O
n't	O	O
recommend	O	O
this	O	O
approach	O	O
.	O	O
However	O	O
,	O	O
if	O	O
the	O	O
Session	O	O
solution	O	O
works	O	O
for	O	O
Safari	O	O
you	O	O
could	O	O
always	O	O
detect	O	O
the	O	O
user	O	O
agent	O	O
and	O	O
fudge	O	O
appropriately	O	O
.	O	O
While	O	O
I	O	O
second	O	O
the	O	O
Channel	O	O
9	O	O
solution	O	O
,	O	O
also	O	O
be	O	O
aware	O	O
that	O	O
in	O	O
some	O	O
hosted	O	O
environments	O	O
Safari	O	O
is	O	O
not	O	O
considered	O	O
an	O	O
up-level	O	O
browser	O	O
.	O	O
You	O	O
may	O	O
need	O	O
to	O	O
add	O	O
it	O	O
to	O	O
your	O	O
application	O	O
's	O	O
browscap	O	O
in	O	O
order	O	O
to	O	O
make	O	O
use	O	O
of	O	O
some	O	O
ASP.Net	B-API	O
features	O	O
.	O	O
That	O	O
was	O	O
the	O	O
root	O	O
cause	O	O
of	O	O
some	O	O
headaches	O	O
we	O	O
had	O	O
for	O	O
a	O	O
client	O	O
's	O	O
site	O	O
that	O	O
used	O	O
the	O	O
ASP	B-API	O
Menu	I-API	O
control	O	O
.	O	O
Without	O	O
the	O	O
extra	O	O
quotes	O	O
around	O	O
the	O	O
input	O	O
string	O	O
parameter	O	O
,	O	O
the	O	O
Javascript	B-API	O
function	O	O
thinks	O	O
I	O	O
'm	O	O
passing	O	O
in	O	O
an	O	O
integer	O	O
.	O	O
Can	O	O
you	O	O
do	O	O
some	O	O
rudimentary	O	O
string	O	O
function	O	O
to	O	O
force	O	O
JavaScript	B-API	O
into	O	O
changing	O	O
it	O	O
into	O	O
a	O	O
string	O	O
?	O	O
Like	O	O
value	O	O
=	O	O
value	O	O
+	O	O
Try	O	O
putting	O	O
the	O	O
extra	O	O
text	O	O
inside	O	O
the	O	O
server-side	O	O
script	O	O
block	O	O
and	O	O
concatenating	O	O
.	O	O
onclick=	O	O
'	O	O
%	O	O
#	O	O
``	O	O
``	O	O
''	O	O
)	O	O
;	O	O
''	O	O
ToggleDisplay	O	O
(	O	O
``	O	O
''	O	O
''	O	O
DataBinder.Eval	B-API	B-API
(	I-API	I-API
Container.DataItem	I-API	I-API
,	I-API	I-API
``	I-API	I-API
JobCode	I-API	I-API
''	I-API	I-API
)	I-API	I-API
Edit	O	O
:	O	O
I	O	O
'm	O	O
pretty	O	O
sure	O	O
you	O	O
could	O	O
just	O	O
use	O	O
double	O	O
quotes	O	O
outside	O	O
the	O	O
script	O	O
block	O	O
as	O	O
well	O	O
.	O	O
I	O	O
had	O	O
recently	O	O
similar	O	O
problem	O	O
and	O	O
the	O	O
only	O	O
way	O	O
to	O	O
solve	O	O
it	O	O
was	O	O
to	O	O
use	O	O
plain	O	O
old	O	O
HTML	B-API	O
codes	O	O
for	O	O
single	O	O
(	O	O
)	O	O
and	O	O
double	O	O
quotes	O	O
(	O	O
)	O	O
.	O	O
Source	O	O
code	O	O
was	O	O
total	O	O
mess	O	O
of	O	O
course	O	O
but	O	O
it	O	O
worked	O	O
.	O	O
Try	O	O
a	O	O
id=	O	O
''	O	O
aShowHide	O	O
''	O	O
onclick='ToggleDisplay	O	O
(	O	O
#	O	O
34	O	O
;	O	O
%	O	O
#	O	O
DataBinder.Eval	B-API	B-API
(	I-API	I-API
Container.DataItem	I-API	I-API
,	I-API	I-API
``	I-API	I-API
JobCode	I-API	I-API
''	I-API	I-API
)	I-API	I-API
%	O	O
#	O	O
34	O	O
;	O	O
)	O	O
;	O	O
'Show/Hide/a	O	O
or	O	O
a	O	O
id=	O	O
''	O	O
aShowHide	O	O
''	O	O
onclick='ToggleDisplay	O	O
(	O	O
#	O	O
39	O	O
;	O	O
%	O	O
#	O	O
DataBinder.Eval	B-API	B-API
(	I-API	I-API
Container.DataItem	I-API	I-API
,	I-API	I-API
``	I-API	I-API
JobCode	I-API	I-API
''	I-API	I-API
)	I-API	I-API
%	O	O
#	O	O
39	O	O
;	O	O
)	O	O
;	O	O
'Show/Hide/a	O	O

[0x7FFD166670E3] ANOMALY: use of REX.w is meaningless (default operand size is 64)
