I	O	O
would	O	O
do	O	O
the	O	O
form	O	O
post	O	O
in	O	O
your	O	O
code	O	O
behind	O	O
using	O	O
HttpWebRequest	O	O
class	O	O
.	O	O
Here	O	O
is	O	O
a	O	O
good	O	O
helper	O	O
class	O	O
to	O	O
get	O	O
your	O	O
started	O	O
:	O	O
http	O	O
:	O	O
//geekswithblogs.net/rakker/archive/2006/04/21/76044.aspx	O	O
From	O	O
there	O	O
,	O	O
you	O	O
can	O	O
just	O	O
do	O	O
a	O	O
Response.Redirect	B-API	B-API
,	O	O
or	O	O
perhaps	O	O
you	O	O
need	O	O
to	O	O
vary	O	O
your	O	O
action	O	O
based	O	O
on	O	O
the	O	O
outcome	O	O
of	O	O
the	O	O
post	O	O
(	O	O
if	O	O
there	O	O
was	O	O
an	O	O
error	O	O
,	O	O
display	O	O
it	O	O
to	O	O
the	O	O
user	O	O
or	O	O
whatever	O	O
)	O	O
.	O	O
I	O	O
think	O	O
you	O	O
already	O	O
had	O	O
the	O	O
answer	O	O
in	O	O
your	O	O
question	O	O
to	O	O
be	O	O
honest	O	O
-	O	O
sounds	O	O
like	O	O
you	O	O
think	O	O
it	O	O
is	O	O
a	O	O
post	O	O
OR	O	O
redirect	O	O
when	O	O
in	O	O
reality	O	O
you	O	O
can	O	O
do	O	O
them	O	O
both	O	O
from	O	O
your	O	O
code	O	O
behind	O	O
.	O	O
Well	O	O
,	O	O
IE	O	O
has	O	O
a	O	O
somewhat	O	O
non-standard	O	O
object	O	O
model	O	O
;	O	O
what	O	O
you	O	O
're	O	O
doing	O	O
should	O	O
n't	O	O
work	O	O
but	O	O
you	O	O
're	O	O
getting	O	O
away	O	O
with	O	O
it	O	O
because	O	O
IE	O	O
is	O	O
being	O	O
nice	O	O
to	O	O
you	O	O
.	O	O
In	O	O
Firefox	O	O
and	O	O
Safari	O	O
,	O	O
document.frm	O	O
in	O	O
your	O	O
code	O	O
evaluates	O	O
to	O	O
undefined	O	O
.	O	O
You	O	O
need	O	O
to	O	O
be	O	O
using	O	O
id	O	O
values	O	O
on	O	O
your	O	O
form	O	O
elements	O	O
and	O	O
use	O	O
document.getElementById	B-API	B-API
(	I-API	I-API
'whatever	I-API	I-API
'	I-API	I-API
)	I-API	I-API
to	O	O
return	O	O
a	O	O
reference	O	O
to	O	O
them	O	O
instead	O	O
of	O	O
referring	O	O
to	O	O
non-existent	O	O
properties	O	O
of	O	O
the	O	O
document	O	O
object	O	O
.	O	O
So	O	O
this	O	O
works	O	O
a	O	O
bit	O	O
better	O	O
and	O	O
may	O	O
do	O	O
what	O	O
you	O	O
're	O	O
after	O	O
:	O	O
Line	O	O
27	O	O
:	O	O
form	O	O
name=	O	O
''	O	O
frm	O	O
''	O	O
id=	O	O
''	O	O
f	O	O
''	O	O
...	O	O
Line	O	O
6	O	O
:	O	O
var	O	O
frmTemp	O	O
=	O	O
document.getElementById	B-API	B-API
(	I-API	I-API
'f	I-API	I-API
'	I-API	I-API
)	I-API	I-API
;	O	O
But	O	O
you	O	O
might	O	O
want	O	O
to	O	O
check	O	O
out	O	O
this	O	O
excellent	O	O
book	O	O
if	O	O
you	O	O
want	O	O
to	O	O
learn	O	O
more	O	O
about	O	O
the	O	O
right	O	O
way	O	O
of	O	O
going	O	O
about	O	O
things	O	O
:	O	O
DOM	O	O
Scripting	O	O
by	O	O
Jeremy	O	O
Keith	O	O
Also	O	O
while	O	O
we	O	O
're	O	O
on	O	O
the	O	O
subject	O	O
,	O	O
Bulletproof	O	O
Ajax	O	O
by	O	O
the	O	O
same	O	O
author	O	O
is	O	O
also	O	O
deserving	O	O
of	O	O
a	O	O
place	O	O
on	O	O
your	O	O
bookshelf	O	O
as	O	O
is	O	O
JavaScript	O	O
:	O	O
The	O	O
Good	O	O
Parts	O	O
by	O	O
Doug	O	O
Crockford	O	O
Why	O	O
not	O	O
grab	O	O
one	O	O
of	O	O
the	O	O
AJAX	O	O
scripting	O	O
libraries	O	O
,	O	O
they	O	O
abstract	O	O
away	O	O
a	O	O
lot	O	O
of	O	O
the	O	O
cross	O	O
browser	O	O
DOM	O	O
scripting	O	O
black	O	O
magic	O	O
and	O	O
make	O	O
life	O	O
a	O	O
hell	O	O
of	O	O
a	O	O
lot	O	O
easier	O	O
.	O	O
I	O	O
do	O	O
n't	O	O
have	O	O
any	O	O
experience	O	O
with	O	O
http	O	O
:	O	O
//www.SiteGround.com	O	O
as	O	O
a	O	O
web	O	O
host	O	O
personally	O	O
.	O	O
This	O	O
is	O	O
just	O	O
a	O	O
guess	O	O
,	O	O
but	O	O
it	O	O
's	O	O
common	O	O
for	O	O
a	O	O
shared	O	O
host	O	O
to	O	O
support	O	O
Python	O	O
and	O	O
MySQL	O	O
with	O	O
the	O	O
MySQLdb	O	O
module	O	O
(	O	O
e.g.	O	O
,	O	O
GoDaddy	O	O
does	O	O
this	O	O
)	O	O
.	O	O
Try	O	O
the	O	O
following	O	O
CGI	O	O
script	O	O
to	O	O
see	O	O
if	O	O
MySQLdb	O	O
is	O	O
installed	O	O
.	O	O
#	O	O
!	O	O
/usr/bin/pythonmodule_name	O	O
=	O	O
'MySQLdb'head	O	O
=	O	O
'	O	O
''	O	O
Content-Type	O	O
:	O	O
text/html	O	O
%	O	O
s	O	O
is	O	O
'	O	O
''	O	O
%	O	O
module_nametry	O	O
:	O	O
print	O	O
head	O	O
+	O	O
'installed'except	O	O
ImportError	O	O
:	O	O
print	O	O
head	O	O
+	O	O
'not	O	O
__import__	B-API	O
(	I-API	O
module_name	I-API	O
)	I-API	O
I	O	O
uploaded	O	O
it	O	O
and	O	O
got	O	O
an	O	O
internal	O	O
error	O	O
Premature	O	O
end	O	O
of	O	O
script	O	O
After	O	O
much	O	O
playing	O	O
around	O	O
,	O	O
I	O	O
found	O	O
that	O	O
if	O	O
I	O	O
had	O	O
import	O	O
cgiimport	O	O
cgitb	O	O
;	O	O
import	O	O
cgitb.enable	B-API	B-API
(	I-API	I-API
)	I-API	I-API
It	O	O
would	O	O
give	O	O
me	O	O
a	O	O
much	O	O
more	O	O
useful	O	O
answer	O	O
and	O	O
say	O	O
that	O	O
it	O	O
was	O	O
not	O	O
installed	O	O
,	O	O
you	O	O
can	O	O
see	O	O
it	O	O
yourself	O	O
-	O	O
>	O	O
http	O	O
:	O	O
//woarl.com/db.py	O	O
Oddly	O	O
enough	O	O
,	O	O
this	O	O
would	O	O
produce	O	O
an	O	O
error	O	O
import	O	O
MySQLdbimport	O	O
cgiimport	O	O
cgitb	O	O
;	O	O
cgitb.enable	B-API	B-API
(	I-API	I-API
)	I-API	I-API
I	O	O
looked	O	O
at	O	O
some	O	O
of	O	O
the	O	O
other	O	O
files	O	O
I	O	O
had	O	O
up	O	O
there	O	O
and	O	O
it	O	O
seems	O	O
that	O	O
library	O	O
was	O	O
one	O	O
of	O	O
the	O	O
ones	O	O
I	O	O
had	O	O
already	O	O
tried	O	O
.	O	O
MySQLdb	O	O
is	O	O
what	O	O
I	O	O
have	O	O
used	O	O
before	O	O
.	O	O
If	O	O
you	O	O
host	O	O
is	O	O
using	O	O
Python	O	O
version	O	O
2.5	O	O
or	O	O
higher	O	O
,	O	O
support	O	O
for	O	O
sqlite3	O	O
databases	O	O
is	O	O
built	O	O
in	O	O
(	O	O
sqlite	O	O
allows	O	O
you	O	O
to	O	O
have	O	O
a	O	O
relational	O	O
database	O	O
that	O	O
is	O	O
simply	O	O
a	O	O
file	O	O
in	O	O
your	O	O
filesystem	O	O
)	O	O
.	O	O
But	O	O
buyer	O	O
beware	O	O
,	O	O
sqlite	O	O
is	O	O
not	O	O
suited	O	O
for	O	O
production	O	O
,	O	O
so	O	O
it	O	O
may	O	O
depend	O	O
what	O	O
you	O	O
are	O	O
trying	O	O
to	O	O
do	O	O
with	O	O
it	O	O
.	O	O
Another	O	O
option	O	O
may	O	O
be	O	O
to	O	O
call	O	O
your	O	O
host	O	O
and	O	O
complain	O	O
,	O	O
or	O	O
change	O	O
hosts	O	O
.	O	O
Honestly	O	O
these	O	O
days	O	O
,	O	O
any	O	O
self	O	O
respecting	O	O
web	O	O
host	O	O
that	O	O
supports	O	O
python	O	O
and	O	O
mysql	O	O
ought	O	O
to	O	O
have	O	O
MySQLdb	O	O
pre	O	O
installed	O	O
.	O	O
I	O	O
really	O	O
like	O	O
regular	O	O
expressions	O	O
.	O	O
As	O	O
long	O	O
as	O	O
the	O	O
command	O	O
strings	O	O
are	O	O
fairly	O	O
simple	O	O
,	O	O
you	O	O
can	O	O
write	O	O
a	O	O
few	O	O
regexes	O	O
that	O	O
could	O	O
take	O	O
a	O	O
few	O	O
pages	O	O
of	O	O
code	O	O
to	O	O
manually	O	O
parse	O	O
.	O	O
I	O	O
would	O	O
suggest	O	O
you	O	O
check	O	O
out	O	O
http	O	O
:	O	O
//www.regular-expressions.info	O	O
for	O	O
a	O	O
good	O	O
intro	O	O
to	O	O
regexes	O	O
,	O	O
as	O	O
well	O	O
as	O	O
specific	O	O
examples	O	O
for	O	O
Java	O	O
.	O	O
A	O	O
simple	O	O
string	O	O
tokenizer	O	O
on	O	O
spaces	O	O
should	O	O
work	O	O
,	O	O
but	O	O
there	O	O
are	O	O
really	O	O
many	O	O
ways	O	O
you	O	O
could	O	O
do	O	O
this	O	O
.	O	O
Here	O	O
is	O	O
an	O	O
example	O	O
using	O	O
a	O	O
tokenizer	O	O
:	O	O
String	O	O
command	O	O
=	O	O
``	O	O
kick	O	O
''	O	O
;	O	O
StringTokenizer	O	B-API
tokens	O	O
=	O	O
new	O	O
String	O	O
action	O	O
=	O	O
null	O	O
;	O	O
if	O	O
)	O	O
{	O	O
action	O	O
=	O	O
;	O	O
}	O	O
if	O	O
(	O	O
action	O	O
!	O	O
=	O	O
null	O	O
)	O	O
{	O	O
StringTokenizer	B-API	B-API
(	I-API	I-API
command	I-API	I-API
)	I-API	I-API
(	O	O
tokens.hasMoreTokens	B-API	B-API
(	I-API	I-API
)	I-API	I-API
tokens.nextToken	B-API	B-API
(	I-API	I-API
)	I-API	I-API
(	O	O
action	O	O
,	O	O
tokens	O	O
)	O	O
Then	O	O
tokens	O	O
can	O	O
be	O	O
further	O	O
used	O	O
for	O	O
the	O	O
arguments	O	O
.	O	O
This	O	O
all	O	O
assumes	O	O
no	O	O
spaces	O	O
are	O	O
used	O	O
in	O	O
the	O	O
arguments	O	O
...	O	O
so	O	O
you	O	O
might	O	O
want	O	O
to	O	O
roll	O	O
your	O	O
own	O	O
simple	O	O
parsing	O	O
mechanism	O	O
(	O	O
like	O	O
getting	O	O
the	O	O
first	O	O
whitespace	O	O
and	O	O
using	O	O
text	O	O
before	O	O
as	O	O
the	O	O
action	O	O
,	O	O
or	O	O
using	O	O
a	O	O
regular	O	O
expression	O	O
if	O	O
you	O	O
do	O	O
n't	O	O
mind	O	O
the	O	O
speed	O	O
hit	O	O
)	O	O
,	O	O
just	O	O
abstract	O	O
it	O	O
out	O	O
so	O	O
it	O	O
can	O	O
be	O	O
used	O	O
anywhere	O	O
.	O	O
I	O	O
would	O	O
look	O	O
at	O	O
Java	O	O
migrations	O	O
of	O	O
Zork	O	O
,	O	O
and	O	O
lean	O	O
towards	O	O
a	O	O
simple	O	O
Natural	O	O
Language	O	O
Processor	O	O
(	O	O
driven	O	O
either	O	O
by	O	O
tokenizing	O	O
or	O	O
regex	O	O
)	O	O
such	O	O
as	O	O
the	O	O
following	O	O
(	O	O
from	O	O
this	O	O
link	O	O
)	O	O
:	O	O
public	O	O
static	O	O
boolean	O	O
simpleNLP	O	O
(	O	O
String	O	O
inputline	O	O
,	O	O
String	O	B-API
keywords	O	I-API
[	O	I-API
]	O	I-API
)	O	I-API
{	O	O
int	O	O
i	O	O
;	O	O
int	O	O
maxToken	O	O
=	O	O
keywords.length	B-API	B-API
;	O	O
int	O	O
to	O	O
,	O	O
from	O	O
;	O	O
if	O	O
(	O	O
inputline.length	B-API	B-API
(	I-API	I-API
)	I-API	I-API
1	O	O
)	O	O
return	O	O
false	O	O
;	O	O
Vector	O	O
lexed	O	O
=	O	O
new	O	O
Vector	O	B-API
(	O	I-API
)	O	I-API
;	O	O
//	O	O
stores	O	O
the	O	O
words	O	O
//	O	O
first	O	O
extract	O	O
every	O	O
substring	O	O
in	O	O
inputline	O	O
that	O	O
has	O	O
a	O	O
blank	O	O
on	O	O
either	O	O
side	O	O
.	O	O
from	O	O
=	O	O
0	O	O
;	O	O
to	O	O
=	O	O
0	O	O
;	O	O
while	O	O
(	O	O
inputline.charAt	B-API	O
(	I-API	O
from	I-API	O
)	I-API	O
==	O	O
'	O	O
'	O	O
from	O	O
inputline.length	B-API	B-API
(	I-API	I-API
)	I-API	I-API
)	O	O
from	O	O
++	O	O
;	O	O
//	O	O
skip	O	O
'	O	O
'	O	O
if	O	O
(	O	O
from	O	O
=	O	O
inputline.length	B-API	B-API
(	I-API	I-API
)	I-API	I-API
)	O	O
return	O	O
false	O	O
;	O	O
//	O	O
check	O	O
for	O	O
blank	O	O
and	O	O
empty	O	O
lines	O	O
while	O	O
(	O	O
to	O	O
=0	O	O
)	O	O
{	O	O
to	O	O
=	O	O
inputline.indexOf	B-API	O
(	I-API	O
'	I-API	O
'	I-API	O
,	I-API	O
from	I-API	O
)	I-API	O
;	O	O
if	O	O
(	O	O
to	O	O
0	O	O
)	O	O
{	O	O
lexed.addElement	B-API	O
(	I-API	O
inputline.substring	I-API	B-API
(	I-API	I-API
from	I-API	I-API
,	I-API	I-API
to	I-API	I-API
)	I-API	I-API
)	I-API	I-API
;	O	O
from	O	O
=	O	O
to	O	O
;	O	O
while	O	O
(	O	O
inputline.charAt	B-API	O
(	I-API	O
from	I-API	O
)	I-API	O
==	O	O
'	O	O
'	O	O
from	O	O
inputline.length	B-API	B-API
(	I-API	I-API
)	I-API	I-API
-1	O	O
)	O	O
from	O	O
++	O	O
;	O	O
}	O	O
else	O	O
{	O	O
lexed.addElement	B-API	O
(	I-API	O
inputline.substring	I-API	B-API
(	I-API	I-API
from	I-API	I-API
)	I-API	I-API
)	I-API	I-API
;	O	O
}	O	O
}	O	O
//	O	O
//	O	O
if	O	O
we	O	O
get	O	O
here	O	O
we	O	O
have	O	O
a	O	O
vector	O	O
of	O	O
strings	O	O
that	O	O
correspond	O	O
to	O	O
the	O	O
words	O	O
in	O	O
the	O	O
input	O	O
.	O	O
//	O	O
//	O	O
so	O	O
now	O	O
we	O	O
look	O	O
for	O	O
matches	O	O
in	O	O
order	O	O
boolean	O	O
status	O	O
=false	O	O
;	O	O
to	O	O
=	O	O
0	O	O
;	O	O
for	O	O
(	O	O
i=0	O	O
;	O	O
i	O	O
lexed.size	B-API	B-API
(	I-API	I-API
)	I-API	I-API
;	O	O
i++	O	O
)	O	O
{	O	O
String	O	B-API
s	O	O
=	O	O
(	O	O
String	O	O
)	O	O
lexed.elementAt	B-API	O
(	I-API	O
i	I-API	O
)	I-API	O
;	O	O
if	O	O
(	O	O
s.equalsIgnoreCase	B-API	B-API
(	I-API	I-API
keywords	I-API	I-API
[	I-API	I-API
to	I-API	I-API
]	I-API	I-API
)	I-API	I-API
)	O	O
{	O	O
to++	O	O
;	O	O
if	O	B-API
(	O	I-API
to	O	I-API
=	O	I-API
keywords.length	B-API	I-API
)	O	I-API
{	O	O
status	O	O
=	O	O
true	O	O
;	O	O
break	O	O
;	O	O
}	O	O
}	O	O
}	O	O
return	O	O
status	O	O
;	O	O
}	O	O
...	O	O
Anything	O	O
which	O	O
gives	O	O
a	O	O
programmer	O	O
a	O	O
reason	O	O
to	O	O
look	O	O
at	O	O
Zork	O	O
again	O	O
is	O	O
good	O	O
in	O	O
my	O	O
book	O	O
,	O	O
just	O	O
watch	O	O
out	O	O
for	O	O
Grues	O	O
.	O	O
...	O	O
I	O	O
assume	O	O
you	O	O
're	O	O
trying	O	O
to	O	O
make	O	O
the	O	O
command	O	O
interface	O	O
as	O	O
forgiving	O	O
as	O	O
possible	O	O
.	O	O
If	O	O
this	O	O
is	O	O
the	O	O
case	O	O
,	O	O
I	O	O
suggest	O	O
you	O	O
use	O	O
an	O	O
algorithm	O	O
similar	O	O
to	O	O
this	O	O
:	O	O
Read	O	O
in	O	O
the	O	O
string	O	O
Split	O	O
the	O	O
string	O	O
into	O	O
tokens	O	O
Use	O	O
a	O	O
dictionary	O	O
to	O	O
convert	O	O
synonyms	O	O
to	O	O
a	O	O
common	O	O
form	O	O
For	O	O
example	O	O
,	O	O
convert	O	O
``	O	O
hit	O	O
''	O	O
,	O	O
``	O	O
punch	O	O
''	O	O
,	O	O
``	O	O
strike	O	O
''	O	O
,	O	O
and	O	O
``	O	O
kick	O	O
''	O	O
all	O	O
to	O	O
``	O	O
hit	O	O
''	O	O
Perform	O	O
actions	O	O
on	O	O
an	O	O
unordered	O	O
,	O	O
inclusive	O	O
base	O	O
Unordered	O	O
-	O	O
``	O	O
punch	O	O
the	O	O
monkey	O	O
in	O	O
the	O	O
face	O	O
''	O	O
is	O	O
the	O	O
same	O	O
thing	O	O
as	O	O
``	O	O
the	O	O
face	O	O
in	O	O
the	O	O
monkey	O	O
punch	O	O
''	O	O
Inclusive	O	O
-	O	O
If	O	O
the	O	O
command	O	O
is	O	O
supposed	O	O
to	O	O
be	O	O
``	O	O
punch	O	O
the	O	O
monkey	O	O
in	O	O
the	O	O
face	O	O
''	O	O
and	O	O
they	O	O
supply	O	O
``	O	O
punch	O	O
monkey	O	O
''	O	O
,	O	O
you	O	O
should	O	O
check	O	O
how	O	O
many	O	O
commands	O	O
this	O	O
matches	O	O
.	O	O
If	O	O
only	O	O
one	O	O
command	O	O
,	O	O
do	O	O
this	O	O
action	O	O
.	O	O
It	O	O
might	O	O
even	O	O
be	O	O
a	O	O
good	O	O
idea	O	O
to	O	O
have	O	O
command	O	O
priorities	O	O
,	O	O
and	O	O
even	O	O
if	O	O
there	O	O
were	O	O
even	O	O
matches	O	O
,	O	O
it	O	O
would	O	O
perform	O	O
the	O	O
top	O	O
action	O	O
.	O	O
@	O	O
CodingTheWheel	O	O
Heres	O	O
your	O	O
code	O	O
,	O	O
a	O	O
bit	O	O
clean	O	O
up	O	O
and	O	O
through	O	O
eclipse	O	O
(	O	O
ctrl+shift+f	O	O
)	O	O
and	O	O
the	O	O
inserted	O	O
back	O	O
here	O	O
:	O	O
)	O	O
Including	O	O
the	O	O
four	O	O
spaces	O	O
in	O	O
front	O	O
each	O	O
line	O	O
.	O	O
public	O	O
static	O	B-API
boolean	O	O
simpleNLP	O	O
(	O	O
String	O	O
inputline	O	O
,	O	O
String	O	B-API
keywords	O	I-API
[	O	I-API
]	O	I-API
)	O	I-API
{	O	O
if	O	O
(	O	O
inputline.length	B-API	B-API
(	I-API	I-API
)	I-API	I-API
1	O	O
)	O	O
return	O	O
false	O	O
;	O	O
ListString	O	O
lexed	O	O
=	O	O
new	O	O
ArrayListString	B-API	B-API
(	I-API	I-API
)	I-API	I-API
;	O	O
for	O	O
(	O	O
String	O	O
ele	O	O
:	O	O
inputline.split	B-API	B-API
(	I-API	I-API
``	I-API	I-API
``	I-API	I-API
)	I-API	I-API
)	O	O
{	O	O
lexed.add	B-API	B-API
(	I-API	I-API
ele	I-API	I-API
)	I-API	I-API
;	O	O
}	O	O
boolean	O	O
status	O	O
=	O	O
false	O	O
;	O	O
to	O	O
=	O	O
0	O	O
;	O	O
for	O	O
(	O	O
i	O	O
=	O	O
0	O	O
;	O	O
i	O	O
lexed.size	O	B-API
(	O	I-API
)	O	I-API
;	O	O
i++	O	O
)	O	O
{	O	O
String	O	B-API
s	O	O
=	O	O
(	O	O
String	O	O
)	O	O
lexed.get	B-API	B-API
(	I-API	I-API
i	I-API	I-API
)	I-API	I-API
;	O	O
if	O	O
(	O	O
s.equalsIgnoreCase	B-API	B-API
(	I-API	I-API
keywords	I-API	I-API
[	I-API	I-API
to	I-API	I-API
]	I-API	I-API
)	I-API	I-API
)	O	O
{	O	O
to++	O	O
;	O	O
if	O	B-API
(	O	I-API
to	O	I-API
=	O	I-API
keywords.length	B-API	I-API
)	O	I-API
{	O	O
status	O	O
=	O	O
true	O	O
;	O	O
break	O	O
;	O	O
}	O	O
}	O	O
}	O	O
return	O	O
status	O	O
;	O	O
}	O	O
When	O	O
the	O	O
separator	O	O
String	O	O
for	O	O
the	O	O
command	O	O
is	O	O
allways	O	O
the	O	O
same	O	O
String	O	O
or	O	O
char	O	B-API
(	O	I-API
like	O	I-API
the	O	I-API
``	O	I-API
;	O	I-API
''	O	I-API
)	O	I-API
y	O	O
recomend	O	O
you	O	O
use	O	O
the	O	O
StrinkTokenizer	O	B-API
class	O	O
:	O	O
StringTokenizer	O	B-API
but	O	O
when	O	O
the	O	O
separator	O	O
varies	O	O
or	O	O
is	O	O
complex	O	O
y	O	O
recomend	O	O
you	O	O
to	O	O
use	O	O
the	O	O
regular	O	O
expresions	O	O
,	O	O
wich	O	O
can	O	O
be	O	O
used	O	O
by	O	O
the	O	O
String	O	O
class	O	O
itself	O	O
,	O	O
method	O	O
split	O	O
,	O	O
since	O	O
1.4	O	O
.	O	O
It	O	O
uses	O	O
the	O	O
Pattern	O	O
class	O	O
from	O	O
the	O	O
java.util.regex	O	O
package	O	O
Pattern	O	O
Sun	O	O
itself	O	O
recommends	O	O
staying	O	O
away	O	O
from	O	O
StringTokenizer	O	O
and	O	O
using	O	O
the	O	O
String.spilt	B-API	B-API
method	O	O
instead	O	O
.	O	O
You	O	O
'll	O	O
also	O	O
want	O	O
to	O	O
look	O	O
at	O	O
the	O	O
Pattern	O	O
class	O	O
.	O	O
Note	O	O
:	O	O
This	O	O
answer	O	O
is	O	O
sort	O	O
of	O	O
outdated	O	O
(	O	O
from	O	O
2008	O	O
)	O	O
.	O	O
Please	O	O
use	O	O
the	O	O
solution	O	O
below	O	O
with	O	O
care	O	O
!	O	O
!	O	O
Here	O	O
is	O	O
a	O	O
page	O	O
that	O	O
details	O	O
the	O	O
problem	O	O
and	O	O
a	O	O
solution	O	O
(	O	O
search	O	O
the	O	O
page	O	O
for	O	O
the	O	O
text	O	O
Wrapping	O	O
sys.stdout	O	O
into	O	O
an	O	O
instance	O	O
)	O	O
:	O	O
PrintFails	O	O
-	O	O
Python	O	O
Wiki	O	O
Here	O	O
's	O	O
a	O	O
code	O	O
excerpt	O	O
from	O	O
that	O	O
page	O	O
:	O	O
$	O	O
python	O	O
-c	O	O
'import	O	O
sys	O	O
,	O	O
codecs	O	O
,	O	O
locale	O	O
;	O	O
print	O	O
sys.stdout.encoding	B-API	O
;	O	O
\	O	O
sys.stdout	O	O
=	O	O
codecs.getwriter	B-API	B-API
(	I-API	I-API
locale.getpreferredencoding	I-API	I-API
(	I-API	I-API
)	I-API	I-API
)	I-API	I-API
(	O	I-API
sys.stdout	B-API	I-API
)	O	I-API
;	O	O
\	O	O
line	O	O
=	O	O
u	O	O
''	O	O
\u0411\n	O	O
''	O	O
;	O	O
print	O	O
type	B-API	O
(	I-API	O
line	I-API	O
)	O	O
,	O	O
len	B-API	O
(	I-API	O
line	I-API	O
)	I-API	O
;	O	O
\	O	O
sys.stdout.write	B-API	B-API
(	I-API	I-API
line	I-API	I-API
)	I-API	I-API
;	O	O
print	O	O
line'	O	O
UTF-8	O	O
type	O	O
'unicode	O	O
'	O	O
2	O	O
$	O	O
python	O	O
-c	O	O
'import	O	O
sys	O	O
,	O	O
codecs	O	O
,	O	O
locale	O	O
;	O	O
print	O	O
sys.stdout.encoding	B-API	O
;	O	O
\	O	O
sys.stdout	O	O
=	O	O
codecs.getwriter	B-API	B-API
(	O	I-API
locale.getpreferredencoding	B-API	I-API
(	I-API	I-API
)	I-API	I-API
)	O	I-API
(	O	I-API
sys.stdout	B-API	I-API
)	O	I-API
;	O	O
\	O	O
line	O	O
=	O	O
u	O	O
''	O	O
\u0411\n	O	O
''	O	O
;	O	O
print	O	O
type	B-API	O
(	I-API	O
line	I-API	O
)	I-API	O
,	O	O
len	B-API	O
(	I-API	O
line	I-API	O
)	I-API	O
;	O	O
\	O	O
sys.stdout.write	B-API	B-API
(	I-API	I-API
line	I-API	I-API
)	I-API	I-API
;	O	O
print	O	O
line	O	O
'	O	O
|	O	O
cat	O	O
None	O	O
type	O	O
'unicode	O	O
'	O	O
2	O	O
There	O	O
's	O	O
some	O	O
more	O	O
information	O	O
on	O	O
that	O	O
page	O	O
,	O	O
well	O	O
worth	O	O
a	O	O
read	O	O
.	O	O
Build	O	O
a	O	O
time	O	O
machine	O	O
and	O	O
go	O	O
back	O	O
to	O	O
1987	O	O
?	O	O
Ho	O	O
ho	O	O
.	O	O
Ok	O	O
,	O	O
no	O	O
more	O	O
snarky	O	O
comments	O	O
.	O	O
How	O	O
do	O	O
I	O	O
figure	O	O
out	O	O
what	O	O
the	O	O
configuration	O	O
settings	O	O
(	O	O
e.g	O	O
.	O	O
baud	O	O
rate	O	O
)	O	O
should	O	O
be	O	O
...	O	O
Read	O	O
the	O	O
datasheet	O	O
?	O	O
Ok	O	O
,	O	O
ok	O	O
.	O	O
Seriously	O	O
,	O	O
last	O	O
one	O	O
.	O	O
If	O	O
you	O	O
do	O	O
n't	O	O
know	O	O
the	O	O
baud	O	O
rate	O	O
of	O	O
the	O	O
device	O	O
you	O	O
are	O	O
trying	O	O
to	O	O
communicate	O	O
with	O	O
,	O	O
you	O	O
have	O	O
two	O	O
choices	O	O
.	O	O
Start	O	O
guessing	O	O
,	O	O
or	O	O
possibly	O	O
bust	O	O
out	O	O
an	O	O
o-scope	O	O
.	O	O
If	O	O
you	O	O
need	O	O
a	O	O
good	O	O
starting	O	O
point	O	O
,	O	O
let	O	O
me	O	O
suggest	O	O
9600-8-N-1	O	O
.	O	O
My	O	O
suspicion	O	O
is	O	O
you	O	O
can	O	O
get	O	O
there	O	O
with	O	O
brute	O	O
force	O	O
relatively	O	O
quickly	O	O
.	O	O
There	O	O
's	O	O
a	O	O
third	O	O
option	O	O
of	O	O
having	O	O
an	O	O
old-school	O	O
ninja	O	O
who	O	O
can	O	O
tell	O	O
just	O	O
by	O	O
the	O	O
LOOK	O	O
of	O	O
the	O	O
garbled	O	O
characters	O	O
at	O	O
some	O	O
standard	O	O
baud	O	O
rate	O	O
what	O	O
actual	O	O
baud	O	O
rate	O	O
is	O	O
.	O	O
An	O	O
impressive	O	O
party	O	O
trick	O	O
to	O	O
be	O	O
sure	O	O
.	O	O
Hopefully	O	O
though	O	O
you	O	O
have	O	O
access	O	O
to	O	O
this	O	O
information	O	O
.	O	O
In	O	O
unix/linux	O	O
,	O	O
you	O	O
can	O	O
get	O	O
ahold	O	O
of	O	O
minicom	O	O
to	O	O
play	O	O
with	O	O
the	O	O
serial	O	O
port	O	O
directly	O	O
.	O	O
This	O	O
should	O	O
make	O	O
it	O	O
fairly	O	O
quick	O	O
to	O	O
get	O	O
the	O	O
configuration	O	O
figured	O	O
out	O	O
.	O	O
one	O	O
of	O	O
the	O	O
major	O	O
Unix	O	O
shells	O	O
In	O	O
Unix	O	O
the	O	O
serial	O	O
port	O	B-API
(	O	I-API
s	O	I-API
)	O	I-API
is/are	O	O
file-mapped	O	O
into	O	O
the	O	O
/dev/	O	O
subdir	O	O
.	O	O
ttyS0	O	O
,	O	O
for	O	O
example	O	O
.	O	O
If	O	O
you	O	O
setup	O	O
the	O	O
correct	O	O
baud	O	O
rate	O	O
and	O	O
whatnot	O	O
using	O	O
minicom	O	O
,	O	O
you	O	O
can	O	O
even	O	O
cat	O	O
stuff	O	O
to	O	O
that	O	O
file	O	O
to	O	O
send	O	O
stuff	O	O
out	O	O
there	O	O
.	O	O
On	O	O
to	O	O
the	O	O
meat	O	O
of	O	O
the	O	O
question	O	O
,	O	O
you	O	O
can	O	O
access	O	O
it	O	O
programmatically	O	O
through	O	O
the	O	O
POSIX	O	O
headers	O	O
.	O	O
termios.h	O	O
is	O	O
the	O	O
big	O	O
one	O	O
.	O	O
See	O	O
:	O	O
http	O	O
:	O	O
//www.easysw.com/~mike/serial/serial.html	O	O
#	O	O
3_1	O	O
(	O	O
NOT	O	O
AVAILABLE	O	O
ANYMORE	O	O
)	O	O
but	O	O
I	O	O
also	O	O
have	O	O
some	O	O
interest	O	O
in	O	O
serial	O	O
programming	O	O
using	O	O
Windows/Hyperterminal	O	O
.	O	O
Hyperterminal	O	O
and	O	O
minicom	O	O
are	O	O
basically	O	O
the	O	O
same	O	O
program	O	O
.	O	O
As	O	O
for	O	O
how	O	O
Windows	O	O
let	O	O
's	O	O
you	O	O
get	O	O
access	O	O
to	O	O
the	O	O
serial	O	O
port	O	O
,	O	O
I	O	O
'll	O	O
leave	O	O
that	O	O
question	O	O
for	O	O
someone	O	O
else	O	O
.	O	O
I	O	O
have	O	O
n't	O	O
done	O	O
that	O	O
in	O	O
Windows	O	O
since	O	O
the	O	O
Win95	O	O
days	O	O
.	O	O
From	O	O
the	O	O
other	O	O
side	O	O
,	O	O
if	O	O
you	O	O
want	O	O
to	O	O
do	O	O
it	O	O
using	O	O
C	O	O
#	O	O
,	O	O
which	O	O
will	O	O
run	O	O
on	O	O
both	O	O
Windows	O	O
and	O	O
Linux	O	O
--	O	O
with	O	O
some	O	O
limitations	O	O
(	O	O
EDIT	O	O
:	O	O
which	O	O
may	O	O
be	O	O
out	O	O
of	O	O
date	O	O
.	O	O
I	O	O
have	O	O
no	O	O
way	O	O
to	O	O
test	O	O
it.	O	O
)	O	O
.	O	O
Just	O	O
create	O	O
a	O	O
SerialPort	O	O
object	O	O
,	O	O
set	O	O
its	O	O
baudrate	O	O
,	O	O
port	O	O
and	O	O
any	O	O
other	O	O
odd	O	O
settings	O	O
,	O	O
call	O	O
open	O	O
on	O	O
it	O	O
,	O	O
and	O	O
write	O	O
out	O	O
your	O	O
byte	O	O
[	O	O
]	O	O
s.	O	O
After	O	O
all	O	O
the	O	O
setup	O	O
,	O	O
the	O	O
SerialPort	O	O
object	O	O
acts	O	O
very	O	O
similar	O	O
to	O	O
any	O	O
networked	O	O
stream	O	O
,	O	O
so	O	O
it	O	O
should	O	O
be	O	O
easy	O	O
enough	O	O
to	O	O
figure	O	O
out	O	O
.	O	O
And	O	O
as	O	O
ibrandy	O	O
states	O	O
,	O	O
you	O	O
need	O	O
to	O	O
know	O	O
all	O	O
these	O	O
settings	O	O
,	O	O
like	O	O
baud	O	O
rate	O	O
,	O	O
before	O	O
you	O	O
even	O	O
start	O	O
attempting	O	O
to	O	O
communicate	O	O
to	O	O
any	O	O
serial	O	O
device	O	O
.	O	O
At	O	O
work	O	O
we	O	O
use	O	O
teraterm	O	O
and	O	O
realterm	O	O
for	O	O
checking	O	O
serial	O	O
data	O	O
is	O	O
correctly	O	O
formatted	O	O
.	O	O
Also	O	O
we	O	O
have	O	O
a	O	O
hardware	O	O
splitter	O	O
with	O	O
a	O	O
switch	O	O
so	O	O
we	O	O
can	O	O
monitor	O	O
traffic	O	O
to	O	O
our	O	O
application	O	O
via	O	O
a	O	O
cable	O	O
back	O	O
to	O	O
another	O	O
port	O	O
.	O	O
Windows	O	O
allows	O	O
you	O	O
access	O	O
to	O	O
the	O	O
serial	O	O
port	O	O
via	O	O
CreateFile	O	O
.	O	O
That	O	O
gives	O	O
you	O	O
a	O	O
handle	O	O
and	O	O
from	O	O
there	O	O
you	O	O
can	O	O
configure	O	O
access	O	O
.	O	O
From	O	O
Java	O	O
the	O	O
rxtx	O	B-API
(	O	I-API
NOT	O	I-API
AVAILABLE	O	I-API
ANYMORE	O	I-API
)	O	I-API
library	O	O
is	O	O
quite	O	O
good	O	O
.	O	O
It	O	O
picks	O	O
up	O	O
where	O	O
Sun	O	O
's	O	O
serial	O	O
IO	O	O
framework	O	O
left	O	O
off	O	O
.	O	O
There	O	O
are	O	O
two	O	O
main	O	O
ways	O	O
of	O	O
running	O	O
Python	O	O
on	O	O
Apache	O	O
.	O	O
The	O	O
simplest	O	O
would	O	O
be	O	O
to	O	O
use	O	O
CGI	O	O
and	O	O
write	O	O
normal	O	O
Python	O	O
scripts	O	O
while	O	O
the	O	O
second	O	O
is	O	O
using	O	O
a	O	O
web	O	O
framework	O	O
like	O	O
Django	O	O
or	O	O
Pylons	O	O
.	O	O
Using	O	O
CGI	O	O
is	O	O
straightforward	O	O
.	O	O
Make	O	O
sure	O	O
your	O	O
Apache	O	O
config	O	O
file	O	O
has	O	O
a	O	O
cgi-bin	O	O
set	O	O
up	O	O
.	O	O
If	O	O
not	O	O
,	O	O
follow	O	O
their	O	O
documentation	O	O
(	O	O
http	O	O
:	O	O
//httpd.apache.org/docs/2.0/howto/cgi.html	O	O
)	O	O
.	O	O
At	O	O
that	O	O
point	O	O
all	O	O
you	O	O
need	O	O
to	O	O
do	O	O
is	O	O
place	O	O
your	O	O
Python	O	O
scripts	O	O
in	O	O
the	O	O
cgi-bin	O	O
directory	O	O
and	O	O
the	O	O
standard	O	O
output	O	O
will	O	O
become	O	O
the	O	O
HTTP	O	O
response	O	O
.	O	O
Refer	O	O
to	O	O
Python	O	O
's	O	O
documentation	O	O
for	O	O
further	O	O
info	O	O
(	O	O
https	O	O
:	O	O
//docs.python.org/library/cgi.html	O	O
)	O	O
.	O	O
If	O	O
you	O	O
want	O	O
to	O	O
use	O	O
a	O	O
web	O	O
framework	O	O
you	O	O
'll	O	O
need	O	O
to	O	O
setup	O	O
mod_python	O	O
or	O	O
FastCGI	O	O
.	O	O
These	O	O
steps	O	O
are	O	O
dependent	O	O
on	O	O
which	O	O
framework	O	O
you	O	O
want	O	O
to	O	O
use	O	O
.	O	O
Django	O	O
provides	O	O
clear	O	O
instructions	O	O
on	O	O
how	O	O
to	O	O
setup	O	O
mod_python	O	O
and	O	O
Django	O	O
with	O	O
Apache	O	B-API
(	O	I-API
http	O	I-API
:	O	I-API
//www.djangoproject.com/documentation/modpython/	O	I-API
)	O	I-API
Yes	O	O
,	O	O
mod_python	O	O
is	O	O
pretty	O	O
confusing	O	O
to	O	O
set	O	O
up	O	O
.	O	O
Here	O	O
's	O	O
how	O	O
I	O	O
did	O	O
it	O	O
.	O	O
In	O	O
httpd.conf	O	B-API
:	O	O
LoadModule	O	O
python_module	O	O
modules/mod_python.soDirectory	O	O
``	O	O
/serverbase/htdocs/myapp	O	O
''	O	O
AddHandler	O	O
mod_python	O	O
.py	O	O
PythonHandler	O	O
myapp	O	O
PythonDebug	O	O
and	O	O
in	O	O
your	O	O
application	O	O
directory	O	O
:	O	O
$	O	O
/serverbase/htdocs/myapp	O	O
$	O	O
ls	O	O
-ltotal	O	O
16-r-xr-xr-x	O	O
1	O	O
root	O	O
sys	O	O
6484	O	O
May	O	O
21	O	O
15:54	O	O
Repeat	O	O
the	O	O
configuration	O	O
for	O	O
each	O	O
python	O	O
program	O	O
you	O	O
wish	O	O
to	O	O
have	O	O
running	O	O
under	O	O
mod_python	O	O
.	O	O
Are	O	O
you	O	O
running	O	O
Python	O	O
on	O	O
UNIX	O	O
or	O	O
Windows	O	O
?	O	O
An	O	O
alternative	O	O
to	O	O
mod_python	O	O
and	O	O
FastCGI	O	O
is	O	O
mod_wsgi	O	O
.	O	O
You	O	O
can	O	O
find	O	O
out	O	O
more	O	O
at	O	O
modwsgi	O	O
I	O	O
have	O	O
built	O	O
and	O	O
installed	O	O
this	O	O
on	O	O
Solaris	O	O
without	O	O
problems	O	O
.	O	O
I	O	O
had	O	O
previously	O	O
tried	O	O
mod_python	O	O
but	O	O
ran	O	O
into	O	O
problems	O	O
with	O	O
shared	O	O
libraries	O	O
as	O	O
part	O	O
of	O	O
the	O	O
build	O	O
.	O	O
There	O	O
are	O	O
good	O	O
install	O	O
docs	O	O
available	O	O
.	O	O
Thxm	O	O
,	O	O
Mc	O	O
!	O	O
http	O	O
:	O	O
//asm.objectweb.org/	O	O
is	O	O
another	O	O
one	O	O
.	O	O
Excellent	O	O
documentation	O	O
on	O	O
byte	O	O
code	O	O
instrumentation	O	O
,	O	O
but	O	O
nothing	O	O
``	O	O
directly	O	O
''	O	O
aimed	O	O
at	O	O
writing	O	O
a	O	O
coverage	O	O
tool	O	O
-	O	O
just	O	O
some	O	O
hints	O	O
or	O	O
ideas	O	O
.	O	O
Absolutely	O	O
.	O	O
When	O	O
nobody	O	O
knows	O	O
the	O	O
low	O	O
level	O	O
,	O	O
who	O	O
will	O	O
update	O	O
and	O	O
write	O	O
the	O	O
high	O	O
level	O	O
languages	O	O
?	O	O
Also	O	O
,	O	O
when	O	O
you	O	O
understand	O	O
the	O	O
low	O	O
level	O	O
stuff	O	O
,	O	O
you	O	O
can	O	O
write	O	O
more	O	O
efficient	O	O
code	O	O
in	O	O
a	O	O
higher	O	O
level	O	O
language	O	O
,	O	O
and	O	O
also	O	O
debug	O	O
more	O	O
efficiently	O	O
.	O	O
Learning	O	O
C	O	O
or	O	O
a	O	O
lower	O	O
level	O	O
language	O	O
can	O	O
definitely	O	O
be	O	O
useful	O	O
.	O	O
However	O	O
,	O	O
I	O	O
do	O	O
n't	O	O
see	O	O
any	O	O
obvious	O	O
advantage	O	O
in	O	O
using	O	O
the	O	O
unmanaged	O	O
WinAPI	B-API	O
.	O	O
I	O	O
've	O	O
seen	O	O
low	O	O
level	O	O
Windows	B-API	O
API	I-API	O
code	O	O
...	O	O
it	O	O
ai	O	O
n't	O	O
pretty	O	O
...	O	O
I	O	O
wish	O	O
I	O	O
could	O	O
unlearn	O	O
it	O	O
.	O	O
I	O	O
think	O	O
it	O	O
benefits	O	O
to	O	O
learn	O	O
low	O	O
level	O	O
as	O	O
in	O	O
C	O	O
,	O	O
as	O	O
you	O	O
gain	O	O
a	O	O
better	O	O
understanding	O	O
of	O	O
the	O	O
hardware	O	O
architecture	O	O
and	O	O
how	O	O
all	O	O
that	O	O
stuff	O	O
works	O	O
.	O	O
Learning	O	O
old	O	O
Windows	O	O
API	O	O
...	O	O
I	O	O
think	O	O
that	O	O
stuff	O	O
can	O	O
be	O	O
left	O	O
to	O	O
the	O	O
people	O	O
at	O	O
Microsoft	O	O
who	O	O
may	O	O
need	O	O
to	O	O
learn	O	O
it	O	O
to	O	O
build	O	O
higher	O	O
level	O	O
languages	O	O
and	O	O
API	O	O
...	O	O
they	O	O
built	O	O
it	O	O
,	O	O
let	O	O
them	O	O
suffer	O	O
with	O	O
it	O	O
;	O	O
-	O	O
)	O	O
However	O	O
,	O	O
if	O	O
you	O	O
happen	O	O
to	O	O
find	O	O
a	O	O
situation	O	O
where	O	O
you	O	O
feel	O	O
you	O	O
just	O	O
ca	O	O
n't	O	O
do	O	O
what	O	O
you	O	O
need	O	O
to	O	O
do	O	O
in	O	O
a	O	O
higher	O	O
level	O	O
language	O	O
(	O	O
few	O	O
and	O	O
far	O	O
between	O	O
)	O	O
,	O	O
then	O	O
perhaps	O	O
start	O	O
the	O	O
dangerous	O	O
dive	O	O
into	O	O
that	O	O
world	O	O
.	O	O
The	O	O
native	O	O
APIs	O	O
are	O	O
the	O	O
``	O	O
real	O	O
''	O	O
operating	O	O
system	O	O
APIs	O	O
.	O	O
The	O	O
.NET	O	O
library	O	O
is	O	O
(	O	O
with	O	O
few	O	O
exceptions	O	O
)	O	O
nothing	O	O
more	O	O
than	O	O
a	O	O
fancy	O	O
wrapper	O	O
around	O	O
them	O	O
.	O	O
So	O	O
yes	O	O
,	O	O
I	O	O
'd	O	O
say	O	O
that	O	O
anybody	O	O
who	O	O
can	O	O
understand	O	O
.NET	O	O
with	O	O
all	O	O
its	O	O
complexity	O	O
,	O	O
can	O	O
understand	O	O
relatively	O	O
mundane	O	O
things	O	O
like	O	O
talking	O	O
to	O	O
the	O	O
API	O	O
without	O	O
the	O	O
benefit	O	O
of	O	O
a	O	O
middle-man	O	O
.	O	O
Just	O	O
try	O	O
to	O	O
do	O	O
DLL	O	O
Injection	O	O
from	O	O
managed	O	O
code	O	O
.	O	O
It	O	O
ca	O	O
n't	O	O
be	O	O
done	O	O
.	O	O
You	O	O
will	O	O
be	O	O
forced	O	O
to	O	O
write	O	O
native	O	O
code	O	O
for	O	O
this	O	O
,	O	O
for	O	O
windowing	O	O
tweaks	O	O
,	O	O
for	O	O
real	O	O
subclassing	O	O
,	O	O
and	O	O
a	O	O
dozen	O	O
other	O	O
things	O	O
.	O	O
So	O	O
yes	O	O
:	O	O
you	O	O
should	O	O
(	O	O
must	O	O
)	O	O
know	O	O
both	O	O
.	O	O
Edit	O	O
:	O	O
even	O	O
if	O	O
you	O	O
plan	O	O
to	O	O
use	O	O
P/Invoke	O	O
.	O	O
This	O	O
question	O	O
is	O	O
bordering	O	O
on	O	O
religious	O	O
:	O	O
)	O	O
But	O	O
I	O	O
'll	O	O
give	O	O
my	O	O
thoughts	O	O
anyway	O	O
.	O	O
I	O	O
do	O	O
see	O	O
value	O	O
in	O	O
learing	O	O
the	O	O
Win32	B-API	B-API
API	I-API	I-API
.	O	O
Most	O	O
,	O	O
if	O	O
not	O	O
all	O	O
,	O	O
GUI	O	O
libraries	O	O
(	O	O
managed	O	O
or	O	O
unmanaged	O	O
)	O	O
result	O	O
in	O	O
calls	O	O
to	O	O
the	O	O
Win32	B-API	B-API
API	I-API	I-API
.	O	O
Even	O	O
the	O	O
most	O	O
thorough	O	O
libraries	O	O
do	O	O
n't	O	O
cover	O	O
100	O	O
%	O	O
of	O	O
the	O	O
API	O	O
,	O	O
and	O	O
hence	O	O
there	O	O
are	O	O
always	O	O
gaps	O	O
which	O	O
need	O	O
to	O	O
be	O	O
plugged	O	O
by	O	O
direct	O	O
API	O	O
calls	O	O
or	O	O
P/invoking	O	O
.	O	O
Some	O	O
of	O	O
the	O	O
names	O	O
of	O	O
the	O	O
wrappers	O	O
around	O	O
the	O	O
API	O	O
calls	O	O
have	O	O
similar	O	O
names	O	O
to	O	O
the	O	O
underlying	O	O
API	O	O
calls	O	O
,	O	O
but	O	O
those	O	O
names	O	O
are	O	O
n't	O	O
exactly	O	O
self-documenting	O	O
.	O	O
So	O	O
understanding	O	O
the	O	O
underlying	O	O
API	O	O
,	O	O
and	O	O
the	O	O
terminology	O	O
used	O	O
therein	O	O
,	O	O
will	O	O
aid	O	O
in	O	O
understanding	O	O
the	O	O
wrapper	O	O
APIs	O	O
and	O	O
what	O	O
they	O	O
actually	O	O
do	O	O
.	O	O
Plus	O	O
,	O	O
if	O	O
you	O	O
understand	O	O
the	O	O
nature	O	O
of	O	O
the	O	O
underlying	O	O
APIs	O	O
that	O	O
are	O	O
used	O	O
by	O	O
frameworks	O	O
,	O	O
then	O	O
you	O	O
will	O	O
make	O	O
better	O	O
choices	O	O
with	O	O
regards	O	O
to	O	O
which	O	O
library	O	O
functionality	O	O
you	O	O
should	O	O
use	O	O
in	O	O
a	O	O
given	O	O
scenario	O	O
.	O	O
Cheers	O	O
!	O	O
Analogy	O	O
:	O	O
If	O	O
you	O	O
build	O	O
cars	O	O
for	O	O
a	O	O
living	O	O
(	O	O
programming	O	O
)	O	O
,	O	O
then	O	O
its	O	O
very	O	O
pertinent	O	O
to	O	O
know	O	O
how	O	O
the	O	O
engine	O	O
works	O	O
(	O	O
Win32	O	O
)	O	O
.	O	O
Simple	O	O
answer	O	O
,	O	O
YES	O	O
.	O	O
Learning	O	O
a	O	O
new	O	O
programming	O	O
language	O	O
or	O	O
technology	O	O
is	O	O
for	O	O
one	O	O
of	O	O
three	O	O
reasons	O	O
:	O	O
1	O	O
.	O	O
Need	O	O
:	O	O
you	O	O
're	O	O
starting	O	O
a	O	O
project	O	O
for	O	O
building	O	O
a	O	O
web	O	O
application	O	O
and	O	O
you	O	O
do	O	O
n't	O	O
know	O	O
anything	O	O
about	O	O
ASP.NET	O	O
2	O	O
.	O	O
Enthusiasm	O	O
:	O	O
you	O	O
're	O	O
very	O	O
excited	O	O
about	O	O
ASP.NET	O	B-API
MVC	O	I-API
.	O	O
why	O	O
not	O	O
try	O	O
that	O	O
?	O	O
3	O	O
.	O	O
Free	O	O
time	O	O
:	O	O
but	O	O
who	O	O
has	O	O
that	O	O
anyway	O	O
.	O	O
The	O	O
best	O	O
reason	O	O
to	O	O
learn	O	O
something	O	O
new	O	O
is	O	O
Need	O	O
.	O	O
If	O	O
you	O	O
need	O	O
to	O	O
do	O	O
something	O	O
that	O	O
the	O	O
.NET	O	O
framework	O	O
ca	O	O
n't	O	O
do	O	O
(	O	O
like	O	O
performance	O	O
for	O	O
example	O	O
)	O	O
then	O	O
WinAPI	B-API	B-API
is	O	O
your	O	O
solution	O	O
.	O	O
Until	O	O
then	O	O
we	O	O
keep	O	O
ourself	O	O
busy	O	O
with	O	O
learning	O	O
about	O	O
.NET	O	O
It	O	O
's	O	O
important	O	O
to	O	O
know	O	O
what	O	O
is	O	O
available	O	O
with	O	O
the	O	O
Windows	O	O
API	O	O
.	O	O
I	O	O
do	O	O
n't	O	O
think	O	O
you	O	O
need	O	O
to	O	O
crank	O	O
out	O	O
code	O	O
with	O	O
it	O	O
,	O	O
but	O	O
you	O	O
should	O	O
know	O	O
how	O	O
it	O	O
works	O	O
.	O	O
The	O	O
.NET	O	O
Framework	O	O
contains	O	O
a	O	O
lot	O	O
of	O	O
functionality	O	O
,	O	O
but	O	O
it	O	O
does	O	O
n't	O	O
provide	O	O
managed	O	O
code	O	O
equivalents	O	O
for	O	O
the	O	O
entire	O	O
Windows	B-API	O
API	I-API	O
.	O	O
Sometimes	O	O
you	O	O
have	O	O
to	O	O
get	O	O
a	O	O
bit	O	O
closer	O	O
to	O	O
the	O	O
metal	O	O
,	O	O
and	O	O
knowing	O	O
what	O	O
's	O	O
down	O	O
there	O	O
and	O	O
how	O	O
it	O	O
behaves	O	O
will	O	O
give	O	O
you	O	O
a	O	O
better	O	O
understanding	O	O
of	O	O
how	O	O
to	O	O
use	O	O
it	O	O
.	O	O
For	O	O
most	O	O
needs	O	O
on	O	O
the	O	O
desktop	O	O
you	O	O
wont	O	O
need	O	O
to	O	O
know	O	O
the	O	O
Win32	O	B-API
,	O	O
however	O	O
there	O	O
is	O	O
a	O	O
LOT	O	O
of	O	O
Win32	O	O
not	O	O
in	O	O
.NET	O	O
,	O	O
but	O	O
it	O	O
is	O	O
in	O	O
the	O	O
outlaying	O	O
stuff	O	O
that	O	O
may	O	O
end	O	O
up	O	O
being	O	O
less	O	O
than	O	O
1	O	O
%	O	O
of	O	O
your	O	O
application	O	O
.	O	O
USB	O	O
support	O	O
,	O	O
HID	O	O
support	O	O
,	O	O
Windows	O	O
Media	O	O
Foundation	O	O
just	O	O
off	O	O
the	O	O
top	O	O
of	O	O
my	O	O
head	O	O
.	O	O
There	O	O
are	O	O
many	O	O
cool	O	O
Vista	B-API	O
API	I-API	O
's	O	O
only	O	O
available	O	O
from	O	O
Win32	O	O
.	O	O
You	O	O
will	O	O
do	O	O
yourself	O	O
a	O	O
large	O	O
favor	O	O
by	O	O
learning	O	O
how	O	O
to	O	O
do	O	O
interop	O	O
with	O	O
a	O	O
Win32	B-API	B-API
API	I-API	I-API
,	O	O
if	O	O
you	O	O
do	O	O
desktop	O	O
programing	O	O
,	O	O
because	O	O
when	O	O
you	O	O
do	O	O
need	O	O
to	O	O
call	O	O
Win32	O	B-API
,	O	O
and	O	O
you	O	O
will	O	O
,	O	O
you	O	O
wo	O	O
n't	O	O
spend	O	O
weeks	O	O
scratching	O	O
your	O	O
head	O	O
.	O	O
You	O	O
could	O	O
always	O	O
do	O	O
this	O	O
:	O	O
string	O	B-API
[	O	I-API
]	O	I-API
temp	O	O
=	O	O
new	O	O
int	O	O
LastCount	O	O
=	O	O
mydict	O	O
[	O	O
temp	O	O
[	O	O
mydict.count	B-API	B-API
-	O	O
[	O	O
mydict.count	B-API	O
]	O	O
;	O	O
mydict.Keys.CopyTo	B-API	O
(	I-API	O
temp	I-API	O
,	I-API	O
0	I-API	O
)	I-API	O
But	O	O
I	O	O
would	O	O
n't	O	O
recommend	O	O
it	O	O
.	O	O
There	O	O
's	O	O
no	O	O
guarantee	O	O
that	O	O
the	O	O
last	O	O
inserted	O	O
key	O	O
will	O	O
be	O	O
at	O	O
the	O	O
end	O	O
of	O	O
the	O	O
array	O	O
.	O	O
The	O	O
ordering	O	O
for	O	O
Keys	O	O
on	O	O
MSDN	O	O
is	O	O
unspecified	O	O
,	O	O
and	O	O
subject	O	O
to	O	O
change	O	O
.	O	O
In	O	O
my	O	O
very	O	O
brief	O	O
test	O	O
,	O	O
it	O	O
does	O	O
seem	O	O
to	O	O
be	O	O
in	O	O
order	O	O
of	O	O
insertion	O	O
,	O	O
but	O	O
you	O	O
'd	O	O
be	O	O
better	O	O
off	O	O
building	O	O
in	O	O
proper	O	O
bookkeeping	O	O
like	O	O
a	O	O
stack	O	O
--	O	O
as	O	O
you	O	O
suggest	O	O
(	O	O
though	O	O
I	O	O
do	O	O
n't	O	O
see	O	O
the	O	O
need	O	O
of	O	O
a	O	O
struct	O	O
based	O	O
on	O	O
your	O	O
other	O	O
statements	O	O
)	O	O
--	O	O
or	O	O
single	O	O
variable	O	O
cache	O	O
if	O	O
you	O	O
just	O	O
need	O	O
to	O	O
know	O	O
the	O	O
latest	O	O
key	O	O
.	O	O
I	O	O
do	O	O
n't	O	O
know	O	O
if	O	O
this	O	O
would	O	O
work	O	O
because	O	O
I	O	O
'm	O	O
pretty	O	O
sure	O	O
that	O	O
the	O	O
keys	O	O
are	O	O
n't	O	O
stored	O	O
in	O	O
the	O	O
order	O	O
they	O	O
are	O	O
added	O	O
,	O	O
but	O	O
you	O	O
could	O	O
cast	O	O
the	O	O
KeysCollection	O	O
to	O	O
a	O	O
List	O	O
and	O	O
then	O	O
get	O	O
the	O	O
last	O	O
key	O	O
in	O	O
the	O	O
list	O	O
...	O	O
but	O	O
it	O	O
would	O	O
be	O	O
worth	O	O
having	O	O
a	O	O
look	O	O
.	O	O
The	O	O
only	O	O
other	O	O
thing	O	O
I	O	O
can	O	O
think	O	O
of	O	O
is	O	O
to	O	O
store	O	O
the	O	O
keys	O	O
in	O	O
a	O	O
lookup	O	O
list	O	O
and	O	O
add	O	O
the	O	O
keys	O	O
to	O	O
the	O	O
list	O	O
before	O	O
you	O	O
add	O	O
them	O	O
to	O	O
the	O	O
dictionary	O	O
...	O	O
it	O	O
's	O	O
not	O	O
pretty	O	O
tho	O	O
.	O	O
I	O	O
think	O	O
you	O	O
can	O	O
do	O	O
something	O	O
like	O	O
this	O	O
,	O	O
the	O	O
syntax	O	O
might	O	O
be	O	O
wrong	O	O
,	O	O
havent	O	O
used	O	O
C	O	O
#	O	O
in	O	O
a	O	O
while	O	O
To	O	O
get	O	O
the	O	O
last	O	O
item	O	O
Dictionarystring	O	O
,	O	O
int.KeyCollection	O	O
keys	O	O
=	O	O
mydict.keys	B-API	B-API
;	O	O
string	O	O
lastKey	O	O
=	O	O
keys.Last	B-API	B-API
(	I-API	I-API
)	I-API	I-API
;	O	O
or	O	O
use	O	O
Max	O	O
instead	O	O
of	O	O
Last	O	O
to	O	O
get	O	O
the	O	O
max	O	O
value	O	O
,	O	O
I	O	O
dont	O	O
know	O	O
which	O	O
one	O	O
fits	O	O
your	O	O
code	O	O
better	O	O
.	O	O
I	O	O
agree	O	O
with	O	O
the	O	O
second	O	O
part	O	O
of	O	O
Patrick	O	O
's	O	O
answer	O	O
.	O	O
Even	O	O
if	O	O
in	O	O
some	O	O
tests	O	O
it	O	O
seems	O	O
to	O	O
keep	O	O
insertion	O	O
order	O	O
,	O	O
the	O	O
documentation	O	O
(	O	O
and	O	O
normal	O	O
behavior	O	O
for	O	O
dictionaries	O	O
and	O	O
hashes	O	O
)	O	O
explicitly	O	O
states	O	O
the	O	O
ordering	O	O
is	O	O
unspecified	O	O
.	O	O
You	O	O
're	O	O
just	O	O
asking	O	O
for	O	O
trouble	O	O
depending	O	O
on	O	O
the	O	O
ordering	O	O
of	O	O
the	O	O
keys	O	O
.	O	O
Add	O	O
your	O	O
own	O	O
bookkeeping	O	O
(	O	O
as	O	O
Patrick	O	O
said	O	O
,	O	O
just	O	O
a	O	O
single	O	O
variable	O	O
for	O	O
the	O	O
last	O	O
added	O	O
key	O	O
)	O	O
to	O	O
be	O	O
sure	O	O
.	O	O
Also	O	O
,	O	O
do	O	O
n't	O	O
be	O	O
tempted	O	O
by	O	O
all	O	O
the	O	O
methods	O	O
such	O	O
as	O	O
Last	O	O
and	O	O
Max	O	O
on	O	O
the	O	O
dictionary	O	O
as	O	O
those	O	O
are	O	O
probably	O	O
in	O	O
relation	O	O
to	O	O
the	O	O
key	O	O
comparator	O	O
(	O	O
I	O	O
'm	O	O
not	O	O
sure	O	O
about	O	O
that	O	O
)	O	O
.	O	O
The	O	O
way	O	O
you	O	O
worded	O	O
the	O	O
question	O	O
leads	O	O
me	O	O
to	O	O
believe	O	O
that	O	O
the	O	O
int	O	O
in	O	O
the	O	O
Dictionary	O	O
contains	O	O
the	O	O
item	O	O
's	O	O
``	O	O
position	O	O
''	O	O
on	O	O
the	O	O
Dictionary	O	O
.	O	O
Judging	O	O
from	O	O
the	O	O
assertion	O	O
that	O	O
the	O	O
keys	O	O
are	O	O
n't	O	O
stored	O	O
in	O	O
the	O	O
order	O	O
that	O	O
they	O	O
're	O	O
added	O	O
,	O	O
if	O	O
this	O	O
is	O	O
correct	O	O
,	O	O
that	O	O
would	O	O
mean	O	O
that	O	O
keys.Count	B-API	O
(	O	O
or	O	O
.Count	O	O
-	O	O
1	O	O
,	O	O
if	O	O
you	O	O
're	O	O
using	O	O
zero-based	O	O
)	O	O
should	O	O
still	O	O
always	O	O
be	O	O
the	O	O
number	O	O
of	O	O
the	O	O
last-entered	O	O
key	O	O
?	O	O
If	O	O
that	O	O
's	O	O
correct	O	O
,	O	O
is	O	O
there	O	O
any	O	O
reason	O	O
you	O	O
ca	O	O
n't	O	O
instead	O	O
use	O	O
Dictionaryint	O	O
,	O	O
string	O	O
so	O	O
that	O	O
you	O	O
can	O	O
use	O	O
mydict	O	O
[	O	O
mydict.Keys.Count	B-API	B-API
]	O	O
?	O	O
Why	O	O
do	O	O
n't	O	O
you	O	O
just	O	O
extend	O	O
the	O	O
dictionary	O	O
class	O	O
to	O	O
add	O	O
in	O	O
a	O	O
last	O	O
key	O	O
inserted	O	O
property	O	O
.	O	O
Something	O	O
like	O	O
the	O	O
following	O	O
maybe	O	O
?	O	O
public	O	O
class	O	O
ExtendedDictionary	O	O
:	O	O
Dictionarystring	O	O
,	O	O
int	O	O
{	O	O
private	O	O
int	O	O
lastKeyInserted	O	O
=	O	O
-1	O	O
;	O	O
public	O	O
int	O	O
LastKeyInserted	O	O
{	O	O
get	O	O
{	O	O
return	O	O
lastKeyInserted	O	O
;	O	O
}	O	O
set	O	O
{	O	O
lastKeyInserted	O	O
=	O	O
value	O	O
;	O	O
}	O	O
}	O	O
public	O	O
void	O	O
AddNew	O	O
(	O	O
string	O	O
s	O	O
,	O	O
int	O	O
i	O	O
)	O	O
{	O	O
lastKeyInserted	O	O
=	O	O
i	O	O
;	O	O
base.Add	O	B-API
(	O	I-API
s	O	I-API
,	O	I-API
i	O	I-API
)	O	I-API
;	O	O
}	O	O
}	O	O
You	O	O
can	O	O
use	O	O
an	O	O
OrderedDictionary	O	O
.	O	O
Represents	O	O
a	O	O
collection	O	O
of	O	O
key/value	O	O
pairs	O	O
that	O	O
are	O	O
accessible	O	O
by	O	O
the	O	O
key	O	O
or	O	O
index	O	O
.	O	O
I	O	O
know	O	O
that	O	O
if	O	O
you	O	O
use	O	O
a	O	O
paging	O	O
repeater	O	O
or	O	O
gridview	O	O
with	O	O
the	O	O
linqdatasource	O	O
it	O	O
will	O	O
automatically	O	O
optimize	O	O
the	O	O
number	O	O
of	O	O
results	O	O
returned	O	O
,	O	O
but	O	O
I	O	O
'm	O	O
also	O	O
pretty	O	O
sure	O	O
in	O	O
the	O	O
datasource	O	O
wizard	O	O
you	O	O
can	O	O
go	O	O
to	O	O
advanced	O	O
options	O	O
and	O	O
limit	O	O
it	O	O
to	O	O
SELECT	O	O
TOP	O	O
3	O	O
FROM	O	O
which	O	O
should	O	O
allow	O	O
you	O	O
to	O	O
do	O	O
what	O	O
you	O	O
need	O	O
For	O	O
C++	O	O
,	O	O
a	O	O
map	O	O
works	O	O
well	O	O
.	O	O
Several	O	O
million	O	O
objects	O	O
wo	O	O
n't	O	O
be	O	O
a	O	O
problem	O	O
.	O	O
10	O	O
million	O	O
items	O	O
took	O	O
about	O	O
4.4	O	O
seconds	O	O
and	O	O
about	O	O
57	O	O
meg	O	O
on	O	O
my	O	O
computer	O	O
.	O	O
#	O	O
include	O	O
stdio.h	O	O
#	O	O
include	O	O
stdlib.h	O	O
#	O	O
include	O	O
map	O	O
class	O	O
triple	O	O
{	O	O
public	O	O
:	O	O
int	O	O
x	O	O
;	O	O
int	O	O
y	O	O
;	O	O
int	O	O
z	O	O
;	O	O
bool	O	O
operator	O	O
(	O	O
const	O	B-API
triple	O	I-API
other	O	I-API
)	O	I-API
const	O	O
{	O	O
if	O	O
(	O	O
x	O	O
other.x	O	O
)	O	O
return	O	O
true	O	O
;	O	O
if	O	O
(	O	O
other.x	O	O
x	O	O
)	O	O
return	O	O
false	O	O
;	O	O
if	O	O
(	O	O
y	O	O
other.y	O	O
)	O	O
return	O	O
true	O	O
;	O	O
if	O	B-API
(	O	I-API
other.y	O	I-API
y	O	I-API
)	O	I-API
return	O	O
false	O	O
;	O	O
return	O	O
z	O	O
other.z	O	O
;	O	O
}	O	O
}	O	O
;	O	O
int	O	O
main	O	O
(	O	O
int	O	O
,	O	O
char**	O	O
)	O	O
{	O	O
std	O	O
:	O	O
:maptriple	O	O
,	O	O
int	O	O
data	O	O
;	O	O
triple	O	O
point	O	O
;	O	O
int	O	O
i	O	O
;	O	O
for	O	O
(	O	O
i	O	O
=	O	O
0	O	O
;	O	O
i	O	O
10000000	O	O
;	O	O
++i	O	O
)	O	O
{	O	O
point.x	O	O
=	O	O
rand	O	B-API
(	O	I-API
)	O	I-API
;	O	O
point.y	O	O
=	O	O
rand	O	B-API
(	O	I-API
)	O	I-API
;	O	O
point.z	O	O
=	O	O
rand	B-API	B-API
(	I-API	I-API
)	I-API	I-API
;	O	O
//printf	O	O
(	O	O
``	O	O
%	O	O
d	O	O
%	O	O
d	O	O
%	O	O
d	O	O
%	O	O
d\n	O	O
''	O	O
,	O	O
i	O	O
,	O	O
point.x	O	O
,	O	O
point.y	O	O
,	O	O
point.z	O	O
)	O	O
;	O	O
data	O	O
[	O	O
point	O	O
]	O	O
=	O	O
i	O	O
;	O	O
}	O	O
return	O	O
0	O	O
;	O	O
}	O	O
For	O	O
multiple	O	O
variables	O	O
:	O	O
The	O	O
easiest	O	O
way	O	O
is	O	O
to	O	O
make	O	O
the	O	O
index	O	O
a	O	O
string	O	O
,	O	O
and	O	O
then	O	O
make	O	O
the	O	O
index	O	O
strings	O	O
look	O	O
like	O	O
``	O	O
23,55	O	O
''	O	O
(	O	O
2	O	O
vars	O	O
)	O	O
or	O	O
``	O	O
34,45,56	O	O
''	O	O
(	O	O
3	O	O
vars	O	O
)	O	O
:	O	O
std	O	O
:	O	O
:map	O	O
datastring	O	O
,	O	O
int	O	O
data	O	O
;	O	O
char	O	O
ix	O	O
[	O	O
100	O	O
]	O	O
;	O	O
sprintf	B-API	O
(	I-API	O
ix	I-API	O
,	I-API	O
``	I-API	O
%	I-API	O
d	I-API	O
,	I-API	O
%	I-API	O
d	I-API	O
''	I-API	O
,	I-API	O
x	I-API	O
,	I-API	O
y	I-API	O
)	I-API	O
;	O	O
//	O	O
2	O	O
vars	O	O
data	O	O
[	O	O
ix	O	O
]	O	O
=	O	O
i	O	O
;	O	O
sprintf	B-API	O
(	I-API	O
ix	I-API	O
,	I-API	O
``	I-API	O
%	I-API	O
d	I-API	O
,	I-API	O
%	I-API	O
d	I-API	O
,	I-API	O
%	I-API	O
d	I-API	O
''	I-API	O
,	I-API	O
x	I-API	O
,	I-API	O
y	I-API	O
,	I-API	O
z	I-API	O
)	I-API	O
;	O	O
//	O	O
3	O	O
vars	O	O
data	O	O
[	O	O
ix	O	O
]	O	O
=	O	O
i	O	O
;	O	O
Hash	O	O
tables	O	O
have	O	O
a	O	O
fast	O	O
insertion	O	O
and	O	O
look	O	O
up	O	O
.	O	O
You	O	O
could	O	O
write	O	O
a	O	O
simple	O	O
hash	O	O
function	O	O
since	O	O
you	O	O
know	O	O
you	O	O
'd	O	O
be	O	O
dealing	O	O
with	O	O
only	O	O
integer	O	O
pairs	O	O
as	O	O
the	O	O
keys	O	O
.	O	O
For	O	O
multiple	O	O
variables	O	O
:	O	O
The	O	O
easiest	O	O
way	O	O
is	O	O
to	O	O
make	O	O
the	O	O
index	O	O
a	O	O
string	O	O
,	O	O
and	O	O
then	O	O
make	O	O
the	O	O
index	O	O
strings	O	O
look	O	O
like	O	O
``	O	O
23,55	O	O
''	O	O
(	O	O
2	O	O
vars	O	O
)	O	O
or	O	O
``	O	O
34,45,56	O	O
''	O	O
(	O	O
3	O	O
vars	O	O
)	O	O
:	O	O
std	O	O
:	O	O
:map	O	O
datastring	O	O
,	O	O
int	O	O
data	O	O
;	O	O
char	O	O
ix	O	O
[	O	O
100	O	O
]	O	O
;	O	O
sprintf	B-API	O
(	I-API	O
ix	I-API	O
,	I-API	O
``	I-API	O
%	I-API	O
d	I-API	O
,	I-API	O
%	I-API	O
d	I-API	O
''	I-API	O
,	I-API	O
x	I-API	O
,	I-API	O
y	I-API	O
)	I-API	O
;	O	O
//	O	O
2	O	O
vars	O	O
data	O	O
[	O	O
ix	O	O
]	O	O
=	O	O
i	O	O
;	O	O
sprintf	B-API	O
(	I-API	O
ix	I-API	O
,	I-API	O
``	I-API	O
%	I-API	O
d	I-API	O
,	I-API	O
%	I-API	O
d	I-API	O
,	I-API	O
%	I-API	O
d	I-API	O
''	I-API	O
,	I-API	O
x	I-API	O
,	I-API	O
y	I-API	O
,	I-API	O
z	I-API	O
)	I-API	O
;	O	O
//	O	O
3	O	O
vars	O	O
data	O	O
[	O	O
ix	O	O
]	O	O
=	O	O
i	O	O
;	O	O
The	O	O
best	O	O
way	O	O
to	O	O
implement	O	O
sparse	O	O
matrices	O	O
is	O	O
to	O	O
not	O	O
to	O	O
implement	O	O
them	O	O
-	O	O
atleast	O	O
not	O	O
on	O	O
your	O	O
own	O	O
.	O	O
I	O	O
would	O	O
suggest	O	O
to	O	O
BLAS	B-API	O
(	O	O
which	O	O
I	O	O
think	O	O
is	O	O
a	O	O
part	O	O
of	O	O
LAPACK	B-API	O
)	O	O
which	O	O
can	O	O
handle	O	O
really	O	O
huge	O	O
matrices	O	O
.	O	O
I	O	O
've	O	O
had	O	O
no	O	O
trouble	O	O
using	O	O
the	O	O
BSD	O	O
sockets	O	O
API	O	O
in	O	O
C++	O	O
,	O	O
in	O	O
GNU/Linux	O	O
.	O	O
Here	O	O
's	O	O
the	O	O
sample	O	O
program	O	O
I	O	O
used	O	O
:	O	O
#	B-API	O
include	I-API	O
{	B-API	O
return	B-API	O
sys/socket.hintmain	B-API	B-API
(	I-API	I-API
)	I-API	I-API
So	O	O
my	O	O
take	O	O
on	O	O
this	O	O
is	O	O
that	O	O
z/OS	O	O
is	O	O
probably	O	O
the	O	O
complicating	O	O
factor	O	O
here	O	O
,	O	O
however	O	O
,	O	O
because	O	O
I	O	O
've	O	O
never	O	O
used	O	O
z/OS	O	O
before	O	O
,	O	O
much	O	O
less	O	O
programmed	O	O
in	O	O
it	O	O
,	O	O
I	O	O
ca	O	O
n't	O	O
say	O	O
this	O	O
definitively	O	O
.	O	O
:	O	O
-P	O	O
Sure	O	O
I	O	O
can	O	O
post	O	O
a	O	O
test	O	O
app	O	O
.	O	O
#	B-API	O
include	I-API	O
sys/socket.hint	B-API	O
{	B-API	O
return	B-API	O
main	B-API	B-API
(	I-API	I-API
)	I-API	I-API
Compile/Link	O	O
Output	O	O
:	O	O
cxx	O	O
-Wc	O	O
,	O	O
xplink	O	O
-Wl	O	O
,	O	O
xplink	O	O
-o	O	O
inet_test	O	O
inet.C	O	O
''	O	O
./inet.C	O	O
''	O	O
,	O	O
line	O	O
5.16	O	O
:	O	O
CCN5274	O	O
(	O	O
S	O	O
)	O	O
The	O	O
name	O	O
lookup	O	O
for	O	O
``	O	O
AF_INET	O	O
''	O	O
did	O	O
not	O	O
find	O	O
a	O	O
declaration	O	O
.	O	O
CCN0797	O	O
(	O	O
I	O	O
)	O	O
Compilation	O	O
failed	O	O
for	O	O
file	O	O
./inet.C	O	O
.	O	O
Object	O	O
file	O	O
not	O	O
created	O	O
.	O	O
A	O	O
check	O	O
of	O	O
sys/sockets.h	O	O
does	O	O
include	O	O
the	O	O
definition	O	O
I	O	O
need	O	O
,	O	O
and	O	O
as	O	O
far	O	O
as	O	O
I	O	O
can	O	O
tell	O	O
,	O	O
it	O	O
is	O	O
not	O	O
being	O	O
blocked	O	O
by	O	O
any	O	O
#	O	O
ifdef	O	O
statements	O	O
.	O	O
I	O	O
have	O	O
however	O	O
noticed	O	O
it	O	O
contains	O	O
a	O	O
the	O	O
following	O	O
:	O	O
#	)-API	O
ifdef	O	O
__cplusplus	O	O
extern	O	O
``	O	O
C	O	O
''	O	O
which	O	O
encapsulates	O	O
basically	O	O
the	O	O
whole	O	O
file	O	O
.	O	O
Not	O	O
sure	O	O
if	O	O
it	O	O
matters	O	O
.	O	O
@	O	O
Jax	O	O
:	O	O
The	O	O
extern	B-API	O
thing	O	O
matters	O	O
,	O	O
very	O	O
very	O	O
much	O	O
.	O	O
If	O	O
a	O	O
header	O	O
file	O	O
does	O	O
n't	O	O
have	O	O
one	O	O
,	O	O
then	O	O
(	O	O
unless	O	O
it	O	O
's	O	O
a	O	O
C++-only	O	O
header	O	O
file	O	O
)	O	O
,	O	O
you	O	O
would	O	O
have	O	O
to	O	O
enclose	O	O
your	O	O
with	O	O
it	O	O
:	O	O
extern	B-API	O
``	B-API	O
C	I-API	O
''	I-API	O
{	B-API	O
#	I-API	O
include	I-API	O
sys/socket.h//	B-API	O
include	B-API	O
other	B-API	O
similarly	B-API	O
non-compliant	B-API	O
header	B-API	O
Basically	O	O
,	O	O
anytime	O	O
where	O	O
a	O	O
C++	O	O
program	O	O
wants	O	O
to	O	O
link	O	O
to	O	O
C-based	O	O
facilities	O	O
,	O	O
the	O	O
extern	B-API	O
is	O	O
vital	O	O
.	O	O
In	O	O
practical	O	O
terms	O	O
,	O	O
it	O	O
means	O	O
that	O	O
the	O	O
names	O	O
used	O	O
in	O	O
external	O	O
references	O	O
will	O	O
not	O	O
be	O	O
mangled	O	O
,	O	O
like	O	O
normal	O	O
C++	O	O
names	O	O
would	O	O
.	O	O
Reference	O	O
.	O	O
You	O	O
can	O	O
add	O	O
a	O	O
mouse	O	O
click	O	O
event	O	O
to	O	O
the	O	O
TreeView	B-API	O
,	O	O
then	O	O
select	O	O
the	O	O
correct	O	O
node	O	O
using	O	O
GetNodeAt	O	O
given	O	O
the	O	O
mouse	O	O
coordinates	O	O
provided	O	O
by	O	O
the	O	O
MouseEventArgs	O	O
.	O	O
void	O	O
treeView1MouseUp	B-API	O
(	I-API	O
object	I-API	O
sender	I-API	O
,	I-API	O
MouseEventArgs	I-API	O
e	I-API	O
)	I-API	O
{	O	O
if	O	O
(	O	O
e.Button	O	O
==	O	O
MouseButtons.Right	B-API	B-API
)	O	O
{	O	O
//	O	O
Select	O	O
the	O	O
clicked	O	O
node	O	O
treeView1.SelectedNode	O	O
=	O	O
treeView1.GetNodeAt	O	O
(	O	O
e.X	O	O
,	O	O
e.Y	O	O
)	O	O
;	O	O
if	O	O
(	O	O
treeView1.SelectedNode	O	O
!	O	O
=	O	O
null	O	O
)	O	O
{	O	O
myContextMenuStrip.Show	B-API	B-API
(	I-API	I-API
treeView1	I-API	I-API
,	I-API	I-API
e.Location	I-API	I-API
)	I-API	I-API
;	O	O
}	O	O
}	O	O
}	O	O
If	O	O
you	O	O
want	O	O
the	O	O
context	O	O
menu	O	O
to	O	O
be	O	O
dependent	O	O
on	O	O
the	O	O
selected	O	O
item	O	O
you	O	O
're	O	O
best	O	O
move	O	O
I	O	O
think	O	O
is	O	O
to	O	O
use	O	O
Jonesinator	O	O
's	O	O
code	O	O
to	O	O
select	O	O
the	O	O
clicked	O	O
item	O	O
.	O	O
Your	O	O
context	O	O
menu	O	O
content	O	O
can	O	O
then	O	O
be	O	O
dependent	O	O
on	O	O
the	O	O
selected	O	O
item	O	O
.	O	O
Selecting	O	O
the	O	O
item	O	O
first	O	O
as	O	O
opposed	O	O
to	O	O
just	O	O
using	O	O
it	O	O
for	O	O
the	O	O
context	O	O
menu	O	O
gives	O	O
a	O	O
few	O	O
advantages	O	O
.	O	O
The	O	O
first	O	O
is	O	O
that	O	O
the	O	O
user	O	O
has	O	O
a	O	O
visual	O	O
indication	O	O
as	O	O
to	O	O
which	O	O
he	O	O
clicked	O	O
and	O	O
thus	O	O
which	O	O
item	O	O
the	O	O
menu	O	O
is	O	O
associated	O	O
with	O	O
.	O	O
The	O	O
second	O	O
is	O	O
that	O	O
this	O	O
way	O	O
it	O	O
's	O	O
a	O	O
hell	O	O
of	O	O
a	O	O
lot	O	O
easier	O	O
to	O	O
keep	O	O
compatible	O	O
with	O	O
other	O	O
methods	O	O
of	O	O
invoking	O	O
the	O	O
context	O	O
menu	O	O
(	O	O
e.g	O	O
.	O	O
keyboard	O	O
shortcuts	O	O
)	O	O
.	O	O
for	O	O
C	O	O
#	O	O
3.5	O	O
without	O	O
notifyicon	O	O
therefore	O	O
you	O	O
will	O	O
need	O	O
to	O	O
terminate	O	O
this	O	O
application	O	O
in	O	O
task	O	O
manager	O	O
manually	O	O
using	O	O
System	B-API	B-API
;	O	O
using	O	O
System.Drawing	B-API	B-API
;	O	O
using	O	O
;	O	O
static	O	O
class	O	O
Program	O	O
{	O	O
static	O	O
void	O	O
{	O	O
Timer	B-API	O
timer	O	O
=	O	O
new	O	O
;	O	O
//	O	O
timer.Interval	B-API	O
=	O	O
4	O	O
minutes	O	O
timer.Interval	B-API	B-API
=	O	O
;	O	O
timer.Tick	B-API	B-API
+=	O	O
(	O	O
sender	O	O
,	O	O
args	O	O
)	O	O
=	O	O
{	O	O
Cursor.Position	B-API	B-API
=	O	I-API
new	O	I-API
;	O	O
}	O	O
;	O	O
;	O	O
;	O	O
Main	O	O
(	O	O
)	O	O
Timer	B-API	O
(	I-API	O
)	I-API	O
int	O	O
)	O	O
(	O	O
TimeSpan.TicksPerMinute	B-API	O
*	O	O
4	O	O
/	O	O
TimeSpan.TicksPerMillisecond	B-API	B-API
)	O	O
(	O	O
Cursor.Position.X	B-API	O
+	O	O
1	O	O
,	O	O
Cursor.Position.Y	B-API	O
+	O	O
1	O	O
)	O	O
timer.Start	B-API	B-API
(	I-API	I-API
)	I-API	I-API
Application.Run	B-API	O
(	I-API	O
)	I-API	O
Something	O	O
like	O	O
this	O	O
should	O	O
work	O	O
(	O	O
though	O	O
,	O	O
you	O	O
will	O	O
want	O	O
to	O	O
change	O	O
the	O	O
interval	O	O
)	O	O
.	O	O
public	O	O
Form1	O	B-API
(	O	I-API
)	O	I-API
{	O	O
InitializeComponent	B-API	B-API
(	I-API	I-API
)	I-API	I-API
;	O	O
Timer	B-API	O
Every4Minutes	O	O
=	O	O
new	O	O
Timer	O	B-API
(	O	I-API
)	O	I-API
;	O	O
Every4Minutes.Interval	B-API	O
=	O	O
10	O	O
;	O	O
Every4Minutes.Tick	B-API	O
+=	O	O
new	O	O
EventHandler	O	O
(	O	O
MoveNow	O	O
)	O	O
;	O	O
Every4Minutes.Start	B-API	B-API
(	I-API	I-API
)	I-API	I-API
;	O	O
}	O	O
void	O	O
MoveNow	O	O
(	O	O
object	O	O
sender	O	O
,	O	O
EventArgs	O	O
e	O	O
)	O	O
{	O	O
Cursor.Position	B-API	B-API
=	O	O
new	O	O
Point	O	O
(	O	O
Cursor.Position.X	B-API	O
-	O	O
1	O	O
,	O	O
Cursor.Position.Y	B-API	O
-	O	O
1	O	O
)	O	O
;	O	O
}	O	O
Boy	O	O
,	O	O
that	O	O
's	O	O
a	O	O
pretty	O	O
general	O	O
question	O	O
.	O	O
I	O	O
'll	O	O
do	O	O
my	O	O
best	O	O
,	O	O
but	O	O
be	O	O
prepared	O	O
to	O	O
see	O	O
me	O	O
miss	O	O
by	O	O
a	O	O
mile	O	O
.	O	O
Assumptions	O	O
You	O	O
are	O	O
using	O	O
ASP.NET	O	O
,	O	O
not	O	O
plain	O	O
ASP	O	O
You	O	O
do	O	O
n't	O	O
really	O	O
want	O	O
to	O	O
test	O	O
your	O	O
web	O	O
pages	O	O
,	O	O
but	O	O
the	O	O
logic	O	O
behind	O	O
them	O	O
.	O	O
Unit	O	O
testing	O	O
the	O	O
actual	O	O
.ASPX	O	O
pages	O	O
is	O	O
rather	O	O
painful	O	O
,	O	O
but	O	O
there	O	O
are	O	O
frameworks	O	O
out	O	O
there	O	O
to	O	O
do	O	O
it	O	O
.	O	O
NUnitAsp	O	O
is	O	O
one	O	O
.	O	O
The	O	O
first	O	O
thing	O	O
to	O	O
do	O	O
is	O	O
to	O	O
organize	O	O
(	O	O
or	O	O
plan	O	O
)	O	O
your	O	O
code	O	O
so	O	O
that	O	O
it	O	O
can	O	O
be	O	O
tested	O	O
.	O	O
The	O	O
two	O	O
most	O	O
popular	O	O
design	O	O
patterns	O	O
for	O	O
this	O	O
at	O	O
the	O	O
time	O	O
seem	O	O
to	O	O
be	O	O
MVP	O	O
and	O	O
MVC	O	O
.	O	O
Both	O	O
separate	O	O
the	O	O
logic	O	O
of	O	O
the	O	O
application	O	O
away	O	O
from	O	O
the	O	O
view	O	O
so	O	O
that	O	O
you	O	O
can	O	O
test	O	O
the	O	O
logic	O	O
without	O	O
the	O	O
view	O	O
(	O	O
web	O	O
pages	O	O
)	O	O
getting	O	O
in	O	O
your	O	O
way	O	O
.	O	O
Either	O	O
MVP	O	O
or	O	O
MVC	O	O
will	O	O
be	O	O
effective	O	O
.	O	O
MVC	O	O
has	O	O
the	O	O
advantage	O	O
of	O	O
having	O	O
a	O	O
Microsoft	O	O
framework	O	O
almost	O	O
ready	O	O
to	O	O
go	O	O
.	O	O
Once	O	O
you	O	O
've	O	O
selected	O	O
a	O	O
framework	O	O
pattern	O	O
that	O	O
encourages	O	O
testability	O	O
,	O	O
you	O	O
need	O	O
to	O	O
use	O	O
a	O	O
unit	O	O
testing	O	O
tool	O	O
.	O	O
NUnit	O	B-API
is	O	O
a	O	O
good	O	O
starting	O	O
point	O	O
.	O	O
Visual	O	O
Studio	O	O
Professional	O	O
has	O	O
a	O	O
testing	O	O
suite	O	O
built	O	O
it	O	O
,	O	O
but	O	O
NUnit	B-API	O
+	O	O
TestDrive.NET	B-API	O
also	O	O
works	O	O
in	O	O
the	O	O
IDE	O	O
.	O	O
That	O	O
's	O	O
sort	O	O
of	O	O
a	O	O
shotgun	O	O
blast	O	O
of	O	O
information	O	O
.	O	O
I	O	O
hope	O	O
some	O	O
if	O	O
it	O	O
hits	O	O
.	O	O
The	O	O
Pragmatic	O	O
Bookshelf	O	O
has	O	O
a	O	O
good	O	O
book	O	O
covering	O	O
the	O	O
topic	O	O
.	O	O
There	O	O
was	O	O
a	O	O
screencast	O	O
series	O	O
a	O	O
year	O	O
or	O	O
so	O	O
ago	O	O
on	O	O
Polymorphic	O	O
Podcast	O	O
that	O	O
did	O	O
a	O	O
pretty	O	O
good	O	O
intro	O	O
walkthrough	O	O
of	O	O
an	O	O
MVP	O	O
implementation	O	O
in	O	O
ASP.NET	B-API	O
.	O	O
Implemented	O	O
this	O	O
way	O	O
,	O	O
unit	O	O
tests	O	O
fall	O	O
into	O	O
place	O	O
much	O	O
more	O	O
naturally	O	O
.	O	O
http	O	O
:	O	O
//polymorphicpodcast.com/shows/mv-patterns/	O	O
The	O	O
former	O	O
will	O	O
throw	O	O
an	O	O
exception	O	O
if	O	O
the	O	O
source	O	O
type	O	O
ca	O	O
n't	O	O
be	O	O
cast	O	O
to	O	O
the	O	O
target	O	O
type	O	O
.	O	O
The	O	O
latter	O	O
will	O	O
result	O	O
in	O	O
sc2	O	O
being	O	O
a	O	O
null	O	O
reference	O	O
,	O	O
but	O	O
no	O	O
exception	O	O
.	O	O
[	O	O
Edit	O	O
]	O	O
My	O	O
original	O	O
answer	O	O
is	O	O
certainly	O	O
the	O	O
most	O	O
pronounced	O	O
difference	O	O
,	O	O
but	O	O
as	O	O
Eric	O	O
Lippert	O	O
points	O	O
out	O	O
,	O	O
it	O	O
's	O	O
not	O	O
the	O	O
only	O	O
one	O	O
.	O	O
Other	O	O
differences	O	O
include	O	O
:	O	O
You	O	O
ca	O	O
n't	O	O
use	O	O
the	O	O
'as	O	O
'	O	O
operator	O	O
to	O	O
cast	O	O
to	O	O
a	O	O
type	O	O
that	O	O
does	O	O
n't	O	O
accept	O	O
'null	O	O
'	O	O
as	O	O
a	O	O
value	O	O
You	O	O
ca	O	O
n't	O	O
use	O	O
'as	O	O
'	O	O
to	O	O
convert	O	O
things	O	O
,	O	O
like	O	O
numbers	O	O
to	O	O
a	O	O
different	O	O
representation	O	O
(	O	O
float	O	O
to	O	O
int	O	O
,	O	O
for	O	O
example	O	O
)	O	O
.	O	O
And	O	O
finally	O	O
,	O	O
using	O	O
'as	O	O
'	O	O
vs.	O	O
the	O	O
cast	O	O
operator	O	O
,	O	O
you	O	O
're	O	O
also	O	O
saying	O	O
``	O	O
I	O	O
'm	O	O
not	O	O
sure	O	O
if	O	O
this	O	O
will	O	O
succeed	O	O
.	O	O
''	O	O
The	O	O
parenthetical	O	O
cast	O	O
throws	O	O
an	O	O
exception	O	O
if	O	O
the	O	O
cast	O	O
attempt	O	O
fails	O	O
.	O	O
The	O	O
``	O	O
as	O	O
''	O	O
cast	O	O
returns	O	O
null	O	O
if	O	O
the	O	O
cast	O	O
attempt	O	O
fails	O	O
.	O	O
They	O	O
'll	O	O
throw	O	O
different	O	O
exceptions	O	O
.	O	O
(	O	O
)	O	O
:	O	O
NullReferenceException	B-API	O
as	O	O
:	O	O
InvalidCastException	B-API	O
Which	O	O
could	O	O
help	O	O
for	O	O
debugging	O	O
.	O	O
The	O	O
``	O	O
as	O	O
''	O	O
keyword	O	O
attempts	O	O
to	O	O
cast	O	O
the	O	O
object	O	O
and	O	O
if	O	O
the	O	O
cast	O	O
fails	O	O
,	O	O
null	O	O
is	O	O
returned	O	O
silently	O	O
.	O	O
The	O	O
(	O	O
)	O	O
cast	O	O
operator	O	O
will	O	O
throw	O	O
an	O	O
exception	O	O
immediately	O	O
if	O	O
the	O	O
cast	O	O
fails	O	O
.	O	O
``	O	O
Only	O	O
use	O	O
the	O	O
C	O	O
#	O	O
``	O	O
as	O	O
''	O	O
keyword	O	O
where	O	O
you	O	O
are	O	O
expecting	O	O
the	O	O
cast	O	O
to	O	O
fail	O	O
in	O	O
a	O	O
non-exceptional	O	O
case	O	O
.	O	O
If	O	O
you	O	O
are	O	O
counting	O	O
on	O	O
a	O	O
cast	O	O
to	O	O
succeed	O	O
and	O	O
are	O	O
unprepared	O	O
to	O	O
receive	O	O
any	O	O
object	O	O
that	O	O
would	O	O
fail	O	O
,	O	O
you	O	O
should	O	O
use	O	O
the	O	O
(	O	O
)	O	O
cast	O	O
operator	O	O
so	O	O
that	O	O
an	O	O
appropriate	O	O
and	O	O
helpful	O	O
exception	O	O
is	O	O
thrown	O	O
.	O	O
''	O	O
For	O	O
code	O	O
examples	O	O
and	O	O
a	O	O
further	O	O
explanation	O	O
:	O	O
http	O	O
:	O	O
//blog.nerdbank.net/2008/06/when-not-to-use-c-keyword.html	O	O
Also	O	O
note	O	O
that	O	O
you	O	O
can	O	O
only	O	O
use	O	O
the	O	O
as	O	O
keyword	O	O
with	O	O
a	O	O
reference	O	O
type	O	O
or	O	O
a	O	O
nullable	O	O
type	O	O
ie	O	O
:	O	O
double	B-API	O
d	B-API	O
=	B-API	O
;	O	O
int	O	O
i	B-API	O
=	B-API	O
d	B-API	O
as	B-API	O
will	O	O
not	O	O
compile	O	O
double	B-API	O
d	B-API	O
=	B-API	O
;	O	O
int	O	O
i	B-API	O
=	B-API	O
will	O	O
compile	O	O
.	O	O
Here	O	O
is	O	O
a	O	O
good	O	O
way	O	O
to	O	O
remember	O	O
the	O	O
process	O	O
that	O	O
each	O	O
of	O	O
them	O	O
follow	O	O
that	O	O
I	O	O
use	O	O
when	O	O
trying	O	O
to	O	O
decide	O	O
which	O	O
is	O	O
better	O	O
for	O	O
my	O	O
circumstance	O	O
.	O	O
DateTime	O	O
i	O	O
=	O	O
(	O	O
DateTime	O	O
)	O	O
value	O	O
;	O	O
//	O	O
is	O	O
like	O	O
doing	O	O
DateTime	O	B-API
i	O	O
=	O	O
value	O	O
is	O	O
DateTime	O	O
?	O	O
value	O	O
as	O	O
DateTime	O	B-API
:	O	O
throw	O	O
new	O	O
Exception	O	B-API
(	O	I-API
...	O	I-API
)	O	I-API
;	O	O
and	O	O
the	O	O
next	O	O
should	O	O
be	O	O
easy	O	O
to	O	O
guess	O	O
what	O	O
it	O	O
does	O	O
DateTime	O	O
i	O	O
=	O	O
value	O	O
as	O	O
DateTime	O	O
;	O	O
in	O	O
the	O	O
first	O	O
case	O	O
if	O	O
the	O	O
value	O	O
can	O	O
not	O	O
be	O	O
cast	O	O
than	O	O
an	O	O
exception	O	O
is	O	O
thrown	O	O
in	O	O
the	O	O
second	O	O
case	O	O
if	O	O
the	O	O
value	O	O
can	O	O
not	O	O
be	O	O
cast	O	O
,	O	O
i	O	O
is	O	O
set	O	O
to	O	O
null	O	O
.	O	O
So	O	O
in	O	O
the	O	O
first	O	O
case	O	O
a	O	O
hard	O	O
stop	O	O
is	O	O
made	O	O
if	O	O
the	O	O
cast	O	O
fails	O	O
in	O	O
the	O	O
second	O	O
cast	O	O
a	O	O
soft	O	O
stop	O	O
is	O	O
made	O	O
and	O	O
you	O	O
might	O	O
encounter	O	O
a	O	O
NullReferenceException	B-API	O
later	O	O
on	O	O
.	O	O
It	O	O
's	O	O
like	O	O
the	O	O
difference	O	O
between	O	O
Parse	O	O
and	O	O
TryParse	O	O
.	O	O
You	O	O
use	O	O
TryParse	O	B-API
when	O	O
you	O	O
expect	O	O
it	O	O
might	O	O
fail	O	O
,	O	O
but	O	O
when	O	O
you	O	O
have	O	O
strong	O	O
assurance	O	O
it	O	O
wo	O	O
n't	O	O
fail	O	O
you	O	O
use	O	O
Parse	O	O
.	O	O
Looking	O	O
around	O	O
,	O	O
and	O	O
using	O	O
some	O	O
C	O	O
#	O	O
3.0	O	O
features	O	O
we	O	O
can	O	O
do	O	O
this	O	O
:	O	O
foreach	O	O
(	O	O
KeyValuePairstring	O	O
,	O	O
int	O	O
item	O	O
in	O	O
keywordCounts.OrderBy	B-API	B-API
(	I-API	I-API
key=	I-API	I-API
key.Value	I-API	I-API
)	I-API	I-API
)	O	O
{	O	O
//	O	O
do	O	O
something	O	O
with	O	O
item.Key	O	B-API
and	O	O
item.Value	O	B-API
}	O	O
This	O	O
is	O	O
the	O	O
cleanest	O	O
way	O	O
I	O	O
've	O	O
seen	O	O
and	O	O
is	O	O
similar	O	O
to	O	O
the	O	O
Ruby	O	O
way	O	O
of	O	O
handling	O	O
hashes	O	O
.	O	O
On	O	O
a	O	O
high	O	O
level	O	O
,	O	O
you	O	O
have	O	O
no	O	O
other	O	O
choice	O	O
then	O	O
to	O	O
walk	O	O
through	O	O
the	O	O
whole	O	O
Dictionary	O	O
and	O	O
look	O	O
at	O	O
each	O	O
value	O	O
.	O	O
Maybe	O	O
this	O	O
helps	O	O
:	O	O
http	O	O
:	O	O
//bytes.com/forum/thread563638.html	O	O
Copy/Pasting	O	O
from	O	O
John	O	O
Timney	O	O
:	O	O
Dictionarystring	O	O
,	O	O
string	O	O
s	O	O
=	O	O
new	O	O
Dictionarystring	O	O
,	O	O
string	O	B-API
(	O	I-API
)	O	I-API
;	O	O
s.Add	O	O
(	O	O
``	O	O
1	O	O
''	O	O
,	O	O
``	O	O
a	O	O
Item	O	O
''	O	O
)	O	O
;	O	O
s.Add	O	O
(	O	O
``	O	O
2	O	O
''	O	O
,	O	O
``	O	O
c	O	O
Item	O	O
''	O	O
)	O	O
;	O	O
s.Add	O	O
(	O	O
``	O	O
3	O	O
''	O	O
,	O	O
``	O	O
b	O	O
Item	O	O
''	O	O
)	O	O
;	O	O
ListKeyValuePairstring	O	O
,	O	O
string	O	O
myList	O	O
=	O	O
new	O	O
ListKeyValuePairstring	O	O
,	O	O
string	O	B-API
(	O	I-API
s	O	I-API
)	O	I-API
;	O	O
myList.Sort	O	O
(	O	O
delegate	O	O
(	O	O
KeyValuePairstring	O	O
,	O	O
string	O	O
firstPair	O	O
,	O	O
KeyValuePairstring	O	O
,	O	O
string	O	O
nextPair	O	O
)	O	O
{	O	O
return	O	O
firstPair.Value.CompareTo	O	B-API
(	O	I-API
nextPair.Value	O	I-API
)	O	I-API
;	O	O
}	O	O
)	O	O
;	O	O
using	O	O
System.Linq.Enumerable	B-API	B-API
;	O	O
...	O	O
ListKeyValuePairstring	O	O
,	O	O
string	O	O
myList	O	O
=	O	O
aDictionary.ToList	B-API	B-API
(	I-API	I-API
)	I-API	I-API
;	O	O
myList.Sort	B-API	O
(	I-API	O
delegate	I-API	O
(	O	O
KeyValuePairstring	I-API	O
,	I-API	O
string	I-API	O
pair1	I-API	O
,	I-API	O
KeyValuePairstring	I-API	O
,	I-API	O
string	I-API	O
pair2	I-API	O
)	I-API	O
{	O	O
return	O	O
pair1.Value.CompareTo	B-API	B-API
(	I-API	I-API
pair2.Value	I-API	I-API
)	I-API	I-API
;	O	O
}	O	O
)	O	O
;	O	O
Since	O	O
you	O	O
're	O	O
targeting	O	O
.net	O	O
2.0	O	O
or	O	O
above	O	O
,	O	O
you	O	O
can	O	O
simplify	O	O
this	O	O
into	O	O
lambda	O	O
syntax	O	O
--	O	O
it	O	O
's	O	O
equivalent	O	O
but	O	O
shorter	O	O
.	O	O
If	O	O
you	O	O
're	O	O
targeting	O	O
.net	O	O
2.0	O	O
you	O	O
can	O	O
only	O	O
use	O	O
this	O	O
syntax	O	O
if	O	O
you	O	O
're	O	O
using	O	O
the	O	O
compiler	O	O
from	O	O
vs2008	O	O
(	O	O
or	O	O
above	O	O
)	O	O
.	O	O
var	O	O
myList	O	O
=	O	O
aDictionary.ToList	B-API	B-API
(	I-API	I-API
)	I-API	I-API
;	O	O
myList.Sort	B-API	O
(	I-API	O
(	I-API	O
pair1	I-API	O
,	I-API	O
pair2	I-API	O
)	I-API	O
=	O	O
pair1.Value.CompareTo	B-API	B-API
(	I-API	I-API
pair2.Value	I-API	I-API
)	I-API	I-API
)	O	I-API
;	O	O
Why	O	O
not	O	O
use	O	O
LINQ	O	O
:	O	O
Dictionarystring	O	O
,	O	O
int	O	O
myDict	O	O
=	O	O
new	O	O
Dictionarystring	O	O
,	O	O
int	O	B-API
(	O	I-API
)	O	I-API
;	O	O
myDict.Add	B-API	O
(	I-API	O
``	I-API	O
one	I-API	O
''	I-API	O
,	I-API	O
1	I-API	O
)	I-API	O
;	O	O
myDict.Add	B-API	O
(	I-API	O
``	I-API	O
four	I-API	O
''	I-API	O
,	I-API	O
4	I-API	O
)	I-API	O
;	O	O
myDict.Add	B-API	O
(	I-API	O
``	I-API	O
two	I-API	O
''	I-API	O
,	I-API	O
2	I-API	O
)	I-API	O
;	O	O
myDict.Add	B-API	B-API
(	I-API	I-API
``	I-API	I-API
three	I-API	I-API
''	I-API	I-API
,	I-API	I-API
3	I-API	I-API
)	I-API	I-API
;	O	O
var	O	O
sortedDict	O	O
=	O	O
from	O	O
entry	O	O
in	O	O
myDict	O	O
orderby	O	O
entry.Value	B-API	O
ascending	O	O
select	O	O
entry	O	O
;	O	O
This	O	O
would	O	O
also	O	O
allow	O	O
for	O	O
great	O	O
flexibility	O	O
in	O	O
that	O	O
you	O	O
can	O	O
select	O	O
the	O	O
top	O	O
10	O	O
,	O	O
20	O	O
10	O	O
%	O	O
etc	O	O
.	O	O
Or	O	O
if	O	O
you	O	O
are	O	O
using	O	O
your	O	O
word	O	O
frequency	O	O
index	O	O
for	O	O
,	O	O
you	O	O
could	O	O
also	O	O
include	O	O
clause	O	O
as	O	O
well	O	O
.	O	O
Not	O	O
all	O	O
languages	O	O
have	O	O
the	O	O
concept	O	O
of	O	O
unsigned	O	O
ints	O	O
.	O	O
For	O	O
example	O	O
VB	O	O
6	O	O
had	O	O
no	O	O
concept	O	O
of	O	O
unsigned	O	O
ints	O	O
which	O	O
I	O	O
suspect	O	O
drove	O	O
the	O	O
decision	O	O
of	O	O
the	O	O
designers	O	O
of	O	O
VB7/7.1	O	O
not	O	O
to	O	O
implement	O	O
as	O	O
well	O	O
(	O	O
it	O	O
's	O	O
implemented	O	O
now	O	O
in	O	O
VB8	O	O
)	O	O
.	O	O
To	O	O
quote	O	O
:	O	O
http	O	O
:	O	O
//msdn.microsoft.com/en-us/library/12a7a7h3.aspx	O	O
The	O	O
CLS	O	O
was	O	O
designed	O	O
to	O	O
be	O	O
large	O	O
enough	O	O
to	O	O
include	O	O
the	O	O
language	O	O
constructs	O	O
that	O	O
are	O	O
commonly	O	O
needed	O	O
by	O	O
developers	O	O
,	O	O
yet	O	O
small	O	O
enough	O	O
that	O	O
most	O	O
languages	O	O
are	O	O
able	O	O
to	O	O
support	O	O
it	O	O
.	O	O
In	O	O
addition	O	O
,	O	O
any	O	O
language	O	O
construct	O	O
that	O	O
makes	O	O
it	O	O
impossible	O	O
to	O	O
rapidly	O	O
verify	O	O
the	O	O
type	O	O
safety	O	O
of	O	O
code	O	O
was	O	O
excluded	O	O
from	O	O
the	O	O
CLS	O	O
so	O	O
that	O	O
all	O	O
CLS-compliant	O	O
languages	O	O
can	O	O
produce	O	O
verifiable	O	O
code	O	O
if	O	O
they	O	O
choose	O	O
to	O	O
do	O	O
so	O	O
.	O	O
Update	O	O
:	O	O
I	O	O
did	O	O
wonder	O	O
about	O	O
this	O	O
some	O	O
years	O	O
back	O	O
,	O	O
and	O	O
whilst	O	O
I	O	O
ca	O	O
n't	O	O
see	O	O
why	O	O
a	O	O
UInt	O	O
would	O	O
n't	O	O
be	O	O
type	O	O
safety	O	O
verifiable	O	O
,	O	O
I	O	O
guess	O	O
the	O	O
CLS	O	O
guys	O	O
had	O	O
to	O	O
have	O	O
a	O	O
cut	O	O
off	O	O
point	O	O
somewhere	O	O
as	O	O
to	O	O
what	O	O
would	O	O
be	O	O
the	O	O
baseline	O	O
minimum	O	O
number	O	O
of	O	O
value	O	O
types	O	O
supported	O	O
.	O	O
Also	O	O
when	O	O
you	O	O
think	O	O
about	O	O
the	O	O
longer	O	O
term	O	O
where	O	O
more	O	O
and	O	O
more	O	O
languages	O	O
are	O	O
being	O	O
ported	O	O
to	O	O
the	O	O
CLR	O	O
why	O	O
force	O	O
them	O	O
to	O	O
implement	O	O
unsigned	O	O
ints	O	O
to	O	O
gain	O	O
CLS	O	O
compliance	O	O
if	O	O
there	O	O
is	O	O
absolutely	O	O
no	O	O
concept	O	O
,	O	O
ever	O	O
?	O	O
Unsigned	O	O
integers	O	O
are	O	O
not	O	O
CLS	O	O
compliant	O	O
because	O	O
they	O	O
're	O	O
not	O	O
interoperable	O	O
between	O	O
certain	O	O
languages	O	O
.	O	O
An	O	O
explicit	O	O
cast	O	O
to	O	O
double	O	O
is	O	O
n't	O	O
necessary	O	O
.	O	O
double	O	O
trans	O	O
=	O	O
(	O	O
double	O	O
)	O	O
trackBar1.Value	B-API	O
/	O	O
;	O	O
Identifying	O	O
the	O	O
constant	O	O
as	O	O
5000.0	O	O
(	O	O
or	O	O
as	O	O
)	O	O
is	O	O
sufficient	O	O
:	O	O
double	O	O
trans	O	O
=	O	O
trackBar1.Value	B-API	B-API
/	O	O
5000.0	O	O
;	O	O
double	O	O
trans	O	O
=	O	O
trackBar1.Value	B-API	B-API
/	O	O
5000d	O	O
;	O	O
It	O	O
sounds	O	O
like	O	O
is	O	O
a	O	O
double	O	O
value	O	O
,	O	O
and	O	O
the	O	O
compiler	O	O
does	O	O
n't	O	O
like	O	O
you	O	O
trying	O	O
to	O	O
cram	O	O
a	O	O
decimal	O	O
value	O	O
into	O	O
it	O	O
.	O	O
A	O	O
more	O	O
generic	O	O
answer	O	O
for	O	O
the	O	O
generic	O	O
question	O	O
``	O	O
Decimal	O	O
vs	O	O
Double	O	O
?	O	O
``	O	O
:	O	O
Decimal	O	O
for	O	O
monetary	O	O
calculations	O	O
to	O	O
preserve	O	O
the	O	O
precision	O	O
,	O	O
Double	O	O
for	O	O
scientific	O	O
calculations	O	O
that	O	O
do	O	O
not	O	O
get	O	O
affected	O	O
by	O	O
small	O	O
differences	O	O
.	O	O
Since	O	O
Double	O	O
is	O	O
a	O	O
type	O	O
which	O	O
is	O	O
native	O	O
to	O	O
the	O	O
CPU	O	O
(	O	O
internal	O	O
representation	O	O
is	O	O
stored	O	O
in	O	O
base	O	O
2	O	O
)	O	O
,	O	O
calculations	O	O
made	O	O
with	O	O
Double	O	O
perform	O	O
better	O	O
then	O	O
Decimal	O	O
(	O	O
which	O	O
is	O	O
represented	O	O
in	O	O
base	O	O
10	O	O
internally	O	O
)	O	O
.	O	O
In	O	O
my	O	O
opinion	O	O
,	O	O
it	O	O
is	O	O
desirable	O	O
to	O	O
be	O	O
as	O	O
explicit	O	O
as	O	O
possible	O	O
.	O	O
This	O	O
adds	O	O
clarity	O	O
to	O	O
the	O	O
code	O	O
and	O	O
aids	O	O
your	O	O
fellow	O	O
programmers	O	O
who	O	O
may	O	O
eventually	O	O
read	O	O
it	O	O
.	O	O
In	O	O
addition	O	O
to	O	O
(	O	O
or	O	O
instead	O	O
of	O	O
)	O	O
appending	O	O
a	O	O
to	O	O
the	O	O
number	O	O
,	O	O
you	O	O
can	O	O
use	O	O
decimal.ToDouble	B-API	B-API
(	I-API	I-API
)	I-API	I-API
.	O	O
Here	O	O
are	O	O
some	O	O
examples	O	O
:	O	O
//	O	O
Example	O	O
1	O	O
double	O	O
transperancy	O	O
=	O	O
trackBar1.Value/5000	B-API	O
;	O	O
this.Opacity	B-API	B-API
=	O	O
decimal.ToDouble	B-API	B-API
(	I-API	I-API
transperancy	I-API	I-API
)	I-API	I-API
;	O	O
//	O	O
Example	O	O
2	O	O
-	O	O
with	O	O
inline	O	O
temp	O	O
this.Opacity	O	B-API
=	O	O
decimal.ToDouble	B-API	B-API
(	I-API	I-API
trackBar1.Value/5000	I-API	I-API
)	I-API	I-API
;	O	O
Very	O	O
roughly	O	O
and	O	O
from	O	O
memory	O	O
since	O	O
I	O	O
do	O	O
n't	O	O
have	O	O
code	O	O
on	O	O
this	O	O
laptop	O	O
:	O	O
using	O	O
(	O	O
OleDBConnection	B-API	O
conn	O	O
=	O	O
new	O	O
OleDbConnection	B-API	B-API
(	O	I-API
)	O	I-API
)	O	O
{	O	O
conn.ConnectionString	B-API	O
=	O	O
``	O	O
Whatever	O	O
connection	O	O
string	O	O
''	O	O
;	O	O
using	O	O
(	O	O
OleDbCommand	B-API	O
cmd	O	O
=	O	O
new	O	O
OleDbCommand	B-API	B-API
(	I-API	I-API
)	I-API	I-API
)	O	O
{	O	O
cmd.Connection	B-API	O
=	O	O
conn	O	O
;	O	O
cmd.CommandText	B-API	O
=	O	O
``	O	O
Select	O	O
*	O	O
from	O	O
CoolTable	O	O
''	O	O
;	O	O
using	O	O
(	O	O
OleDbDataReader	B-API	O
dr	O	O
=	O	O
cmd.ExecuteReader	B-API	B-API
(	I-API	I-API
)	I-API	I-API
)	O	O
{	O	O
while	O	O
(	O	O
dr.Read	B-API	B-API
(	I-API	I-API
)	I-API	I-API
)	O	O
{	O	O
//	O	O
do	O	O
something	O	O
like	O	O
Console.WriteLine	B-API	B-API
(	I-API	O
dr	I-API	O
[	I-API	O
``	I-API	O
column	I-API	O
name	I-API	O
''	I-API	O
]	I-API	O
as	I-API	O
String	I-API	O
)	I-API	O
;	O	O
}	O	O
}	O	O
}	O	O
}	O	O
@	O	O
Goyuix	O	O
--	O	O
that	O	O
's	O	O
excellent	O	O
for	O	O
something	O	O
written	O	O
from	O	O
memory	O	O
.	O	O
tested	O	O
it	O	O
here	O	O
--	O	O
found	O	O
the	O	O
connection	O	O
was	O	O
n't	O	O
opened	O	O
.	O	O
Otherwise	O	O
very	O	O
nice	O	O
.	O	O
using	O	O
System.Data.OleDb	B-API	O
;	O	O
...	O	O
using	O	O
(	O	O
OleDbConnection	B-API	O
conn	O	O
=	O	O
new	O	O
OleDbConnection	B-API	B-API
(	O	I-API
)	O	I-API
)	O	O
{	O	O
conn.ConnectionString	B-API	O
=	O	O
``	O	O
Provider=sqloledb	O	O
;	O	O
Data	O	O
Source=yourServername\\yourInstance	O	O
;	O	O
Initial	O	O
Catalog=databaseName	O	O
;	O	O
Integrated	O	O
Security=SSPI	O	O
;	O	O
''	O	O
;	O	O
using	O	O
(	O	O
OleDbCommand	B-API	O
cmd	O	O
=	O	O
new	O	O
OleDbCommand	B-API	B-API
(	I-API	I-API
)	I-API	I-API
)	O	O
{	O	O
conn.Open	B-API	B-API
(	I-API	I-API
)	I-API	I-API
;	O	O
cmd.Connection	B-API	O
=	O	O
conn	O	O
;	O	O
cmd.CommandText	B-API	O
=	O	O
``	O	O
Select	O	O
*	O	O
from	O	O
yourTable	O	O
''	O	O
;	O	O
using	O	O
(	O	O
OleDbDataReader	B-API	O
dr	O	O
=	O	O
cmd.ExecuteReader	B-API	B-API
(	I-API	I-API
)	I-API	I-API
)	O	O
{	O	O
while	O	O
(	O	O
dr.Read	B-API	B-API
(	I-API	I-API
)	I-API	I-API
)	O	O
{	O	O
Console.WriteLine	B-API	B-API
(	I-API	O
dr	I-API	O
[	I-API	O
``	I-API	O
columnName	I-API	O
''	I-API	O
]	I-API	O
)	I-API	O
;	O	O
}	O	O
}	O	O
}	O	O
}	O	O
That	O	O
's	O	O
definitely	O	O
a	O	O
good	O	O
way	O	O
to	O	O
do	O	O
it	O	O
.	O	O
But	O	O
you	O	O
if	O	O
you	O	O
happen	O	O
to	O	O
be	O	O
using	O	O
a	O	O
database	O	O
that	O	O
supports	O	O
LINQ	O	O
to	O	O
SQL	O	O
,	O	O
it	O	O
can	O	O
be	O	O
a	O	O
lot	O	O
more	O	O
fun	O	O
.	O	O
It	O	O
can	O	O
look	O	O
something	O	O
like	O	O
this	O	O
:	O	O
MyDB	O	O
db	O	O
=	O	O
new	O	O
;	O	O
var	O	O
q	O	O
=	O	O
from	O	O
db.MyTable	O	O
select	O	O
c	O	O
;	O	O
foreach	O	O
(	O	O
var	O	O
c	O	O
in	O	O
q	O	O
)	O	O
(	O	O
``	O	O
Data	O	O
Source=	O	O
...	O	O
''	O	O
)	O	O
(	O	O
c.MyField.ToString	O	B-API
(	O	I-API
)	O	I-API
This	O	O
is	O	O
an	O	O
alternative	O	O
way	O	O
(	O	O
DataReader	O	O
is	O	O
faster	O	O
than	O	O
this	O	O
one	O	O
)	O	O
:	O	O
string	O	O
s	O	O
=	O	O
``	O	O
;	O	O
SqlConnection	B-API	O
conn	O	O
=	O	O
new	O	O
;	O	O
SqlDataAdapter	B-API	O
da	O	O
=	O	O
new	O	O
DataTable	O	O
dt	O	O
=	O	O
new	O	O
;	O	O
for	O	O
(	O	O
int	O	O
i	O	O
=	O	O
0	O	O
;	O	O
i	O	O
dt.Rows.Count	B-API	B-API
;	O	O
i++	O	O
)	O	O
{	O	O
s	O	O
+=	O	O
+	O	O
``	O	O
--	O	O
``	O	O
+	O	O
+	O	O
(	O	O
``	O	O
Server=192.168.1.1	O	O
;	O	O
Database=master	O	O
;	O	O
Connect	O	O
Timeout=30	O	O
;	O	O
User	O	O
ID=foobar	O	O
;	O	O
Password=raboof	O	O
;	O	O
''	O	O
)	O	O
(	O	O
``	O	O
SELECT	O	O
TOP	O	O
5	O	O
name	O	O
,	O	O
dbid	O	O
FROM	O	O
sysdatabases	O	O
''	O	O
,	O	O
conn	O	O
)	O	O
DataTable	O	B-API
(	O	I-API
)	O	I-API
;	O	O
da.Fill	B-API	O
(	I-API	O
dt	I-API	O
)	I-API	O
dt.Rows	O	O
[	O	O
i	O	O
]	O	O
[	O	O
``	O	O
name	O	O
''	O	O
]	O	O
.ToString	B-API	B-API
(	I-API	I-API
)	I-API	I-API
dt.Rows	O	O
[	O	O
i	O	O
]	O	O
[	O	O
``	O	O
dbid	O	O
''	O	O
]	O	O
.ToString	B-API	B-API
(	I-API	I-API
)	I-API	I-API
``	O	O
\n	O	O
''	O	O
;	O	O
}	O	O
MessageBox.Show	B-API	B-API
(	I-API	I-API
s	I-API	I-API
)	I-API	O
I	O	O
have	O	O
n't	O	O
done	O	O
SWING	O	O
development	O	O
since	O	O
my	O	O
early	O	O
CS	O	O
classes	O	O
but	O	O
if	O	O
it	O	O
was	O	O
n't	O	O
built	O	O
in	O	O
you	O	O
could	O	O
just	O	O
inherit	O	O
javax.swing.AbstractButton	B-API	B-API
and	O	O
create	O	O
your	O	O
own	O	O
.	O	O
Should	O	O
be	O	O
pretty	O	O
simple	O	O
to	O	O
wire	O	O
something	O	O
together	O	O
with	O	O
their	O	O
existing	O	O
framework	O	O
.	O	O
You	O	O
could	O	O
always	O	O
try	O	O
the	O	O
Synth	O	O
look	O	O
feel	O	O
.	O	O
You	O	O
provide	O	O
an	O	O
xml	O	O
file	O	O
that	O	O
acts	O	O
as	O	O
a	O	O
sort	O	O
of	O	O
stylesheet	O	O
,	O	O
along	O	O
with	O	O
any	O	O
images	O	O
you	O	O
want	O	O
to	O	O
use	O	O
.	O	O
The	O	O
code	O	O
might	O	O
look	O	O
like	O	O
this	O	O
:	O	O
try	O	O
{	O	O
SynthLookAndFeel	O	O
synth	O	O
=	O	O
new	O	O
SynthLookAndFeel	O	B-API
(	O	I-API
)	O	I-API
;	O	O
Class	O	O
aClass	O	O
=	O	O
MainFrame.class	B-API	B-API
;	O	O
InputStream	O	O
stream	O	O
=	O	O
aClass.getResourceAsStream	B-API	B-API
(	I-API	I-API
``	I-API	I-API
\\default.xml	I-API	I-API
''	I-API	I-API
)	I-API	I-API
;	O	O
if	O	O
(	O	O
stream	O	O
==	O	O
null	O	O
)	O	O
{	O	O
System.err.println	B-API	O
(	I-API	O
``	I-API	O
Missing	I-API	O
configuration	I-API	O
file	I-API	O
''	I-API	O
)	I-API	O
;	O	O
System.exit	B-API	B-API
(	I-API	I-API
-1	I-API	I-API
)	I-API	I-API
;	O	O
}	O	O
synth.load	B-API	B-API
(	I-API	I-API
stream	I-API	I-API
,	I-API	I-API
aClass	I-API	I-API
)	I-API	I-API
;	O	O
UIManager.setLookAndFeel	B-API	B-API
(	I-API	I-API
synth	I-API	I-API
)	I-API	I-API
;	O	O
}	O	O
catch	B-API	O
(	I-API	O
ParseException	I-API	O
pe	I-API	O
)	I-API	O
{	O	O
System.err.println	B-API	O
(	I-API	O
``	I-API	O
Bad	I-API	O
configuration	I-API	O
file	I-API	O
''	I-API	O
)	I-API	O
;	O	O
pe.printStackTrace	B-API	B-API
(	I-API	I-API
)	I-API	I-API
;	O	O
System.exit	B-API	B-API
(	I-API	I-API
-2	I-API	I-API
)	I-API	I-API
;	O	O
}	O	O
catch	B-API	O
(	I-API	O
UnsupportedLookAndFeelException	I-API	O
ulfe	I-API	O
)	I-API	O
{	O	O
System.err.println	B-API	O
(	I-API	O
``	I-API	O
Old	I-API	O
JRE	I-API	O
in	I-API	O
use	I-API	O
.	I-API	O
Get	I-API	O
a	I-API	O
new	I-API	O
one	I-API	O
''	I-API	O
)	I-API	O
;	O	O
System.exit	B-API	B-API
(	I-API	I-API
-3	I-API	I-API
)	I-API	I-API
;	O	O
}	O	O
From	O	O
there	O	O
,	O	O
go	O	O
on	O	O
and	O	O
add	O	O
your	O	O
JButton	O	O
like	O	O
you	O	O
normally	O	O
would	O	O
.	O	O
The	O	O
only	O	O
change	O	O
is	O	O
that	O	O
you	O	O
use	O	O
the	O	O
setName	B-API	B-API
(	I-API	I-API
string	I-API	I-API
)	I-API	I-API
method	O	O
to	O	O
identify	O	O
what	O	O
the	O	O
button	O	O
should	O	O
map	O	O
to	O	O
in	O	O
the	O	O
xml	O	O
file	O	O
.	O	O
The	O	O
xml	O	O
file	O	O
might	O	O
look	O	O
like	O	O
this	O	O
:	O	O
synth	O	O
style	O	O
id=	O	O
''	O	O
button	O	O
''	O	O
font	O	O
name=	O	O
''	O	O
DIALOG	O	O
''	O	O
size=	O	O
''	O	O
12	O	O
''	O	O
style=	O	O
''	O	O
BOLD	O	O
''	O	O
/	O	O
state	O	O
value=	O	O
''	O	O
MOUSE_OVER	O	O
''	O	O
imagePainter	O	O
method=	O	O
''	O	O
buttonBackground	O	O
''	O	O
path=	O	O
''	O	O
dirt.png	O	O
''	O	O
sourceInsets=	O	O
''	O	O
2	O	O
2	O	O
2	O	O
2	O	O
''	O	O
/	O	O
insets	O	O
top=	O	O
''	O	O
2	O	O
''	O	O
botton=	O	O
''	O	O
2	O	O
''	O	O
right=	O	O
''	O	O
2	O	O
''	O	O
left=	O	O
''	O	O
2	O	O
''	O	O
/	O	O
/state	O	O
state	O	O
value=	O	O
''	O	O
ENABLED	O	O
''	O	O
imagePainter	O	O
method=	O	O
''	O	O
buttonBackground	O	O
''	O	O
path=	O	O
''	O	O
dirt.png	O	O
''	O	O
sourceInsets=	O	O
''	O	O
2	O	O
2	O	O
2	O	O
2	O	O
''	O	O
/	O	O
insets	O	O
top=	O	O
''	O	O
2	O	O
''	O	O
botton=	O	O
''	O	O
2	O	O
''	O	O
right=	O	O
''	O	O
2	O	O
''	O	O
left=	O	O
''	O	O
2	O	O
''	O	O
/	O	O
/state	O	O
/style	O	O
bind	O	O
style=	O	O
''	O	O
button	O	O
''	O	O
type=	O	O
''	O	O
name	O	O
''	O	O
key=	O	O
''	O	O
dirt	O	O
''	O	O
/	O	O
/synth	O	O
The	O	O
bind	O	O
element	O	O
there	O	O
specifies	O	O
what	O	O
to	O	O
map	O	O
to	O	O
(	O	O
in	O	O
this	O	O
example	O	O
,	O	O
it	O	O
will	O	O
apply	O	O
that	O	O
styling	O	O
to	O	O
any	O	O
buttons	O	O
whose	O	O
name	O	O
property	O	O
has	O	O
been	O	O
set	O	O
to	O	O
``	O	O
dirt	O	O
''	O	O
)	O	O
.	O	O
And	O	O
a	O	O
couple	O	O
of	O	O
useful	O	O
links	O	O
:	O	O
http	O	O
:	O	O
//javadesktop.org/articles/synth/	O	O
http	O	O
:	O	O
//docs.oracle.com/javase/tutorial/uiswing/lookandfeel/synth.html	O	O
Yes	O	O
,	O	O
this	O	O
is	O	O
possible	O	O
.	O	O
One	O	O
of	O	O
the	O	O
main	O	O
pros	O	O
for	O	O
using	O	O
Swing	O	O
is	O	O
the	O	O
ease	O	O
with	O	O
which	O	O
the	O	O
abstract	O	O
controls	O	O
can	O	O
be	O	O
created	O	O
and	O	O
manipulates	O	O
.	O	O
Here	O	O
is	O	O
a	O	O
quick	O	O
and	O	O
dirty	O	O
way	O	O
to	O	O
extend	O	O
the	O	O
existing	O	O
JButton	O	O
class	O	O
to	O	O
draw	O	O
a	O	O
circle	O	O
to	O	O
the	O	O
right	O	O
of	O	O
the	O	O
text	O	O
.	O	O
package	O	O
test	O	O
;	O	O
import	O	O
java.awt.Color	B-API	B-API
;	O	O
import	O	O
java.awt.Container	B-API	B-API
;	O	O
import	O	O
java.awt.Dimension	B-API	B-API
;	O	O
import	O	O
java.awt.FlowLayout	B-API	B-API
;	O	O
import	O	O
java.awt.Graphics	B-API	B-API
;	O	O
import	O	O
javax.swing.JButton	B-API	B-API
;	O	O
import	O	O
javax.swing.JFrame	B-API	B-API
;	O	O
public	O	O
class	O	O
MyButton	O	O
extends	O	O
JButton	O	O
{	O	O
private	O	O
static	O	O
final	O	O
long	O	O
serialVersionUID	O	O
=	O	O
1L	O	O
;	O	O
private	O	O
Color	O	O
circleColor	O	O
=	O	O
Color.BLACK	B-API	O
;	O	O
public	O	O
MyButton	O	O
(	O	O
String	O	O
label	O	O
)	O	O
{	O	O
super	O	O
(	O	O
label	O	O
)	O	O
;	O	O
}	O	O
@	O	O
Override	O	O
protected	O	O
void	O	O
paintComponent	O	O
(	O	O
Graphics	O	O
g	O	O
)	O	O
{	O	O
super.paintComponent	B-API	B-API
(	I-API	I-API
g	I-API	I-API
)	I-API	I-API
;	O	O
Dimension	O	O
originalSize	O	O
=	O	O
super.getPreferredSize	B-API	B-API
(	I-API	I-API
)	I-API	I-API
;	O	O
int	O	O
gap	O	O
=	O	O
(	O	O
int	O	O
)	O	O
(	O	O
originalSize.height	B-API	B-API
*	O	I-API
0.2	O	I-API
)	O	I-API
;	O	O
int	O	O
x	O	O
=	O	O
originalSize.width	B-API	O
+	O	O
gap	O	O
;	O	O
int	O	O
y	O	O
=	O	O
gap	O	O
;	O	O
int	O	O
diameter	O	O
=	O	O
originalSize.height	B-API	O
-	O	O
(	O	O
gap	O	O
*	O	O
2	O	O
)	O	O
;	O	O
g.setColor	B-API	B-API
(	I-API	I-API
circleColor	I-API	I-API
)	I-API	I-API
;	O	O
g.fillOval	B-API	O
(	I-API	O
x	I-API	O
,	I-API	O
y	I-API	O
,	I-API	O
diameter	I-API	O
,	I-API	O
diameter	I-API	O
)	I-API	O
;	O	O
}	O	O
@	O	O
Override	O	O
public	O	O
Dimension	O	O
getPreferredSize	O	O
(	O	O
)	O	O
{	O	O
Dimension	O	O
size	O	O
=	O	O
super.getPreferredSize	B-API	B-API
(	I-API	I-API
)	I-API	I-API
;	O	O
size.width	O	O
+=	O	O
size.height	O	O
;	O	O
return	O	O
size	O	O
;	O	O
}	O	O
/*Test	O	O
the	O	O
button*/	O	O
public	O	O
static	O	O
void	O	O
main	O	O
(	O	O
String	O	O
[	O	O
]	O	O
args	O	O
)	O	O
{	O	O
MyButton	O	O
button	O	O
=	O	O
new	O	O
MyButton	O	O
(	O	O
``	O	O
Hello	O	O
,	O	O
World	O	O
!	O	O
``	O	O
)	O	O
;	O	O
JFrame	O	O
frame	O	O
=	O	O
new	O	O
JFrame	O	B-API
(	O	I-API
)	O	I-API
;	O	O
frame.setDefaultCloseOperation	B-API	B-API
(	I-API	I-API
JFrame.EXIT_ON_CLOSE	I-API	I-API
)	I-API	I-API
;	O	O
frame.setSize	B-API	B-API
(	I-API	I-API
400	I-API	I-API
,	I-API	I-API
400	I-API	I-API
)	I-API	I-API
;	O	O
Container	O	O
contentPane	O	O
=	O	O
frame.getContentPane	B-API	B-API
(	I-API	I-API
)	I-API	I-API
;	O	O
contentPane.setLayout	B-API	B-API
(	I-API	I-API
new	I-API	I-API
FlowLayout	I-API	I-API
(	I-API	I-API
)	I-API	I-API
)	I-API	I-API
;	O	O
contentPane.add	B-API	O
(	I-API	O
button	I-API	O
)	I-API	O
;	O	O
frame.setVisible	B-API	B-API
(	I-API	I-API
true	I-API	I-API
)	I-API	I-API
;	O	O
}	O	O
}	O	O
Note	O	O
that	O	O
by	O	O
overriding	O	O
paintComponent	O	O
that	O	O
the	O	O
contents	O	O
of	O	O
the	O	O
button	O	O
can	O	O
be	O	O
changed	O	O
,	O	O
but	O	O
that	O	O
the	O	O
border	O	O
is	O	O
painted	O	O
by	O	O
the	O	O
paintBorder	O	O
method	O	O
.	O	O
The	O	O
getPreferredSize	O	O
method	O	O
also	O	O
needs	O	O
to	O	O
be	O	O
managed	O	O
in	O	O
order	O	O
to	O	O
dynamically	O	O
support	O	O
changes	O	O
to	O	O
the	O	O
content	O	O
.	O	O
Care	O	O
needs	O	O
to	O	O
be	O	O
taken	O	O
when	O	O
measuring	O	O
font	O	O
metrics	O	O
and	O	O
image	O	O
dimensions	O	O
.	O	O
For	O	O
creating	O	O
a	O	O
control	O	O
that	O	O
you	O	O
can	O	O
rely	O	O
on	O	O
,	O	O
the	O	O
above	O	O
code	O	O
is	O	O
not	O	O
the	O	O
correct	O	O
approach	O	O
.	O	O
Dimensions	O	O
and	O	O
colours	O	O
are	O	O
dynamic	O	O
in	O	O
Swing	O	O
and	O	O
are	O	O
dependent	O	O
on	O	O
the	O	O
look	O	O
and	O	O
feel	O	O
being	O	O
used	O	O
.	O	O
Even	O	O
the	O	O
default	O	O
Metal	O	O
look	O	O
has	O	O
changed	O	O
across	O	O
JRE	O	O
versions	O	O
.	O	O
It	O	O
would	O	O
be	O	O
better	O	O
to	O	O
implement	O	O
AbstractButton	O	O
and	O	O
conform	O	O
to	O	O
the	O	O
guidelines	O	O
set	O	O
out	O	O
by	O	O
the	O	O
Swing	O	O
API	O	O
.	O	O
A	O	O
good	O	O
starting	O	O
point	O	O
is	O	O
to	O	O
look	O	O
at	O	O
the	O	O
javax.swing.LookAndFeel	B-API	O
and	O	O
javax.swing.UIManager	B-API	B-API
classes	O	O
.	O	O
http	O	O
:	O	O
//docs.oracle.com/javase/8/docs/api/javax/swing/LookAndFeel.html	O	O
http	O	O
:	O	O
//docs.oracle.com/javase/8/docs/api/javax/swing/UIManager.html	O	O
Understanding	O	O
the	O	O
anatomy	O	O
of	O	O
LookAndFeel	O	O
is	O	O
useful	O	O
for	O	O
writing	O	O
controls	O	O
:	O	O
Creating	O	O
a	O	O
Custom	O	O
Look	O	O
and	O	O
Feel	O	O
When	O	O
I	O	O
was	O	O
first	O	O
learning	O	O
Java	O	O
we	O	O
had	O	O
to	O	O
make	O	O
Yahtzee	O	O
and	O	O
I	O	O
thought	O	O
it	O	O
would	O	O
be	O	O
cool	O	O
to	O	O
create	O	O
custom	O	O
Swing	O	O
components	O	O
and	O	O
containers	O	O
instead	O	O
of	O	O
just	O	O
drawing	O	O
everything	O	O
on	O	O
one	O	O
JPanel	O	O
.	O	O
The	O	O
benefit	O	O
of	O	O
extending	O	O
Swing	O	O
components	O	O
,	O	O
of	O	O
course	O	O
,	O	O
is	O	O
to	O	O
have	O	O
the	O	O
ability	O	O
to	O	O
add	O	O
support	O	O
for	O	O
keyboard	O	O
shortcuts	O	O
and	O	O
other	O	O
accessibility	O	O
features	O	O
that	O	O
you	O	O
ca	O	O
n't	O	O
do	O	O
just	O	O
by	O	O
having	O	O
a	O	O
paint	O	O
(	O	O
)	O	O
method	O	O
print	O	O
a	O	O
pretty	O	O
picture	O	O
.	O	O
It	O	O
may	O	O
not	O	O
be	O	O
done	O	O
the	O	O
best	O	O
way	O	O
however	O	O
,	O	O
but	O	O
it	O	O
may	O	O
be	O	O
a	O	O
good	O	O
starting	O	O
point	O	O
for	O	O
you	O	O
.	O	O
Edit	O	O
8/6	O	O
-	O	O
If	O	O
it	O	O
was	O	O
n't	O	O
apparent	O	O
from	O	O
the	O	O
images	O	O
,	O	O
each	O	O
Die	O	O
is	O	O
a	O	O
button	O	O
you	O	O
can	O	O
click	O	O
.	O	O
This	O	O
will	O	O
move	O	O
it	O	O
to	O	O
the	O	O
DiceContainer	O	O
below	O	O
.	O	O
Looking	O	O
at	O	O
the	O	O
source	O	O
code	O	O
you	O	O
can	O	O
see	O	O
that	O	O
each	O	O
Die	O	O
button	O	O
is	O	O
drawn	O	O
dynamically	O	O
,	O	O
based	O	O
on	O	O
its	O	O
value	O	O
.	O	O
Here	O	O
are	O	O
the	O	O
basic	O	O
steps	O	O
:	O	O
Create	O	O
a	O	O
class	O	O
that	O	O
extends	O	O
JComponent	O	O
Call	O	O
parent	O	O
constructor	O	O
super	O	O
(	O	O
)	O	O
in	O	O
your	O	O
constructors	O	O
Make	O	O
sure	O	O
you	O	O
class	O	O
implements	O	O
MouseListener	O	O
Put	O	O
this	O	O
in	O	O
the	O	O
constructor	O	O
:	O	O
enableInputMethods	B-API	B-API
(	I-API	I-API
true	I-API	I-API
)	I-API	I-API
;	O	O
addMouseListener	B-API	O
(	I-API	O
this	I-API	O
)	I-API	O
;	O	O
Override	O	O
these	O	O
methods	O	O
:	O	O
public	O	O
Dimension	O	O
getPreferredSize	B-API	B-API
(	I-API	I-API
)	I-API	I-API
public	O	O
Dimension	O	O
getMinimumSize	B-API	B-API
(	I-API	I-API
)	I-API	I-API
public	O	O
Dimension	O	O
getMaximumSize	B-API	O
(	I-API	O
)	I-API	O
Override	O	O
this	O	O
method	O	O
:	O	O
public	O	O
void	O	O
paintComponent	B-API	O
(	I-API	O
Graphics	I-API	O
g	I-API	O
)	I-API	O
The	O	O
amount	O	O
of	O	O
space	O	O
you	O	O
have	O	O
to	O	O
work	O	O
with	O	O
when	O	O
drawing	O	O
your	O	O
button	O	O
is	O	O
defined	O	O
by	O	O
getPreferredSize	B-API	B-API
(	I-API	I-API
)	I-API	I-API
,	O	O
assuming	O	O
getMinimumSize	B-API	B-API
(	I-API	I-API
)	I-API	I-API
and	O	O
getMaximumSize	B-API	B-API
(	I-API	I-API
)	I-API	I-API
return	O	O
the	O	O
same	O	O
value	O	O
.	O	O
I	O	O
have	O	O
n't	O	O
experimented	O	O
too	O	O
much	O	O
with	O	O
this	O	O
but	O	O
,	O	O
depending	O	O
on	O	O
the	O	O
layout	O	O
you	O	O
use	O	O
for	O	O
your	O	O
GUI	O	O
your	O	O
button	O	O
could	O	O
look	O	O
completely	O	O
different	O	O
.	O	O
And	O	O
finally	O	O
,	O	O
the	O	O
source	O	O
code	O	O
.	O	O
In	O	O
case	O	O
I	O	O
missed	O	O
anything	O	O
.	O	O
Does	O	O
doubling	O	O
the	O	O
\	O	O
work	O	O
?	O	O
insert	O	O
into	O	O
EscapeTest	O	O
(	O	O
text	O	O
)	O	O
values	O	O
(	O	O
'This	O	O
will	O	O
be	O	O
inserted	O	O
\\n	O	O
This	O	O
will	O	O
not	O	O
Partially	O	O
.	O	O
The	O	O
text	O	O
is	O	O
inserted	O	O
,	O	O
but	O	O
the	O	O
warning	O	O
is	O	O
still	O	O
generated	O	O
.	O	O
I	O	O
found	O	O
a	O	O
discussion	O	O
that	O	O
indicated	O	O
the	O	O
text	O	O
needed	O	O
to	O	O
be	O	O
preceded	O	O
with	O	O
'E	O	O
'	O	O
,	O	O
as	O	O
such	O	O
:	O	O
insert	O	O
into	O	O
EscapeTest	O	O
(	O	O
text	O	O
)	O	O
values	O	O
(	O	O
E'This	O	O
is	O	O
the	O	O
first	O	O
part	O	O
\n	O	O
And	O	O
this	O	O
is	O	O
the	O	O
second	O	O
'	O	O
)	O	O
;	O	O
This	O	O
suppressed	O	O
the	O	O
warning	O	O
,	O	O
but	O	O
the	O	O
text	O	O
was	O	O
still	O	O
not	O	O
being	O	O
returned	O	O
correctly	O	O
.	O	O
When	O	O
I	O	O
added	O	O
the	O	O
additional	O	O
slash	O	O
as	O	O
Michael	O	O
suggested	O	O
,	O	O
it	O	O
worked	O	O
.	O	O
As	O	O
such	O	O
:	O	O
insert	O	O
into	O	O
EscapeTest	O	O
(	O	O
text	O	O
)	O	O
values	O	O
(	O	O
E'This	O	O
is	O	O
the	O	O
first	O	O
part	O	O
\\n	O	O
And	O	O
this	O	O
is	O	O
the	O	O
second	O	O
'	O	O
)	O	O
;	O	O
Cool	O	O
.	O	O
I	O	O
also	O	O
found	O	O
the	O	O
documentation	O	O
regarding	O	O
the	O	O
E	O	O
:	O	O
http	O	O
:	O	O
//www.postgresql.org/docs/8.3/interactive/sql-syntax-lexical.html	O	O
#	O	O
SQL-SYNTAX-STRINGS	O	O
PostgreSQL	O	O
also	O	O
accepts	O	O
``	O	O
escape	O	O
''	O	O
string	O	O
constants	O	O
,	O	O
which	O	O
are	O	O
an	O	O
extension	O	O
to	O	O
the	O	O
SQL	O	O
standard	O	O
.	O	O
An	O	O
escape	O	O
string	O	O
constant	O	O
is	O	O
specified	O	O
by	O	O
writing	O	O
the	O	O
letter	O	O
E	O	O
(	O	O
upper	O	O
or	O	O
lower	O	O
case	O	O
)	O	O
just	O	O
before	O	O
the	O	O
opening	O	O
single	O	O
quote	O	O
,	O	O
e.g	O	O
.	O	O
E'foo	O	O
'	O	O
.	O	O
(	O	O
When	O	O
continuing	O	O
an	O	O
escape	O	O
string	O	O
constant	O	O
across	O	O
lines	O	O
,	O	O
write	O	O
E	O	O
only	O	O
before	O	O
the	O	O
first	O	O
opening	O	O
quote	O	O
.	O	O
)	O	O
Within	O	O
an	O	O
escape	O	O
string	O	O
,	O	O
a	O	O
backslash	O	O
character	O	B-API
(	O	I-API
\	O	I-API
)	O	I-API
begins	O	O
a	O	O
C-like	O	O
backslash	O	O
escape	O	O
sequence	O	O
,	O	O
in	O	O
which	O	O
the	O	O
combination	O	O
of	O	O
backslash	O	O
and	O	O
following	O	O
character	O	O
(	O	O
s	O	O
)	O	O
represents	O	O
a	O	O
special	O	O
byte	O	O
value	O	O
.	O	O
\b	O	O
is	O	O
a	O	O
backspace	O	O
,	O	O
\f	O	O
is	O	O
a	O	O
form	O	O
feed	O	O
,	O	O
\n	O	O
is	O	O
a	O	O
newline	O	O
,	O	O
\r	O	O
is	O	O
a	O	O
carriage	O	O
return	O	O
,	O	O
\t	O	O
is	O	O
a	O	O
tab	O	O
.	O	O
Also	O	O
supported	O	O
are	O	O
\digits	O	O
,	O	O
where	O	O
digits	O	O
represents	O	O
an	O	O
octal	O	O
byte	O	O
value	O	O
,	O	O
and	O	O
\xhexdigits	O	O
,	O	O
where	O	O
hexdigits	O	O
represents	O	O
a	O	O
hexadecimal	O	O
byte	O	O
value	O	O
.	O	O
(	O	O
It	O	O
is	O	O
your	O	O
responsibility	O	O
that	O	O
the	O	O
byte	O	O
sequences	O	O
you	O	O
create	O	O
are	O	O
valid	O	O
characters	O	O
in	O	O
the	O	O
server	O	O
character	O	O
set	O	O
encoding	O	O
.	O	O
)	O	O
Any	O	O
other	O	O
character	O	O
following	O	O
a	O	O
backslash	O	O
is	O	O
taken	O	O
literally	O	O
.	O	O
Thus	O	O
,	O	O
to	O	O
include	O	O
a	O	O
backslash	O	O
character	O	O
,	O	O
write	O	O
two	O	O
backslashes	O	O
(	O	O
\\	O	O
)	O	O
.	O	O
Also	O	O
,	O	O
a	O	O
single	O	O
quote	O	O
can	O	O
be	O	O
included	O	O
in	O	O
an	O	O
escape	O	O
string	O	O
by	O	O
writing	O	O
\	O	O
'	O	O
,	O	O
in	O	O
addition	O	O
to	O	O
the	O	O
normal	O	O
way	O	O
of	O	O
''	O	O
.	O	O
Without	O	O
trying	O	O
to	O	O
sound	O	O
too	O	O
vague	O	O
but	O	O
I	O	O
think	O	O
Windows	O	O
Network	O	O
Load	O	O
Balancing	O	O
(	O	O
NLB	O	O
)	O	O
should	O	O
handle	O	O
this	O	O
for	O	O
you	O	O
.	O	O
Off	O	O
the	O	O
top	O	O
of	O	O
my	O	O
head	O	O
,	O	O
I	O	O
would	O	O
think	O	O
that	O	O
you	O	O
'd	O	O
need	O	O
to	O	O
maintain	O	O
some	O	O
form	O	O
of	O	O
a	O	O
data	O	O
structure	O	O
in	O	O
the	O	O
JavaScript	O	O
that	O	O
reflects	O	O
the	O	O
items	O	O
in	O	O
the	O	O
current	O	O
dropdown	O	O
list	O	O
.	O	O
You	O	O
'd	O	O
also	O	O
need	O	O
a	O	O
reference	O	O
to	O	O
the	O	O
currently	O	O
active/selected	O	O
item	O	O
.	O	O
Each	O	O
time	O	O
or	O	O
is	O	O
fired	O	O
,	O	O
update	O	O
the	O	O
reference	O	O
to	O	O
the	O	O
active/selected	O	O
item	O	O
in	O	O
the	O	O
data	O	O
structure	O	O
.	O	O
To	O	O
provide	O	O
highlighting	O	O
information	O	O
on	O	O
the	O	O
UI	O	O
,	O	O
add	O	O
or	O	O
remove	O	O
a	O	O
class	O	O
name	O	O
that	O	O
is	O	O
styled	O	O
via	O	O
CSS	O	O
based	O	O
on	O	O
if	O	O
the	O	O
item	O	O
is	O	O
active/selected	O	O
or	O	O
not	O	O
.	O	O
Also	O	O
,	O	O
this	O	O
is	O	O
n't	O	O
a	O	O
biggy	O	O
,	O	O
but	O	O
is	O	O
not	O	O
really	O	O
standard	O	O
(	O	O
look	O	O
into	O	O
createTextNode	B-API	O
(	I-API	O
)	I-API	O
,	O	O
createElement	B-API	B-API
(	I-API	I-API
)	I-API	I-API
,	O	O
and	O	O
appendChild	B-API	O
(	I-API	O
)	I-API	O
for	O	O
standard	O	O
ways	O	O
of	O	O
creating	O	O
data	O	O
)	O	O
.	O	O
You	O	O
may	O	O
also	O	O
want	O	O
to	O	O
see	O	O
about	O	O
attaching	O	O
event	O	O
handlers	O	O
in	O	O
the	O	O
JavaScript	O	O
rather	O	O
than	O	O
doing	O	O
so	O	O
in	O	O
an	O	O
HTML	O	O
attribute	O	O
.	O	O
A	O	O
few	O	O
things	O	O
:	O	O
You	O	O
are	O	O
creating	O	O
(	O	O
and	O	O
not	O	O
using	O	O
)	O	O
an	O	O
unnecessary	O	O
toplevel	O	O
,	O	O
named	O	O
window	O	O
.	O	O
You	O	O
can	O	O
just	O	O
delete	O	O
these	O	O
lines	O	O
:	O	O
window	O	O
=	O	O
,	O	O
``	O	O
delete_event	O	O
''	O	O
,	O	O
,	O	O
,	O	O
``	O	O
destroy	O	O
''	O	O
,	O	O
,	O	O
gtk_window_new	B-API	O
(	I-API	O
GTK_WINDOW_TOPLEVEL	I-API	O
)	I-API	O
;	O	O
g_signal_connect	B-API	O
(	I-API	O
G_OBJECT	B-API	O
(	I-API	O
window	I-API	O
)	I-API	O
G_CALLBACK	B-API	O
(	I-API	O
delete_event	I-API	O
)	I-API	O
NULL	I-API	O
)	I-API	O
;	O	O
g_signal_connect	B-API	O
(	I-API	O
G_OBJECT	I-API	O
(	I-API	O
window	I-API	O
)	I-API	O
G_CALLBACK	B-API	O
(	I-API	O
destroy	I-API	O
)	I-API	O
Also	O	O
,	O	O
the	O	O
flow	O	O
does	O	O
n't	O	O
seem	O	O
quite	O	O
right	O	O
.	O	O
gtk_main	B-API	O
(	I-API	O
)	I-API	O
starts	O	O
the	O	O
GTK	O	O
main	O	O
loop	O	O
,	O	O
which	O	O
blocks	O	O
until	O	O
something	O	O
exits	O	O
it	O	O
.	O	O
gtk_dialog_run	B-API	O
(	I-API	O
)	I-API	O
also	O	O
starts	O	O
a	O	O
main	O	O
loop	O	O
,	O	O
but	O	O
it	O	O
exits	O	O
as	O	O
soon	O	O
as	O	O
one	O	O
of	O	O
the	O	O
buttons	O	O
is	O	O
clicked	O	O
.	O	O
I	O	O
think	O	O
it	O	O
might	O	O
be	O	O
enough	O	O
for	O	O
you	O	O
to	O	O
remove	O	O
the	O	O
gtk_init_add	B-API	O
(	I-API	O
)	I-API	O
and	O	O
gtk_main	B-API	O
(	I-API	O
)	I-API	O
calls	O	O
,	O	O
and	O	O
simply	O	O
deal	O	O
with	O	O
the	O	O
return	O	O
value	O	O
.	O	O
Also	O	O
the	O	O
gtk_widget_destroy	B-API	B-API
(	I-API	I-API
)	I-API	I-API
call	O	O
is	O	O
unnecessary	O	O
,	O	O
as	O	O
the	O	O
dialog	O	O
window	O	O
is	O	O
automatically	O	O
destroyed	O	O
when	O	O
gtk_dialog_run	B-API	O
(	I-API	O
)	I-API	O
returns	O	O
.	O	O
Hmm	O	O
,	O	O
ok	O	O
.	O	O
I	O	O
'd	O	O
suggest	O	O
code	O	O
like	O	O
this	O	O
,	O	O
then	O	O
:	O	O
typedef	O	O
struct	O	O
{	O	O
int	O	O
type	O	O
;	O	O
int	O	O
result	O	O
;	O	O
}	O	O
DialogData	O	O
;	O	O
static	O	O
{	O	O
DialogData	O	O
*dialog_data	O	O
=	O	O
user_data	O	O
;	O	O
GtkWidget	O	O
*dialog	O	O
;	O	O
if	O	O
(	O	O
dialog_data-type	O	O
MB_YESNO	O	O
)	O	O
dialog	O	O
=	O	O
;	O	O
else	O	O
dialog	O	O
=	O	O
;	O	O
//	O	O
Set	O	O
title	O	O
,	O	O
etc	O	O
.	O	O
dialog_data-result	O	O
=	O	O
;	O	O
;	O	O
//	O	O
Quits	O	O
the	O	O
main	O	O
loop	O	O
run	O	O
in	O	O
return	O	O
FALSE	O	O
;	O	O
}	O	O
int	O	O
{	O	O
DialogData	O	O
dialog_data	O	O
;	O	O
dialog_data.type	O	O
=	O	O
type	O	O
;	O	O
;	O	O
;	O	O
//	O	O
Do	O	O
stuff	O	O
based	O	O
on	O	O
(	O	O
gpointer	O	O
user_data	O	O
)	O	O
gtk_message_dialog_new	B-API	O
(	I-API	O
...	I-API	O
)	I-API	O
gtk_message_dialog_new	B-API	O
(	I-API	O
...	I-API	O
)	I-API	O
gtk_dialog_run	B-API	O
(	I-API	O
...	I-API	O
)	I-API	O
gtk_main_quit	B-API	O
(	I-API	O
)	I-API	O
MessageBox	B-API	B-API
(	I-API	I-API
)	I-API	I-API
MessageBox	B-API	B-API
(	I-API	I-API
...	I-API	I-API
)	I-API	I-API
(	O	O
display_dialog	O	O
,	O	O
dialog_data	O	O
)	O	O
gtk_main	B-API	O
(	I-API	O
)	I-API	O
The	O	O
struct	O	O
is	O	O
because	O	O
you	O	O
need	O	O
to	O	O
pass	O	O
around	O	O
a	O	O
couple	O	O
pieces	O	O
of	O	O
data	O	O
.	O	O
The	O	O
gtk_idle_add	B-API	O
(	I-API	O
)	I-API	O
call	O	O
adds	O	O
a	O	O
method	O	O
to	O	O
be	O	O
run	O	O
when	O	O
the	O	O
main	O	O
loop	O	O
is	O	O
running	O	O
and	O	O
idle	O	O
,	O	O
and	O	O
the	O	O
return	O	O
value	O	O
from	O	O
the	O	O
display_dialog	B-API	O
(	I-API	O
)	I-API	O
call	O	O
means	O	O
that	O	O
it	O	O
's	O	O
only	O	O
run	O	O
once	O	O
.	O	O
After	O	O
we	O	O
get	O	O
the	O	O
result	O	O
from	O	O
the	O	O
dialog	O	O
,	O	O
we	O	O
quit	O	O
the	O	O
main	O	O
loop	O	O
.	O	O
That	O	O
'll	O	O
cause	O	O
the	O	O
gtk_main	B-API	O
(	I-API	O
)	I-API	O
in	O	O
your	O	O
main	O	O
MessageBox	B-API	B-API
(	I-API	I-API
)	I-API	I-API
method	O	O
to	O	O
return	O	O
,	O	O
and	O	O
you	O	O
'll	O	O
be	O	O
able	O	O
to	O	O
access	O	O
the	O	O
result	O	O
from	O	O
there	O	O
.	O	O
Hope	O	O
this	O	O
helps	O	O
!	O	O
This	O	O
may	O	O
be	O	O
too	O	O
basic	O	O
or	O	O
limited	O	O
of	O	O
a	O	O
solution	O	O
,	O	O
but	O	O
could	O	O
n't	O	O
you	O	O
do	O	O
a	O	O
String.split	B-API	B-API
(	I-API	I-API
)	I-API	I-API
on	O	O
each	O	O
line	O	O
of	O	O
the	O	O
file	O	O
,	O	O
remembering	O	O
the	O	O
result	O	O
array	O	O
of	O	O
the	O	O
first	O	O
line	O	O
to	O	O
generate	O	O
the	O	O
XML	O	O
,	O	O
and	O	O
just	O	O
spit	O	O
each	O	O
line	O	O
's	O	O
array	O	O
data	O	O
out	O	O
with	O	O
the	O	O
proper	O	O
XML	O	O
elements	O	O
padding	O	O
each	O	O
iteration	O	O
of	O	O
a	O	O
loop	O	O
?	O	O
Maybe	O	O
this	O	O
might	O	O
help	O	O
:	O	O
JSefa	B-API	O
You	O	O
can	O	O
read	O	O
CSV	O	O
file	O	O
with	O	O
this	O	O
tool	O	O
and	O	O
serialize	O	O
it	O	O
to	O	O
XML	O	O
.	O	O
I	O	O
do	O	O
n't	O	O
understand	O	O
why	O	O
you	O	O
would	O	O
want	O	O
to	O	O
do	O	O
this	O	O
.	O	O
It	O	O
sounds	O	O
almost	O	O
like	O	O
cargo	O	O
cult	O	O
coding	O	O
.	O	O
Converting	O	O
a	O	O
CSV	O	O
file	O	O
to	O	O
XML	O	O
does	O	O
n't	O	O
add	O	O
any	O	O
value	O	O
.	O	O
Your	O	O
program	O	O
is	O	O
already	O	O
reading	O	O
the	O	O
CSV	O	O
file	O	O
,	O	O
so	O	O
arguing	O	O
that	O	O
you	O	O
need	O	O
XML	O	O
does	O	O
n't	O	O
work	O	O
.	O	O
On	O	O
the	O	O
other	O	O
hand	O	O
,	O	O
reading	O	O
the	O	O
CSV	O	O
file	O	O
,	O	O
doing	O	O
something	O	O
with	O	O
the	O	O
values	O	O
,	O	O
and	O	O
then	O	O
serializing	O	O
to	O	O
XML	O	B-API
does	O	O
make	O	O
sense	O	O
(	O	O
well	O	O
,	O	O
as	O	O
much	O	O
as	O	O
using	O	O
XML	O	O
can	O	O
make	O	O
sense	O	O
...	O	O
;	O	O
)	O	O
)	O	O
but	O	O
you	O	O
would	O	O
supposedly	O	O
already	O	O
have	O	O
a	O	O
means	O	O
of	O	O
serializing	O	O
to	O	O
XML	O	O
.	O	O
As	O	O
far	O	O
as	O	O
I	O	O
know	O	O
,	O	O
there	O	O
's	O	O
no	O	O
ready-made	O	O
library	O	O
to	O	O
do	O	O
this	O	O
for	O	O
you	O	O
,	O	O
but	O	O
producing	O	O
a	O	O
tool	O	O
capable	O	O
of	O	O
translating	O	O
from	O	O
CSV	O	O
to	O	O
XML	O	O
should	O	O
only	O	O
require	O	O
you	O	O
to	O	O
write	O	O
a	O	O
crude	O	O
CSV	O	O
parser	O	O
and	O	O
hook	O	O
up	O	O
JDOM	B-API	O
(	O	O
or	O	O
your	O	O
XML	O	B-API
Java	O	O
library	O	O
of	O	O
choice	O	O
)	O	O
with	O	O
some	O	O
glue	O	O
code	O	O
.	O	O
There	O	O
is	O	O
nothing	O	O
I	O	O
know	O	O
of	O	O
that	O	O
can	O	O
do	O	O
this	O	O
without	O	O
you	O	O
at	O	O
least	O	O
writing	O	O
a	O	O
little	O	O
bit	O	O
of	O	O
code	O	O
...	O	O
You	O	O
will	O	O
need	O	O
2	O	O
separate	O	O
library	O	O
:	O	O
A	O	O
CSV	O	O
Parser	O	O
Framework	O	O
An	O	O
XML	O	O
Serialization	O	O
Framework	O	O
The	O	O
CSV	O	O
parser	O	O
I	O	O
would	O	O
recommend	O	O
(	O	O
unless	O	O
you	O	O
want	O	O
to	O	O
have	O	O
a	O	O
little	O	O
bit	O	O
of	O	O
fun	O	O
to	O	O
write	O	O
your	O	O
own	O	O
CSV	O	O
Parser	O	O
)	O	O
is	O	O
OpenCSV	O	O
(	O	O
A	O	O
SourceForge	O	O
Project	O	O
for	O	O
parsing	O	O
CSV	O	O
Data	O	O
)	O	O
The	O	O
XML	O	O
Serialization	O	O
Framework	O	O
should	O	O
be	O	O
something	O	O
that	O	O
can	O	O
scale	O	O
in	O	O
case	O	O
you	O	O
want	O	O
to	O	O
transform	O	O
large	O	O
(	O	O
or	O	O
huge	O	O
)	O	O
CSV	O	O
file	O	O
to	O	O
XML	O	O
:	O	O
My	O	O
recommendation	O	O
is	O	O
the	O	O
Sun	O	O
Java	O	O
Streaming	O	O
XML	O	O
Parser	O	O
Framework	O	O
(	O	O
See	O	O
here	O	O
)	O	O
which	O	O
allows	O	O
pull-parsing	O	O
AND	O	O
serialization	O	O
.	O	O
IE	O	O
8	O	O
is	O	O
supposed	O	O
to	O	O
have	O	O
better	O	O
tools	O	O
,	O	O
but	O	O
the	O	O
IE	O	O
Developer	O	O
Toolbar	O	O
is	O	O
pretty	O	O
good	O	O
.	O	O
You	O	O
might	O	O
find	O	O
Firebug	O	O
Lite	O	O
useful	O	O
for	O	O
that	O	O
.	O	O
Its	O	O
bookmarklet	O	O
should	O	O
be	O	O
especially	O	O
useful	O	O
when	O	O
debugging	O	O
on	O	O
a	O	O
user	O	O
's	O	O
machine	O	O
.	O	O
This	O	O
has	O	O
religious	O	O
war	O	O
potential	O	O
,	O	O
but	O	O
it	O	O
seems	O	O
to	O	O
me	O	O
that	O	O
if	O	O
you	O	O
're	O	O
using	O	O
a	O	O
getter/setter	O	O
,	O	O
you	O	O
should	O	O
use	O	O
it	O	O
internally	O	O
as	O	O
well	O	O
-	O	O
using	O	O
both	O	O
will	O	O
lead	O	O
to	O	O
maintenance	O	O
problems	O	O
down	O	O
the	O	O
road	O	O
(	O	O
e.g	O	O
.	O	O
somebody	O	O
adds	O	O
code	O	O
to	O	O
a	O	O
setter	O	O
that	O	O
needs	O	O
to	O	O
run	O	O
every	O	O
time	O	O
that	O	O
property	O	O
is	O	O
set	O	O
,	O	O
and	O	O
the	O	O
property	O	O
is	O	O
being	O	O
set	O	O
internally	O	O
w/o	O	O
that	O	O
setter	O	O
being	O	O
called	O	O
)	O	O
.	O	O
It	O	O
depends	O	O
on	O	O
how	O	O
the	O	O
property	O	O
is	O	O
used	O	O
.	O	O
For	O	O
example	O	O
,	O	O
say	O	O
you	O	O
have	O	O
a	O	O
student	O	O
object	O	O
that	O	O
has	O	O
a	O	O
name	O	O
property	O	O
.	O	O
You	O	O
could	O	O
use	O	O
your	O	O
Get	O	O
method	O	O
to	O	O
pull	O	O
the	O	O
name	O	O
from	O	O
the	O	O
database	O	O
,	O	O
if	O	O
it	O	O
has	O	O
n't	O	O
been	O	O
retrieved	O	O
already	O	O
.	O	O
This	O	O
way	O	O
you	O	O
are	O	O
reducing	O	O
unnecessary	O	O
calls	O	O
to	O	O
the	O	O
database	O	O
.	O	O
Now	O	O
let	O	O
's	O	O
say	O	O
you	O	O
have	O	O
a	O	O
private	O	O
integer	O	O
counter	O	O
in	O	O
your	O	O
object	O	O
that	O	O
counts	O	O
the	O	O
number	O	O
of	O	O
times	O	O
the	O	O
name	O	O
has	O	O
been	O	O
called	O	O
.	O	O
You	O	O
may	O	O
want	O	O
to	O	O
not	O	O
use	O	O
the	O	O
Get	O	O
method	O	O
from	O	O
inside	O	O
the	O	O
object	O	O
because	O	O
it	O	O
would	O	O
produce	O	O
an	O	O
invalid	O	O
count	O	O
.	O	O
Am	O	O
I	O	O
just	O	O
going	O	O
overboard	O	O
here	O	O
?	O	O
Perhaps	O	O
;	O	O
)	O	O
Another	O	O
approach	O	O
would	O	O
be	O	O
to	O	O
utilize	O	O
a	O	O
private/protected	O	O
method	O	O
to	O	O
actually	O	O
do	O	O
the	O	O
getting	O	O
(	O	O
caching/db/etc	O	O
)	O	O
,	O	O
and	O	O
a	O	O
public	O	O
wrapper	O	O
for	O	O
it	O	O
that	O	O
increments	O	O
the	O	O
count	O	O
:	O	O
PHP	O	O
:	O	O
public	O	O
function	O	O
{	O	O
;	O	O
return	O	O
;	O	O
}	O	O
protected	O	O
function	O	O
{	O	O
return	O	O
getName	B-API	B-API
(	I-API	I-API
)	I-API	I-API
$	O	I-API
this-incrementNameCalled	B-API	I-API
(	I-API	I-API
)	I-API	I-API
$	O	O
this-_getName	B-API	O
(	I-API	O
)	I-API	O
_getName	B-API	O
(	I-API	O
)	I-API	O
and	O	O
then	O	O
from	O	O
within	O	O
the	O	O
object	O	O
itself	O	O
:	O	O
PHP	O	O
:	O	O
$	O	O
name	O	O
=	O	O
$	O	O
this-_getName	B-API	B-API
(	I-API	I-API
)	I-API	I-API
This	O	O
way	O	O
you	O	O
can	O	O
still	O	O
use	O	O
that	O	O
first	O	O
argument	O	O
for	O	O
something	O	O
else	O	O
(	O	O
like	O	O
sending	O	O
a	O	O
flag	O	O
for	O	O
whether	O	O
or	O	O
not	O	O
to	O	O
used	O	O
cached	O	O
data	O	O
here	O	O
perhaps	O	O
)	O	O
.	O	O
Well	O	O
,	O	O
it	O	O
seems	O	O
with	O	O
C	O	O
#	O	O
3.0	O	O
properties	O	O
'	O	O
default	O	O
implementation	O	O
,	O	O
the	O	O
decision	O	O
is	O	O
taken	O	O
for	O	O
you	O	O
;	O	O
you	O	O
HAVE	O	O
to	O	O
set	O	O
the	O	O
property	O	O
using	O	O
the	O	O
(	O	O
possibly	O	O
private	O	O
)	O	O
property	O	O
setter	O	O
.	O	O
I	O	O
personally	O	O
only	O	O
use	O	O
the	O	O
private	O	O
member-behind	O	O
when	O	O
not	O	O
doing	O	O
so	O	O
would	O	O
cause	O	O
the	O	O
object	O	O
to	O	O
fall	O	O
in	O	O
an	O	O
less	O	O
than	O	O
desirable	O	O
state	O	O
,	O	O
such	O	O
as	O	O
when	O	O
initializing	O	O
or	O	O
when	O	O
caching/lazy	O	O
loading	O	O
is	O	O
involved	O	O
.	O	O
As	O	O
stated	O	O
in	O	O
some	O	O
of	O	O
the	O	O
comments	O	O
:	O	O
Sometimes	O	O
you	O	O
should	O	O
,	O	O
sometimes	O	O
you	O	O
should	O	O
n't	O	O
.	O	O
The	O	O
great	O	O
part	O	O
about	O	O
private	O	O
variables	O	O
is	O	O
that	O	O
you	O	O
are	O	O
able	O	O
to	O	O
see	O	O
all	O	O
the	O	O
places	O	O
they	O	O
are	O	O
used	O	O
when	O	O
you	O	O
change	O	O
something	O	O
.	O	O
If	O	O
your	O	O
getter/setter	O	O
does	O	O
something	O	O
you	O	O
need	O	O
,	O	O
use	O	O
it	O	O
.	O	O
If	O	O
it	O	O
does	O	O
n't	O	O
matter	O	O
you	O	O
decide	O	O
.	O	O
The	O	O
opposite	O	O
case	O	O
could	O	O
be	O	O
made	O	O
that	O	O
if	O	O
you	O	O
use	O	O
the	O	O
getter/setter	O	O
and	O	O
somebody	O	O
changes	O	O
the	O	O
getter/setter	O	O
they	O	O
have	O	O
to	O	O
analyze	O	O
all	O	O
the	O	O
places	O	O
the	O	O
getter	O	O
and	O	O
setter	O	O
is	O	O
used	O	O
internally	O	O
to	O	O
see	O	O
if	O	O
it	O	O
messes	O	O
something	O	O
up	O	O
.	O	O
Personally	O	O
,	O	O
I	O	O
feel	O	O
like	O	O
it	O	O
's	O	O
important	O	O
to	O	O
remain	O	O
consistent	O	O
.	O	O
If	O	O
you	O	O
have	O	O
getters	O	O
and	O	O
setters	O	O
,	O	O
use	O	O
them	O	O
.	O	O
The	O	O
only	O	O
time	O	O
I	O	O
would	O	O
access	O	O
a	O	O
field	O	O
directly	O	O
is	O	O
when	O	O
the	O	O
accessor	O	O
has	O	O
a	O	O
lot	O	O
of	O	O
overhead	O	O
.	O	O
It	O	O
may	O	O
feel	O	O
like	O	O
you	O	O
're	O	O
bloating	O	O
your	O	O
code	O	O
unnecessarily	O	O
,	O	O
but	O	O
it	O	O
can	O	O
certainly	O	O
save	O	O
a	O	O
whole	O	O
lot	O	O
of	O	O
headache	O	O
in	O	O
the	O	O
future	O	O
.	O	O
The	O	O
classic	O	O
example	O	O
:	O	O
Later	O	O
on	O	O
,	O	O
you	O	O
may	O	O
desire	O	O
to	O	O
change	O	O
the	O	O
way	O	O
that	O	O
field	O	O
works	O	O
.	O	O
Maybe	O	O
it	O	O
should	O	O
be	O	O
calculated	O	O
on-the-fly	O	O
or	O	O
maybe	O	O
you	O	O
would	O	O
like	O	O
to	O	O
use	O	O
a	O	O
different	O	O
type	O	O
for	O	O
the	O	O
backing	O	O
store	O	O
.	O	O
If	O	O
you	O	O
are	O	O
accessing	O	O
properties	O	O
directly	O	O
,	O	O
a	O	O
change	O	O
like	O	O
that	O	O
can	O	O
break	O	O
an	O	O
awful	O	O
lot	O	O
of	O	O
code	O	O
in	O	O
one	O	O
swell	O	O
foop	O	O
.	O	O
i	O	O
can	O	O
be	O	O
wrong	O	O
because	O	O
i	O	O
'm	O	O
autodidact	O	O
,	O	O
but	O	O
i	O	O
NEVER	O	O
user	O	O
public	O	O
properties	O	O
in	O	O
my	O	O
Java	O	O
clases	O	O
,	O	O
they	O	O
are	O	O
allways	O	O
private	O	O
or	O	O
protected	O	O
,	O	O
so	O	O
that	O	O
outside	O	O
code	O	O
must	O	O
access	O	O
by	O	O
getters/setters	O	O
.	O	O
it	O	O
's	O	O
better	O	O
for	O	O
mainteance	O	O
/	O	O
modification	O	O
purposes	O	O
.	O	O
And	O	O
for	O	O
inside	O	O
class	O	O
code	O	O
...	O	O
if	O	O
getter	O	O
method	O	O
is	O	O
trivial	O	O
i	O	O
use	O	O
the	O	O
property	O	O
directly	O	O
,	O	O
but	O	O
i	O	O
allways	O	O
use	O	O
the	O	O
setter	O	O
methods	O	O
because	O	O
i	O	O
could	O	O
easily	O	O
add	O	O
code	O	O
to	O	O
fire	O	O
events	O	O
if	O	O
i	O	O
wish	O	O
Does	O	O
n't	O	O
this	O	O
depend	O	O
on	O	O
the	O	O
hardware	O	O
as	O	O
well	O	O
as	O	O
number	O	O
of	O	O
threads	O	O
and	O	O
stuff	O	O
?	O	O
I	O	O
would	O	O
make	O	O
a	O	O
simple	O	O
test	O	O
and	O	O
run	O	O
it	O	O
with	O	O
increasing	O	O
amounts	O	O
of	O	O
threads	O	O
hammering	O	O
and	O	O
see	O	O
what	O	O
seems	O	O
best	O	O
.	O	O
It	O	O
depends	O	O
on	O	O
what	O	O
kind	O	O
of	O	O
application	O	O
you	O	O
are	O	O
building	O	O
.	O	O
Create	O	O
a	O	O
representative	O	O
test	O	O
scenario	O	O
,	O	O
and	O	O
start	O	O
hammering	O	O
away	O	O
.	O	O
Then	O	O
you	O	O
will	O	O
know	O	O
the	O	O
definitive	O	O
answer	O	O
.	O	O
Besides	O	O
your	O	O
use	O	O
case	O	O
,	O	O
it	O	O
also	O	O
depends	O	O
on	O	O
CPU	O	O
,	O	O
memory	O	O
,	O	O
front-side	O	O
bus	O	O
,	O	O
operating	O	O
system	O	O
,	O	O
cache	O	O
settings	O	O
,	O	O
etcetera	O	O
.	O	O
Seriously	O	O
,	O	O
just	O	O
test	O	O
your	O	O
own	O	O
scenario	O	O
.	O	O
If	O	O
you	O	O
need	O	O
some	O	O
numbers	O	O
(	O	O
that	O	O
actually	O	O
may	O	O
mean	O	O
nothing	O	O
in	O	O
your	O	O
scenario	O	O
)	O	O
:	O	O
Oracle	O	O
Berkeley	O	O
DB	O	O
:	O	O
Performance	O	O
Metrics	O	O
and	O	O
Benchmarks	O	O
Performance	O	O
Metrics	O	O
Benchmarks	O	O
:	O	O
Berkeley	O	O
DB	O	O
What	O	O
I	O	O
did	O	O
when	O	O
working	O	O
against	O	O
a	O	O
database	O	O
of	O	O
unknown	O	O
performance	O	O
was	O	O
to	O	O
measure	O	O
turnaround	O	O
time	O	O
on	O	O
my	O	O
queries	O	O
.	O	O
I	O	O
kept	O	O
upping	O	O
the	O	O
thread	O	O
count	O	O
until	O	O
turn-around	O	O
time	O	O
dropped	O	O
,	O	O
and	O	O
dropping	O	O
the	O	O
thread	O	O
count	O	O
until	O	O
turn-around	O	O
time	O	O
improved	O	O
(	O	O
well	O	O
,	O	O
it	O	O
was	O	O
processes	O	O
in	O	O
my	O	O
environment	O	O
,	O	O
but	O	O
whatever	O	O
)	O	O
.	O	O
There	O	O
were	O	O
moving	O	O
averages	O	O
and	O	O
all	O	O
sorts	O	O
of	O	O
metrics	O	O
involved	O	O
,	O	O
but	O	O
the	O	O
take-away	O	O
lesson	O	O
was	O	O
:	O	O
just	O	O
adapt	O	O
to	O	O
how	O	O
things	O	O
are	O	O
working	O	O
at	O	O
the	O	O
moment	O	O
.	O	O
You	O	O
never	O	O
know	O	O
when	O	O
the	O	O
DBAs	O	O
will	O	O
improve	O	O
performance	O	O
or	O	O
hardware	O	O
will	O	O
be	O	O
upgraded	O	O
,	O	O
or	O	O
perhaps	O	O
another	O	O
process	O	O
will	O	O
come	O	O
along	O	O
to	O	O
load	O	O
down	O	O
the	O	O
system	O	O
while	O	O
you	O	O
're	O	O
running	O	O
.	O	O
So	O	O
adapt	O	O
.	O	O
Oh	O	O
,	O	O
and	O	O
another	O	O
thing	O	O
:	O	O
avoid	O	O
process	O	O
switches	O	O
if	O	O
you	O	O
can	O	O
-	O	O
batch	O	O
things	O	O
up	O	O
.	O	O
Oh	O	O
,	O	O
I	O	O
should	O	O
make	O	O
this	O	O
clear	O	O
:	O	O
this	O	O
all	O	O
happened	O	O
at	O	O
run	O	O
time	O	O
,	O	O
not	O	O
during	O	O
development	O	O
.	O	O
The	O	O
problem	O	O
is	O	O
that	O	O
the	O	O
Distinct	O	O
operator	O	O
does	O	O
not	O	O
grant	O	O
that	O	O
it	O	O
will	O	O
maintain	O	O
the	O	O
original	O	O
order	O	O
of	O	O
values	O	O
.	O	O
So	O	O
your	O	O
query	O	O
will	O	O
need	O	O
to	O	O
work	O	O
like	O	O
this	O	O
var	O	O
names	O	O
=	O	O
(	O	O
from	O	O
DataRow	O	O
dr	O	O
in	O	O
dataTable.Rows	B-API	O
select	I-API	O
(	I-API	O
string	I-API	O
)	I-API	O
dr	I-API	O
[	I-API	O
``	I-API	O
Name	I-API	O
''	I-API	O
]	I-API	O
)	I-API	O
.Distinct	B-API	O
(	I-API	O
)	I-API	O
.OrderBy	B-API	O
(	I-API	O
name	I-API	O
=	I-API	O
name	I-API	O
)	I-API	O
;	O	O
Try	O	O
the	O	O
following	O	O
var	O	O
names	O	O
=	O	O
(	O	O
from	O	O
dr	O	O
in	O	O
dataTable.Rows	B-API	O
select	I-API	O
(	I-API	O
string	I-API	O
)	I-API	O
dr	I-API	O
[	I-API	O
``	I-API	O
Name	I-API	O
''	I-API	O
]	I-API	O
)	I-API	O
.Distinct	B-API	O
(	I-API	O
)	I-API	O
.OrderBy	B-API	O
(	I-API	O
name	I-API	O
=	I-API	O
name	I-API	O
)	I-API	O
;	O	O
this	O	O
should	O	O
work	O	O
for	O	O
what	O	O
you	O	O
need	O	O
.	O	O
ActiveMQ	O	O
works	O	O
well	O	O
with	O	O
C	O	O
#	O	O
using	O	O
the	O	O
Spring.NET	O	O
integrations	O	O
and	O	O
NMS	O	O
.	O	O
A	O	O
post	O	O
with	O	O
some	O	O
links	O	O
to	O	O
get	O	O
you	O	O
started	O	O
in	O	O
that	O	O
direction	O	O
is	O	O
here	O	O
.	O	O
Also	O	O
consider	O	O
using	O	O
MSMQ	O	O
(	O	O
The	O	O
System.Messaging	O	B-API
namespace	O	O
)	O	O
or	O	O
a	O	O
.NET	O	O
based	O	O
asynchronous	O	O
messaging	O	O
solution	O	O
,	O	O
with	O	O
some	O	O
options	O	O
here	O	O
.	O	O
Sorry	O	O
if	O	O
this	O	O
is	O	O
n't	O	O
what	O	O
you	O	O
are	O	O
asking	O	O
for	O	O
...	O	O
Have	O	O
you	O	O
considered	O	O
some	O	O
sort	O	O
of	O	O
cache	O	O
behind	O	O
the	O	O
scenes	O	O
that	O	O
acts	O	O
a	O	O
bit	O	O
like	O	O
the	O	O
``	O	O
bucket	O	O
system	O	O
''	O	O
when	O	O
using	O	O
asynchronous	O	O
sockets	O	O
in	O	O
c/c++	O	O
using	O	O
winsock	O	O
?	O	O
Basicly	O	O
,	O	O
it	O	O
works	O	O
by	O	O
accepting	O	O
requests	O	O
,	O	O
and	O	O
sends	O	O
an	O	O
immediate	O	O
response	O	O
back	O	O
to	O	O
the	O	O
web	O	O
app	O	O
,	O	O
and	O	O
when	O	O
it	O	O
finally	O	O
gets	O	O
around	O	O
to	O	O
finding	O	O
your	O	O
record	O	O
,	O	O
it	O	O
updates	O	O
it	O	O
on	O	O
the	O	O
app	O	O
via	O	O
AJAX	O	O
or	O	O
any	O	O
other	O	O
technology	O	O
of	O	O
your	O	O
choice	O	O
.	O	O
Since	O	O
I	O	O
'm	O	O
not	O	O
a	O	O
C	O	O
#	O	O
programmer	O	O
I	O	O
ca	O	O
n't	O	O
provide	O	O
any	O	O
specific	O	O
example	O	O
.	O	O
Hope	O	O
this	O	O
helps	O	O
!	O	O
You	O	O
tried	O	O
old	O	O
builds	O	O
,	O	O
but	O	O
is	O	O
there	O	O
a	O	O
reason	O	O
you	O	O
ca	O	O
n't	O	O
keep	O	O
going	O	O
further	O	O
back	O	O
in	O	O
the	O	O
repository	O	O
history	O	O
and	O	O
seeing	O	O
exactly	O	O
when	O	O
the	O	O
bug	O	O
was	O	O
introduced	O	O
?	O	O
Otherwise	O	O
,	O	O
I	O	O
would	O	O
suggest	O	O
adding	O	O
simple	O	O
logging	O	O
of	O	O
some	O	O
kind	O	O
to	O	O
help	O	O
track	O	O
down	O	O
the	O	O
problem	O	O
,	O	O
though	O	O
I	O	O
am	O	O
at	O	O
a	O	O
loss	O	O
of	O	O
what	O	O
specifically	O	O
you	O	O
might	O	O
want	O	O
to	O	O
log	O	O
.	O	O
If	O	O
you	O	O
can	O	O
find	O	O
out	O	O
what	O	O
exactly	O	O
CAN	O	O
cause	O	O
this	O	O
problem	O	O
,	O	O
via	O	O
google	O	O
and	O	O
documentation	O	O
of	O	O
the	O	O
exceptions	O	O
you	O	O
are	O	O
getting	O	O
,	O	O
maybe	O	O
that	O	O
will	O	O
give	O	O
further	O	O
insight	O	O
on	O	O
what	O	O
to	O	O
look	O	O
for	O	O
in	O	O
the	O	O
code	O	O
.	O	O
My	O	O
first	O	O
choice	O	O
would	O	O
be	O	O
a	O	O
dedicated	O	O
heap	O	O
tool	O	O
such	O	O
as	O	O
pageheap.exe	O	O
.	O	O
Rewriting	O	O
new	O	O
and	O	O
delete	O	O
might	O	O
be	O	O
useful	O	O
,	O	O
but	O	O
that	O	O
does	O	O
n't	O	O
catch	O	O
the	O	O
allocs	O	O
committed	O	O
by	O	O
lower-level	O	O
code	O	O
.	O	O
If	O	O
this	O	O
is	O	O
what	O	O
you	O	O
want	O	O
,	O	O
better	O	O
to	O	O
Detour	O	O
the	O	O
low-level	B-API	O
alloc	B-API	O
s	O	O
using	O	O
Microsoft	O	O
Detours	O	O
.	O	O
Also	O	O
sanity	O	O
checks	O	O
such	O	O
as	O	O
:	O	O
verify	O	O
your	O	O
run-time	O	O
libraries	O	O
match	O	O
(	O	O
release	O	O
vs.	O	O
debug	O	O
,	O	O
multi-threaded	O	O
vs.	O	O
single-threaded	O	O
,	O	O
dll	O	O
vs.	O	O
static	O	B-API
lib	O	I-API
)	O	I-API
,	O	O
look	O	O
for	O	O
bad	O	O
deletes	O	O
(	O	O
eg	O	O
,	O	O
delete	O	O
where	O	O
delete	O	O
[	O	O
]	O	O
should	O	O
have	O	O
been	O	O
used	O	O
)	O	O
,	O	O
make	O	O
sure	O	O
you	O	O
're	O	O
not	O	O
mixing	O	O
and	O	O
matching	O	O
your	O	O
allocs	O	O
.	O	O
Also	O	O
try	O	O
selectively	O	O
turning	O	O
off	O	O
threads	O	O
and	O	O
see	O	O
when/if	O	O
the	O	O
problem	O	O
goes	O	O
away	O	O
.	O	O
What	O	O
does	O	O
the	O	O
call	O	O
stack	O	O
etc	O	O
look	O	O
like	O	O
at	O	O
the	O	O
time	O	O
of	O	O
the	O	O
first	O	O
exception	O	O
?	O	O
My	O	O
first	O	O
action	O	O
would	O	O
be	O	O
as	O	O
follows	O	O
:	O	O
Build	O	O
the	O	O
binaries	O	O
in	O	O
``	O	O
Release	O	O
''	O	O
version	O	O
but	O	O
creating	O	O
debug	O	O
info	O	O
file	O	O
(	O	O
you	O	O
will	O	O
find	O	O
this	O	O
possibility	O	O
in	O	O
project	O	O
settings	O	O
)	O	O
.	O	O
Use	O	O
Dr	O	O
Watson	O	O
as	O	O
a	O	O
defualt	O	O
debugger	B-API	O
(	I-API	O
DrWtsn32	I-API	O
-I	I-API	O
)	I-API	O
on	O	O
a	O	O
machine	O	O
on	O	O
which	O	O
you	O	O
want	O	O
to	O	O
reproduce	O	O
the	O	O
problem	O	O
.	O	O
Repdroduce	O	O
the	O	O
problem	O	O
.	O	O
Dr	O	O
Watson	O	O
will	O	O
produce	O	O
a	O	O
dump	O	O
that	O	O
might	O	O
be	O	O
helpful	O	O
in	O	O
further	O	O
analysis	O	O
.	O	O
Another	O	O
try	O	O
might	O	O
be	O	O
using	O	O
WinDebug	O	O
as	O	O
a	O	O
debugging	O	O
tool	O	O
which	O	O
is	O	O
quite	O	O
powerful	O	O
being	O	O
at	O	O
the	O	O
same	O	O
time	O	O
also	O	O
lightweight	O	O
.	O	O
Maybe	O	O
these	O	O
tools	O	O
will	O	O
allow	O	O
you	O	O
at	O	O
least	O	O
to	O	O
narrow	O	O
the	O	O
problem	O	O
to	O	O
certain	O	O
component	O	O
.	O	O
And	O	O
are	O	O
you	O	O
sure	O	O
that	O	O
all	O	O
the	O	O
components	O	O
of	O	O
the	O	O
project	O	O
have	O	O
correct	O	O
runtime	O	O
library	O	O
settings	O	O
(	O	O
C/C++	O	O
tab	O	O
,	O	O
Code	O	O
Generation	O	O
category	O	O
in	O	O
VS	O	O
6.0	O	O
project	O	O
settings	O	O
)	O	O
?	O	O
I	O	O
have	O	O
same	O	O
problems	O	O
in	O	O
my	O	O
work	O	O
(	O	O
we	O	O
also	O	O
use	O	O
sometimes	O	O
)	O	O
.	O	O
And	O	O
there	O	O
is	O	O
no	O	O
easy	O	O
solution	O	O
for	O	O
it	O	O
.	O	O
I	O	O
have	O	O
only	O	O
some	O	O
hints	O	O
:	O	O
Try	O	O
with	O	O
automatic	O	O
crash	O	O
dumps	O	O
on	O	O
production	O	O
machine	O	O
(	O	O
see	O	O
Process	O	O
Dumper	O	O
)	O	O
.	O	O
My	O	O
experience	O	O
says	O	O
Dr.	O	O
Watson	O	O
is	O	O
not	O	O
perfect	O	O
for	O	O
dumping	O	O
.	O	O
Remove	O	O
all	O	O
catch	O	O
(	O	O
...	O	O
)	O	O
from	O	O
your	O	O
code	O	O
.	O	O
They	O	O
often	O	O
hide	O	O
serious	O	O
memory	O	O
exceptions	O	O
.	O	O
Check	O	O
Advanced	O	O
Windows	O	O
Debugging	O	O
-	O	O
there	O	O
are	O	O
lots	O	O
of	O	O
great	O	O
tips	O	O
for	O	O
problems	O	O
like	O	O
yours	O	O
.	O	O
I	O	O
recomend	O	O
this	O	O
with	O	O
all	O	O
my	O	O
heart	O	O
.	O	O
If	O	O
you	O	O
use	O	O
try	O	O
and	O	O
checked	O	O
builds	O	O
.	O	O
Invalid	O	O
iterator	O	O
are	O	O
hell	O	O
.	O	O
Good	O	O
luck	O	O
.	O	O
Problems	O	O
like	O	O
yours	O	O
take	O	O
us	O	O
months	O	O
to	O	O
solve	O	O
.	O	O
Be	O	O
ready	O	O
for	O	O
this	O	O
...	O	O
How	O	O
about	O	O
using	O	O
FxCop	O	O
to	O	O
check	O	O
to	O	O
see	O	O
if	O	O
the	O	O
assembly	O	O
meets	O	O
your	O	O
documentation	O	O
requirements	O	O
(	O	O
though	O	O
this	O	O
wont	O	O
be	O	O
able	O	O
to	O	O
check	O	O
the	O	O
grammar	O	O
,	O	O
spelling	O	O
and	O	O
relevance	O	O
of	O	O
the	O	O
contents	O	O
of	O	O
the	O	O
documentation	O	O
-	O	O
only	O	O
you	O	O
can	O	O
check	O	O
that	O	O
)	O	O
.	O	O
MS	O	O
have	O	O
released	O	O
style	O	O
cop	O	O
to	O	O
compliment	O	O
FXCop	O	O
http	O	O
:	O	O
//blogs.msdn.com/sourceanalysis/	O	O
unlike	O	O
fx	O	O
cop	O	O
this	O	O
has	O	O
better	O	O
rules	O	O
and	O	O
can	O	O
check	O	O
amount	O	O
of	O	O
comments	O	O
etc	O	O
.	O	O
To	O	O
spell	O	O
check	O	O
the	O	O
comment	O	O
see	O	O
on	O	O
my	O	O
article	O	O
on	O	O
spell	O	O
checking	O	O
comments	O	O
and	O	O
source	O	O
code	O	O
for	O	O
free	O	O
.	O	O
On	O	O
Linux	O	O
:	O	O
set	O	O
raw	O	O
mode	O	O
select	O	O
and	O	O
read	O	O
the	O	O
keystroke	O	O
restore	O	O
normal	O	O
settings	O	O
import	O	O
sys	O	O
import	O	O
select	O	O
import	O	O
termios	O	O
import	O	O
tty	O	O
def	O	B-API
getkey	B-API	I-API
(	I-API	I-API
)	I-API	I-API
:	O	O
old_settings	O	O
=	O	O
termios.tcgetattr	B-API	B-API
(	I-API	I-API
sys.stdin	I-API	I-API
)	I-API	I-API
tty.setraw	B-API	B-API
(	I-API	I-API
sys.stdin.fileno	B-API	I-API
(	I-API	I-API
)	I-API	I-API
)	I-API	O
select.select	O	B-API
(	O	I-API
[	O	I-API
sys.stdin	O	I-API
]	O	I-API
,	O	I-API
[	O	I-API
]	O	I-API
,	O	I-API
[	O	I-API
]	O	I-API
,	O	I-API
0	O	I-API
)	O	I-API
answer	O	O
=	O	O
sys.stdin.read	B-API	B-API
(	I-API	I-API
1	I-API	I-API
)	I-API	I-API
termios.tcsetattr	B-API	B-API
(	I-API	O
sys.stdin	I-API	O
,	I-API	O
termios.TCSADRAIN	I-API	O
,	I-API	O
old_settings	I-API	O
)	I-API	O
return	O	O
answer	O	O
print	O	O
``	O	O
''	O	O
''	O	O
Menu	O	O
1	O	O
)	O	O
Say	O	O
Foo	O	O
2	O	O
)	O	O
Say	O	O
Bar	O	O
''	O	O
''	O	O
''	O	O
answer=getkey	O	O
(	O	O
)	O	O
if	O	O
``	O	O
1	O	O
''	O	O
in	O	O
answer	O	O
:	O	O
print	O	O
``	O	O
foo	O	O
''	O	O
elif	O	O
``	O	O
2	O	O
''	O	O
in	O	O
answer	O	O
:	O	O
print	O	O
``	O	O
bar	O	O
''	O	O
On	O	O
Windows	O	O
:	O	O
import	O	O
msvcrt	O	O
answer=msvcrt.getch	B-API	B-API
(	I-API	I-API
)	I-API	I-API
Wow	O	O
,	O	O
that	O	O
took	O	O
forever	O	O
.	O	O
Ok	O	O
,	O	O
here	O	O
's	O	O
what	O	O
I	O	O
've	O	O
ended	O	O
up	O	O
with	O	O
#	O	O
!	O	O
C	O	O
:	O	O
\python25\python.exeimport	O	O
msvcrtprint	O	O
``	O	O
``	O	O
''	O	O
Menu1	O	O
)	O	O
Say	O	O
Foo	O	O
2	O	O
)	O	O
Say	O	O
Bar	O	O
''	O	O
''	O	O
''	O	O
while	O	O
1	O	O
:	O	O
char	O	O
=	O	O
if	O	O
char	O	O
==	O	O
:	O	O
#	O	O
escape	O	O
break	O	O
if	O	O
char	O	O
==	O	O
``	O	O
1	O	O
''	O	O
:	O	O
print	O	O
``	O	O
foo	O	O
''	O	O
break	O	O
if	O	O
char	O	O
==	O	O
``	O	O
2	O	O
''	O	O
:	O	O
print	O	O
``	O	O
Bar	O	O
''	O	O
msvcrt.getch	B-API	B-API
(	I-API	I-API
)	I-API	I-API
chr	B-API	B-API
(	I-API	I-API
27	I-API	I-API
)	I-API	I-API
It	O	O
fails	O	O
hard	O	O
using	O	O
IDLE	O	O
,	O	O
the	O	O
python	O	O
...	O	O
thing	O	O
...	O	O
that	O	O
comes	O	O
with	O	O
python	O	O
.	O	O
But	O	O
once	O	O
I	O	O
tried	O	O
it	O	O
in	O	O
DOS	B-API	O
(	I-API	O
er	I-API	O
,	I-API	O
CMD.exe	I-API	O
)	I-API	O
,	O	O
as	O	O
a	O	O
real	O	O
program	O	O
,	O	O
then	O	O
it	O	O
ran	O	O
fine	O	O
.	O	O
No	O	O
one	O	O
try	O	O
it	O	O
in	O	O
IDLE	O	O
,	O	O
unless	O	O
you	O	O
have	O	O
Task	O	O
Manager	O	O
handy	O	O
.	O	O
I	O	O
've	O	O
already	O	O
forgotten	O	O
how	O	O
I	O	O
lived	O	O
with	O	O
menus	O	O
that	O	O
ar	O	O
n't	O	O
super-instant	O	O
responsive	O	O
.	O	O
The	O	O
reason	O	O
msvcrt	O	O
fails	O	O
in	O	O
IDLE	O	O
is	O	O
because	O	O
IDLE	O	O
is	O	O
not	O	O
accessing	O	O
the	O	O
library	O	O
that	O	O
runs	O	O
msvcrt	O	O
.	O	O
Whereas	O	O
when	O	O
you	O	O
run	O	O
the	O	O
program	O	O
natively	O	O
in	O	O
cmd.exe	O	O
it	O	O
works	O	O
nicely	O	O
.	O	O
For	O	O
the	O	O
same	O	O
reason	O	O
that	O	O
your	O	O
program	O	O
blows	O	O
up	O	O
on	O	O
Mac	O	O
and	O	O
Linux	O	O
terminals	O	O
.	O	O
But	O	O
I	O	O
guess	O	O
if	O	O
you	O	O
're	O	O
going	O	O
to	O	O
be	O	O
using	O	O
this	O	O
specifically	O	O
for	O	O
windows	O	O
,	O	O
more	O	O
power	O	O
to	O	O
ya	O	O
.	O	O
Hmm	O	O
...	O	O
off	O	O
by	O	O
one	O	O
hour	O	O
.	O	O
DST	O	O
possibly	O	O
?	O	O
Is	O	O
the	O	O
date	O	O
set	O	O
correctly	O	O
?	O	O
What	O	O
version	O	O
of	O	O
the	O	O
JDK	O	O
is	O	O
this	O	O
running	O	O
on	O	O
?	O	O
(	O	O
``	O	O
java	O	O
-version	O	O
''	O	O
)	O	O
It	O	O
's	O	O
a	O	O
``	O	O
quirk	O	O
''	O	O
in	O	O
the	O	O
way	O	O
the	O	O
JVM	O	B-API
looks	O	O
up	O	O
the	O	O
zoneinfo	O	O
file	O	O
.	O	O
See	O	O
Bug	O	O
ID	O	O
6456628	O	O
.	O	O
The	O	O
easiest	O	O
workaround	O	O
is	O	O
to	O	O
make	O	O
/etc/localtime	O	O
a	O	O
symlink	O	O
to	O	O
the	O	O
correct	O	O
zoneinfo	O	O
file	O	O
.	O	O
For	O	O
Pacific	O	O
time	O	O
,	O	O
the	O	O
following	O	O
commands	O	O
should	O	O
work	O	O
:	O	O
#	B-API	O
sudo	B-API	O
cp	B-API	O
/etc/localtime	B-API	O
/etc/localtime.dist	B-API	O
#	I-API	O
sudo	B-API	O
ln	B-API	O
-fs	B-API	O
/usr/share/zoneinfo/America/Los_Angeles	B-API	O
I	O	O
have	O	O
n't	O	O
had	O	O
any	O	O
problems	O	O
with	O	O
the	O	O
symlink	O	O
approach	O	O
.	O	O
Edit	O	O
:	O	O
Added	O	O
``	O	O
sudo	O	O
''	O	O
to	O	O
the	O	O
commands	O	O
.	O	O
It	O	O
may	O	O
help	O	O
to	O	O
double-check	O	O
the	O	O
timezone	O	O
rules	O	O
your	O	O
OS	O	O
is	O	O
using	O	O
.	O	O
/usr/bin/zdump	O	O
-v	O	O
/etc/localtime	O	O
|	O	O
This	O	O
file	O	O
should	O	O
contain	O	O
your	O	O
daylight	O	O
savings	O	O
rules	O	O
,	O	O
like	O	O
this	O	O
one	O	O
for	O	O
the	O	O
year	O	O
2080	O	O
:	O	O
/etc/localtime	O	O
Sun	O	O
Mar	O	O
31	O	O
01:00:00	O	O
2080	O	O
UTC	O	O
=	O	O
Sun	O	O
Mar	O	O
31	O	O
02:00:00	O	O
2080	O	O
BST	O	O
isdst=1	O	O
You	O	O
can	O	O
compare	O	O
this	O	O
with	O	O
the	O	O
timezone	O	O
rules	O	O
you	O	O
think	O	O
you	O	O
should	O	O
be	O	O
using	O	O
.	O	O
They	O	O
can	O	O
be	O	O
found	O	O
in	O	O
/usr/share/zoneinfo/	O	O
.	O	O
Rex	O	O
,	O	O
I	O	O
suspect	O	O
a	O	O
good	O	O
place	O	O
to	O	O
start	O	O
looking	O	O
is	O	O
solutions	O	O
that	O	O
compress	O	O
the	O	O
ViewState	O	O
--	O	O
they	O	O
're	O	O
grabbing	O	O
ViewState	O	O
on	O	O
the	O	O
server	O	O
before	O	O
it	O	O
's	O	O
sent	O	O
down	O	O
to	O	O
the	O	O
client	O	O
and	O	O
gzipping	O	O
it	O	O
.	O	O
That	O	O
's	O	O
exactly	O	O
where	O	O
you	O	O
want	O	O
to	O	O
be	O	O
.	O	O
Scott	O	O
Hanselman	O	O
on	O	O
ViewState	O	O
Compression	B-API	O
(	I-API	O
2005	I-API	O
)	I-API	O
ViewState	O	O
Compression	O	O
with	O	O
System.IO.Compression	B-API	B-API
(	I-API	I-API
2007	I-API	I-API
)	I-API	I-API
See	O	O
this	O	O
blog	O	O
post	O	O
where	O	O
the	O	O
author	O	O
describes	O	O
a	O	O
method	O	O
for	O	O
overriding	O	O
the	O	O
default	O	O
behavior	O	O
for	O	O
generating	O	O
the	O	O
ViewState	O	O
and	O	O
instead	O	O
shows	O	O
how	O	O
to	O	O
save	O	O
it	O	O
on	O	O
the	O	O
server	O	O
Session	O	O
object	O	O
.	O	O
In	O	O
ASP.NET	O	O
2.0	O	O
,	O	O
ViewState	O	O
is	O	O
saved	O	O
by	O	O
a	O	O
descendant	O	O
of	O	O
PageStatePersister	O	O
class	O	O
.	O	O
This	O	O
class	O	O
is	O	O
an	O	O
abstract	O	O
class	O	O
for	O	O
saving	O	O
and	O	O
loading	O	O
ViewsState	O	O
and	O	O
there	O	O
are	O	O
two	O	O
implemented	O	O
descendants	O	O
of	O	O
this	O	O
class	O	O
in	O	O
.Net	O	O
Framework	O	O
,	O	O
named	O	O
HiddenFieldPageStatePersister	B-API	O
and	O	O
SessionPageStatePersister	B-API	O
.	O	O
By	O	O
default	O	O
HiddenFieldPageStatePersister	B-API	O
is	O	O
used	O	O
to	O	O
save/load	O	O
ViewState	O	O
information	O	O
,	O	O
but	O	O
we	O	O
can	O	O
easily	O	O
get	O	O
the	O	O
SessionPageStatePersister	B-API	O
to	O	O
work	O	O
and	O	O
save	O	O
ViewState	O	O
in	O	O
Session	O	O
object	O	O
.	O	O
Although	O	O
I	O	O
did	O	O
not	O	O
test	O	O
his	O	O
code	O	O
,	O	O
it	O	O
seems	O	O
to	O	O
show	O	O
exactly	O	O
what	O	O
you	O	O
want	O	O
:	O	O
a	O	O
way	O	O
to	O	O
gain	O	O
access	O	O
to	O	O
ViewState	O	O
code	O	O
while	O	O
still	O	O
on	O	O
the	O	O
server	O	O
,	O	O
before	O	O
postback	O	O
.	O	O
I	O	O
enabled	O	O
compression	O	O
following	O	O
similar	O	O
articles	O	O
to	O	O
those	O	O
posted	O	O
above	O	O
.	O	O
The	O	O
key	O	O
to	O	O
accessing	O	O
the	O	O
ViewState	O	O
before	O	O
the	O	O
application	O	O
sends	O	O
it	O	O
was	O	O
overriding	O	O
this	O	O
method	O	O
;	O	O
protected	B-API	O
override	B-API	O
void	B-API	B-API
(	O	I-API
object	O	I-API
viewState	O	I-API
)	O	I-API
You	O	O
can	O	O
call	O	O
the	O	O
base	O	O
method	O	O
within	O	O
this	O	O
override	O	O
and	O	O
then	O	O
add	O	O
whatever	O	O
additional	O	O
logic	O	O
you	O	O
require	O	O
to	O	O
handle	O	O
the	O	O
ViewState	O	O
.	O	O
If	O	O
you	O	O
use	O	O
a	O	O
return	O	O
type	O	O
of	O	O
,	O	O
you	O	O
can	O	O
return	O	O
your	O	O
query	O	O
variable	O	O
directly	O	O
.	O	O
Create	O	O
a	O	O
class	O	O
object	O	O
and	O	O
return	O	O
a	O	O
list	B-API	O
(	I-API	O
T	I-API	O
)	I-API	O
of	O	O
the	O	O
query	O	O
.	O	O
The	O	O
left	O	O
one	O	O
,	O	O
then	O	O
stops	O	O
if	O	O
it	O	O
is	O	O
null	O	O
.	O	O
Edit	O	O
:	O	O
In	O	O
vb.net	O	B-API
it	O	O
will	O	O
evaluate	O	O
both	O	O
and	O	O
possibly	O	O
throw	O	O
an	O	O
error	O	O
,	O	O
unless	O	O
you	O	O
use	O	O
AndAlso	O	O
C	O	O
#	O	O
:	O	O
Left	O	O
to	O	O
right	O	O
,	O	O
and	O	O
processing	O	O
stops	O	O
if	O	O
a	O	O
non-match	O	O
(	O	O
evaluates	O	O
to	O	O
false	O	O
)	O	O
is	O	O
found	O	O
.	O	O
I	O	O
have	O	O
heard	O	O
somewhere	O	O
that	O	O
compilers	O	O
work	O	O
backwards	O	O
,	O	O
but	O	O
I	O	O
am	O	O
unsure	O	O
how	O	O
true	O	O
this	O	O
is	O	O
.	O	O
vb.net	B-API	O
)	I-API	O
(	I-API	O
x	O	O
isNot	O	O
Nothing	O	O
AndAlso	O	O
x.go	B-API	O
(	I-API	O
)	I-API	O
Evaluation	O	O
is	O	O
done	O	O
left	O	O
to	O	O
right	O	O
AndAlso	O	O
operator	O	O
makes	O	O
sure	O	O
that	O	O
only	O	O
if	O	O
the	O	O
left	O	O
side	O	O
was	O	O
TRUE	O	O
,	O	O
the	O	O
right	O	O
side	O	O
will	O	O
be	O	O
evaluated	O	O
(	O	O
very	O	O
important	O	O
,	O	O
since	O	O
ifx	O	O
is	O	O
nothing	O	O
x.go	O	O
will	O	O
crash	O	O
)	O	O
You	O	O
may	O	O
use	O	O
And	O	O
instead	O	O
ofAndAlso	O	O
in	O	O
vb	O	O
.	O	O
in	O	O
which	O	O
case	O	O
the	O	O
left	O	O
side	O	O
gets	O	O
evaluated	O	O
first	O	O
as	O	O
well	O	O
,	O	O
but	O	O
the	O	O
right	O	O
side	O	O
will	O	O
get	O	O
evaluated	O	O
regardless	O	O
of	O	O
result	O	O
.	O	O
Best	O	O
Practice	O	O
:	O	O
Always	O	O
use	O	O
AndAlso	O	O
,	O	O
unless	O	O
you	O	O
have	O	O
a	O	O
very	O	O
good	O	O
reason	O	O
why	O	O
not	O	O
to	O	O
.	O	O
It	O	O
was	O	O
asked	O	O
in	O	O
a	O	O
followup	O	O
why	O	O
or	O	O
when	O	O
would	O	O
anyone	O	O
use	O	O
And	O	O
instead	O	O
of	O	O
AndAlso	O	O
(	O	O
or	O	O
instead	O	O
of	O	O
)	O	O
:	O	O
Here	O	O
is	O	O
an	O	O
example	O	O
:	O	O
if	O	O
(	O	O
And	O	O
)	O	O
then	O	O
end	O	O
x.init	B-API	B-API
(	I-API	I-API
)	I-API	I-API
y.init	B-API	B-API
(	I-API	I-API
)	I-API	I-API
x.process	B-API	B-API
(	I-API	I-API
y	I-API	I-API
)	I-API	I-API
y.doDance	B-API	B-API
(	I-API	I-API
)	I-API	I-API
In	O	O
this	O	O
case	O	O
,	O	O
I	O	O
want	O	O
to	O	O
init	O	O
both	O	O
X	O	O
and	O	O
Y.	O	O
Y	O	O
must	O	O
be	O	O
initialized	O	O
in	O	O
order	O	O
for	O	O
y.DoDance	O	O
to	O	O
be	O	O
able	O	O
to	O	O
execute	O	O
.	O	O
However	O	O
,	O	O
in	O	O
the	O	O
init	B-API	B-API
(	I-API	I-API
)	I-API	I-API
function	O	O
I	O	O
am	O	O
doing	O	O
also	O	O
some	O	O
extra	O	O
thing	O	O
like	O	O
checking	O	O
a	O	O
socket	O	O
is	O	O
open	O	O
,	O	O
and	O	O
only	O	O
if	O	O
that	O	O
works	O	O
out	O	O
ok	O	O
,	O	O
for	O	O
both	O	O
,	O	O
I	O	O
should	O	O
go	O	O
ahead	O	O
and	O	O
do	O	O
the	O	O
x.process	B-API	B-API
(	I-API	I-API
y	I-API	I-API
)	I-API	I-API
.	O	O
Again	O	O
,	O	O
this	O	O
is	O	O
probably	O	O
not	O	O
needed	O	O
and	O	O
not	O	O
elegant	O	O
in	O	O
99	O	O
%	O	O
of	O	O
the	O	O
cases	O	O
,	O	O
that	O	O
is	O	O
why	O	O
I	O	O
said	O	O
that	O	O
the	O	O
default	O	O
should	O	O
be	O	O
to	O	O
use	O	O
AndAlso	O	O
.	O	O
The	O	O
concept	O	O
modesty	O	O
is	O	O
referring	O	O
to	O	O
is	O	O
operator	O	O
overloading	O	O
.	O	O
in	O	O
the	O	O
statement	O	O
:	O	O
if	O	O
(	O	O
A	O	O
B	O	O
)	O	O
{	O	O
//	O	O
do	O	O
something	O	O
}	O	O
A	O	O
is	O	O
evaluated	O	O
first	O	O
,	O	O
if	O	O
it	O	O
evaluates	O	O
to	O	O
false	O	O
,	O	O
B	O	O
is	O	O
never	O	O
evaluated	O	O
.	O	O
The	O	O
same	O	O
applies	O	O
toif	O	O
(	O	O
A	O	O
||	O	O
B	O	O
)	O	O
{	O	O
//do	O	O
something	O	O
}	O	O
A	O	O
is	O	O
evaluated	O	O
first	O	O
,	O	O
if	O	O
it	O	O
evaluates	O	O
to	O	O
true	O	O
,	O	O
B	O	O
is	O	O
never	O	O
evaluated	O	O
.	O	O
This	O	O
concept	O	O
,	O	O
overloading	O	O
,	O	O
applies	O	O
to	O	O
(	O	O
i	O	O
think	O	O
)	O	O
all	O	O
of	O	O
the	O	O
C	O	O
style	O	O
languages	O	O
,	O	O
and	O	O
many	O	O
others	O	O
as	O	O
well	O	O
.	O	O
ZombieSheep	O	O
is	O	O
dead-on	O	O
.	O	O
The	O	O
only	O	O
``	O	O
gotcha	O	O
''	O	O
that	O	O
might	O	O
be	O	O
waiting	O	O
is	O	O
that	O	O
this	O	O
is	O	O
only	O	O
true	O	O
if	O	O
you	O	O
are	O	O
using	O	O
the	O	O
operator	O	O
.	O	O
When	O	O
using	O	O
the	O	O
operator	O	O
,	O	O
both	O	O
expressions	O	O
will	O	O
be	O	O
evaluated	O	O
every	O	O
time	O	O
,	O	O
regardless	O	O
if	O	O
one	O	O
or	O	O
both	O	O
evaluate	O	O
to	O	O
false	O	O
.	O	O
if	O	O
(	O	O
amHungry	O	O
whiteCastleIsNearby	O	O
)	O	O
{	O	O
//	O	O
The	O	O
code	O	O
will	O	O
check	O	O
if	O	O
White	O	O
Castle	O	O
is	O	O
nearby	O	O
//	O	O
even	O	O
when	O	O
I	O	O
am	O	O
not	O	O
hungry	O	O
}	O	O
if	O	O
(	O	O
amHungry	O	O
whiteCastleIsNearby	O	O
)	O	O
{	O	O
//	O	O
The	O	O
code	O	O
will	O	O
only	O	O
check	O	O
if	O	O
White	O	O
Castle	O	O
is	O	O
nearby	O	O
//	O	O
when	O	O
I	O	O
am	O	O
Note	O	O
that	O	O
there	O	O
is	O	O
a	O	O
difference	O	O
between	O	O
and	O	O
regarding	O	O
how	O	O
much	O	O
of	O	O
your	O	O
expression	O	O
is	O	O
evaluated	O	O
.	O	O
is	O	O
known	O	O
as	O	O
a	O	O
short-circuited	O	O
boolean	O	O
AND	O	O
,	O	O
and	O	O
will	O	O
,	O	O
as	O	O
noted	O	O
by	O	O
others	O	O
here	O	O
,	O	O
stop	O	O
early	O	O
if	O	O
the	O	O
result	O	O
can	O	O
be	O	O
determined	O	O
before	O	O
all	O	O
the	O	O
sub-expressions	O	O
are	O	O
evaluated	O	O
.	O	O
is	O	O
known	O	O
as	O	O
a	O	O
logical	O	O
bitwise	O	O
operator	O	O
and	O	O
will	O	O
always	O	O
evaluate	O	O
all	O	O
the	O	O
sub-expressions	O	O
.	O	O
As	O	O
such	O	O
:	O	O
if	O	B-API
(	O	I-API
a	O	I-API
(	O	I-API
)	O	I-API
b	O	O
(	O	O
)	O	O
)	O	O
Will	O	O
only	O	O
call	O	O
b	O	O
if	O	O
a	O	O
returns	O	O
true	O	O
.	O	O
however	O	O
,	O	O
this	O	O
:	O	O
if	O	B-API
(	O	I-API
a	O	I-API
(	O	I-API
)	O	I-API
b	O	B-API
(	O	I-API
)	O	I-API
)	O	I-API
Will	O	O
always	O	O
call	O	O
both	O	O
a	O	O
and	O	O
b	O	O
,	O	O
even	O	O
though	O	O
the	O	O
result	O	O
of	O	O
calling	O	O
a	O	O
is	O	O
false	O	O
and	O	O
thus	O	O
known	O	O
to	O	O
be	O	O
false	O	O
regardless	O	O
of	O	O
the	O	O
result	O	O
of	O	O
calling	O	O
b	O	O
.	O	O
This	O	O
same	O	O
difference	O	O
exists	O	O
for	O	O
the	O	O
||	O	O
and	O	O
|	O	O
operators	O	O
.	O	O
Some	O	O
languages	O	O
have	O	O
interesting	O	O
situations	O	O
where	O	O
expressions	O	O
are	O	O
executed	O	O
in	O	O
a	O	O
different	O	O
order	O	O
.	O	O
I	O	O
am	O	O
specifically	O	O
thinking	O	O
of	O	O
Ruby	O	O
,	O	O
but	O	O
I	O	O
'm	O	O
sure	O	O
they	O	O
borrowed	O	O
it	O	O
from	O	O
elsewhere	O	O
(	O	O
probably	O	O
Perl	O	O
)	O	O
.	O	O
The	O	O
expressions	O	O
in	O	O
the	O	O
logic	O	O
will	O	O
stay	O	O
left	O	O
to	O	O
right	O	O
,	O	O
but	O	O
for	O	O
example	O	O
:	O	O
puts	O	O
message	O	O
unless	O	O
The	O	O
above	O	O
will	O	O
evaluate	O	O
``	O	O
message.nil	B-API	O
?	O	O
''	O	O
first	O	O
,	O	O
then	O	O
if	O	O
it	O	O
evaluates	O	O
to	O	O
false	O	O
(	O	O
unless	O	O
is	O	O
like	O	O
if	O	O
except	O	O
it	O	O
executes	O	O
when	O	O
the	O	O
condition	O	O
is	O	O
false	O	O
instead	O	O
of	O	O
true	O	O
)	O	O
,	O	O
``	O	O
puts	O	O
message	O	O
''	O	O
will	O	O
execute	O	O
,	O	O
which	O	O
prints	O	O
the	O	O
contents	O	O
of	O	O
the	O	O
message	O	O
variable	O	O
to	O	O
the	O	O
screen	O	O
.	O	O
It	O	O
's	O	O
kind	O	O
of	O	O
an	O	O
interesting	O	O
way	O	O
to	O	O
structure	O	O
your	O	O
code	O	O
sometimes	O	O
...	O	O
I	O	O
personally	O	O
like	O	O
to	O	O
use	O	O
it	O	O
for	O	O
very	O	O
short	O	O
1	O	O
liners	O	O
like	O	O
the	O	O
above	O	O
.	O	O
Edit	O	O
:	O	O
To	O	O
make	O	O
it	O	O
a	O	O
little	O	O
clearer	O	O
,	O	O
the	O	O
above	O	O
is	O	O
the	O	O
same	O	O
as	O	O
:	O	O
unless	O	O
message.nil	B-API	O
?	O	O
puts	O	O
Nopes	O	O
,	O	O
at	O	O
least	O	O
the	O	O
C	O	B-API
#	O	I-API
compiler	O	O
does	O	O
n't	O	O
work	O	O
backwards	O	O
(	O	O
in	O	O
either	O	O
or	O	O
||	O	O
)	O	O
.	O	O
It	O	O
's	O	O
left	O	O
to	O	O
right	O	O
.	O	O
What	O	O
is	O	O
a	O	O
good	O	O
example	O	O
of	O	O
when	O	O
to	O	O
use	O	O
the	O	O
bitwise	O	O
operator	O	O
instead	O	O
of	O	O
the	O	O
``	O	O
short-circuited	O	O
boolean	O	O
''	O	O
?	O	O
Suppose	O	O
you	O	O
have	O	O
flags	O	O
,	O	O
say	O	O
for	O	O
file	O	O
attributes	O	O
.	O	O
Suppose	O	O
you	O	O
've	O	O
defined	O	O
READ	O	O
as	O	O
4	O	O
,	O	O
WRITE	O	O
as	O	O
2	O	O
,	O	O
and	O	O
EXEC	O	O
as	O	O
1	O	O
.	O	O
In	O	O
binary	O	O
,	O	O
that	O	O
's	O	O
:	O	O
READ	B-API	O
0100	O	O
WRITE	B-API	O
0010	O	O
EXEC	B-API	O
Each	O	O
flag	O	O
has	O	O
one	O	O
bit	O	O
set	O	O
,	O	O
and	O	O
each	O	O
one	O	O
is	O	O
unique	O	O
.	O	O
The	O	O
bitwise	O	O
operators	O	O
let	O	O
you	O	O
combine	O	O
these	O	O
flags	B-API	O
:	O	O
flags	B-API	O
=	O	O
READ	B-API	O
EXEC	B-API	O
;	O	O
//	O	O
value	O	O
of	O	O
flags	B-API	O
is	O	O
@	O	O
shsteimer	O	O
The	O	O
concept	O	O
modesty	O	O
is	O	O
referring	O	O
to	O	O
is	O	O
operator	O	O
overloading	O	O
.	O	O
in	O	O
the	O	O
statement	O	O
:	O	O
...	O	O
A	O	O
is	O	O
evaluated	O	O
first	O	O
,	O	O
if	O	O
it	O	O
evaluates	O	O
to	O	O
false	O	O
,	O	O
B	O	O
is	O	O
never	O	O
evaluated	O	O
.	O	O
The	O	O
same	O	O
applies	O	O
to	O	O
That	O	O
's	O	O
not	O	O
operator	O	O
overloading	O	O
.	O	O
Operator	O	O
overloading	O	O
is	O	O
the	O	O
term	O	O
given	O	O
for	O	O
letting	O	O
you	O	O
define	O	O
custom	O	O
behaviour	O	O
for	O	O
operators	O	O
,	O	O
such	O	O
as	O	O
*	O	O
,	O	O
+	O	O
,	O	O
=	O	O
and	O	O
so	O	O
on	O	O
.	O	O
This	O	O
would	O	O
let	O	O
you	O	O
write	O	O
your	O	O
own	O	O
'Log	O	O
'	O	O
class	O	O
,	O	O
and	O	O
then	O	O
do	O	O
a	O	O
=	O	O
new	O	O
;	O	O
//	O	O
Log	O	O
class	O	O
overloads	O	O
the	O	O
+	O	O
operatora	O	O
+	O	O
``	O	O
some	O	O
string	O	O
''	O	O
;	O	O
//	O	O
Call	O	O
the	O	O
overloaded	O	O
method	O	O
-	O	O
otherwise	O	O
this	O	O
would	O	O
n't	O	O
work	O	O
because	O	O
you	O	O
ca	O	O
n't	O	O
normally	O	O
add	O	O
strings	O	O
to	O	O
Log	B-API	O
(	I-API	O
)	I-API	O
Doing	O	O
this	O	O
||	O	O
//	O	O
be	O	O
never	O	O
runs	O	O
if	O	O
a	O	O
is	O	O
a	O	O
(	O	O
)	O	O
b	O	O
(	O	O
)	O	O
is	O	O
actually	O	O
called	O	O
Short	O	O
Circuit	O	O
Evaluation	O	O
You	O	O
use	O	O
when	O	O
you	O	O
specifically	O	O
want	O	O
to	O	O
evaluate	O	O
all	O	O
the	O	O
sub-expressions	O	O
,	O	O
most	O	O
likely	O	O
because	O	O
they	O	O
have	O	O
side-effects	O	O
you	O	O
want	O	O
,	O	O
even	O	O
though	O	O
the	O	O
final	O	O
result	O	O
will	O	O
be	O	O
false	O	O
and	O	O
thus	O	O
not	O	O
execute	O	O
your	O	O
then	O	O
part	O	O
of	O	O
your	O	O
if-statement	O	O
.	O	O
Note	O	O
that	O	O
and	O	O
|	O	O
operates	O	O
for	O	O
both	O	O
bitwise	O	O
masks	O	O
and	O	O
boolean	O	O
values	O	O
and	O	O
is	O	O
not	O	O
just	O	O
for	O	O
bitwise	O	O
operations	O	O
.	O	O
They	O	O
're	O	O
called	O	O
bitwise	O	O
,	O	O
but	O	O
they	O	O
are	O	O
defined	O	O
for	O	O
both	O	O
integers	O	O
and	O	O
boolean	O	O
data	O	O
types	O	O
in	O	O
C	O	O
#	O	O
.	O	O
When	O	O
things	O	O
are	O	O
all	O	O
in-line	O	O
,	O	O
they	O	O
're	O	O
executed	O	O
left-to-right	O	O
.	O	O
When	O	O
things	O	O
are	O	O
nested	O	O
,	O	O
they	O	O
're	O	O
executed	O	O
inner-to-outer	O	O
.	O	O
This	O	O
may	O	O
seem	O	O
confusing	O	O
as	O	O
usually	O	O
what	O	O
's	O	O
``	O	O
innermost	O	O
''	O	O
is	O	O
on	O	O
the	O	O
right-hand	O	O
side	O	O
of	O	O
the	O	O
line	O	O
,	O	O
so	O	O
it	O	O
seems	O	O
like	O	O
it	O	O
's	O	O
going	O	O
backwards	O	O
...	O	O
For	O	O
example	O	O
a	B-API	O
=	B-API	O
)	B-API	O
(	O	O
5	O	O
,	O	O
GetSummary	B-API	O
(	I-API	O
``	I-API	O
Orion	I-API	O
''	I-API	O
,	I-API	O
GetAddress	B-API	O
(	I-API	O
``	I-API	O
Orion	I-API	O
''	I-API	O
)	I-API	O
Things	O	O
happen	O	O
like	O	O
this	O	O
:	O	O
Call	O	O
with	O	O
the	O	O
literal	O	O
Call	O	O
with	O	O
the	O	O
literal	O	O
and	O	O
the	O	O
result	O	O
of	O	O
Call	O	O
with	O	O
the	O	O
literal	O	O
and	O	O
the	O	O
result	O	O
of	O	O
Assign	O	O
this	O	O
v	O	O
lue	O	O
to	O	O
a	O	O
I	O	O
realise	O	O
this	O	O
question	O	O
has	O	O
already	O	O
been	O	O
answered	O	O
,	O	O
but	O	O
I	O	O
'd	O	O
like	O	O
to	O	O
throw	O	O
in	O	O
another	O	O
bit	O	O
of	O	O
information	O	O
which	O	O
is	O	O
related	O	O
to	O	O
the	O	O
topic	O	O
.	O	O
In	O	O
languages	O	O
,	O	O
like	O	O
C++	O	B-API
,	O	O
where	O	O
you	O	O
can	O	O
actually	O	O
overload	O	O
the	O	O
behaviour	O	O
of	O	O
the	O	O
and	O	O
||	O	O
operators	O	O
,	O	O
it	O	O
is	O	O
highly	O	O
recommended	O	O
that	O	O
you	O	O
do	O	O
not	O	O
do	O	O
this	O	O
.	O	O
This	O	O
is	O	O
because	O	O
when	O	O
you	O	O
overload	O	O
this	O	O
behaviour	O	O
,	O	O
you	O	O
end	O	O
up	O	O
forcing	O	O
the	O	O
evaluation	O	O
of	O	O
both	O	O
sides	O	O
of	O	O
the	O	O
operation	O	O
.	O	O
This	O	O
does	O	O
two	O	O
things	O	O
:	O	O
It	O	O
breaks	O	O
the	O	O
lazy	O	O
evaluation	O	O
mechanism	O	O
because	O	O
the	O	O
overload	O	O
is	O	O
a	O	O
function	O	O
which	O	O
has	O	O
to	O	O
be	O	O
invoked	O	O
,	O	O
and	O	O
hence	O	O
both	O	O
parameters	O	O
are	O	O
evaluated	O	O
before	O	O
calling	O	O
the	O	O
function	O	O
.	O	O
The	O	O
order	O	O
of	O	O
evaluation	O	O
of	O	O
said	O	O
parameters	O	O
is	O	O
n't	O	O
guaranteed	O	O
and	O	O
can	O	O
be	O	O
compiler	O	O
specific	O	O
.	O	O
Hence	O	O
the	O	O
objects	O	O
would	O	O
n't	O	O
behave	O	O
in	O	O
the	O	O
same	O	O
manner	O	O
as	O	O
they	O	O
do	O	O
in	O	O
the	O	O
examples	O	O
listed	O	O
in	O	O
the	O	O
question/previous	O	O
answers	O	O
.	O	O
For	O	O
more	O	O
info	O	O
,	O	O
have	O	O
a	O	O
read	O	O
of	O	O
Scott	O	O
Meyers	O	O
'	O	O
book	O	O
,	O	O
More	O	O
Effective	O	O
C++	O	O
.	O	O
Cheers	O	O
!	O	O
I	O	O
like	O	O
Orion	O	O
's	O	O
responses	O	O
.	O	O
I	O	O
'll	O	O
add	O	O
two	O	O
things	O	O
:	O	O
The	O	O
left-to-right	O	O
still	O	O
applies	O	O
first	O	O
The	O	O
inner-to-outer	O	O
to	O	O
ensure	O	O
that	O	O
all	O	O
arguments	O	O
are	O	O
resolved	O	O
before	O	O
calling	O	O
the	O	O
function	O	O
Say	O	O
we	O	O
have	O	O
the	O	O
following	O	O
example	O	O
:	O	O
a	O	O
=	O	O
)	O	O
,	O	O
(	O	O
5	O	O
,	O	O
GetSummary	B-API	O
(	I-API	O
``	I-API	O
Orion	I-API	O
''	I-API	O
,	I-API	O
GetAddress	B-API	B-API
(	I-API	I-API
``	I-API	I-API
Orion	I-API	I-API
''	I-API	I-API
)	I-API	I-API
(	O	O
``	O	O
Chris	O	O
''	O	O
,	O	O
GetAddress	B-API	B-API
(	I-API	I-API
``	I-API	I-API
Chris	I-API	I-API
''	I-API	I-API
)	I-API	I-API
Here	O	O
's	O	O
the	O	O
order	O	O
of	O	O
execution	O	O
:	O	O
GetAddress	B-API	O
(	I-API	O
``	I-API	O
Orion	I-API	O
''	I-API	O
)	I-API	O
(	O	O
``	O	O
Orion	O	O
''	O	O
,	O	O
...	O	O
)	O	O
GetAddress	B-API	B-API
(	I-API	I-API
``	I-API	I-API
Chris	I-API	I-API
''	I-API	I-API
)	I-API	I-API
(	O	O
``	O	O
Chris	O	O
''	O	O
,	O	O
...	O	O
)	O	O
Foo	O	O
(	O	O
...	O	O
)	O	O
Assigns	O	O
to	O	O
I	O	O
ca	O	O
n't	O	O
speak	O	O
about	O	O
C	O	O
#	O	O
's	O	O
legal	O	O
requirements	O	O
(	O	O
although	O	O
I	O	O
did	O	O
test	O	O
a	O	O
similar	O	O
example	O	O
using	O	O
Mono	O	O
before	O	O
writing	O	O
this	O	O
post	O	O
)	O	O
,	O	O
but	O	O
this	O	O
order	O	O
is	O	O
guaranteed	O	O
in	O	O
Java	O	O
.	O	O
And	O	O
just	O	O
for	O	O
completeness	O	O
(	O	O
since	O	O
this	O	O
is	O	O
a	O	O
language-agnostic	O	O
thread	O	O
as	O	O
well	O	O
)	O	O
,	O	O
there	O	O
are	O	O
languages	O	O
like	O	O
C	O	O
and	O	O
C++	O	O
,	O	O
where	O	O
the	O	O
order	O	O
is	O	O
not	O	O
guaranteed	O	O
unless	O	O
there	O	O
is	O	O
a	O	O
sequence	O	O
point	O	O
.	O	O
References	O	O
:	O	O
1	O	O
,	O	O
2	O	O
.	O	O
In	O	O
answering	O	O
the	O	O
thread	O	O
's	O	O
question	O	O
,	O	O
however	O	O
,	O	O
and	O	O
are	O	O
sequence	O	O
points	O	O
in	O	O
C++	O	B-API
(	O	O
unless	O	O
overloaded	O	O
;	O	O
also	O	O
see	O	O
OJ	O	O
's	O	O
excellent	O	O
answer	O	O
)	O	O
.	O	O
So	O	O
some	O	O
examples	O	O
:	O	O
foo	O	B-API
(	O	I-API
)	O	I-API
bar	O	B-API
(	O	I-API
)	O	I-API
foo	O	B-API
(	O	I-API
)	O	I-API
bar	O	B-API
(	O	I-API
)	O	I-API
In	O	O
the	O	O
case	O	O
,	O	O
foo	O	B-API
(	O	I-API
)	O	I-API
is	O	O
guaranteed	O	O
to	O	O
run	O	O
before	O	O
bar	O	B-API
(	O	I-API
)	O	I-API
(	O	O
if	O	O
the	O	O
latter	O	O
is	O	O
run	O	O
at	O	O
all	O	O
)	O	O
,	O	O
since	O	O
is	O	O
a	O	O
sequence	O	O
point	O	O
.	O	O
In	O	O
the	O	O
case	O	O
,	O	O
no	O	O
such	O	O
guarantee	O	O
is	O	O
made	O	O
(	O	O
in	O	O
C	O	O
and	O	O
C++	O	O
)	O	O
,	O	O
and	O	O
indeed	O	O
bar	O	O
(	O	O
)	O	O
can	O	O
run	O	O
before	O	O
foo	O	B-API
(	O	I-API
)	O	I-API
,	O	O
or	O	O
vice	O	O
versa	O	O
.	O	O
``	O	O
C	O	O
#	O	O
:	O	O
Left	O	O
to	O	O
right	O	O
,	O	O
and	O	O
processing	O	O
stops	O	O
if	O	O
a	O	O
match	O	O
(	O	O
evaluates	O	O
to	O	O
true	O	O
)	O	O
is	O	O
found	O	O
.	O	O
''	O	O
Zombie	O	O
sheep	O	O
is	O	O
wrong	O	O
,	O	O
not	O	O
enough	O	O
rep	O	O
to	O	O
down	O	O
vote	O	O
it	O	O
.	O	O
The	O	O
question	O	O
is	O	O
about	O	O
the	O	O
operator	O	O
,	O	O
not	O	O
the	O	O
||	O	O
operator	O	O
.	O	O
In	O	O
the	O	O
case	O	O
of	O	O
evaluation	O	O
will	O	O
stop	O	O
if	O	O
a	O	O
FALSE	O	O
is	O	O
found	O	O
.	O	O
In	O	O
the	O	O
case	O	O
of	O	O
||	O	O
evaluation	O	O
stops	O	O
if	O	O
a	O	O
TRUE	O	O
is	O	O
found	O	O
.	O	O
Do	O	O
you	O	O
need	O	O
to	O	O
open	O	O
the	O	O
locfile	O	O
in	O	O
binary	O	O
using	O	O
?	O	O
f	O	O
=	O	O
open	B-API	B-API
(	I-API	I-API
locfile	I-API	I-API
,	I-API	I-API
``	I-API	I-API
rb	I-API	I-API
''	I-API	I-API
)	I-API	I-API
Well	O	O
if	O	O
you	O	O
go	O	O
under	O	O
the	O	O
properties	O	O
of	O	O
your	O	O
file	O	O
in	O	O
Windows	O	O
or	O	O
a	O	O
*nix	O	O
environment	O	O
,	O	O
you	O	O
will	O	O
notice	O	O
two	O	O
sizes	O	O
.	O	O
One	O	O
is	O	O
the	O	O
sector	O	O
size	O	O
,	O	O
and	O	O
one	O	O
is	O	O
the	O	O
actual	O	O
size	O	O
.	O	O
The	O	O
sector	O	O
size	O	O
is	O	O
the	O	O
number	O	O
of	O	O
sectors	O	O
in	O	O
bytes	O	O
that	O	O
are	O	O
used	O	O
up	O	O
on	O	O
your	O	O
hard	O	O
disk	O	O
.	O	O
That	O	O
is	O	O
because	O	O
two	O	O
files	O	O
can	O	O
not	O	O
be	O	O
in	O	O
the	O	O
same	O	O
sector	O	O
with	O	O
most	O	O
modern	O	O
file	O	O
systems	O	O
,	O	O
so	O	O
if	O	O
your	O	O
file	O	O
fills	O	O
up	O	O
half	O	O
of	O	O
the	O	O
sector	O	O
the	O	O
whole	O	O
sector	O	O
is	O	O
marked	O	O
as	O	O
filled	O	O
.	O	O
So	O	O
you	O	O
might	O	O
be	O	O
comparing	O	O
the	O	O
sector	O	O
file	O	O
size	O	O
to	O	O
the	O	O
actual	O	O
file	O	O
size	O	O
on	O	O
the	O	O
FTP	O	O
server	O	O
or	O	O
vice	O	O
versa	O	O
.	O	O
Small	O	O
files	O	O
take	O	O
up	O	O
a	O	O
whole	O	O
node	O	O
on	O	O
the	O	O
filesystem	O	O
whatever	O	O
size	O	O
that	O	O
is	O	O
.	O	O
My	O	O
host	O	O
tends	O	O
to	O	O
report	O	O
all	O	O
small	O	O
files	O	O
as	O	O
4kb	O	O
in	O	O
ftp	O	O
but	O	O
in	O	O
a	O	O
shell	O	O
gives	O	O
an	O	O
accurate	O	O
size	O	O
so	O	O
it	O	O
might	O	O
be	O	O
a	O	O
'feature	O	O
'	O	O
common	O	O
to	O	O
ftp	O	O
clients	O	O
.	O	O
One	O	O
possibility	O	O
is	O	O
Hudson	O	O
.	O	O
It	O	O
's	O	O
written	O	O
in	O	O
Java	O	O
,	O	O
but	O	O
there	O	O
's	O	O
integration	O	O
with	O	O
Python	O	O
projects	O	O
:	O	O
Hudson	O	O
embraces	O	O
Python	O	O
I	O	O
've	O	O
never	O	O
tried	O	O
it	O	O
myself	O	O
,	O	O
however	O	O
.	O	O
(	O	O
Update	O	O
,	O	O
Sept.	O	O
2011	O	O
:	O	O
After	O	O
a	O	O
trademark	O	O
dispute	O	O
Hudson	O	O
has	O	O
been	O	O
renamed	O	O
to	O	O
Jenkins	O	O
.	O	O
)	O	O
We	O	O
run	O	O
Buildbot	O	O
-	O	O
Trac	O	O
at	O	O
work	O	O
,	O	O
I	O	O
have	O	O
n't	O	O
used	O	O
it	O	O
too	O	O
much	O	O
since	O	O
my	O	O
code	O	O
base	O	O
is	O	O
n't	O	O
part	O	O
of	O	O
the	O	O
release	O	O
cycle	O	O
yet	O	O
.	O	O
But	O	O
we	O	O
run	O	O
the	O	O
tests	O	O
on	O	O
different	O	O
environments	B-API	O
(	I-API	O
OSX/Linux/Win	I-API	O
)	I-API	O
and	O	O
it	O	O
sends	O	O
emails	O	O
--	O	O
and	O	O
it	O	O
's	O	O
written	O	O
in	O	O
python	O	O
.	O	O
Second	O	O
the	O	O
Buildbot	O	O
-	O	O
Trac	O	O
integration	O	O
.	O	O
You	O	O
can	O	O
find	O	O
more	O	O
information	O	O
about	O	O
the	O	O
integration	O	O
on	O	O
the	O	O
Buildbot	O	O
website	O	O
.	O	O
At	O	O
my	O	O
previous	O	O
job	O	O
,	O	O
we	O	O
wrote	O	O
and	O	O
used	O	O
the	O	O
plugin	O	O
they	O	O
mention	B-API	O
(	I-API	O
tracbb	I-API	O
)	I-API	O
.	O	O
What	O	O
the	O	O
plugin	O	O
does	O	O
is	O	O
rewriting	O	O
all	O	O
of	O	O
the	O	O
Buildbot	O	O
urls	O	O
so	O	O
you	O	O
can	O	O
use	O	O
Buildbot	O	O
from	O	O
within	O	O
Trac	B-API	O
.	I-API	O
(	I-API	O
http	I-API	O
:	I-API	O
//example.com/tracbb	I-API	O
)	I-API	O
.	O	O
The	O	O
really	O	O
nice	O	O
thing	O	O
about	O	O
Buildbot	O	O
is	O	O
that	O	O
the	O	O
configuration	O	O
is	O	O
written	O	O
in	O	O
Python	O	O
.	O	O
You	O	O
can	O	O
integrate	O	O
your	O	O
own	O	O
Python	O	O
code	O	O
directly	O	O
to	O	O
the	O	O
configuration	O	O
.	O	O
It	O	O
's	O	O
also	O	O
very	O	O
easy	O	O
to	O	O
write	O	O
your	O	O
own	O	O
BuildSteps	O	O
to	O	O
execute	O	O
specific	O	O
tasks	O	O
.	O	O
We	O	O
used	O	O
BuildSteps	O	O
to	O	O
get	O	O
the	O	O
source	O	O
from	O	O
SVN	O	O
,	O	O
pull	O	O
the	O	O
dependencies	O	O
,	O	O
publish	O	O
test	O	O
results	O	O
to	O	O
WebDAV	O	O
,	O	O
etcetera	O	O
.	O	O
I	O	O
wrote	O	O
an	O	O
X10	O	O
interface	O	O
so	O	O
we	O	O
could	O	O
send	O	O
signals	O	O
with	O	O
build	O	O
results	O	O
.	O	O
When	O	O
the	O	O
build	O	O
failed	O	O
,	O	O
we	O	O
switched	O	O
on	O	O
a	O	O
red	O	O
lava	O	O
lamp	O	O
.	O	O
When	O	O
the	O	O
build	O	O
succeeded	O	O
,	O	O
a	O	O
green	O	O
lava	O	O
lamp	O	O
switched	O	O
on	O	O
.	O	O
Good	O	O
times	O	O
:	O	O
-	O	O
)	O	O
I	O	O
'm	O	O
not	O	O
sure	O	O
if	O	O
this	O	O
would	O	O
be	O	O
handled	O	O
exactly	O	O
the	O	O
same	O	O
way	O	O
for	O	O
webstart	O	O
,	O	O
but	O	O
we	O	O
ran	O	O
into	O	O
this	O	O
situation	O	O
in	O	O
a	O	O
desktop	O	O
application	O	O
when	O	O
dealing	O	O
with	O	O
a	O	O
set	O	O
of	O	O
native	O	O
libraries	O	O
(	O	O
dlls	O	O
in	O	O
our	O	O
case	O	O
)	O	O
.	O	O
Loading	O	O
libA	O	O
before	O	O
libB	O	O
should	O	O
work	O	O
,	O	O
unless	O	O
one	O	O
of	O	O
those	O	O
libraries	O	O
has	O	O
a	O	O
dependency	O	O
that	O	O
is	O	O
unaccounted	O	O
for	O	O
and	O	O
not	O	O
in	O	O
the	O	O
path	O	O
.	O	O
My	O	O
understanding	O	O
is	O	O
that	O	O
once	O	O
it	O	O
gets	O	O
to	O	O
a	O	O
system	O	O
loadLibrary	O	O
call	O	O
(	O	O
i.e	O	O
.	O	O
Java	O	O
has	O	O
found	O	O
the	O	O
library	O	O
in	O	O
its	O	O
java.library.path	B-API	O
and	O	O
is	O	O
now	O	O
telling	O	O
the	O	O
OS	O	O
to	O	O
load	O	O
it	O	O
)	O	O
-	O	O
it	O	O
is	O	O
completely	O	O
dependent	O	O
on	O	O
the	O	O
operating	O	O
system	O	O
to	O	O
find	O	O
any	O	O
dependent	O	O
libraries	O	O
,	O	O
because	O	O
at	O	O
that	O	O
point	O	O
it	O	O
is	O	O
the	O	O
operating	O	O
system	O	O
that	O	O
is	O	O
loading	O	O
the	O	O
library	O	O
for	O	O
the	O	O
process	O	O
,	O	O
and	O	O
the	O	O
OS	O	O
only	O	O
knows	O	O
how	O	O
to	O	O
look	O	O
in	O	O
the	O	O
system	O	O
path	O	O
.	O	O
That	O	O
seems	O	O
hard	O	O
to	O	O
set	O	O
in	O	O
the	O	O
case	O	O
of	O	O
a	O	O
Webstart	O	O
app	O	O
,	O	O
but	O	O
there	O	O
is	O	O
a	O	O
way	O	O
around	O	O
this	O	O
that	O	O
does	O	O
not	O	O
involve	O	O
static	O	O
compiling	O	O
.	O	O
You	O	O
may	O	O
be	O	O
able	O	O
to	O	O
shuffle	O	O
where	O	O
your	O	O
libraries	O	O
are	O	O
-	O	O
I	O	O
am	O	O
unsure	O	O
If	O	O
you	O	O
use	O	O
a	O	O
custom	O	O
classloader	O	O
,	O	O
you	O	O
can	O	O
override	O	O
loadLibrary	O	O
and	O	O
findLibrary	O	O
so	O	O
that	O	O
it	O	O
can	O	O
locate	O	O
your	O	O
libraries	O	O
from	O	O
within	O	O
a	O	O
jar	O	O
in	O	O
your	O	O
classpath	O	O
,	O	O
and	O	O
if	O	O
you	O	O
also	O	O
make	O	O
it	O	O
aware	O	O
of	O	O
your	O	O
native	O	O
library	O	O
dependencies	O	O
(	O	O
i.e	O	O
.	O	O
libB	O	O
depends	O	O
on	O	O
libA	O	O
depends	O	O
on	O	O
libX	O	O
,	O	O
then	O	O
when	O	O
loading	O	O
libB	O	O
you	O	O
can	O	O
catch	O	O
yourself	O	O
and	O	O
ensure	O	O
you	O	O
load	O	O
libA	O	O
first	O	O
,	O	O
and	O	O
in	O	O
checking	O	O
that	O	O
notice	O	O
and	O	O
load	O	O
libX	O	O
first	O	O
.	O	O
Then	O	O
the	O	O
OS	O	O
does	O	O
n't	O	O
try	O	O
to	O	O
find	O	O
a	O	O
library	O	O
that	O	O
is	O	O
n't	O	O
in	O	O
your	O	O
path	O	O
.	O	O
It	O	O
's	O	O
klunky	O	O
and	O	O
a	O	O
bit	O	O
painful	O	O
,	O	O
but	O	O
ensuring	O	O
Java	O	O
finds	O	O
them	O	O
and	O	O
loads	O	O
them	O	O
all	O	O
in	O	O
the	O	O
correct	O	O
order	O	O
can	O	O
work	O	O
.	O	O
Hrm	O	O
.	O	O
I	O	O
do	O	O
n't	O	O
know	O	O
about	O	O
yahoo	O	O
,	O	O
but	O	O
there	O	O
is	O	O
another	O	O
mapping	O	O
website	O	O
that	O	O
provides	O	O
an	O	O
API	O	O
for	O	O
India	O	O
.	O	O
http	O	O
:	O	O
//biz.mapmyindia.com/APIs.html	O	O
Open	O	O
your	O	O
csproj	O	O
file	O	O
in	O	O
notepad	O	O
(	O	O
or	O	O
notepad++	O	O
)	O	O
Find	O	O
the	O	O
line	O	O
:	O	O
Import	O	O
Project=	O	O
''	O	O
$	O	O
(	O	O
MSBuildToolsPath	O	O
)	O	O
\Microsoft.CSharp.targets	O	O
''	O	O
/	O	O
and	O	O
change	O	O
it	O	O
to	O	O
Import	O	O
Project=	O	O
''	O	O
$	O	O
(	O	O
MSBuildBinPath	O	O
)	O	O
\Microsoft.CSharp.targets	O	O
''	O	O
/	O	O
if	O	O
its	O	O
.net	O	O
on	O	O
both	O	O
sides	O	O
:	O	O
think	O	O
you	O	O
should	O	O
use	O	O
binary	O	O
serialization	O	O
and	O	O
send	O	O
the	O	O
byte	O	O
[	O	O
]	O	O
result	O	O
.	O	O
trusting	O	O
your	O	O
struct	O	O
to	O	O
be	O	O
fully	O	O
blittable	O	O
can	O	O
be	O	O
trouble	O	O
.	O	O
you	O	O
will	O	O
pay	O	O
in	O	O
some	O	O
overhead	O	O
(	O	O
both	O	O
cpu	O	O
and	O	O
network	O	O
)	O	O
but	O	O
will	O	O
be	O	O
safe	O	O
.	O	O
If	O	O
you	O	O
need	O	O
to	O	O
populate	O	O
each	O	O
member	O	O
variable	O	O
by	O	O
hand	O	O
you	O	O
can	O	O
generalize	O	O
it	O	O
a	O	O
bit	O	O
as	O	O
far	O	O
as	O	O
the	O	O
primitives	O	O
are	O	O
concerned	O	O
by	O	O
using	O	O
FormatterServices	O	O
to	O	O
retrieve	O	O
in	O	O
order	O	O
the	O	O
list	O	O
of	O	O
variable	O	O
types	O	O
associated	O	O
with	O	O
an	O	O
object	O	O
.	O	O
I	O	O
've	O	O
had	O	O
to	O	O
do	O	O
this	O	O
in	O	O
a	O	O
project	O	O
where	O	O
I	O	O
had	O	O
a	O	O
lot	O	O
of	O	O
different	O	O
message	O	O
types	O	O
coming	O	O
off	O	O
the	O	O
stream	O	O
and	O	O
I	O	O
definitely	O	O
did	O	O
n't	O	O
want	O	O
to	O	O
write	O	O
the	O	O
serializer/deserializer	O	O
for	O	O
each	O	O
message	O	O
.	O	O
Here	O	O
's	O	O
the	O	O
code	O	O
I	O	O
used	O	O
to	O	O
generalize	O	O
the	O	O
deserialization	O	O
from	O	O
a	O	O
byte	O	O
[	O	O
]	O	O
.	O	O
public	O	O
virtual	O	O
bool	O	O
{	O	O
MemberInfo	O	B-API
[	O	I-API
]	O	I-API
members	O	O
=	O	O
)	O	O
;	O	O
object	O	O
[	O	O
]	O	O
values	O	O
=	O	O
;	O	O
int	O	O
j	O	O
=	O	O
0	O	O
;	O	O
for	O	O
(	O	O
int	O	O
i	O	O
=	O	O
0	O	O
;	O	O
i	O	O
members.Length	B-API	B-API
;	O	O
i++	O	O
)	O	O
{	O	O
string	O	O
[	O	O
]	O	O
var	O	O
=	O	O
;	O	O
switch	O	O
(	O	O
var	O	O
[	O	O
0	O	O
]	O	O
)	O	O
{	O	O
case	O	O
``	O	O
UInt32	O	O
''	O	O
:	O	O
values	B-API	O
[	I-API	O
i	I-API	O
]	I-API	O
=	I-API	O
+	I-API	O
(	I-API	O
message	B-API	O
[	I-API	O
j	I-API	O
+	I-API	O
1	I-API	O
]	I-API	O
16	I-API	O
)	I-API	O
+	I-API	O
(	I-API	O
message	B-API	O
[	I-API	O
j	I-API	O
+	I-API	O
2	I-API	O
]	I-API	O
8	I-API	O
)	I-API	O
+	I-API	O
message	B-API	O
[	I-API	O
j	I-API	O
+	I-API	O
3	I-API	O
]	I-API	O
)	I-API	O
;	I-API	O
j	I-API	O
+=	I-API	O
4	I-API	O
;	I-API	O
break	O	O
;	O	O
case	O	O
``	O	O
UInt16	O	O
''	O	O
:	O	O
values	B-API	O
[	I-API	O
i	I-API	O
]	I-API	O
=	I-API	O
+	I-API	O
message	B-API	O
[	I-API	O
j	I-API	O
+	I-API	O
1	I-API	O
]	I-API	O
)	I-API	O
;	I-API	O
j	I-API	O
+=	I-API	O
2	I-API	O
;	I-API	O
break	O	O
;	O	O
case	O	O
``	O	O
Byte	O	O
''	O	O
:	O	O
values	B-API	O
[	I-API	O
i	I-API	O
]	I-API	O
=	I-API	O
(	I-API	O
byte	I-API	O
)	I-API	O
message	B-API	O
[	I-API	O
j++	I-API	O
]	I-API	O
;	I-API	O
break	O	O
;	O	O
case	O	O
``	O	O
UInt32	O	B-API
[	O	I-API
]	O	I-API
''	O	O
:	O	O
if	O	O
(	O	O
values	B-API	O
[	I-API	O
i	I-API	O
]	I-API	O
!	I-API	O
=	I-API	O
null	I-API	O
)	I-API	O
{	I-API	O
int	I-API	O
len	I-API	O
=	I-API	O
values	B-API	O
[	I-API	O
i	I-API	O
]	I-API	O
)	I-API	O
.Length	I-API	O
;	O	O
byte	O	O
[	O	O
]	O	O
b	O	O
=	O	O
new	O	O
byte	O	O
[	O	O
len	O	O
*	O	O
4	O	O
]	O	O
;	O	O
;	O	O
,	O	O
(	O	O
UInt32	O	B-API
[	O	I-API
]	O	I-API
)	O	I-API
values	B-API	O
[	I-API	O
i	I-API	O
]	I-API	O
,	I-API	O
len	I-API	O
)	I-API	O
;	I-API	O
j	I-API	O
+=	I-API	O
len	I-API	O
*	I-API	O
4	I-API	O
;	I-API	O
}	I-API	O
break	I-API	O
;	I-API	O
case	I-API	O
``	I-API	O
Byte	B-API	O
[	I-API	O
]	I-API	O
''	O	O
:	O	O
if	O	O
(	O	O
values	B-API	O
[	I-API	O
i	I-API	O
]	I-API	O
!	I-API	O
=	I-API	O
null	I-API	O
)	I-API	O
{	O	O
int	O	O
len	O	O
=	O	O
values	B-API	O
[	I-API	O
i	I-API	O
]	I-API	O
)	I-API	O
.Length	I-API	O
;	I-API	O
(	I-API	O
values	B-API	O
[	I-API	O
i	I-API	O
]	I-API	O
)	I-API	O
,	I-API	O
0	I-API	O
,	I-API	O
len	I-API	O
)	I-API	O
;	I-API	O
j	I-API	O
+=	I-API	O
len	I-API	O
;	I-API	O
}	I-API	O
break	O	O
;	O	O
default	O	O
:	O	O
throw	O	O
new	O	O
;	O	O
}	O	O
}	O	O
;	O	O
return	O	O
true	O	O
;	O	O
(	O	O
byte	O	O
[	O	O
]	O	O
message	B-API	O
)	I-API	O
(	O	O
this.GetType	O	B-API
(	O	I-API
)	O	I-API
(	O	O
this	O	O
,	O	O
members	B-API	O
)	I-API	O
[	I-API	O
i	I-API	O
]	I-API	O
.ToString	I-API	O
(	I-API	O
)	I-API	O
.Split	I-API	O
(	I-API	O
new	I-API	O
char	I-API	B-API
[	I-API	I-API
]	I-API	I-API
{	I-API	O
'	I-API	O
'	I-API	O
}	I-API	O
)	I-API	O
UInt32	I-API	O
)	I-API	O
(	I-API	O
(	I-API	O
message	I-API	O
[	O	O
j	O	O
]	O	O
24	O	O
)	O	O
UInt16	O	O
)	O	O
(	O	O
(	O	O
message	O	O
[	O	O
j	O	O
]	O	O
8	O	O
)	O	O
(	B-API	O
(	I-API	O
UInt32	I-API	B-API
[	I-API	I-API
]	I-API	I-API
)	I-API	I-API
(	O	O
message	O	O
,	O	O
j	O	O
,	O	O
b	O	O
,	O	O
0	O	O
,	O	O
len	O	O
*	O	O
4	O	O
)	O	O
Array.Copy	B-API	B-API
(	I-API	I-API
Utilities.ByteArrayToUInt32Array	I-API	I-API
(	I-API	I-API
b	I-API	I-API
)	I-API	I-API
(	I-API	O
(	I-API	O
byte	I-API	O
[	I-API	O
]	I-API	O
)	I-API	O
(	O	O
message	O	O
,	O	O
j	O	O
,	O	O
(	O	O
byte	O	O
[	O	O
]	O	O
)	O	O
(	O	O
``	O	O
ByteExtractable	O	O
:	O	O
:SetMessageBytes	O	O
Unsupported	O	O
Type	O	O
:	O	O
``	O	O
+	O	O
var	O	O
[	O	O
1	O	O
]	O	O
+	O	O
``	O	O
is	O	O
of	O	O
type	O	O
``	O	O
+	O	O
var	O	O
[	O	O
0	O	O
]	O	O
)	O	O
(	O	O
this	O	O
,	O	O
members	O	O
,	O	O
values	O	O
)	O	O
Most	O	O
people	O	O
use	O	O
.NET	O	O
serialization	O	O
(	O	O
there	O	O
is	O	O
faster	O	O
binary	O	O
and	O	O
slower	O	O
XML	O	O
formatter	O	O
,	O	O
they	O	O
both	O	O
depend	O	O
on	O	O
reflection	O	O
and	O	O
are	O	O
version	O	O
tolerant	O	O
to	O	O
certain	O	O
degree	O	O
)	O	O
However	O	O
,	O	O
if	O	O
you	O	O
want	O	O
the	O	O
fastest	O	O
(	O	O
unsafe	O	O
)	O	O
way	O	O
-	O	O
why	O	O
not	O	O
:	O	O
Writing	O	O
:	O	O
YourStruct	O	O
o	O	O
=	O	O
new	O	O
YourStruct	O	O
(	O	O
)	O	O
;	O	O
byte	O	O
[	O	O
]	O	O
buffer	O	O
=	O	O
new	O	O
byte	O	O
[	O	O
Marshal.SizeOf	O	O
(	O	O
typeof	O	O
(	O	O
YourStruct	O	O
)	O	O
)	O	O
]	O	O
;	O	O
GCHandle	O	O
handle	O	O
=	O	O
GCHandle.Alloc	B-API	B-API
(	I-API	I-API
buffer	I-API	I-API
,	I-API	I-API
GCHandleType.Pinned	I-API	I-API
)	I-API	I-API
;	O	O
Marshal.StructureToPtr	B-API	O
(	I-API	O
o	I-API	O
,	I-API	O
handle.AddrOfPinnedObject	B-API	B-API
(	I-API	I-API
)	I-API	I-API
,	O	O
false	O	O
)	O	O
;	O	O
handle.Free	O	B-API
(	O	I-API
)	O	I-API
;	O	O
Reading	O	O
:	O	O
handle	O	O
=	O	O
GCHandle.Alloc	B-API	O
(	I-API	O
buffer	I-API	O
,	I-API	O
GCHandleType.Pinned	I-API	O
)	I-API	O
;	O	O
o	O	O
=	O	O
(	O	O
YourStruct	O	O
)	O	O
Marshal.PtrToStructure	B-API	O
(	I-API	O
handle.AddrOfPinnedObject	I-API	B-API
(	I-API	I-API
)	I-API	I-API
,	O	O
typeof	O	O
(	O	O
YourStruct	O	O
)	O	O
)	O	O
;	O	O
handle.Free	B-API	B-API
(	I-API	I-API
)	I-API	I-API
;	O	O
One	O	O
possibility	O	O
lies	O	O
with	O	O
Win32	O	B-API
ANSI/Unicode	O	O
``	O	O
name-mangling	O	O
''	O	O
,	O	O
which	O	O
turns	O	O
the	O	O
symbol	O	O
into	O	O
either	O	O
or	O	O
.	O	O
There	O	O
are	O	O
three	O	O
possibilities	O	O
:	O	O
Windows.h	O	O
has	O	O
n't	O	O
been	O	O
loaded	O	O
,	O	O
so	O	O
stays	O	O
Windows.h	O	O
was	O	O
loaded	O	O
with	O	O
symbols	O	O
set	O	O
for	O	O
ANSI	O	O
,	O	O
so	O	O
becomes	O	O
Windows.h	O	O
was	O	O
loaded	O	O
with	O	O
symbols	O	O
set	O	O
for	O	O
Unicode	O	O
,	O	O
so	O	O
becomes	O	O
If	O	O
you	O	O
've	O	O
compiled	O	O
two	O	O
different	O	O
files	O	O
in	O	O
ways	O	O
that	O	O
trigger	O	O
two	O	O
different	O	O
scenarios	O	O
,	O	O
you	O	O
'll	O	O
get	O	O
a	O	O
linker	O	O
error	O	O
.	O	O
The	O	O
error	O	O
message	O	O
indicates	O	O
that	O	O
the	O	O
class	O	O
was	O	O
an	O	O
instance	O	O
of	O	O
#	O	O
2	O	O
,	O	O
above	O	O
--	O	O
perhaps	O	O
it	O	O
's	O	O
used	O	O
somewhere	O	O
that	O	O
windows.h	O	O
has	O	O
n't	O	O
been	O	O
loaded	O	O
?	O	O
Other	O	O
things	O	O
I	O	O
'd	O	O
do	O	O
in	O	O
your	O	O
place	O	O
,	O	O
just	O	O
as	O	O
a	O	O
matter	O	O
of	O	O
routine	O	O
:	O	O
1	O	O
)	O	O
Ensure	O	O
that	O	O
my	O	O
include	O	O
and	O	O
library	O	O
paths	O	O
do	O	O
n't	O	O
contain	O	O
anything	O	O
that	O	O
I	O	O
'm	O	O
not	O	O
expecting	O	O
.	O	O
2	O	O
)	O	O
Do	O	O
a	O	O
``	O	O
build	O	O
clean	O	O
''	O	O
and	O	O
then	O	O
manually	O	O
verify	O	O
it	O	O
,	O	O
deleting	O	O
any	O	O
extra	O	O
object	O	O
files	O	O
if	O	O
necessary	O	O
.	O	O
3	O	O
)	O	O
Make	O	O
sure	O	O
there	O	O
are	O	O
n't	O	O
any	O	O
hardcoded	O	O
paths	O	O
in	O	O
include	O	O
statements	O	O
that	O	O
do	O	O
n't	O	O
mean	O	O
what	O	O
they	O	O
meant	O	O
when	O	O
the	O	O
project	O	O
was	O	O
originally	O	O
rebuilt	O	O
.	O	O
EDIT	O	O
:	O	O
Fighting	O	O
with	O	O
the	O	O
formatting	O	O
:	O	O
(	O	O
windows.h	O	O
is	O	O
declared	O	O
at	O	O
the	O	O
top	O	O
of	O	O
IOCompletionPort.h	O	O
as	O	O
an	O	O
include	O	O
-	O	O
I	O	O
was	O	O
sick	O	O
of	O	O
seeing	O	O
7	O	O
lines	O	O
just	O	O
to	O	O
include	O	O
1	O	O
file	O	O
so	O	O
I	O	O
have	O	O
wrapped	O	O
it	O	O
its	O	O
own	O	O
file	O	O
and	O	O
includes	O	O
that	O	O
itself	O	O
.	O	O
This	O	O
also	O	O
contains	O	O
some	O	O
additional	O	O
#	O	O
defines	O	O
(	O	O
ie	O	O
ULONG_PTR	O	O
)	O	O
as	O	O
our	O	O
main	O	O
app	O	O
wo	O	O
n't	O	O
compile	O	O
with	O	O
the	O	O
Platform	O	O
SDK	O	O
installed	O	O
:	O	O
-	O	O
(	O	O
That	O	O
is	O	O
confirmed	O	O
.	O	O
Nothing	O	O
is	O	O
out	O	O
of	O	O
place	O	O
.	O	O
I	O	O
've	O	O
done	O	O
that	O	O
-	O	O
deleted	O	O
the	O	O
build	O	O
directories	O	O
I	O	O
never	O	O
use	O	O
hard-coded	O	O
paths	O	O
.	O	O
Presuming	O	O
you	O	O
have	O	O
n't	O	O
futzed	O	O
around	O	O
with	O	O
the	O	O
Project	O	O
settings	O	O
deleting	O	O
something	O	O
you	O	O
ought	O	O
not	O	O
have	O	O
(	O	O
which	O	O
is	O	O
where	O	O
I	O	O
'd	O	O
expect	O	O
external	O	O
dependencies	O	O
like	O	O
User32.lib	O	O
to	O	O
be	O	O
)	O	O
:	O	O
Check	O	O
Tools	O	O
|	O	O
Options	O	O
|	O	O
Directories	O	O
|	O	O
Libraries	O	O
(	O	O
going	O	O
from	O	O
memory	O	O
here	O	O
)	O	O
and	O	O
ensure	O	O
that	O	O
you	O	O
're	O	O
not	O	O
missing	O	O
the	O	O
common-all-garden	O	O
variety	O	O
lib	O	O
directories	O	O
(	O	O
again	O	O
,	O	O
without	O	O
VC6	O	O
in	O	O
front	O	O
of	O	O
me	O	O
,	O	O
I	O	O
ca	O	O
n't	O	O
tell	O	O
you	O	O
what	O	O
they	O	O
are	O	O
)	O	O
Does	O	O
this	O	O
get	O	O
the	O	O
correct	O	O
answer	O	O
?	O	O
document.getElementById	B-API	B-API
(	I-API	I-API
``	I-API	I-API
newSkill	I-API	I-API
''	I-API	I-API
)	I-API	I-API
.innerHTML	I-API	O
.selectedIndex	B-API	O
]	I-API	O
.value	I-API	O
document.getElementById	B-API	B-API
(	I-API	I-API
'newSkill	I-API	I-API
'	I-API	I-API
)	I-API	I-API
.options	I-API	O
[	I-API	O
document.getElementById	I-API	B-API
(	I-API	I-API
'newSkill	I-API	I-API
'	I-API	I-API
)	I-API	I-API
Should	O	O
work	O	O
This	O	O
should	O	O
return	O	O
the	O	O
text	O	O
value	O	O
of	O	O
the	O	O
selected	O	O
value	O	O
var	O	O
vSkill	O	O
=	O	O
document.getElementById	B-API	B-API
(	I-API	I-API
'newSkill	I-API	I-API
'	I-API	I-API
)	I-API	I-API
;	O	O
var	O	O
vSkillText	O	O
=	O	O
vSkill.options	B-API	O
[	I-API	O
vSkill.selectedIndex	I-API	O
]	I-API	O
.innerHTML	I-API	O
;	O	O
alert	B-API	B-API
(	I-API	I-API
vSkillText	I-API	I-API
)	I-API	I-API
;	O	O
Props	O	O
:	O	O
@	O	O
Tanerax	O	O
for	O	O
reading	O	O
the	O	O
question	O	O
,	O	O
knowing	O	O
what	O	O
was	O	O
asked	O	O
and	O	O
answering	O	O
it	O	O
before	O	O
others	O	O
figured	O	O
it	O	O
out	O	O
.	O	O
Edit	O	O
:	O	O
DownModed	O	O
,	O	O
cause	O	O
I	O	O
actually	O	O
read	O	O
a	O	O
question	O	O
fully	O	O
,	O	O
and	O	O
answered	O	O
it	O	O
,	O	O
sad	O	O
world	O	O
it	O	O
is	O	O
.	O	O
Based	O	O
on	O	O
your	O	O
example	O	O
HTML	O	O
code	O	O
,	O	O
here	O	O
's	O	O
one	O	O
way	O	O
to	O	O
get	O	O
the	O	O
displayed	O	O
text	O	O
of	O	O
the	O	O
currently	O	O
selected	O	O
option	O	O
:	O	O
var	O	O
skillsSelect	O	O
=	O	O
document.getElementById	B-API	B-API
(	I-API	I-API
``	I-API	I-API
newSkill	I-API	I-API
''	I-API	I-API
)	I-API	I-API
;	O	O
var	O	O
selectedText	O	O
=	O	O
skillsSelect.options	B-API	O
[	I-API	O
skillsSelect.selectedIndex	I-API	O
]	I-API	O
.text	I-API	O
;	O	O
in	O	O
1.x	O	O
there	O	O
used	O	O
to	O	O
be	O	O
things	O	O
DataTables	O	O
could	O	O
n't	O	O
do	O	O
which	O	O
DataSets	O	O
could	O	O
(	O	O
do	O	O
n't	O	O
remember	O	O
exactly	O	O
what	O	O
)	O	O
.	O	O
All	O	O
that	O	O
was	O	O
changed	O	O
in	O	O
2.x	O	O
.	O	O
My	O	O
guess	O	O
is	O	O
that	O	O
's	O	O
why	O	O
a	O	O
lot	O	O
of	O	O
examples	O	O
still	O	O
use	O	O
DataSets	O	O
.	O	O
DataTables	O	O
should	O	O
be	O	O
quicker	O	O
as	O	O
they	O	O
are	O	O
more	O	O
lightweight	O	O
.	O	O
If	O	O
you	O	O
're	O	O
only	O	O
pulling	O	O
a	O	O
single	O	O
resultset	O	O
,	O	O
its	O	O
your	O	O
best	O	O
choice	O	O
between	O	O
the	O	O
two	O	O
.	O	O
It	O	O
really	O	O
depends	O	O
on	O	O
the	O	O
sort	O	O
of	O	O
data	O	O
you	O	O
're	O	O
bringing	O	O
back	O	O
.	O	O
Since	O	O
a	O	O
DataSet	O	O
is	O	O
(	O	O
in	O	O
effect	O	O
)	O	O
just	O	O
a	O	O
collection	O	O
of	O	O
DataTable	O	O
objects	O	O
,	O	O
you	O	O
can	O	O
return	O	O
multiple	O	O
distinct	O	O
sets	O	O
of	O	O
data	O	O
into	O	O
a	O	O
single	O	O
,	O	O
and	O	O
therefore	O	O
more	O	O
manageable	O	O
,	O	O
object	O	O
.	O	O
Performance-wise	O	O
,	O	O
you	O	O
're	O	O
more	O	O
likely	O	O
to	O	O
get	O	O
inefficiency	O	O
from	O	O
unoptimized	O	O
queries	O	O
than	O	O
from	O	O
the	O	O
``	O	O
wrong	O	O
''	O	O
choice	O	O
of	O	O
.NET	O	O
construct	O	O
.	O	O
At	O	O
least	O	O
,	O	O
that	O	O
's	O	O
been	O	O
my	O	O
experience	O	O
.	O	O
One	O	O
feature	O	O
of	O	O
the	O	O
DataSet	O	O
is	O	O
that	O	O
if	O	O
you	O	O
can	O	O
call	O	O
multiple	O	O
select	O	O
statements	O	O
in	O	O
your	O	O
stored	O	O
procedures	O	O
,	O	O
the	O	O
DataSet	O	O
will	O	O
have	O	O
one	O	O
DataTable	O	O
for	O	O
each	O	O
.	O	O
There	O	O
are	O	O
three	O	O
ways	O	O
to	O	O
iterate	O	O
over	O	O
a	O	O
result	O	O
set	O	O
.	O	O
The	O	O
best	O	O
way	O	O
in	O	O
terms	O	O
of	O	O
both	O	O
readability	O	O
and	O	O
performance	O	O
is	O	O
usually	O	O
to	O	O
use	O	O
the	O	O
built-in	O	O
cursor	O	O
iterator	O	O
.	O	O
curs.execute	B-API	B-API
(	I-API	I-API
'select	I-API	I-API
*	I-API	I-API
from	I-API	I-API
people	I-API	I-API
'	I-API	I-API
)	I-API	I-API
for	O	O
row	O	O
in	O	O
curs	O	O
:	O	O
print	O	O
row	O	O
You	O	O
can	O	O
fetch	O	O
all	O	O
the	O	O
rows	O	O
into	O	O
a	O	O
list	O	O
,	O	O
but	O	O
this	O	O
can	O	O
have	O	O
some	O	O
bad	O	O
side	O	O
effects	O	O
if	O	O
the	O	O
result	O	O
set	O	O
is	O	O
large	O	O
.	O	O
You	O	O
have	O	O
to	O	O
wait	O	O
for	O	O
the	O	O
entire	O	O
result	O	O
set	O	O
to	O	O
be	O	O
returned	O	O
to	O	O
your	O	O
client	O	O
process	O	O
.	O	O
You	O	O
may	O	O
eat	O	O
up	O	O
a	O	O
lot	O	O
of	O	O
memory	O	O
in	O	O
your	O	O
client	O	O
to	O	O
hold	O	O
the	O	O
built-up	O	O
list	O	O
.	O	O
It	O	O
may	O	O
take	O	O
a	O	O
while	O	O
for	O	O
Python	O	O
to	O	O
construct	O	O
and	O	O
deconstruct	O	O
the	O	O
list	O	O
which	O	O
you	O	O
are	O	O
going	O	O
to	O	O
immediately	O	O
discard	O	O
anyways	O	O
.	O	O
for	O	O
row	O	O
in	O	O
curs.fetchall	B-API	B-API
(	I-API	I-API
)	I-API	I-API
:	O	O
print	O	O
row	O	O
Finally	O	O
,	O	O
you	O	O
can	O	O
loop	O	O
over	O	O
the	O	O
result	O	O
set	O	O
fetching	O	O
one	O	O
row	O	O
at	O	O
a	O	O
time	O	O
.	O	O
In	O	O
general	O	O
,	O	O
there	O	O
's	O	O
no	O	O
particular	O	O
advantage	O	O
in	O	O
doing	O	O
this	O	O
over	O	O
using	O	O
the	O	O
iterator	O	O
.	O	O
If	O	O
there	O	O
is	O	O
something	O	O
in	O	O
your	O	O
programming	O	O
logic	O	O
that	O	O
seems	O	O
to	O	O
indicate	O	O
there	O	O
is	O	O
an	O	O
advantage	O	O
in	O	O
doing	O	O
this	O	O
,	O	O
perhaps	O	O
you	O	O
should	O	O
reconsider	O	O
your	O	O
programming	O	O
logic	O	O
.	O	O
row	O	O
=	O	O
curs.fetchone	B-API	B-API
(	I-API	I-API
)	I-API	I-API
while	O	O
row	O	O
:	O	O
print	O	O
row	O	O
row	O	O
=	O	O
curs.fetchone	B-API	B-API
(	I-API	I-API
)	I-API	I-API
Application.Run	O	O
method	O	O
displays	O	O
one	O	O
(	O	O
or	O	O
more	O	O
)	O	O
forms	O	O
and	O	O
initiates	O	O
the	O	O
standard	O	O
message	O	O
loop	O	O
which	O	O
runs	O	O
until	O	O
all	O	O
the	O	O
forms	O	O
are	O	O
closed	O	O
.	O	O
You	O	O
can	O	O
not	O	O
force	O	O
a	O	O
return	O	O
from	O	O
that	O	O
method	O	O
except	O	O
by	O	O
closing	O	O
all	O	O
your	O	O
forms	O	O
or	O	O
forcing	O	O
an	O	O
application	O	O
shutdown	O	O
.	O	O
You	O	O
can	O	O
,	O	O
however	O	O
,	O	O
pass	O	O
an	O	O
ApplicationContext	O	O
(	O	O
instad	O	O
of	O	O
a	O	O
new	O	O
Form	O	O
(	O	O
)	O	O
)	O	O
to	O	O
Application.Run	O	B-API
method	O	O
and	O	O
ApplicationContext	O	O
can	O	O
be	O	O
used	O	O
to	O	O
launch	O	O
several	O	O
forms	O	O
at	O	O
once	O	O
.	O	O
Your	O	O
application	O	O
will	O	O
only	O	O
end	O	O
when	O	O
all	O	O
of	O	O
those	O	O
are	O	O
closed	O	O
.	O	O
See	O	O
here	O	O
:	O	O
http	O	O
:	O	O
//msdn.microsoft.com/en-us/library/system.windows.forms.application.run.aspx	O	O
Also	O	O
,	O	O
any	O	O
forms	O	O
that	O	O
you	O	O
Show	O	O
non-modally	O	O
will	O	O
continue	O	O
to	O	O
run	O	O
alongside	O	O
your	O	O
main	O	O
form	O	O
,	O	O
which	O	O
will	O	O
enable	O	O
you	O	O
to	O	O
have	O	O
more	O	O
than	O	O
one	O	O
windows	O	O
that	O	O
do	O	O
not	O	O
block	O	O
each	O	O
other	O	O
.	O	O
I	O	O
believe	O	O
this	O	O
is	O	O
actually	O	O
what	O	O
you	O	O
are	O	O
trying	O	O
to	O	O
accomplish	O	O
.	O	O
I	O	O
'm	O	O
sure	O	O
this	O	O
is	O	O
possible	O	O
if	O	O
you	O	O
hack	O	O
at	O	O
it	O	O
hard	O	O
enough	O	O
,	O	O
but	O	O
I	O	O
'd	O	O
suggest	O	O
it	O	O
is	O	O
not	O	O
a	O	O
good	O	O
idea	O	O
.	O	O
'Windows	O	O
'	O	O
(	O	O
that	O	O
you	O	O
see	O	O
on	O	O
the	O	O
screen	O	O
)	O	O
are	O	O
highly	O	O
coupled	O	O
to	O	O
processes	O	O
.	O	O
That	O	O
is	O	O
,	O	O
each	O	O
process	O	O
which	O	O
displays	O	O
any	O	O
GUI	O	O
is	O	O
expected	O	O
to	O	O
have	O	O
a	O	O
Message	O	O
Loop	O	O
,	O	O
which	O	O
processes	O	O
all	O	O
of	O	O
the	O	O
messages	O	O
which	O	O
are	O	O
involved	O	O
with	O	O
creating	O	O
and	O	O
managing	O	O
windows	O	O
(	O	O
things	O	O
like	O	O
'clicked	O	O
the	O	O
button	O	O
'	O	O
,	O	O
'closed	O	O
the	O	O
app	O	O
'	O	O
,	O	O
'redraw	O	O
the	O	O
screen	O	O
'	O	O
and	O	O
so	O	O
on	O	O
.	O	O
Because	O	O
of	O	O
this	O	O
,	O	O
it	O	O
is	O	O
more	O	O
or	O	O
less	O	O
assumed	O	O
that	O	O
if	O	O
you	O	O
have	O	O
any	O	O
message	O	O
loop	O	O
,	O	O
it	O	O
must	O	O
be	O	O
available	O	O
for	O	O
the	O	O
lifetime	O	O
of	O	O
your	O	O
process	O	O
.	O	O
For	O	O
example	O	O
windows	O	O
might	O	O
send	O	O
you	O	O
a	O	O
'quit	O	O
'	O	O
message	O	O
,	O	O
and	O	O
you	O	O
need	O	O
to	O	O
have	O	O
a	O	O
message	O	O
loop	O	O
available	O	O
to	O	O
handle	O	O
that	O	O
,	O	O
even	O	O
if	O	O
you	O	O
've	O	O
got	O	O
nothing	O	O
on	O	O
the	O	O
screen	O	O
.	O	O
Your	O	O
best	O	O
bet	O	O
is	O	O
do	O	O
it	O	O
like	O	O
this	O	O
:	O	O
Make	O	O
a	O	O
fake	O	O
form	O	O
which	O	O
is	O	O
never	O	O
shown	O	O
which	O	O
is	O	O
your	O	O
'main	O	O
app'	O	O
Start	O	O
up	O	O
Call	O	O
Application.Run	B-API	O
and	O	O
pass	O	O
in	O	O
this	O	O
fake	O	O
form	O	O
.	O	O
Do	O	O
your	O	O
work	O	O
in	O	O
another	O	O
thread	O	O
,	O	O
and	O	O
fire	O	O
events	O	O
at	O	O
the	O	O
main	O	O
thread	O	O
when	O	O
you	O	O
need	O	O
to	O	O
do	O	O
Gui	O	O
stuff	O	O
.	O	O
I	O	O
do	O	O
n't	O	O
know	O	O
the	O	O
ASP.NET	O	O
side	O	O
of	O	O
the	O	O
problem	O	O
but	O	O
.NET	O	O
has	O	O
a	O	O
pretty	O	O
powerful	O	O
class	O	O
:	O	O
System.Globalization.CultureInfo	B-API	B-API
.	O	O
You	O	O
can	O	O
use	O	O
the	O	O
following	O	O
code	O	O
to	O	O
parse	O	O
a	O	O
string	O	O
containing	O	O
a	O	O
double	O	O
value	O	O
:	O	O
double	B-API	O
d	B-API	O
=	B-API	O
;	B-API	O
//	I-API	O
--	B-API	O
OR	B-API	O
--	B-API	O
double	I-API	O
d	B-API	O
=	B-API	O
(	O	O
``	O	O
100.20	O	O
''	O	O
,	O	O
CultureInfo.CurrentCulture	B-API	B-API
)	I-API	O
(	O	O
``	O	O
100.20	O	O
''	O	O
,	O	O
CultureInfo.CurrentUICulture	B-API	B-API
)	I-API	O
If	O	O
ASP.NET	O	O
somehow	O	O
(	O	O
i.e	O	O
.	O	O
using	O	O
HTTP	O	O
Request	O	O
headers	O	O
)	O	O
passes	O	O
current	O	O
user	O	O
's	O	O
CultureInfo	O	O
to	O	O
either	O	O
CultureInfo.CurrentCulture	B-API	B-API
or	O	O
CultureInfo.CurrentUICulture	B-API	O
,	O	O
these	O	O
will	O	O
work	O	O
fine	O	O
.	O	O
You	O	O
ca	O	O
n't	O	O
please	O	O
everyone	O	O
.	O	O
If	O	O
I	O	O
enter	O	O
ten	O	O
as	O	O
10.000	O	O
,	O	O
and	O	O
someone	O	O
enters	O	O
ten	O	O
thousand	O	O
as	O	O
10.000	O	O
,	O	O
you	O	O
can	O	O
not	O	O
handle	O	O
that	O	O
without	O	O
some	O	O
knowledge	O	O
of	O	O
the	O	O
culture	O	O
of	O	O
the	O	O
input	O	O
.	O	O
Detect	O	O
the	O	O
culture	O	O
somehow	O	O
(	O	O
browser	O	O
,	O	O
system	O	O
setting	O	O
-	O	O
what	O	O
is	O	O
the	O	O
use	O	O
case	O	O
?	O	O
ASP	O	O
?	O	O
Internal	O	O
app	O	O
,	O	O
or	O	O
open	O	O
to	O	O
the	O	O
world	O	O
?	O	O
)	O	O
,	O	O
or	O	O
provide	O	O
an	O	O
example	O	O
of	O	O
the	O	O
expected	O	O
formatting	O	O
,	O	O
and	O	O
use	O	O
the	O	O
most	O	O
lenient	O	O
parser	O	O
you	O	O
can	O	O
.	O	O
Probably	O	O
something	O	O
like	O	O
:	O	O
double	B-API	O
d	B-API	O
=	B-API	O
(	O	O
``	O	O
5,000.00	O	O
''	O	O
,	O	O
NumberStyles.Any	B-API	B-API
,	O	O
CultureInfo.InvariantCulture	B-API	B-API
)	O	O
I	O	O
think	O	O
the	O	O
best	O	O
you	O	O
can	O	O
do	O	O
in	O	O
this	O	O
case	O	O
is	O	O
to	O	O
take	O	O
their	O	O
input	O	O
and	O	O
then	O	O
show	O	O
them	O	O
what	O	O
you	O	O
think	O	O
they	O	O
meant	O	O
.	O	O
If	O	O
they	O	O
disagree	O	O
,	O	O
show	O	O
them	O	O
the	O	O
format	O	O
you	O	O
're	O	O
expecting	O	O
and	O	O
get	O	O
them	O	O
to	O	O
enter	O	O
it	O	O
again	O	O
.	O	O
The	O	O
difference	O	O
between	O	O
12.345	O	O
in	O	O
French	O	O
and	O	O
English	O	O
is	O	O
a	O	O
factor	O	O
of	O	O
1000	O	O
.	O	O
If	O	O
you	O	O
supply	O	O
an	O	O
expected	O	O
range	O	O
where	O	O
max	O	O
1000*min	O	O
,	O	O
you	O	O
can	O	O
easily	O	O
guess	O	O
.	O	O
Take	O	O
for	O	O
example	O	O
the	O	O
height	O	O
of	O	O
a	O	O
person	O	O
(	O	O
including	O	O
babies	O	O
and	O	O
children	O	O
)	O	O
in	O	O
mm	O	O
.	O	O
By	O	O
using	O	O
a	O	O
range	O	O
of	O	O
200-3000	O	O
,	O	O
an	O	O
input	O	O
of	O	O
1.800	O	O
or	O	O
1,800	O	O
can	O	O
unambiguously	O	O
be	O	O
interpreted	O	O
as	O	O
1	O	O
meter	O	O
and	O	O
80	O	O
centimeters	O	O
,	O	O
whereas	O	O
an	O	O
input	O	O
of	O	O
912.300	O	O
or	O	O
912,300	O	O
can	O	O
unambiguously	O	O
be	O	O
interpreted	O	O
as	O	O
91	O	O
centimeters	O	O
and	O	O
2.3	O	O
millimeters	O	O
.	O	O
From	O	O
my	O	O
experience	O	O
,	O	O
and	O	O
from	O	O
what	O	O
I	O	O
've	O	O
read	O	O
across	O	O
the	O	O
internet	O	O
,	O	O
the	O	O
answer	O	O
is	O	O
``	O	O
No	O	O
,	O	O
''	O	O
it	O	O
is	O	O
not	O	O
guaranteed	O	O
.	O	O
It	O	O
depends	O	O
on	O	O
CPU	O	O
speed	O	O
,	O	O
operating	O	O
system	O	O
,	O	O
flavor	O	O
of	O	O
Linux	O	O
,	O	O
etc	O	O
.	O	O
Maybe	O	O
.	O	O
But	O	O
you	O	O
have	O	O
bigger	O	O
problems	O	O
.	O	O
gettimeofday	B-API	B-API
(	I-API	I-API
)	I-API	I-API
can	O	O
result	O	O
in	O	O
incorrect	O	O
timings	O	O
if	O	O
there	O	O
are	O	O
processes	O	O
on	O	O
your	O	O
system	O	O
that	O	O
change	O	O
the	O	O
timer	O	O
(	O	O
ie	O	O
,	O	O
ntpd	O	O
)	O	O
.	O	O
On	O	O
a	O	O
``	O	O
normal	O	O
''	O	O
linux	O	O
,	O	O
though	O	O
,	O	O
I	O	O
believe	O	O
the	O	O
resolution	O	O
of	O	O
gettimeofday	B-API	O
(	I-API	O
)	I-API	O
is	O	O
10us	O	O
.	O	O
It	O	O
can	O	O
jump	O	O
forward	O	O
and	O	O
backward	O	O
and	O	O
time	O	O
,	O	O
consequently	O	O
,	O	O
based	O	O
on	O	O
the	O	O
processes	O	O
running	O	O
on	O	O
your	O	O
system	O	O
.	O	O
This	O	O
effectively	O	O
makes	O	O
the	O	O
answer	O	O
to	O	O
your	O	O
question	O	O
no	O	O
.	O	O
You	O	O
should	O	O
look	O	O
into	O	O
clock_gettime	B-API	O
(	I-API	O
CLOCK_MONOTONIC	I-API	O
)	I-API	O
for	O	O
timing	O	O
intervals	O	O
.	O	O
It	O	O
suffers	O	O
from	O	O
several	O	O
less	O	O
issues	O	O
due	O	O
to	O	O
things	O	O
like	O	O
multi-core	O	O
systems	O	O
and	O	O
external	O	O
clock	O	O
settings	O	O
.	O	O
Also	O	O
,	O	O
look	O	O
into	O	O
the	O	O
clock_getres	B-API	B-API
(	I-API	I-API
)	I-API	I-API
function	O	O
.	O	O
The	O	O
actual	O	O
resolution	O	O
of	O	O
gettimeofday	B-API	B-API
(	I-API	I-API
)	I-API	I-API
depends	O	O
on	O	O
the	O	O
hardware	O	O
architecture	O	O
.	O	O
Intel	O	O
processors	O	O
as	O	O
well	O	O
as	O	O
SPARC	O	O
machines	O	O
offer	O	O
high	O	O
resolution	O	O
timers	O	O
that	O	O
measure	O	O
microseconds	O	O
.	O	O
Other	O	O
hardware	O	O
architectures	O	O
fall	O	O
back	O	O
to	O	O
the	O	O
systems	O	O
timer	O	O
,	O	O
which	O	O
is	O	O
typically	O	O
set	O	O
to	O	O
100	O	O
Hz	O	O
.	O	O
In	O	O
such	O	O
cases	O	O
,	O	O
the	O	O
time	O	O
resolution	O	O
will	O	O
be	O	O
less	O	O
accurate	O	O
.	O	O
I	O	O
obtained	O	O
this	O	O
answer	O	O
from	O	O
High	O	O
Resolution	O	O
Time	O	O
Measurement	O	O
and	O	O
Timers	O	O
,	O	O
Part	O	O
I	O	O
High	O	O
Resolution	O	O
,	O	O
Low	O	O
Overhead	O	O
Timing	O	O
for	O	O
Intel	O	O
Processors	O	O
If	O	O
you	O	O
're	O	O
on	O	O
Intel	O	O
hardware	O	O
,	O	O
here	O	O
's	O	O
how	O	O
to	O	O
read	O	O
the	O	O
CPU	O	O
real-time	O	O
instruction	O	O
counter	O	O
.	O	O
It	O	O
will	O	O
tell	O	O
you	O	O
the	O	O
number	O	O
of	O	O
CPU	O	O
cycles	O	O
executed	O	O
since	O	O
the	O	O
processor	O	O
was	O	O
booted	O	O
.	O	O
This	O	O
is	O	O
probably	O	O
the	O	O
finest-grained	O	O
counter	O	O
you	O	O
can	O	O
get	O	O
for	O	O
performance	O	O
measurement	O	O
.	O	O
Note	O	O
that	O	O
this	O	O
is	O	O
the	O	O
number	O	O
of	O	O
CPU	O	O
cycles	O	O
.	O	O
On	O	O
linux	O	O
you	O	O
can	O	O
get	O	O
the	O	O
CPU	O	O
speed	O	O
from	O	O
/proc/cpuinfo	O	O
and	O	O
divide	O	O
to	O	O
get	O	O
the	O	O
number	O	O
of	O	O
seconds	O	O
.	O	O
Converting	O	O
this	O	O
to	O	O
a	O	O
double	O	O
is	O	O
quite	O	O
handy	O	O
.	O	O
When	O	O
I	O	O
run	O	O
this	O	O
on	O	O
my	O	O
box	O	O
,	O	O
I	O	O
get	O	O
11867927879484732	O	O
11867927879692217	O	O
it	O	O
took	O	O
this	O	O
long	O	O
to	O	O
call	O	O
printf	O	O
:	O	O
207485	O	O
Here	O	O
's	O	O
the	O	O
Intel	O	O
developer	O	O
's	O	O
guide	O	O
that	O	O
gives	O	O
tons	O	O
of	O	O
detail	O	O
.	O	O
#	O	O
include	O	O
stdio.h	O	O
#	O	O
include	O	O
stdint.h	O	O
inline	O	O
uint64_t	O	O
rdtsc	O	O
(	O	O
)	O	O
{	O	O
uint32_t	O	O
lo	O	O
,	O	O
hi	O	O
;	O	O
__asm__	O	O
__volatile__	O	O
(	O	O
``	O	O
xorl	O	O
%	O	O
%	O	O
eax	O	O
,	O	O
%	O	O
%	O	O
eax\n	O	O
''	O	O
``	O	O
cpuid\n	O	O
''	O	O
``	O	O
rdtsc\n	O	O
''	O	O
:	O	O
``	O	O
=a	O	O
''	O	O
(	O	O
lo	O	O
)	O	O
,	O	O
``	O	O
=d	O	O
''	O	O
(	O	O
hi	O	O
)	O	O
:	O	O
:	O	O
``	O	O
%	O	O
ebx	O	O
''	O	O
,	O	O
``	O	O
%	O	O
ecx	O	O
''	O	O
)	O	O
;	O	O
return	O	O
(	O	O
uint64_t	O	O
)	O	O
hi	O	O
32	O	O
|	O	O
lo	O	O
;	O	O
}	O	O
main	O	B-API
(	O	I-API
)	O	I-API
{	O	O
unsigned	O	O
long	O	O
long	O	O
x	O	O
;	O	O
unsigned	O	O
long	O	O
long	O	O
y	O	O
;	O	O
x	O	O
=	O	O
rdtsc	B-API	B-API
(	I-API	I-API
)	I-API	I-API
;	O	O
printf	B-API	O
(	I-API	O
``	I-API	O
%	I-API	O
lld\n	I-API	O
''	I-API	O
,	I-API	O
x	I-API	O
)	I-API	O
;	O	O
y	O	O
=	O	O
rdtsc	B-API	B-API
(	I-API	I-API
)	I-API	I-API
;	O	O
printf	N-API	O
(	I-API	O
``	I-API	O
%	I-API	O
lld\n	I-API	O
''	I-API	O
,	I-API	O
y	I-API	O
)	I-API	O
;	O	O
printf	B-API	O
(	I-API	O
``	I-API	O
it	I-API	O
took	I-API	O
this	I-API	O
long	I-API	O
to	I-API	O
call	I-API	O
printf	I-API	O
:	I-API	O
%	I-API	O
lld\n	I-API	O
''	I-API	O
,	I-API	O
y-x	I-API	O
)	I-API	O
;	O	O
}	O	O
So	O	O
it	O	O
says	O	O
microseconds	O	O
explicitly	O	O
,	O	O
but	O	O
says	O	O
the	O	O
resolution	O	O
of	O	O
the	O	O
system	O	O
clock	O	O
is	O	O
unspecified	O	O
.	O	O
I	O	O
suppose	O	O
resolution	O	O
in	O	O
this	O	O
context	O	O
means	O	O
how	O	O
the	O	O
smallest	O	O
amount	O	O
it	O	O
will	O	O
ever	O	O
be	O	O
incremented	O	O
?	O	O
The	O	O
data	O	O
structure	O	O
is	O	O
defined	O	O
as	O	O
having	O	O
microseconds	O	O
as	O	O
a	O	O
unit	O	O
of	O	O
measurement	O	O
,	O	O
but	O	O
that	O	O
does	O	O
n't	O	O
mean	O	O
that	O	O
the	O	O
clock	O	O
or	O	O
operating	O	O
system	O	O
is	O	O
actually	O	O
capable	O	O
of	O	O
measuring	O	O
that	O	O
finely	O	O
.	O	O
Like	O	O
other	O	O
people	O	O
have	O	O
suggested	O	O
,	O	O
gettimeofday	B-API	O
(	I-API	O
)	I-API	O
is	O	O
bad	O	O
because	O	O
setting	O	O
the	O	O
time	O	O
can	O	O
cause	O	O
clock	O	O
skew	O	O
and	O	O
throw	O	O
off	O	O
your	O	O
calculation	O	O
.	O	O
clock_gettime	B-API	O
(	I-API	O
CLOCK_MONOTONIC	I-API	O
)	I-API	O
is	O	O
what	O	O
you	O	O
want	O	O
,	O	O
and	O	O
clock_getres	B-API	O
(	I-API	O
)	I-API	O
will	O	O
tell	O	O
you	O	O
the	O	O
precision	O	O
of	O	O
your	O	O
clock	O	O
.	O	O
@	O	O
Bernard	O	O
:	O	O
I	O	O
have	O	O
to	O	O
admit	O	O
,	O	O
most	O	O
of	O	O
your	O	O
example	O	O
went	O	O
straight	O	O
over	O	O
my	O	O
head	O	O
.	O	O
It	O	O
does	O	O
compile	O	O
,	O	O
and	O	O
seems	O	O
to	O	O
work	O	O
,	O	O
though	O	O
.	O	O
Is	O	O
this	O	O
safe	O	O
for	O	O
SMP	O	O
systems	O	O
or	O	O
SpeedStep	O	O
?	O	O
That	O	O
's	O	O
a	O	O
good	O	O
question	O	O
...	O	O
I	O	O
think	O	O
the	O	O
code	O	O
's	O	O
ok.	O	O
From	O	O
a	O	O
practical	O	O
standpoint	O	O
,	O	O
we	O	O
use	O	O
it	O	O
in	O	O
my	O	O
company	O	O
every	O	O
day	O	O
,	O	O
and	O	O
we	O	O
run	O	O
on	O	O
a	O	O
pretty	O	O
wide	O	O
array	O	O
of	O	O
boxes	O	O
,	O	O
everything	O	O
from	O	O
2-8	O	O
cores	O	O
.	O	O
Of	O	O
course	O	O
,	O	O
YMMV	O	O
,	O	O
etc	O	O
,	O	O
but	O	O
it	O	O
seems	O	O
to	O	O
be	O	O
a	O	O
reliable	O	O
and	O	O
low-overhead	O	O
(	O	O
because	O	O
it	O	O
does	O	O
n't	O	O
make	O	O
a	O	O
context	O	O
switch	O	O
into	O	O
system-space	O	O
)	O	O
method	O	O
of	O	O
timing	O	O
.	O	O
Generally	O	O
how	O	O
it	O	O
works	O	O
is	O	O
:	O	O
declare	O	O
the	O	O
block	O	O
of	O	O
code	O	O
to	O	O
be	O	O
assembler	O	O
(	O	O
and	O	O
volatile	O	O
,	O	O
so	O	O
the	O	O
optimizer	O	O
will	O	O
leave	O	O
it	O	O
alone	O	O
)	O	O
.	O	O
execute	O	O
the	O	O
CPUID	O	O
instruction	O	O
.	O	O
In	O	O
addition	O	O
to	O	O
getting	O	O
some	O	O
CPU	O	O
information	O	O
(	O	O
which	O	O
we	O	O
do	O	O
n't	O	O
do	O	O
anything	O	O
with	O	O
)	O	O
it	O	O
synchronizes	O	O
the	O	O
CPU	O	O
's	O	O
execution	O	O
buffer	O	O
so	O	O
that	O	O
the	O	O
timings	O	O
are	O	O
n't	O	O
affected	O	O
by	O	O
out-of-order	O	O
execution	O	O
.	O	O
execute	O	O
the	O	O
rdtsc	B-API	O
(	I-API	O
read	I-API	O
timestamp	I-API	O
)	I-API	O
execution	O	O
.	O	O
This	O	O
fetches	O	O
the	O	O
number	O	O
of	O	O
machine	O	O
cycles	O	O
executed	O	O
since	O	O
the	O	O
processor	O	O
was	O	O
reset	O	O
.	O	O
This	O	O
is	O	O
a	O	O
64-bit	O	O
value	O	O
,	O	O
so	O	O
with	O	O
current	O	O
CPU	O	O
speeds	O	O
it	O	O
will	O	O
wrap	O	O
around	O	O
every	O	O
194	O	O
years	O	O
or	O	O
so	O	O
.	O	O
Interestingly	O	O
,	O	O
in	O	O
the	O	O
original	O	O
Pentium	O	O
reference	O	O
,	O	O
they	O	O
note	O	O
it	O	O
wraps	O	O
around	O	O
every	O	O
5800	O	O
years	O	O
or	O	O
so	O	O
.	O	O
the	O	O
last	O	O
couple	O	O
of	O	O
lines	O	O
store	O	O
the	O	O
values	O	O
from	O	O
the	O	O
registers	O	O
into	O	O
the	O	O
variables	O	O
hi	O	O
and	O	O
lo	O	O
,	O	O
and	O	O
put	O	O
that	O	O
into	O	O
the	O	O
64-bit	O	O
return	O	O
value	O	O
.	O	O
Specific	O	O
notes	O	O
:	O	O
out-of-order	O	O
execution	O	O
can	O	O
cause	O	O
incorrect	O	O
results	O	O
,	O	O
so	O	O
we	O	O
execute	O	O
the	O	O
''	O	O
cpuid	O	O
''	O	O
instruction	O	O
which	O	O
in	O	O
addition	O	O
to	O	O
giving	O	O
you	O	O
some	O	O
information	O	O
about	O	O
the	O	O
cpu	O	O
also	O	O
synchronizes	O	O
any	O	O
out-of-order	O	O
instruction	O	O
execution	O	O
.	O	O
Most	O	O
OS	O	O
's	O	O
synchronize	O	O
the	O	O
counters	O	O
on	O	O
the	O	O
CPUs	O	O
when	O	O
they	O	O
start	O	O
,	O	O
so	O	O
the	O	O
answer	O	O
is	O	O
good	O	O
to	O	O
within	O	O
a	O	O
couple	O	O
of	O	O
nano-seconds	O	O
.	O	O
The	O	O
hibernating	O	O
comment	O	O
is	O	O
probably	O	O
true	O	O
,	O	O
but	O	O
in	O	O
practice	O	O
you	O	O
probably	O	O
do	O	O
n't	O	O
care	O	O
about	O	O
timings	O	O
across	O	O
hibernation	O	O
boundaries	O	O
.	O	O
regarding	O	O
speedstep	O	O
:	O	O
Newer	O	O
Intel	O	O
CPUs	O	O
compensate	O	O
for	O	O
the	O	O
speed	O	O
changes	O	O
and	O	O
returns	O	O
an	O	O
adjusted	O	O
count	O	O
.	O	O
I	O	O
did	O	O
a	O	O
quick	O	O
scan	O	O
over	O	O
some	O	O
of	O	O
the	O	O
boxes	O	O
on	O	O
our	O	O
network	O	O
and	O	O
found	O	O
only	O	O
one	O	O
box	O	O
that	O	O
did	O	O
n't	O	O
have	O	O
it	O	O
:	O	O
a	O	O
Pentium	O	O
3	O	O
running	O	O
some	O	O
old	O	O
database	O	O
server	O	O
.	O	O
(	O	O
these	O	O
are	O	O
linux	O	O
boxes	O	O
,	O	O
so	O	O
I	O	O
checked	O	O
with	O	O
:	O	O
grep	O	O
constant_tsc	O	O
/proc/cpuinfo	O	O
)	O	O
I	O	O
'm	O	O
not	O	O
sure	O	O
about	O	O
the	O	O
AMD	O	O
CPUs	O	O
,	O	O
we	O	O
're	O	O
primarily	O	O
an	O	O
Intel	O	O
shop	O	O
,	O	O
although	O	O
I	O	O
know	O	O
some	O	O
of	O	O
our	O	O
low-level	O	O
systems	O	O
gurus	O	O
did	O	O
an	O	O
AMD	O	O
evaluation	O	O
.	O	O
Hope	O	O
this	O	O
satisfies	O	O
your	O	O
curiosity	O	O
,	O	O
it	O	O
's	O	O
an	O	O
interesting	O	O
and	O	O
(	O	O
IMHO	O	O
)	O	O
under-studied	O	O
area	O	O
of	O	O
programming	O	O
.	O	O
You	O	O
know	O	O
when	O	O
Jeff	O	O
and	O	O
Joel	O	O
were	O	O
talking	O	O
about	O	O
whether	O	O
or	O	O
not	O	O
a	O	O
programmer	O	O
should	O	O
know	O	O
C	O	O
?	O	O
I	O	O
was	O	O
shouting	O	O
at	O	O
them	O	O
,	O	O
``	O	O
hey	O	O
forget	O	O
that	O	O
high-level	O	O
C	O	O
stuff	O	O
...	O	O
assembler	O	O
is	O	O
what	O	O
you	O	O
should	O	O
learn	O	O
if	O	O
you	O	O
want	O	O
to	O	O
know	O	O
what	O	O
the	O	O
computer	O	O
is	O	O
doing	O	O
!	O	O
''	O	O
Wine	O	O
is	O	O
actually	O	O
using	O	O
gettimeofday	B-API	B-API
(	I-API	I-API
)	I-API	I-API
to	O	O
implement	O	O
QueryPerformanceCounter	B-API	O
(	I-API	O
)	I-API	O
and	O	O
it	O	O
is	O	O
known	O	O
to	O	O
make	O	O
many	O	O
Windows	O	O
games	O	O
work	O	O
on	O	O
Linux	O	O
and	O	O
Mac	O	O
.	O	O
Starts	O	O
http	O	O
:	O	O
//source.winehq.org/source/dlls/kernel32/cpu.c	O	O
#	O	O
L312	O	O
leads	O	O
to	O	O
http	O	O
:	O	O
//source.winehq.org/source/dlls/ntdll/time.c	O	O
#	O	O
L448	O	O
No	O	O
,	O	O
it	O	O
ca	O	O
n't	O	O
do	O	O
that	O	O
since	O	O
there	O	O
is	O	O
no	O	O
way	O	O
to	O	O
express	O	O
constant	O	O
over	O	O
time	O	O
for	O	O
a	O	O
value	O	O
.	O	O
If	O	O
the	O	O
compiler	O	O
should	O	O
be	O	O
able	O	O
to	O	O
do	O	O
that	O	O
,	O	O
there	O	O
would	O	O
have	O	O
to	O	O
be	O	O
a	O	O
guarantee	O	O
from	O	O
the	O	O
code	O	O
returning	O	O
the	O	O
value	O	O
that	O	O
the	O	O
value	O	O
is	O	O
constant	O	O
,	O	O
and	O	O
for	O	O
the	O	O
duration	O	O
of	O	O
the	O	O
loop	O	O
wo	O	O
n't	O	O
change	O	O
.	O	O
But	O	O
,	O	O
in	O	O
this	O	O
case	O	O
,	O	O
you	O	O
're	O	O
free	O	O
to	O	O
add	O	O
new	O	O
rows	O	O
to	O	O
the	O	O
data	O	O
table	O	O
as	O	O
part	O	O
of	O	O
your	O	O
loop	O	O
,	O	O
and	O	O
thus	O	O
it	O	O
's	O	O
up	O	O
to	O	O
you	O	O
to	O	O
make	O	O
that	O	O
guarantee	O	O
,	O	O
in	O	O
the	O	O
way	O	O
you	O	O
have	O	O
done	O	O
it	O	O
.	O	O
So	O	O
in	O	O
short	O	O
,	O	O
the	O	O
compiler	O	O
will	O	O
not	O	O
do	O	O
that	O	O
optimization	O	O
if	O	O
the	O	O
end-index	O	O
is	O	O
anything	O	O
other	O	O
than	O	O
a	O	O
variable	O	O
.	O	O
In	O	O
the	O	O
case	O	O
of	O	O
a	O	O
variable	O	O
,	O	O
where	O	O
the	O	O
compiler	O	O
can	O	O
just	O	O
look	O	O
at	O	O
the	O	O
loop-code	O	O
and	O	O
see	O	O
that	O	O
this	O	O
particular	O	O
variable	O	O
is	O	O
not	O	O
changed	O	O
,	O	O
it	O	O
might	O	O
do	O	O
that	O	O
and	O	O
load	O	O
the	O	O
value	O	O
into	O	O
a	O	O
register	O	O
before	O	O
starting	O	O
the	O	O
loop	O	O
,	O	O
but	O	O
any	O	O
performance	O	O
gain	O	O
from	O	O
this	O	O
would	O	O
most	O	O
likely	O	O
be	O	O
negligible	O	O
,	O	O
unless	O	O
your	O	O
loop	O	O
body	O	O
is	O	O
empty	O	O
.	O	O
Conclusion	O	O
:	O	O
If	O	O
you	O	O
know	O	O
,	O	O
or	O	O
is	O	O
willing	O	O
to	O	O
accept	O	O
,	O	O
that	O	O
the	O	O
end	O	O
loop	O	O
index	O	O
is	O	O
constant	O	O
for	O	O
the	O	O
duration	O	O
of	O	O
the	O	O
loop	O	O
,	O	O
place	O	O
it	O	O
into	O	O
a	O	O
variable	O	O
.	O	O
Edit	O	O
:	O	O
Re-read	O	O
your	O	O
post	O	O
,	O	O
and	O	O
yes	O	O
,	O	O
you	O	O
might	O	O
see	O	O
negligible	O	O
performance	O	O
gains	O	O
for	O	O
your	O	O
two	O	O
cases	O	O
as	O	O
well	O	O
,	O	O
because	O	O
the	O	O
JITter	O	O
optimizes	O	O
the	O	O
code	O	O
.	O	O
The	O	O
JITter	O	O
might	O	O
optimize	O	O
your	O	O
end-index	O	O
read	O	O
into	O	O
a	O	O
direct	O	O
access	O	O
to	O	O
the	O	O
variable	O	O
inside	O	O
the	O	O
data	O	O
table	O	O
that	O	O
contains	O	O
the	O	O
row	O	O
count	O	O
,	O	O
and	O	O
a	O	O
memory	O	O
read	O	O
is	O	O
n't	O	O
all	O	O
that	O	O
expensive	O	O
anyway	O	O
.	O	O
If	O	O
,	O	O
on	O	O
the	O	O
other	O	O
hand	O	O
,	O	O
reading	O	O
that	O	O
property	O	O
was	O	O
a	O	O
very	O	O
expensive	O	O
operation	O	O
,	O	O
you	O	O
'd	O	O
see	O	O
a	O	O
more	O	O
noticable	O	O
difference	O	O
.	O	O
At	O	O
least	O	O
in	O	O
VS	O	O
2008	O	O
,	O	O
its	O	O
very	O	O
easy	O	O
.	O	O
It	O	O
took	O	O
me	O	O
about	O	O
a	O	O
couple	O	O
of	O	O
minutes	O	O
to	O	O
code	O	O
the	O	O
answer	O	O
after	O	O
reading	O	O
your	O	O
question	O	O
.	O	O
Here	O	O
's	O	O
where	O	O
I	O	O
borrowed	O	O
it	O	O
from	O	O
:	O	O
http	O	O
:	O	O
//msdn.microsoft.com/en-us/library/6he9hz8c.aspx	O	O
I	O	O
tested	O	O
this	O	O
,	O	O
and	O	O
it	O	O
works	O	O
.	O	O
A	O	O
solution	O	O
,	O	O
albeit	O	O
one	O	O
that	O	O
defers	O	O
handling	O	O
of	O	O
the	O	O
null	O	O
value	O	O
to	O	O
the	O	O
code	O	O
,	O	O
could	O	O
be	O	O
:	O	O
DateTime	O	O
yesterday	O	O
=	O	O
DateTime.Now.Date.AddDays	B-API	B-API
(	I-API	I-API
-1	I-API	I-API
)	I-API	I-API
;	O	O
var	O	O
collection=	O	O
from	O	O
u	O	O
in	O	O
db.Universe	B-API	O
select	O	O
new	O	O
{	O	O
u.id	O	O
,	O	O
u.name	O	O
,	O	O
MaxDate	B-API	O
=	O	O
(	O	O
DateTime	O	O
?	O	O
)	O	O
(	O	O
from	O	O
h	O	O
in	O	O
db.History	O	O
where	O	O
u.Id	O	O
==	O	O
h.Id	O	O
h.dateCol	O	O
yesterday	O	O
select	O	O
h.dateCol	O	O
)	O	O
.Max	O	O
(	O	O
)	O	O
}	O	O
;	O	O
This	O	O
does	O	O
not	O	O
produce	O	O
exactly	O	O
the	O	O
same	O	O
SQL	O	O
,	O	O
but	O	O
does	O	O
provide	O	O
the	O	O
same	O	O
logical	O	O
result	O	O
.	O	O
Translating	O	O
``	O	O
complex	O	O
''	O	O
SQL	O	O
queries	O	O
to	O	O
LINQ	O	O
is	O	O
not	O	O
always	O	O
straightforward	O	O
.	O	O
You	O	O
'll	O	O
want	O	O
the	O	O
struct	O	O
package	O	O
.	O	O
My	O	O
Environment	O	O
:	O	O
Fedora	O	O
8	O	O
;	O	O
WAS	O	O
6.1	O	O
(	O	O
as	O	O
installed	O	O
with	O	O
Rational	O	O
Application	O	O
Developer	O	O
7	O	O
)	O	O
The	O	O
documentation	O	O
is	O	O
very	O	O
poor	O	O
in	O	O
this	O	O
area	O	O
and	O	O
there	O	O
is	O	O
a	O	O
dearth	O	O
of	O	O
practical	O	O
examples	O	O
.	O	O
Using	O	O
the	O	O
WebSphere	O	O
Application	O	O
Server	O	B-API
(	O	I-API
WAS	O	I-API
)	O	I-API
Ant	O	O
tasks	O	O
To	O	O
run	O	O
as	O	O
described	O	O
here	O	O
,	O	O
you	O	O
need	O	O
to	O	O
run	O	O
them	O	O
from	O	O
your	O	O
server	O	O
profile	O	O
bin	O	O
directory	O	O
using	O	O
the	O	O
ws_ant.sh	O	O
or	O	O
ws_ant.bat	O	O
commands	O	O
.	O	O
?	O	O
xml	O	O
version=	O	O
''	O	O
1.0	O	O
''	O	O
?	O	O
project	O	O
name=	O	O
''	O	O
project	O	O
''	O	O
default=	O	O
''	O	O
wasListApps	O	O
''	O	O
basedir=	O	O
''	O	O
.	O	O
''	O	O
description	O	O
Script	O	O
for	O	O
listing	O	O
installed	O	O
apps	O	O
.	O	O
Example	O	O
run	O	O
from	O	O
:	O	O
/opt/IBM/SDP70/runtimes/base_v61/profiles/AppSrv01/bin	O	O
/description	O	O
property	O	O
name=	O	O
''	O	O
was_home	O	O
''	O	O
value=	O	O
''	O	O
/opt/IBM/SDP70/runtimes/base_v61/	O	O
''	O	O
/property	O	O
path	O	O
id=	O	O
''	O	O
was.runtime	O	O
''	O	O
fileset	O	O
dir=	O	O
''	O	O
$	O	O
{	O	O
was_home	O	O
}	O	O
/lib	O	O
''	O	O
include	O	O
name=	O	O
''	O	O
**/*.jar	O	O
''	O	O
/	O	O
/fileset	O	O
fileset	O	O
dir=	O	O
''	O	O
$	O	O
{	O	O
was_home	O	O
}	O	O
/plugins	O	O
''	O	O
include	O	O
name=	O	O
''	O	O
**/*.jar	O	O
''	O	O
/	O	O
/fileset	O	O
/path	O	O
property	O	O
name=	O	O
''	O	O
was_cp	O	O
''	O	O
value=	O	O
''	O	O
$	O	O
{	O	O
toString	O	O
:	O	O
was.runtime	O	O
}	O	O
''	O	O
/property	O	O
property	O	O
environment=	O	O
''	O	O
env	O	O
''	O	O
/property	O	O
target	O	O
name=	O	O
''	O	O
wasListApps	O	O
''	O	O
taskdef	O	O
name=	O	O
''	O	O
wsListApp	O	O
''	O	O
classname=	O	O
''	O	O
com.ibm.websphere.ant.tasks.ListApplications	O	O
''	O	O
classpath=	O	O
''	O	O
$	O	O
{	O	O
was_cp	O	O
}	O	O
''	O	O
/taskdef	O	O
wsListApp	O	O
wasHome=	O	O
''	O	O
$	O	O
{	O	O
was_home	O	O
}	O	O
''	O	O
/	O	O
/target	O	O
/project	O	O
Command	O	O
:	O	O
./ws_ant.sh	O	O
-buildfile	O	O
~/IBM/rationalsdp7.0/workspace/mywebappDeploy/applist.xml	O	O
A	O	O
Deployment	O	O
Script	O	O
?	O	O
xml	O	O
version=	O	O
''	O	O
1.0	O	O
''	O	O
?	O	O
project	O	O
name=	O	O
''	O	O
project	O	O
''	O	O
default=	O	O
''	O	O
default	O	O
''	O	O
basedir=	O	O
''	O	O
.	O	O
''	O	O
description	O	O
Build/Deploy	O	O
an	O	O
EAR	O	O
to	O	O
WebSphere	O	O
Application	O	O
Server	O	O
6.1	O	O
/description	O	O
property	O	O
name=	O	O
''	O	O
was_home	O	O
''	O	O
value=	O	O
''	O	O
/opt/IBM/SDP70/runtimes/base_v61/	O	O
''	O	O
/	O	O
path	O	O
id=	O	O
''	O	O
was.runtime	O	O
''	O	O
fileset	O	O
dir=	O	O
''	O	O
$	O	O
{	O	O
was_home	O	O
}	O	O
/lib	O	O
''	O	O
include	O	O
name=	O	O
''	O	O
**/*.jar	O	O
''	O	O
/	O	O
/fileset	O	O
fileset	O	O
dir=	O	O
''	O	O
$	O	O
{	O	O
was_home	O	O
}	O	O
/plugins	O	O
''	O	O
include	O	O
name=	O	O
''	O	O
**/*.jar	O	O
''	O	O
/	O	O
/fileset	O	O
/path	O	O
property	O	O
name=	O	O
''	O	O
was_cp	O	O
''	O	O
value=	O	O
''	O	O
$	O	O
{	O	O
toString	O	O
:	O	O
was.runtime	O	O
}	O	O
''	O	O
/	O	O
property	O	O
environment=	O	O
''	O	O
env	O	O
''	O	O
/	O	O
property	O	O
name=	O	O
''	O	O
ear	O	O
''	O	O
value=	O	O
''	O	O
$	O	O
{	O	O
env.HOME	O	O
}	O	O
/IBM/rationalsdp7.0/workspace/mywebappDeploy/mywebappEAR.ear	O	O
''	O	O
/	O	O
target	O	O
name=	O	O
''	O	O
default	O	O
''	O	O
depends=	O	O
''	O	O
deployEar	O	O
''	O	O
/target	O	O
target	O	O
name=	O	O
''	O	O
generateWar	O	O
''	O	O
depends=	O	O
''	O	O
compileWarClasses	O	O
''	O	O
jar	O	O
destfile=	O	O
''	O	O
mywebapp.war	O	O
''	O	O
fileset	O	O
dir=	O	O
''	O	O
../mywebapp/WebContent	O	O
''	O	O
/fileset	O	O
/jar	O	O
/target	O	O
target	O	O
name=	O	O
''	O	O
compileWarClasses	O	O
''	O	O
echo	O	O
message=	O	O
''	O	O
was_cp=	O	O
$	O	O
{	O	O
was_cp	O	O
}	O	O
''	O	O
/	O	O
javac	O	O
srcdir=	O	O
''	O	O
../mywebapp/src	O	O
''	O	O
destdir=	O	O
''	O	O
../mywebapp/WebContent/WEB-INF/classes	O	O
''	O	O
classpath=	O	O
''	O	O
$	O	O
{	O	O
was_cp	O	O
}	O	O
''	O	O
/javac	O	O
/target	O	O
target	O	O
name=	O	O
''	O	O
generateEar	O	O
''	O	O
depends=	O	O
''	O	O
generateWar	O	O
''	O	O
mkdir	O	O
dir=	O	O
''	O	O
./earbin/META-INF	O	O
''	O	O
/	O	O
move	O	O
file=	O	O
''	O	O
mywebapp.war	O	O
''	O	O
todir=	O	O
''	O	O
./earbin	O	O
''	O	O
/	O	O
copy	O	O
file=	O	O
''	O	O
../mywebappEAR/META-INF/application.xml	O	O
''	O	O
todir=	O	O
''	O	O
./earbin/META-INF	O	O
''	O	O
/	O	O
jar	O	O
destfile=	O	O
''	O	O
$	O	O
{	O	O
ear	O	O
}	O	O
''	O	O
fileset	O	O
dir=	O	O
''	O	O
./earbin	O	O
''	O	O
/	O	O
/jar	O	O
/target	O	O
!	O	O
--	O	O
http	O	O
:	O	O
//publib.boulder.ibm.com/infocenter/wasinfo/v6r1/index.jsp	O	O
?	O	O
topic=/com.ibm.websphere.javadoc.doc/public_html/api/com/ibm/websphere/ant/tasks/package-summary.html	O	O
--	O	O
target	O	O
name=	O	O
''	O	O
deployEar	O	O
''	O	O
depends=	O	O
''	O	O
generateEar	O	O
''	O	O
taskdef	O	O
name=	O	O
''	O	O
wsInstallApp	O	O
''	O	O
classname=	O	O
''	O	O
com.ibm.websphere.ant.tasks.InstallApplication	O	B-API
''	O	O
classpath=	O	O
''	O	O
$	O	O
{	O	O
was_cp	O	O
}	O	O
''	O	O
/	O	O
wsInstallApp	O	O
ear=	O	O
''	O	O
$	O	O
{	O	O
ear	O	O
}	O	O
''	O	O
failonerror=	O	O
''	O	O
true	O	O
''	O	O
debug=	O	O
''	O	O
true	O	O
''	O	O
taskname=	O	O
''	O	O
''	O	O
washome=	O	O
''	O	O
$	O	O
{	O	O
was_home	O	O
}	O	O
''	O	O
/	O	O
/target	O	O
/project	O	O
Notes	O	O
:	O	O
You	O	O
can	O	O
only	O	O
run	O	O
this	O	O
once	O	O
!	O	O
You	O	O
can	O	O
not	O	O
install	O	O
if	O	O
the	O	O
app	O	O
name	O	O
is	O	O
in	O	O
use	O	O
-	O	O
see	O	O
other	O	O
tasks	O	O
like	O	O
wsUninstallApp	O	O
It	O	O
probably	O	O
wo	O	O
n't	O	O
start	O	O
the	O	O
app	O	O
either	O	O
You	O	O
need	O	O
to	O	O
run	O	O
this	O	O
on	O	O
the	O	O
server	O	O
and	O	O
the	O	O
script	O	O
is	O	O
quite	O	O
fragile	O	O
Alternatives	O	O
I	O	O
would	O	O
probably	O	O
use	O	O
Java	O	O
Management	O	O
Extensions	O	O
(	O	O
JMX	O	O
)	O	O
.	O	O
You	O	O
could	O	O
write	O	O
a	O	O
file-upload	O	O
servlet	O	O
that	O	O
accepts	O	O
an	O	O
EAR	O	O
and	O	O
uses	O	O
the	O	O
deployment	O	O
MBeans	O	O
to	O	O
deploy	O	O
the	O	O
EAR	O	O
on	O	O
the	O	O
server	O	O
.	O	O
You	O	O
would	O	O
just	O	O
POST	O	O
the	O	O
file	O	O
over	O	O
HTTP	O	O
.	O	O
This	O	O
would	O	O
avoid	O	O
any	O	O
WAS	O	O
API	O	O
dependencies	O	O
on	O	O
your	O	O
dev/build	O	O
machine	O	O
and	O	O
could	O	O
be	O	O
independent	O	O
of	O	O
any	O	O
one	O	O
project	O	O
.	O	O
The	O	O
quick	O	O
and	O	O
simple	O	O
answer	O	O
is	O	O
No	O	O
.	O	O
Javascript	O	O
is	O	O
quite	O	O
a	O	O
high	O	O
level	O	O
language	O	O
and	O	O
does	O	O
not	O	O
have	O	O
access	O	O
to	O	O
this	O	O
sort	O	O
of	O	O
information	O	O
.	O	O
If	O	O
this	O	O
is	O	O
for	O	O
an	O	O
intranet	O	O
application	O	O
and	O	O
all	O	O
of	O	O
the	O	O
clients	O	O
use	O	O
DHCP	O	O
,	O	O
you	O	O
can	O	O
query	O	O
the	O	O
DHCP	O	O
server	O	O
for	O	O
the	O	O
MAC	O	O
address	O	O
for	O	O
a	O	O
given	O	O
IP	O	O
address	O	O
.	O	O
Nope	O	O
.	O	O
The	O	O
reason	O	O
ActiveX	O	O
can	O	O
do	O	O
it	O	O
is	O	O
because	O	O
ActiveX	O	O
is	O	O
a	O	O
little	O	O
application	O	O
that	O	O
runs	O	O
on	O	O
the	O	O
client	O	O
's	O	O
machine	O	O
.	O	O
I	O	O
would	O	O
imagine	O	O
access	O	O
to	O	O
such	O	O
information	O	O
via	O	O
JavaScript	O	O
would	O	O
be	O	O
a	O	O
security	O	O
vulnerability	O	O
.	O	O
A	O	O
dictionary	O	O
may	O	O
also	O	O
contain	O	O
overhead	O	O
,	O	O
depending	O	O
on	O	O
the	O	O
actual	O	O
implementation	O	O
.	O	O
A	O	O
hashtable	O	O
usually	O	O
contain	O	O
some	O	O
prime	O	O
number	O	O
of	O	O
available	O	O
nodes	O	O
to	O	O
begin	O	O
with	O	O
,	O	O
even	O	O
though	O	O
you	O	O
might	O	O
only	O	O
use	O	O
a	O	O
couple	O	O
of	O	O
the	O	O
nodes	O	O
.	O	O
Judging	O	O
by	O	O
your	O	O
example	O	O
,	O	O
``	O	O
Property	O	O
''	O	O
,	O	O
would	O	O
you	O	O
be	O	O
better	O	O
of	O	O
with	O	O
a	O	O
class	O	O
approach	O	O
for	O	O
the	O	O
final	O	O
level	O	O
and	O	O
real	O	O
properties	O	O
?	O	O
Or	O	O
is	O	O
the	O	O
names	O	O
of	O	O
the	O	O
properties	O	O
changing	O	O
a	O	O
lot	O	O
from	O	O
node	O	O
to	O	O
node	O	O
?	O	O
I	O	O
'd	O	O
say	O	O
that	O	O
what	O	O
``	O	O
efficient	O	O
''	O	O
means	O	O
depends	O	O
on	O	O
a	O	O
lot	O	O
of	O	O
things	O	O
,	O	O
like	O	O
:	O	O
speed	O	O
of	O	O
updates	O	O
(	O	O
insert	O	O
,	O	O
update	O	O
,	O	O
delete	O	O
)	O	O
speed	O	O
of	O	O
random	O	O
access	O	O
retrieval	O	O
speed	O	O
of	O	O
sequential	O	O
retrieval	O	O
memory	O	O
used	O	O
I	O	O
think	O	O
that	O	O
you	O	O
'll	O	O
find	O	O
that	O	O
a	O	O
data	O	O
structure	O	O
that	O	O
is	O	O
speedy	O	O
will	O	O
generally	O	O
consume	O	O
more	O	O
memory	O	O
than	O	O
one	O	O
that	O	O
is	O	O
slow	O	O
.	O	O
This	O	O
is	O	O
n't	O	O
always	O	O
the	O	O
case	O	O
,	O	O
but	O	O
most	O	O
data	O	O
structures	O	O
seems	O	O
to	O	O
follow	O	O
this	O	O
.	O	O
A	O	O
dictionary	O	O
might	O	O
be	O	O
easy	O	O
to	O	O
use	O	O
,	O	O
and	O	O
give	O	O
you	O	O
relatively	O	O
uniformly	O	O
fast	O	O
access	O	O
,	O	O
it	O	O
will	O	O
most	O	O
likely	O	O
use	O	O
more	O	O
memory	O	O
than	O	O
,	O	O
as	O	O
you	O	O
suggest	O	O
,	O	O
lists	O	O
.	O	O
Lists	O	O
,	O	O
however	O	O
,	O	O
generally	O	O
tend	O	O
to	O	O
contain	O	O
more	O	O
overhead	O	O
when	O	O
you	O	O
insert	O	O
data	O	O
into	O	O
it	O	O
,	O	O
unless	O	O
they	O	O
preallocate	O	O
X	O	O
nodes	O	O
,	O	O
in	O	O
which	O	O
they	O	O
will	O	O
again	O	O
use	O	O
more	O	O
memory	O	O
.	O	O
My	O	O
suggestion	O	O
,	O	O
in	O	O
general	O	O
,	O	O
would	O	O
be	O	O
to	O	O
just	O	O
use	O	O
the	O	O
method	O	O
that	O	O
seems	O	O
the	O	O
most	O	O
natural	O	O
to	O	O
you	O	O
,	O	O
and	O	O
then	O	O
do	O	O
a	O	O
``	O	O
stress	O	O
test	O	O
''	O	O
of	O	O
the	O	O
system	O	O
,	O	O
adding	O	O
a	O	O
substantial	O	O
amount	O	O
of	O	O
data	O	O
to	O	O
it	O	O
and	O	O
see	O	O
if	O	O
it	O	O
becomes	O	O
a	O	O
problem	O	O
.	O	O
You	O	O
might	O	O
also	O	O
consider	O	O
adding	O	O
a	O	O
layer	O	O
of	O	O
abstraction	O	O
to	O	O
your	O	O
system	O	O
,	O	O
so	O	O
that	O	O
you	O	O
do	O	O
n't	O	O
have	O	O
to	O	O
change	O	O
the	O	O
programming	O	O
interface	O	O
if	O	O
you	O	O
later	O	O
on	O	O
need	O	O
to	O	O
change	O	O
the	O	O
internal	O	O
data	O	O
structure	O	O
.	O	O
Making	O	O
a	O	O
class-based	O	O
structure	O	O
would	O	O
probably	O	O
have	O	O
more	O	O
overhead	O	O
than	O	O
the	O	O
dict-based	O	O
structure	O	O
,	O	O
since	O	O
in	O	O
python	O	O
classes	O	O
actually	O	O
use	O	O
dicts	O	O
when	O	O
they	O	O
are	O	O
implemented	O	O
.	O	O
As	O	O
I	O	O
understand	O	O
it	O	O
,	O	O
random	O	O
access	O	O
is	O	O
in	O	O
constant	O	O
time	O	O
for	O	O
both	O	O
Python	O	O
's	O	O
dicts	O	O
and	O	O
lists	O	O
,	O	O
the	O	O
difference	O	O
is	O	O
that	O	O
you	O	O
can	O	O
only	O	O
do	O	O
random	O	O
access	O	O
of	O	O
integer	O	O
indexes	O	O
with	O	O
lists	O	O
.	O	O
I	O	O
'm	O	O
assuming	O	O
that	O	O
you	O	O
need	O	O
to	O	O
lookup	O	O
a	O	O
node	O	O
by	O	O
its	O	O
label	O	O
,	O	O
so	O	O
you	O	O
want	O	O
a	O	O
dict	O	O
of	O	O
dicts	O	O
.	O	O
However	O	O
,	O	O
on	O	O
the	O	O
performance	O	O
front	O	O
,	O	O
loading	O	O
it	O	O
into	O	O
memory	O	O
may	O	O
not	O	O
be	O	O
a	O	O
problem	O	O
,	O	O
but	O	O
if	O	O
you	O	O
use	O	O
too	O	O
much	O	O
you	O	O
'll	O	O
end	O	O
up	O	O
swapping	O	O
to	O	O
disk	O	O
,	O	O
which	O	O
will	O	O
kill	O	O
the	O	O
performance	O	O
of	O	O
even	O	O
Python	O	O
's	O	O
highly	O	O
efficient	O	O
dicts	O	O
.	O	O
Try	O	O
to	O	O
keep	O	O
memory	O	O
usage	O	O
down	O	O
as	O	O
much	O	O
as	O	O
possible	O	O
.	O	O
Also	O	O
,	O	O
RAM	O	O
is	O	O
amazingly	O	O
cheap	O	O
right	O	O
now	O	O
;	O	O
if	O	O
you	O	O
do	O	O
this	O	O
kind	O	O
of	O	O
thing	O	O
a	O	O
lot	O	O
,	O	O
there	O	O
's	O	O
no	O	O
reason	O	O
not	O	O
to	O	O
have	O	O
at	O	O
least	O	O
4GB	O	O
.	O	O
If	O	O
you	O	O
'd	O	O
like	O	O
advice	O	O
on	O	O
keeping	O	O
memory	O	O
usage	O	O
down	O	O
,	O	O
give	O	O
some	O	O
more	O	O
information	O	O
about	O	O
the	O	O
kind	O	O
of	O	O
information	O	O
you	O	O
're	O	O
tracking	O	O
for	O	O
each	O	O
node	O	O
.	O	O
erm..	O	O
HTML	O	O
?	O	O
(	O	O
trying	O	O
to	O	O
be	O	O
funny	O	O
here	O	O
...	O	O
while	O	O
we	O	O
wait	O	O
for	O	O
real	O	O
answers..	O	O
)	O	O
The	O	O
wxWidgets	O	O
(	O	O
formerly	O	O
known	O	O
as	O	O
wxWindows	O	O
)	O	O
library	O	O
might	O	O
be	O	O
what	O	O
you	O	O
're	O	O
looking	O	O
for	O	O
.	O	O
There	O	O
's	O	O
a	O	O
particularly	O	O
good	O	O
port	O	O
for	O	O
Python	O	O
,	O	O
wxPython	O	O
,	O	O
as	O	O
well	O	O
as	O	O
versions	O	O
for	O	O
different	O	O
languages	O	O
--	O	O
C	O	O
#	O	O
,	O	O
C++	O	O
,	O	O
Perl	O	O
and	O	O
Ruby	O	O
come	O	O
to	O	O
mind	O	O
--	O	O
and	O	O
for	O	O
various	O	O
GUIs	O	O
:	O	O
Win32	O	O
,	O	O
Mac	O	O
OS	O	O
X	O	O
,	O	O
GTK+	O	O
,	O	O
X11	O	O
,	O	O
Motif	O	O
,	O	O
WinCE	O	O
.	O	O
The	O	O
library	O	O
's	O	O
been	O	O
around	O	O
for	O	O
a	O	O
while	O	O
and	O	O
is	O	O
pretty	O	O
solid	O	O
.	O	O
Not	O	O
sure	O	O
if	O	O
this	O	O
is	O	O
what	O	O
you	O	O
're	O	O
looking	O	O
for	O	O
,	O	O
but	O	O
there	O	O
's	O	O
Glade	O	O
(	O	O
or	O	O
Windows	O	O
download	O	O
)	O	O
which	O	O
is	O	O
a	O	O
designer	O	O
for	O	O
GTK+	O	O
.	O	O
It	O	O
generates	O	O
an	O	O
XML	O	O
file	O	O
which	O	O
can	O	O
then	O	O
be	O	O
used	O	O
to	O	O
build	O	O
the	O	O
GUI	O	O
in	O	O
a	O	O
number	O	O
of	O	O
different	O	O
languages	O	O
.	O	O
Qt	O	O
(	O	O
pronounced	O	O
``	O	O
cute	O	O
''	O	O
by	O	O
its	O	O
creators	O	O
[	O	O
1	O	O
]	O	O
)	O	O
is	O	O
a	O	O
cross-platform	O	O
application	O	O
development	O	O
framework	O	O
,	O	O
widely	O	O
used	O	O
for	O	O
the	O	O
development	O	O
of	O	O
GUI	O	O
programs	O	O
.	O	O
Qt	O	O
uses	O	O
C++	O	O
with	O	O
several	O	O
non-standard	O	O
extensions	O	O
implemented	O	O
by	O	O
an	O	O
additional	O	O
pre-processor	O	O
that	O	O
generates	O	O
standard	O	O
C++	O	O
code	O	O
before	O	O
compilation	O	O
.	O	O
Qt	O	O
can	O	O
also	O	O
be	O	O
used	O	O
in	O	O
several	O	O
other	O	O
programming	O	O
languages	O	O
;	O	O
bindings	O	O
exist	O	O
for	O	O
Ada	O	O
(	O	O
QtAda	O	O
)	O	O
[	O	O
4	O	O
]	O	O
,	O	O
C	O	O
#	O	O
(	O	O
Qyoto/Kimono	O	O
)	O	O
[	O	O
5	O	O
]	O	O
,	O	O
Java	O	B-API
(	O	O
Qt	O	O
Jambi	O	O
)	O	O
[	O	O
6	O	O
]	O	O
,	O	O
Pascal	O	O
,	O	O
Perl	O	O
,	O	O
PHP	O	B-API
(	O	I-API
PHP-Qt	O	I-API
)	O	I-API
,	O	O
Ruby	O	B-API
(	O	I-API
RubyQt	O	I-API
)	O	I-API
,	O	O
and	O	O
Python	O	B-API
(	O	I-API
PyQt	O	I-API
)	O	I-API
.	O	O
It	O	O
runs	O	O
on	O	O
all	O	O
major	O	O
platforms	O	O
,	O	O
and	O	O
has	O	O
extensive	O	O
internationalization	O	O
support	O	O
.	O	O
Non-GUI	O	O
features	O	O
include	O	O
SQL	O	O
database	O	O
access	O	O
,	O	O
XML	O	O
parsing	O	O
,	O	O
thread	O	O
management	O	O
,	O	O
network	O	O
support	O	O
and	O	O
a	O	O
unified	O	O
cross-platform	O	O
API	O	O
for	O	O
file	O	O
handling	O	O
.	O	O
import	O	O
os	O	O
print	O	O
os.name	O	O
posix	O	O
import	O	O
platform	O	O
platform.system	B-API	B-API
(	I-API	I-API
)	I-API	I-API
'Linux'	O	O
platform.release	B-API	B-API
(	I-API	I-API
)	I-API	I-API
'2.6.22-15-generic'	O	O
See	O	O
:	O	O
platform	O	O
Access	O	O
to	O	O
underlying	O	O
platforms	O	O
identifying	O	O
data	O	O
Dang	O	O
--	O	O
lbrandy	O	O
beat	O	O
me	O	O
to	O	O
the	O	O
punch	O	O
,	O	O
but	O	O
that	O	O
does	O	O
n't	O	O
mean	O	O
I	O	O
ca	O	O
n't	O	O
provide	O	O
you	O	O
with	O	O
the	O	O
system	O	O
results	O	O
for	O	O
Vista	O	O
!	O	O
import	O	O
os	O	O
os.name	O	O
'nt'	O	O
import	O	O
platform	O	O
platform.system	B-API	B-API
(	I-API	I-API
)	I-API	I-API
'Windows'	O	O
platform.release	B-API	B-API
(	I-API	I-API
)	I-API	I-API
'Vista'	O	O
For	O	O
the	O	O
record	O	O
here	O	O
's	O	O
the	O	O
results	O	O
on	O	O
Mac	O	O
:	O	O
import	O	O
os	O	O
os.name	O	O
'posix'	O	O
import	O	O
platform	O	O
platform.system	B-API	B-API
(	I-API	I-API
)	I-API	I-API
'Darwin'	O	O
platform.release	B-API	B-API
(	I-API	I-API
)	I-API	I-API
'8.11.1'	O	O
Take	O	O
a	O	O
look	O	O
at	O	O
the	O	O
open	O	O
street	O	O
map	O	O
project	O	O
to	O	O
see	O	O
how	O	O
this	O	O
sort	O	O
of	O	O
thing	O	O
is	O	O
being	O	O
tackled	O	O
in	O	O
a	O	O
truely	O	O
free	O	O
software	O	O
project	O	O
using	O	O
only	O	O
user	O	O
supplied	O	O
and	O	O
licensed	O	O
data	O	O
and	O	O
have	O	O
a	O	O
wiki	O	O
containing	O	O
stuff	O	O
you	O	O
might	O	O
find	O	O
interesting	O	O
.	O	O
A	O	O
few	O	O
years	O	O
back	O	O
the	O	O
guys	O	O
involved	O	O
where	O	O
pretty	O	O
easy	O	O
going	O	O
and	O	O
answered	O	O
lots	O	O
of	O	O
questions	O	O
I	O	O
had	O	O
so	O	O
I	O	O
see	O	O
no	O	O
reason	O	O
why	O	O
they	O	O
still	O	O
are	O	O
n't	O	O
a	O	O
nice	O	O
bunch	O	O
.	O	O
Instead	O	O
of	O	O
learning	O	O
APIs	O	O
to	O	O
each	O	O
map	O	O
service	O	O
provider	O	O
(	O	O
like	O	O
Gmaps	O	O
,	O	O
Ymaps	O	O
api	O	O
)	O	O
Its	O	O
good	O	O
to	O	O
learn	O	O
Mapstraction	O	O
''	O	O
Mapstraction	O	O
is	O	O
a	O	O
library	O	O
that	O	O
provides	O	O
a	O	O
common	O	O
API	O	O
for	O	O
various	O	O
javascript	O	O
mapping	O	O
APIs	O	O
''	O	O
I	O	O
would	O	O
suggest	O	O
you	O	O
go	O	O
to	O	O
the	O	O
URL	O	O
and	O	O
learn	O	O
a	O	O
general	O	O
API	O	O
.	O	O
There	O	O
is	O	O
good	O	O
amount	O	O
of	O	O
How-Tos	O	O
too	O	O
.	O	O
Try	O	O
this	O	O
:	O	O
using	O	O
(	O	O
FileStream	B-API	O
stream	O	O
=	O	O
new	O	O
)	O	O
{	O	O
BinaryFormatter	B-API	B-API
formatter	O	I-API
=	O	I-API
new	O	I-API
;	O	O
StructType	B-API	O
aStruct	O	O
=	O	O
(	O	O
fileName	O	O
,	O	O
FileMode.Open	B-API	B-API
)	O	O
BinaryFormatter	B-API	B-API
(	I-API	I-API
)	I-API	I-API
(	O	I-API
StructType	O	I-API
)	O	I-API
formatter.Deserialize	B-API	B-API
(	I-API	I-API
filestream	I-API	I-API
)	I-API	I-API
I	O	O
do	O	O
n't	O	O
see	O	O
any	O	O
problem	O	O
with	O	O
your	O	O
code	O	O
.	O	O
just	O	O
out	O	O
of	O	O
my	O	O
head	O	O
,	O	O
what	O	O
if	O	O
you	O	O
try	O	O
to	O	O
do	O	O
it	O	O
manually	O	O
?	O	O
does	O	O
it	O	O
work	O	O
?	O	O
BinaryReader	B-API	O
reader	O	O
=	O	O
new	O	O
;	O	O
StructType	B-API	O
o	O	O
=	O	O
new	O	O
;	O	O
o.FileDate	B-API	O
=	O	O
)	O	O
;	O	O
o.FileTime	B-API	O
=	O	O
BinaryReader	B-API	O
(	I-API	O
stream	I-API	O
)	I-API	O
StructType	B-API	B-API
(	I-API	I-API
)	I-API	I-API
Encoding.ASCII.GetString	B-API	B-API
(	I-API	I-API
reader.ReadBytes	I-API	I-API
(	I-API	I-API
8	I-API	I-API
)	I-API	I-API
Encoding.ASCII.GetString	B-API	B-API
(	I-API	I-API
reader.ReadBytes	I-API	I-API
(	I-API	I-API
8	I-API	I-API
)	I-API	I-API
also	O	O
try	O	O
StructType	B-API	O
o	O	O
=	O	O
new	O	O
;	O	O
byte	O	O
[	O	O
]	O	O
buffer	O	O
=	O	O
new	O	O
)	O	O
]	O	O
;	O	O
GCHandle	B-API	O
handle	O	O
=	O	O
,	O	O
StructType	B-API	O
(	I-API	O
)	I-API	O
byte	O	O
[	O	O
Marshal.SizeOf	B-API	B-API
(	I-API	I-API
typeof	I-API	I-API
(	I-API	I-API
StructType	I-API	I-API
)	I-API	I-API
(	O	I-API
buffer	O	I-API
,	O	I-API
GCHandleType.Pinned	B-API	I-API
)	O	I-API
Marshal.StructureToPtr	B-API	B-API
(	I-API	O
o	I-API	O
,	I-API	O
handle.AddrOfPinnedObject	B-API	B-API
(	I-API	I-API
)	I-API	I-API
false	O	O
)	O	O
;	O	O
handle.Free	B-API	O
(	I-API	O
)	I-API	O
then	O	O
use	O	O
buffer	O	O
[	O	O
]	O	O
in	O	O
your	O	O
BinaryReader	O	O
instead	O	O
of	O	O
reading	O	O
data	O	O
from	O	O
FileStream	O	O
to	O	O
see	O	O
whether	O	O
you	O	O
still	O	O
get	O	O
AccessViolation	O	O
exception	O	O
.	O	O
I	O	O
had	O	O
no	O	O
luck	O	O
using	O	O
the	O	O
BinaryFormatter	O	O
,	O	O
I	O	O
guess	O	O
I	O	O
have	O	O
to	O	O
have	O	O
a	O	O
complete	O	O
struct	O	O
that	O	O
matches	O	O
the	O	O
content	O	O
of	O	O
the	O	O
file	O	O
exactly	O	O
.	O	O
That	O	O
makes	O	O
sense	O	O
,	O	O
BinaryFormatter	O	O
has	O	O
its	O	O
own	O	O
data	O	O
format	O	O
,	O	O
completely	O	O
incompatible	O	O
with	O	O
yours	O	O
.	O	O
I	O	O
had	O	O
no	O	O
luck	O	O
using	O	O
the	O	O
BinaryFormatter	O	O
,	O	O
I	O	O
guess	O	O
I	O	O
have	O	O
to	O	O
have	O	O
a	O	O
complete	O	O
struct	O	O
that	O	O
matches	O	O
the	O	O
content	O	O
of	O	O
the	O	O
file	O	O
exactly	O	O
.	O	O
I	O	O
realised	O	O
that	O	O
in	O	O
the	O	O
end	O	O
I	O	O
was	O	O
n't	O	O
interested	O	O
in	O	O
very	O	O
much	O	O
of	O	O
the	O	O
file	O	O
content	O	O
anyway	O	O
so	O	O
I	O	O
went	O	O
with	O	O
the	O	O
solution	O	O
of	O	O
reading	O	O
part	O	O
of	O	O
stream	O	O
into	O	O
a	O	O
bytebuffer	O	O
and	O	O
then	O	O
converting	O	O
it	O	O
using	O	O
Encoding.ASCII.GetString	B-API	B-API
(	I-API	I-API
)	I-API	I-API
for	O	O
strings	O	O
and	O	O
BitConverter.ToInt32	B-API	B-API
(	I-API	I-API
)	I-API	I-API
for	O	O
the	O	O
integers	O	O
.	O	O
I	O	O
will	O	O
need	O	O
to	O	O
be	O	O
able	O	O
to	O	O
parse	O	O
more	O	O
of	O	O
the	O	O
file	O	O
later	O	O
on	O	O
but	O	O
for	O	O
this	O	O
version	O	O
I	O	O
got	O	O
away	O	O
with	O	O
just	O	O
a	O	O
couple	O	O
of	O	O
lines	O	O
of	O	O
code	O	O
.	O	O
Check	O	O
out	O	O
Google	O	O
Charts	O	O
Flot	O	O
can	O	O
create	O	O
some	O	O
really	O	O
nice	O	O
looking	O	O
charts	O	O
.	O	O
It	O	O
's	O	O
a	O	O
JavaScript	O	O
library	O	O
rather	O	O
than	O	O
a	O	O
service	O	O
like	O	O
Google	O	O
Charts	O	O
.	O	O
It	O	O
does	O	O
require	O	O
jQuery	O	O
though	O	O
.	O	O
If	O	O
you	O	O
use	O	O
jquery	O	O
:	O	O
http	O	O
:	O	O
//code.google.com/p/flot/	O	O
For	O	O
the	O	O
YUI	O	O
users	O	O
:	O	O
http	O	O
:	O	O
//developer.yahoo.com/yui/charts/	O	O
10	O	O
JavaScript	O	O
Graphing/Charting	O	O
Libraries	O	O
I	O	O
noticed	O	O
that	O	O
a	O	O
few	O	O
people	O	O
mentioned	O	O
Flot	O	O
but	O	O
nobody	O	O
mentioned	O	O
Flotr	O	O
!	O	O
Also	O	O
on	O	O
Google	O	O
Code	O	O
http	O	O
:	O	O
//code.google.com/p/flotr/	O	O
.	O	O
Check	O	O
a	O	O
JSON	O	O
example	O	O
,	O	O
complete	O	O
with	O	O
the	O	O
code	O	O
to	O	O
do	O	O
it	O	O
,	O	O
right	O	O
here	O	O
.	O	O
It	O	O
requires	O	O
the	O	O
Prototype.js	O	O
Javascript	O	O
library	O	O
and	O	O
works	O	O
in	O	O
all	O	O
modern	O	O
browsers	O	O
!	O	O
When	O	O
you	O	O
're	O	O
using	O	O
.Net	O	O
2.0	O	O
and	O	O
Ajax	O	O
-	O	O
you	O	O
should	O	O
use	O	O
:	O	O
ScriptManager.RegisterClientScriptBlock	B-API	B-API
It	O	O
will	O	O
work	O	O
better	O	O
in	O	O
Ajax	O	O
environments	O	O
then	O	O
the	O	O
old	O	O
Page.ClientScript	B-API	B-API
version	O	O
Try	O	O
changing	O	O
the	O	O
argument	O	O
names	O	O
to	O	O
``	O	O
sender	O	O
''	O	O
and	O	O
``	O	O
args	O	O
''	O	O
.	O	O
And	O	O
,	O	O
after	O	O
you	O	O
have	O	O
it	O	O
working	O	O
,	O	O
switch	O	O
the	O	O
call	O	O
over	O	O
to	O	O
ScriptManager.RegisterClientScriptBlock	B-API	B-API
,	O	O
regardless	O	O
of	O	O
AJAX	O	O
use	O	O
.	O	O
While	O	O
I	O	O
would	O	O
still	O	O
like	O	O
an	O	O
answer	O	O
to	O	O
why	O	O
my	O	O
JS	O	O
was	O	O
n't	O	O
being	O	O
recognized	O	O
,	O	O
the	O	O
solution	O	O
I	O	O
found	O	O
in	O	O
the	O	O
meantime	O	O
(	O	O
and	O	O
should	O	O
have	O	O
done	O	O
in	O	O
the	O	O
first	O	O
place	O	O
)	O	O
is	O	O
to	O	O
use	O	O
an	O	O
Asp	O	O
:	O	O
CompareValidator	B-API	O
instead	O	O
of	O	O
an	O	O
Asp	O	O
:	O	O
CustomValidator	B-API	O
.	O	O
While	O	O
you	O	O
can	O	O
not	O	O
prevent	O	O
usage	O	O
of	O	O
those	O	O
inherited	O	O
members	O	O
to	O	O
my	O	O
knowledge	O	O
,	O	O
you	O	O
should	O	O
be	O	O
able	O	O
to	O	O
hide	O	O
them	O	O
from	O	O
IntelliSense	B-API	O
using	O	O
the	O	O
EditorBrowsableAttribute	B-API	O
:	O	O
Using	O	O
System.ComponentModel	B-API	B-API
;	O	O
[	O	O
EditorBrowsable	B-API	O
(	I-API	O
EditorBrowsableState.Never	I-API	O
)	I-API	O
]	O	O
private	O	O
string	O	O
MyHiddenString	O	O
=	O	O
``	O	O
Muahahahahahahahaha	O	O
''	O	O
;	O	O
Edit	O	O
:	O	O
Just	O	O
saw	O	O
this	O	O
in	O	O
the	O	O
documentation	O	O
comments	O	O
,	O	O
which	O	O
makes	O	O
it	O	O
kinda	O	O
useless	O	O
for	O	O
this	O	O
purpose	O	O
:	O	O
There	O	O
is	O	O
a	O	O
prominent	O	O
note	O	O
that	O	O
states	O	O
that	O	O
this	O	O
attribute	O	O
``	O	O
does	O	O
not	O	O
suppress	O	O
members	O	O
from	O	O
a	O	O
class	O	O
in	O	O
the	O	O
same	O	O
assembly	O	O
''	O	O
.	O	O
That	O	O
is	O	O
true	O	O
but	O	O
not	O	O
complete	O	O
.	O	O
Actually	O	O
,	O	O
the	O	O
attribute	O	O
does	O	O
not	O	O
suppress	O	O
members	O	O
from	O	O
a	O	O
class	O	O
in	O	O
the	O	O
same	O	O
solution	O	O
.	O	O
I	O	O
think	O	O
you	O	O
're	O	O
best	O	O
least	O	O
hackish	O	O
way	O	O
is	O	O
to	O	O
consider	O	O
composition	O	O
as	O	O
opposed	O	O
to	O	O
inheritance	O	O
.	O	O
Or	O	O
,	O	O
you	O	O
could	O	O
create	O	O
an	O	O
interface	O	O
that	O	O
has	O	O
the	O	O
members	O	O
you	O	O
want	O	O
,	O	O
have	O	O
your	O	O
derived	O	O
class	O	O
implement	O	O
that	O	O
interface	O	O
,	O	O
and	O	O
program	O	O
against	O	O
the	O	O
interface	O	O
.	O	O
One	O	O
potential	O	O
thing	O	O
you	O	O
can	O	O
do	O	O
is	O	O
contain	O	O
the	O	O
object	O	O
rather	O	O
than	O	O
extend	O	O
from	O	O
the	O	O
other	O	O
class	O	O
.	O	O
This	O	O
will	O	O
give	O	O
you	O	O
the	O	O
most	O	O
flexibility	O	O
in	O	O
terms	O	O
of	O	O
exposing	O	O
what	O	O
you	O	O
want	O	O
to	O	O
expose	O	O
,	O	O
but	O	O
if	O	O
you	O	O
absolutely	O	O
need	O	O
the	O	O
object	O	O
to	O	O
be	O	O
of	O	O
that	O	O
type	O	O
it	O	O
is	O	O
not	O	O
the	O	O
ideal	O	O
solution	O	O
(	O	O
however	O	O
you	O	O
could	O	O
expose	O	O
the	O	O
object	O	O
from	O	O
a	O	O
getter	B-API	O
)	O	O
.	O	O
Thus	O	O
:	O	O
public	O	O
class	O	O
MyClass	O	O
:	O	O
BaseClass	O	O
{	O	O
//	O	O
Your	O	O
stuff	O	O
Becomes	O	O
:	O	O
public	O	O
class	O	O
MyClass	O	O
{	O	O
private	O	O
BaseClass	O	O
baseClass	O	O
;	O	O
public	O	O
void	O	O
{	O	O
;	O	O
ExposeThisMethod	B-API	B-API
(	I-API	I-API
)	I-API	I-API
baseClass.ExposeThisMethod	B-API	B-API
(	I-API	I-API
)	I-API	I-API
Or	O	O
:	O	O
public	O	O
class	O	O
MyClass	O	O
{	O	O
private	O	O
BaseClass	O	O
baseClass	O	O
;	O	O
public	O	O
BaseClass	O	O
BaseClass	O	O
{	O	O
get	O	O
{	O	O
return	O	O
baseClass	O	O
;	O	O
}	O	O
Override	O	O
them	O	O
like	O	O
Michael	O	O
Suggests	O	O
above	O	O
and	O	O
to	O	O
prevent	O	O
folks	O	O
from	O	O
using	O	O
the	O	O
overridden	B-API	O
(	I-API	O
sp	I-API	O
?	I-API	O
)	I-API	O
methods	O	O
,	O	O
mark	O	O
them	O	O
as	O	O
obsolete	O	O
:	O	O
]	O	O
public	O	O
override	B-API	O
Obsolete	B-API	O
(	I-API	O
``	I-API	O
These	I-API	O
are	I-API	O
not	I-API	O
supported	I-API	O
in	I-API	O
this	I-API	O
class	I-API	O
.	I-API	O
``	I-API	O
,	I-API	O
true	I-API	O
)	I-API	O
dontcallmeanymore	I-API	B-API
(	I-API	I-API
)	I-API	I-API
If	O	O
the	O	O
second	O	O
parm	O	O
is	O	O
set	O	O
to	O	O
true	O	O
,	O	O
a	O	O
compiler	O	O
error	O	O
will	O	O
be	O	O
generated	O	O
if	O	O
anyone	O	O
tries	O	O
to	O	O
call	O	O
that	O	O
method	O	O
and	O	O
the	O	O
string	O	O
in	O	O
the	O	O
first	O	O
parm	O	O
is	O	O
the	O	O
message	O	O
.	O	O
If	O	O
parm2	O	O
is	O	O
false	O	O
only	O	O
a	O	O
compiler	O	O
warning	O	O
will	O	O
be	O	O
generated	O	O
.	O	O
I	O	O
am	O	O
thinking	O	O
off	O	O
the	O	O
top	O	O
of	O	O
my	O	O
head	O	O
here	O	O
.	O	O
If	O	O
you	O	O
load	O	O
both	O	O
as	O	O
Data	O	O
Tables	O	O
in	O	O
the	O	O
same	O	O
Data	O	O
Sets	O	O
,	O	O
and	O	O
define	O	O
a	O	O
relation	O	O
between	O	O
the	O	O
two	O	O
over	O	O
SKU	O	O
,	O	O
and	O	O
then	O	O
run	O	O
a	O	O
query	O	O
on	O	O
the	O	O
Data	O	O
Set	O	O
which	O	O
produces	O	O
the	O	O
desired	O	O
result	O	O
.	O	O
As	O	O
long	O	O
as	O	O
the	O	O
two	O	O
databases	O	O
are	O	O
on	O	O
the	O	O
same	O	O
physical	O	O
server	O	O
(	O	O
assuming	O	O
MSSQL	O	O
)	O	O
and	O	O
the	O	O
username/password	O	O
being	O	O
used	O	O
in	O	O
the	O	O
connection	O	O
string	O	O
has	O	O
rights	O	O
to	O	O
both	O	O
DBs	O	O
,	O	O
then	O	O
you	O	O
should	O	O
be	O	O
able	O	O
to	O	O
perform	O	O
a	O	O
join	O	O
across	O	O
the	O	O
two	O	O
databases	O	O
.	O	O
Example	O	O
:	O	O
select	O	O
p.Date	B-API	O
,	O	O
p.Amount	O	O
,	O	O
d.SoftwareName	O	O
,	O	O
d.DownloadLinkfrom	O	O
PurchaseDB.dbo.Purchases	B-API	B-API
as	O	O
pjoin	O	O
ProductDB.dbo.Products	B-API	O
as	O	O
d	O	O
on	O	O
d.sku	O	O
=	O	O
p.skuwhere	O	O
p.UserID	O	O
=	O	O
12345	O	O
Why	O	O
not	O	O
create	O	O
a	O	O
Domain	O	O
object	O	O
based	O	O
approach	O	O
to	O	O
this	O	O
problem	O	O
:	O	O
public	O	B-API
class	O	B-API
CustomerDownloadInfo	O	B-API
{	O	O
private	O	O
string	O	O
sku	O	O
;	O	O
private	O	O
readonly	O	O
ICustomer	O	O
customer	O	O
;	O	O
public	O	O
{	O	O
customer	O	O
=	O	O
Customer	O	O
;	O	O
}	O	O
public	O	O
void	O	O
{	O	O
sku	O	O
=	O	O
Sku	O	O
;	O	O
}	O	O
public	O	O
string	O	O
Sku	O	O
{	O	O
get	O	O
{	O	O
return	O	O
sku	O	O
;	O	O
}	O	O
}	O	O
public	O	O
string	O	O
Link	O	O
{	O	O
get	O	O
{	O	O
//	O	O
etc	O	O
...	O	O
etc	O	O
...	O	O
}	O	O
(	O	O
ICustomer	O	O
Customer	O	O
)	O	O
(	O	O
string	O	O
Sku	O	O
)	O	O
There	O	O
are	O	O
a	O	O
million	O	O
variations	O	O
on	O	O
this	O	O
,	O	O
but	O	O
once	O	O
you	O	O
aggregate	O	O
this	O	O
information	O	O
,	O	O
would	O	O
n't	O	O
it	O	O
be	O	O
easier	O	O
to	O	O
present	O	O
?	O	O
Why	O	O
not	O	O
use	O	O
SQLite	O	O
?	O	O
There	O	O
is	O	O
good	O	O
support	O	O
in	O	O
Python	O	O
and	O	O
you	O	O
can	O	O
write	O	O
SQL	O	O
queries	O	O
to	O	O
get	O	O
the	O	O
data	O	O
out	O	O
.	O	O
Here	O	O
is	O	O
the	O	O
Python	O	O
docs	O	O
for	O	O
sqlite3	O	O
If	O	O
you	O	O
do	O	O
n't	O	O
want	O	O
to	O	O
use	O	O
SQLite	O	O
you	O	O
could	O	O
do	O	O
an	O	O
array	O	O
of	O	O
dicts	O	O
.	O	O
episodes	O	O
=	O	O
]	O	O
episodes.append	B-API	B-API
(	I-API	I-API
{	I-API	I-API
'season':1	I-API	I-API
,	I-API	I-API
'episode	I-API	I-API
'	I-API	I-API
:	I-API	I-API
2	I-API	I-API
,	I-API	I-API
'name	I-API	I-API
'	I-API	I-API
:	I-API	I-API
'Something	I-API	I-API
'	I-API	I-API
}	I-API	I-API
)	I-API	I-API
(	O	O
{	O	O
'season':1	O	O
,	O	O
'episode	O	O
'	O	O
:	O	O
2	O	O
,	O	O
'name	O	O
'	O	O
:	O	O
'Something	O	O
'	O	O
,	O	O
'actors	O	O
'	O	O
:	O	O
[	O	O
'Billy	O	O
Bob	O	O
'	O	O
,	O	O
'Sean	O	O
Penn	O	O
'	O	O
]	O	O
}	O	O
)	O	O
That	O	O
way	O	O
you	O	O
add	O	O
metadata	O	O
to	O	O
any	O	O
record	O	O
and	O	O
search	O	O
it	O	O
very	O	O
easily	O	O
season_1	B-API	O
=	B-API	O
[	B-API	O
e	I-API	O
for	B-API	O
e	B-API	O
in	B-API	O
episodes	B-API	O
if	B-API	O
e	B-API	O
[	I-API	O
'season	I-API	O
'	I-API	O
]	I-API	O
==	B-API	O
1	B-API	O
]	I-API	O
billy_bob	I-API	O
=	B-API	O
[	B-API	O
e	I-API	O
for	B-API	O
e	B-API	O
in	B-API	O
episodes	B-API	O
if	B-API	O
'actors	B-API	O
'	I-API	O
in	B-API	O
e	B-API	O
and	B-API	O
'Billy	B-API	O
Bob	B-API	O
'	I-API	O
in	B-API	O
e	B-API	O
[	I-API	O
'actors	I-API	O
'	I-API	O
]	I-API	O
]	I-API	O
for	I-API	O
episode	B-API	O
in	B-API	O
billy_bob	B-API	O
:	I-API	O
print	B-API	O
``	B-API	O
Billy	I-API	O
bob	B-API	O
was	B-API	O
in	B-API	O
Season	B-API	O
%	B-API	O
s	I-API	O
Episode	B-API	O
%	B-API	O
s	I-API	O
''	I-API	O
%	B-API	O
(	B-API	O
episode	I-API	O
[	I-API	O
'season	I-API	O
'	I-API	O
]	I-API	O
,	I-API	O

[0x7FFD166670E3] ANOMALY: use of REX.w is meaningless (default operand size is 64)
