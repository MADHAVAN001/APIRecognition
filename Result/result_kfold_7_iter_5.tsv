hmmm	O	O
...	O	O
I	O	O
'm	O	O
pretty	O	O
sure	O	O
that	O	O
there	O	O
's	O	O
a	O	O
shown	O	O
event	O	O
for	O	O
the	O	O
MPE	B-API	O
...	O	O
this	O	O
is	O	O
off	O	O
the	O	O
top	O	O
of	O	O
my	O	O
head	O	O
,	O	O
but	O	O
I	O	O
think	O	O
you	O	O
can	O	O
add	O	O
an	O	O
event	O	O
handler	O	O
to	O	O
the	O	O
shown	O	O
event	O	O
on	O	O
page_load	O	O
function	O	O
{	O	O
var	B-API	O
popup	O	O
=	O	O
;	O	O
;	O	O
}	O	O
function	O	O
{	O	O
pageLoad	B-API	B-API
(	I-API	I-API
)	I-API	I-API
$	O	O
find	B-API	O
(	I-API	O
'ModalPopupClientID	I-API	O
'	I-API	O
)	I-API	O
popup.add_shown	B-API	O
(	I-API	O
SetFocus	I-API	O
)	I-API	O
SetFocus	B-API	B-API
(	I-API	I-API
)	I-API	I-API
$	O	O
get	B-API	O
(	I-API	O
'TriggerClientId	I-API	O
'	I-API	O
)	I-API	O
.focus	I-API	O
(	I-API	O
)	I-API	O
i	O	O
'm	O	O
not	O	O
sure	O	O
tho	O	O
if	O	O
this	O	O
will	O	O
help	O	O
you	O	O
with	O	O
calling	O	O
it	O	O
from	O	O
the	O	O
server	O	O
side	O	O
tho	O	O
I	O	O
have	O	O
n't	O	O
thought	O	O
too	O	O
hard	O	O
about	O	O
this	O	O
,	O	O
but	O	O
I	O	O
reckon	O	O
you	O	O
could	O	O
get	O	O
a	O	O
Custom	B-API	O
Treeview	I-API	O
in	O	O
WPF	O	B-API
to	O	O
do	O	O
what	O	O
you	O	O
want	O	O
.	O	O
I	O	O
was	O	O
reading	O	O
an	O	O
article	O	O
on	O	O
code	O	O
project	O	O
a	O	O
while	O	O
back	O	O
that	O	O
implemented	O	O
an	O	O
org	O	O
chart	O	O
this	O	O
way	O	O
...	O	O
I	O	O
'm	O	O
all	O	O
for	O	O
writing	O	O
your	O	O
own	O	O
software	O	O
when	O	O
something	O	O
does	O	O
n't	O	O
suit	O	O
your	O	O
needs	O	O
and	O	O
a	O	O
frequent	O	O
re-inventer	O	O
of	O	O
the	O	O
wheel	O	O
.	O	O
But	O	O
this	O	O
honestly	O	O
seems	O	O
like	O	O
one	O	O
of	O	O
those	O	O
things	O	O
were	O	O
the	O	O
solution	O	O
is	O	O
readily	O	O
available	O	O
,	O	O
in	O	O
this	O	O
case	O	O
in	O	O
the	O	O
form	O	O
of	O	O
Family	O	O
Tree	O	O
Maker	O	O
And	O	O
at	O	O
a	O	O
mere	O	O
$	O	O
40	O	O
I	O	O
would	O	O
venture	O	O
to	O	O
guess	O	O
that	O	O
you	O	O
'd	O	O
come	O	O
out	O	O
ahead	O	O
compared	O	O
to	O	O
the	O	O
hours	O	O
you	O	O
would	O	O
spend	O	O
trying	O	O
to	O	O
get	O	O
your	O	O
own	O	O
program	O	O
doing	O	O
exactly	O	O
what	O	O
you	O	O
need	O	O
.	O	O
I	O	O
currently	O	O
use	O	O
the	O	O
software	O	O
and	O	O
it	O	O
works	O	O
great	O	O
.	O	O
Now	O	O
,	O	O
if	O	O
your	O	O
interest	O	O
in	O	O
writing	O	O
it	O	O
partly	O	O
for	O	O
the	O	O
purpose	O	O
of	O	O
just	O	O
doing	O	O
it	O	O
because	O	O
you	O	O
can	O	O
and	O	O
to	O	O
learn	O	O
something	O	O
...	O	O
then	O	O
by	O	O
all	O	O
means	O	O
I	O	O
salute	O	O
your	O	O
will	O	O
to	O	O
learn	O	O
and	O	O
hope	O	O
you	O	O
find	O	O
the	O	O
control	O	O
you	O	O
are	O	O
looking	O	O
for	O	O
.	O	O
Geni	B-API	O
is	O	O
probably	O	O
what	O	O
your	O	O
looking	O	O
for	O	O
.	O	O
If	O	O
you	O	O
're	O	O
really	O	O
looking	O	O
for	O	O
an	O	O
application	O	O
that	O	O
you	O	O
can	O	O
modify	O	O
try	O	O
out	O	O
Family.Show	B-API	O
on	O	O
CodePlex	B-API	O
.	O	O
Take	O	O
a	O	O
look	O	O
at	O	O
Creating	O	O
and	O	O
Using	O	O
URL	B-API	O
Monikers	I-API	O
,	O	O
About	O	O
Asynchronous	O	O
Pluggable	O	O
Protocols	O	O
and	O	O
Registering	O	O
an	O	O
Application	O	O
to	O	O
a	O	O
URL	O	O
Protocol	O	O
from	O	O
MSDN	O	O
Here	O	O
's	O	O
some	O	O
old	O	O
Delphi	B-API	O
code	O	O
we	O	O
used	O	O
as	O	O
a	O	O
way	O	O
to	O	O
get	O	O
shortcuts	O	O
in	O	O
a	O	O
web	O	O
application	O	O
to	O	O
start	O	O
a	O	O
windows	O	O
program	O	O
locally	O	O
for	O	O
the	O	O
user	O	O
.	O	O
procedure	B-API	O
InstallIntoRegistry	I-API	O
;	O	O
var	B-API	O
Reg	O	O
:	O	O
TRegistry	B-API	O
;	O	O
begin	O	O
Reg	O	O
:	O	O
=	O	O
TRegistry.Create	B-API	O
;	O	O
try	O	O
Reg.RootKey	B-API	B-API
:	O	O
=	O	O
HKEY_CLASSES_ROOT	B-API	O
;	O	O
if	B-API	O
then	I-API	O
begin	O	O
;	O	O
;	O	O
;	O	O
;	O	O
if	B-API	O
then	I-API	O
begin	O	O
+	O	O
'	O	O
''	O	O
``	O	O
%	O	O
1	O	O
''	O	O
'	O	O
)	O	O
;	O	O
end	O	O
;	O	O
end	O	O
else	B-API	O
begin	O	O
+	O	O
'Please	O	O
make	O	O
sure	O	O
you	O	O
are	O	O
logged	O	O
in	O	O
with	O	O
a	O	O
user	O	O
account	O	O
with	O	O
administrative	O	O
rights	O	O
!	O	O
'	O	O
,	O	O
'Access	O	O
denied	O	O
'	O	O
,	O	O
0	O	O
)	O	O
;	O	O
Exit	B-API	O
;	O	O
end	O	O
;	O	O
finally	O	O
;	O	O
end	O	O
;	O	O
(	O	O
'moniker	O	O
'	O	O
,	O	O
True	B-API	O
)	I-API	O
(	I-API	O
''	O	O
,	O	O
'URL	O	O
:	O	O
Name	O	O
of	O	O
moniker	O	O
'	O	O
)	O	O
(	O	O
'URL	O	O
Protocol	O	O
'	O	O
,	O	O
''	O	O
)	O	O
(	O	O
'Source	O	O
Filter	O	B-API
'	O	I-API
,	O	I-API
'	O	I-API
{	O	I-API
E436EBB6-524F-11CE-9F53-0020AF0BA770	O	I-API
}	O	I-API
'	O	I-API
)	O	I-API
(	O	I-API
'EditFlags	O	I-API
'	O	I-API
,	O	I-API
2	O	I-API
)	O	I-API
(	O	O
'shell\open\command	O	O
'	O	O
,	O	O
True	B-API	O
)	I-API	O
(	I-API	O
''	O	O
,	O	O
'	O	O
''	O	O
'	O	O
+	O	O
ParamStr	B-API	O
(	I-API	O
0	I-API	O
)	I-API	O
(	O	O
0	O	O
,	O	O
'You	O	O
do	O	O
not	O	O
have	O	O
the	O	O
necessary	O	O
access	O	O
rights	O	O
to	O	O
complete	O	O
this	O	O
installation	O	O
!	O	O
'	O	O
+	O	O
Chr	B-API	O
(	I-API	O
13	I-API	O
)	I-API	O
FreeAndNil	B-API	O
(	I-API	O
Reg	I-API	O
)	I-API	O
(	O	O
0	O	O
,	O	O
'Application	O	O
WebStart	O	O
has	O	O
been	O	O
installed	O	O
successfully	O	O
!	O	O
'	O	O
,	O	O
'Installed	O	O
'	O	O
,	O	O
0	O	O
)	O	O
A	O	O
tidier	O	O
way	O	O
is	O	O
to	O	O
create	O	O
separate	O	O
forms	O	O
for	O	O
each	O	O
'pane	O	O
'	O	O
and	O	O
,	O	O
in	O	O
each	O	O
form	O	O
constructor	O	O
,	O	O
set	B-API	O
this.TopLevel	I-API	O
=	O	O
false	O	O
;	O	O
this.FormBorderStyle	O	O
=	O	O
FormBorderStyle.None	B-API	B-API
;	O	O
this.Dock	O	B-API
=	O	O
DockStyle.Fill	B-API	B-API
;	O	O
That	O	O
way	O	O
,	O	O
each	O	O
of	O	O
these	O	O
forms	O	O
can	O	O
be	O	O
laid	O	O
out	O	O
in	O	O
its	O	O
own	O	O
designer	O	O
,	O	O
instantiated	O	O
one	O	O
or	O	O
more	O	O
times	O	O
at	O	O
runtime	O	O
,	O	O
and	O	O
added	O	O
to	O	O
the	O	O
empty	O	O
area	O	O
like	O	O
a	O	O
normal	O	O
control	O	O
.	O	O
Perhaps	O	O
the	O	O
main	O	O
form	O	O
could	O	O
use	O	O
a	O	O
with	O	O
a	O	O
static	O	O
in	O	O
one	O	O
panel	O	O
,	O	O
and	O	O
space	O	O
to	O	O
add	O	O
these	O	O
forms	O	O
in	O	O
the	O	O
other	O	O
.	O	O
Once	O	O
they	O	O
are	O	O
added	O	O
,	O	O
they	O	O
could	O	O
be	O	O
flipped	O	O
through	O	O
using	O	O
or	O	O
methods	O	O
.	O	O
SeparateForm	O	O
f	O	O
=	O	O
new	O	O
SeparateForm	B-API	O
(	I-API	O
)	I-API	O
;	O	O
MainFormSplitContainer.Panel2.Controls.Add	B-API	B-API
(	I-API	I-API
f	I-API	I-API
)	I-API	I-API
;	O	O
f.Show	B-API	B-API
(	I-API	I-API
)	I-API	I-API
;	O	O
Greg	O	O
Hurlman	O	O
wrote	O	O
:	O	O
Why	O	O
not	O	O
just	O	O
show/hide	O	O
the	O	O
proper	O	O
container	O	O
when	O	O
a	O	O
node	O	O
is	O	O
selected	O	O
in	O	O
the	O	O
grid	O	O
?	O	O
Have	O	O
the	O	O
containers	O	O
all	O	O
sized	O	O
appropriately	O	O
in	O	O
the	O	O
same	O	O
spot	O	O
,	O	O
and	O	O
hide	O	O
all	O	O
but	O	O
the	O	O
default	O	O
,	O	O
which	O	O
would	O	O
be	O	O
preselected	O	O
in	O	O
the	O	O
grid	O	O
on	O	O
load	O	O
.	O	O
Unfortunately	O	O
,	O	O
that	O	O
's	O	O
what	O	O
I	O	O
'm	O	O
trying	O	O
to	O	O
avoid	O	O
.	O	O
I	O	O
'm	O	O
looking	O	O
for	O	O
an	O	O
easy	O	O
way	O	O
to	O	O
handle	O	O
the	O	O
interface	O	O
during	O	O
design	O	O
time	O	O
,	O	O
with	O	O
minimal	O	O
reformatting	O	O
code	O	O
needed	O	O
to	O	O
get	O	O
it	O	O
working	O	O
during	O	O
run	O	O
time	O	O
.	O	O
I	O	O
like	O	O
Duncan	O	O
's	O	O
answer	O	O
because	O	O
it	O	O
means	O	O
the	O	O
design	O	O
of	O	O
each	O	O
node	O	O
's	O	O
interface	O	O
can	O	O
be	O	O
kept	O	O
completely	O	O
separate	O	O
.	O	O
This	O	O
means	O	O
I	O	O
do	O	O
n't	O	O
get	O	O
overlap	O	O
on	O	O
the	O	O
snapping	O	O
guidelines	O	O
and	O	O
other	O	O
design	O	O
time	O	O
advantages	O	O
.	O	O
Static	B-API	O
methods	O	O
can	O	O
not	O	O
be	O	O
inherited	O	O
or	O	O
overridden	O	O
,	O	O
and	O	O
that	O	O
is	O	O
why	O	O
they	O	O
ca	O	O
n't	O	O
be	O	O
abstract	O	O
.	O	O
Since	O	O
static	B-API	O
methods	O	O
are	O	O
defined	O	O
on	O	O
the	O	O
type	O	O
,	O	O
not	O	O
the	O	O
instance	O	O
,	O	O
of	O	O
a	O	O
class	O	O
,	O	O
they	O	O
must	O	O
be	O	O
called	O	O
explicitly	O	O
on	O	O
that	O	O
type	O	O
.	O	O
So	O	O
when	O	O
you	O	O
want	O	O
to	O	O
call	O	O
a	O	O
method	O	O
on	O	O
a	O	O
child	O	O
class	O	O
,	O	O
you	O	O
need	O	O
to	O	O
use	O	O
its	O	O
name	O	O
to	O	O
call	O	O
it	O	O
.	O	O
This	O	O
makes	O	O
inheritance	O	O
irrelevant	O	O
.	O	O
Assume	O	O
you	O	O
could	O	O
,	O	O
for	O	O
a	O	O
moment	O	O
,	O	O
inherit	O	O
static	B-API	O
methods	O	O
.	O	O
Imagine	O	O
this	O	O
scenario	O	O
:	O	O
public	O	O
static	B-API	B-API
class	O	O
Base	O	O
{	O	O
public	O	O
static	B-API	O
virtual	I-API	O
int	I-API	O
{	I-API	O
return	I-API	O
5	I-API	O
;	I-API	O
}	I-API	O
}	O	O
public	O	O
static	B-API	O
class	I-API	O
Child1	I-API	O
:	I-API	O
Base	I-API	O
{	O	O
public	O	O
static	B-API	B-API
override	I-API	O
int	I-API	O
{	O	O
return	O	O
1	O	O
;	O	O
}	O	O
}	O	O
public	O	O
static	B-API	O
class	I-API	O
Child2	I-API	O
:	I-API	O
Base	I-API	O
{	O	O
public	O	O
static	B-API	B-API
override	I-API	O
int	I-API	O
{	O	O
return	O	O
2	O	O
;	O	O
GetNumber	B-API	B-API
(	I-API	I-API
)	I-API	I-API
GetNumber	B-API	B-API
(	I-API	I-API
)	I-API	I-API
GetNumber	B-API	B-API
(	I-API	I-API
)	I-API	I-API
If	O	O
you	O	O
call	O	O
Base.GetNumber	B-API	B-API
(	I-API	I-API
)	I-API	I-API
,	O	O
which	O	O
method	O	O
would	O	O
be	O	O
called	O	O
?	O	O
Which	O	O
value	O	O
returned	O	O
?	O	O
Its	O	O
pretty	O	O
easy	O	O
to	O	O
see	O	O
that	O	O
without	O	O
creating	O	O
instances	O	O
of	O	O
objects	O	O
,	O	O
inheritance	O	O
is	O	O
rather	O	O
hard	O	O
.	O	O
Abstract	O	O
methods	O	O
without	O	O
inheritance	O	O
are	O	O
just	O	O
methods	O	O
that	O	O
do	O	O
n't	O	O
have	O	O
a	O	O
body	O	O
,	O	O
so	O	O
ca	O	O
n't	O	O
be	O	O
called	O	O
.	O	O
To	O	O
add	O	O
to	O	O
the	O	O
previous	O	O
explanations	O	O
,	O	O
static	B-API	O
method	O	O
calls	O	O
are	O	O
bound	O	O
to	O	O
a	O	O
specific	O	O
method	O	O
at	O	O
compile-time	O	O
,	O	O
which	O	O
rather	O	O
rules	O	O
out	O	O
polymorphic	O	O
behavior	O	O
.	O	O
Static	B-API	O
methods	O	O
are	O	O
not	O	O
instantiated	O	O
as	O	O
such	O	O
,	O	O
they	O	O
're	O	O
just	O	O
available	O	O
without	O	O
an	O	O
object	O	O
reference	O	O
.	O	O
A	O	O
call	O	O
to	O	O
a	O	O
static	B-API	O
method	O	O
is	O	O
done	O	O
through	O	O
the	O	O
class	O	O
name	O	O
,	O	O
not	O	O
through	O	O
an	O	O
object	O	O
reference	O	O
,	O	O
and	O	O
the	O	O
IL	O	O
code	O	O
to	O	O
call	O	O
it	O	O
will	O	O
call	O	O
the	O	O
abstract	O	O
method	O	O
through	O	O
the	O	O
name	O	O
of	O	O
the	O	O
class	O	O
that	O	O
defined	O	O
it	O	O
,	O	O
not	O	O
necessarily	O	O
the	O	O
name	O	O
of	O	O
the	O	O
class	O	O
you	O	O
used	O	O
.	O	O
Let	O	O
me	O	O
show	O	O
an	O	O
example	O	O
.	O	O
With	O	O
the	O	O
following	O	O
code	O	O
:	O	O
public	O	B-API
class	O	B-API
A	O	I-API
{	O	B-API
public	O	B-API
static	B-API	B-API
void	I-API	B-API
{	I-API	B-API
}	I-API	B-API
}	O	O
public	O	O
class	B-API	O
B	I-API	O
:	I-API	O
Test	I-API	B-API
(	I-API	I-API
)	I-API	I-API
If	O	O
you	O	O
call	O	O
B.Test	B-API	O
,	O	O
like	O	O
this	O	O
:	O	O
class	O	O
Program	O	O
{	O	O
static	B-API	O
void	I-API	O
{	I-API	O
;	I-API	O
(	I-API	O
string	B-API	B-API
[	I-API	I-API
]	I-API	I-API
args	O	I-API
)	O	I-API
B.Test	B-API	B-API
(	I-API	I-API
)	I-API	I-API
Then	O	O
the	O	O
actual	O	O
code	O	O
inside	O	O
the	O	O
Main	O	O
method	O	O
is	O	O
as	O	O
follows	O	O
:	O	O
.entrypoint.maxstack	B-API	O
8L0000	O	O
:	O	O
nop	O	O
L0001	O	O
:	O	O
call	O	O
void	O	O
L0006	O	O
:	O	O
nop	O	O
L0007	O	O
:	O	O
ret	O	O
ConsoleApplication1.A	B-API	O
:	I-API	O
:Test	I-API	B-API
(	I-API	I-API
)	I-API	I-API
As	O	O
you	O	O
can	O	O
see	O	O
,	O	O
the	O	O
call	O	O
is	O	O
made	O	O
to	O	O
A.Test	B-API	O
,	O	O
because	O	O
it	O	O
was	O	O
the	O	O
A	O	O
class	O	O
that	O	O
defined	O	O
it	O	O
,	O	O
and	O	O
not	O	O
to	O	O
B.Test	B-API	O
,	O	O
even	O	O
though	O	O
you	O	O
can	O	O
write	O	O
the	O	O
code	O	O
that	O	O
way	O	O
.	O	O
If	O	O
you	O	O
had	O	O
class	O	O
types	O	O
,	O	O
like	O	O
in	O	O
Delphi	O	O
,	O	O
where	O	O
you	O	O
can	O	O
make	O	O
a	O	O
variable	O	O
referring	O	O
to	O	O
a	O	O
type	O	O
and	O	O
not	O	O
an	O	O
object	O	O
,	O	O
you	O	O
would	O	O
have	O	O
more	O	O
use	O	O
for	O	O
virtual	O	O
and	O	O
thus	O	O
abstract	O	O
static	B-API	O
methods	O	O
(	O	O
and	O	O
also	O	O
constructors	O	O
)	O	O
,	O	O
but	O	O
they	O	O
are	O	O
n't	O	O
available	O	O
and	O	O
thus	O	O
static	O	O
calls	O	O
are	O	O
non-virtual	O	O
in	O	O
.NET	B-API	O
.	O	O
I	O	O
realize	O	O
that	O	O
the	O	O
IL	O	O
designers	O	O
could	O	O
allow	O	O
the	O	O
code	O	O
to	O	O
be	O	O
compiled	O	O
to	O	O
call	O	O
B.Test	B-API	O
,	O	O
and	O	O
resolve	O	O
the	O	O
call	O	O
at	O	O
runtime	O	O
,	O	O
but	O	O
it	O	O
still	O	O
would	O	O
n't	O	O
be	O	O
virtual	O	O
,	O	O
as	O	O
you	O	O
would	O	O
still	O	O
have	O	O
to	O	O
write	O	O
some	O	O
kind	O	O
of	O	O
class	O	O
name	O	O
there	O	O
.	O	O
Virtual	O	O
methods	O	O
,	O	O
and	O	O
thus	O	O
abstract	O	O
ones	O	O
,	O	O
are	O	O
only	O	O
useful	O	O
when	O	O
you	O	O
're	O	O
using	O	O
a	O	O
variable	O	O
which	O	O
,	O	O
at	O	O
runtime	O	O
,	O	O
can	O	O
contain	O	O
many	O	O
different	O	O
types	O	O
of	O	O
objects	O	O
,	O	O
and	O	O
you	O	O
thus	O	O
want	O	O
to	O	O
call	O	O
the	O	O
right	O	O
method	O	O
for	O	O
the	O	O
current	O	O
object	O	O
you	O	O
have	O	O
in	O	O
the	O	O
variable	O	O
.	O	O
With	O	O
static	O	O
methods	O	O
you	O	O
need	O	O
to	O	O
go	O	O
through	O	O
a	O	O
class	O	O
name	O	O
anyway	O	O
,	O	O
so	O	O
the	O	O
exact	O	O
method	O	O
to	O	O
call	O	O
is	O	O
known	O	O
at	O	O
compile	O	O
time	O	O
because	O	O
it	O	O
ca	O	O
n't	O	O
and	O	O
wo	O	O
n't	O	O
change	O	O
.	O	O
Thus	O	O
,	O	O
virtual/abstract	O	O
static	O	O
methods	O	O
are	O	O
not	O	O
available	O	O
in	O	O
.NET	B-API	O
.	O	O
using	O	O
System.Net	B-API	B-API
;	O	O
foreach	B-API	O
(	O	O
IPAddress	B-API	O
address	O	O
in	O	O
Dns.GetHostAddresses	B-API	B-API
(	I-API	I-API
``	I-API	I-API
www.google.com	I-API	I-API
''	I-API	I-API
)	I-API	I-API
)	O	O
{	O	O
Console.WriteLine	B-API	B-API
(	O	I-API
address.ToString	B-API	I-API
(	I-API	I-API
)	I-API	I-API
)	O	I-API
;	O	O
}	O	O
Try	O	O
using	O	O
the	O	O
System.Net.Dns	B-API	B-API
class	O	O
Well	O	O
,	O	O
here	O	O
's	O	O
how	O	O
we	O	O
do	O	O
it	O	O
on	O	O
Stack	O	O
Overflow	O	O
.	O	O
var	B-API	O
ts	O	O
=	O	O
new	O	O
TimeSpan	B-API	O
(	O	O
DateTime.UtcNow.Ticks	B-API	O
-	O	O
dt.Ticks	B-API	O
)	O	O
;	O	O
double	O	O
delta	O	O
=	O	O
Math.Abs	B-API	B-API
(	I-API	I-API
ts.TotalSeconds	I-API	I-API
)	I-API	I-API
;	O	O
if	B-API	O
(	I-API	O
delta	I-API	O
60	I-API	O
)	I-API	O
{	O	O
return	O	O
ts.Seconds	B-API	O
==	O	O
1	O	O
?	O	O
``	O	O
one	O	O
second	O	O
ago	O	O
''	O	O
:	O	O
ts.Seconds	B-API	B-API
+	O	O
``	O	O
seconds	O	O
ago	O	O
''	O	O
;	O	O
}	O	O
if	B-API	O
(	I-API	O
delta	I-API	O
120	I-API	O
)	I-API	O
{	O	O
return	O	O
``	O	O
a	O	O
minute	O	O
ago	O	O
''	O	O
;	O	O
}	O	O
if	B-API	O
(	I-API	O
delta	I-API	O
2700	I-API	O
)	I-API	O
//	O	O
45	O	O
*	O	O
60	O	O
{	O	O
return	O	O
ts.Minutes	B-API	B-API
+	O	O
``	O	O
minutes	O	O
ago	O	O
''	O	O
;	O	O
}	O	O
if	B-API	O
(	I-API	O
delta	I-API	O
5400	I-API	O
)	I-API	O
//	O	O
90	O	O
*	O	O
60	O	O
{	O	O
return	O	O
``	O	O
an	O	O
hour	O	O
ago	O	O
''	O	O
;	O	O
}	O	O
if	B-API	O
(	I-API	O
delta	I-API	O
86400	I-API	O
)	I-API	O
//	O	O
24	O	O
*	O	O
60	O	O
*	O	O
60	O	O
{	O	O
return	O	O
ts.Hours	B-API	B-API
+	O	O
``	O	O
hours	O	O
ago	O	O
''	O	O
;	O	O
}	O	O
if	B-API	O
(	I-API	O
delta	I-API	O
172800	I-API	O
)	I-API	O
//	O	O
48	O	O
*	O	O
60	O	O
*	O	O
60	O	O
{	O	O
return	O	O
``	O	O
yesterday	O	O
''	O	O
;	O	O
}	O	O
if	B-API	O
(	I-API	O
delta	I-API	O
2592000	I-API	O
)	I-API	O
//	O	O
30	O	O
*	O	O
24	O	O
*	O	O
60	O	O
*	O	O
60	O	O
{	O	O
return	O	O
ts.Days	B-API	B-API
+	O	O
``	O	O
days	O	O
ago	O	O
''	O	O
;	O	O
}	O	O
if	B-API	O
(	I-API	O
delta	I-API	O
31104000	I-API	O
)	I-API	O
//	O	O
12	O	O
*	O	O
30	O	O
*	O	O
24	O	O
*	O	O
60	O	O
*	O	O
60	O	O
{	O	O
int	O	O
months	O	O
=	O	O
Convert.ToInt32	B-API	O
(	O	O
Math.Floor	B-API	B-API
(	O	I-API
(	O	I-API
double	O	I-API
)	O	I-API
ts.Days	O	O
/	O	O
30	O	O
)	O	O
)	O	O
;	O	O
return	O	O
months	O	O
=	O	O
1	O	O
?	O	O
``	O	O
one	O	O
month	O	O
ago	O	O
''	O	O
:	O	O
months	O	O
+	O	O
``	O	O
months	O	O
ago	O	O
''	O	O
;	O	O
}	O	O
int	O	O
years	O	O
=	O	O
Convert.ToInt32	B-API	O
(	O	O
Math.Floor	B-API	B-API
(	O	I-API
(	O	I-API
double	O	I-API
)	O	I-API
ts.Days	O	O
/	O	O
365	O	O
)	O	O
)	O	O
;	O	O
return	O	O
years	O	O
=	O	O
1	O	O
?	O	O
``	O	O
one	O	O
year	O	O
ago	O	O
''	O	O
:	O	O
years	O	O
+	O	O
``	O	O
years	O	O
ago	O	O
''	O	O
;	O	O
Suggestions	O	O
?	O	O
Comments	O	O
?	O	O
Ways	O	O
to	O	O
improve	O	O
this	O	O
algorithm	O	O
?	O	O
@	O	O
jeff	O	O
IMHO	O	O
yours	O	O
seems	O	O
a	O	O
little	O	O
long	O	O
.	O	O
However	O	O
it	O	O
does	O	O
seem	O	O
a	O	O
little	O	O
more	O	O
robust	O	O
with	O	O
support	O	O
for	O	O
``	O	O
yesterday	O	O
''	O	O
and	O	O
``	O	O
years	O	O
''	O	O
.	O	O
But	O	O
in	O	O
my	O	O
experience	O	O
when	O	O
this	O	O
is	O	O
used	O	O
the	O	O
person	O	O
is	O	O
most	O	O
likely	O	O
to	O	O
view	O	O
the	O	O
content	O	O
in	O	O
the	O	O
first	O	O
30	O	O
days	O	O
.	O	O
It	O	O
is	O	O
only	O	O
the	O	O
really	O	O
hardcore	O	O
people	O	O
that	O	O
come	O	O
after	O	O
that	O	O
.	O	O
So	O	O
that	O	O
is	O	O
why	O	O
I	O	O
usually	O	O
elect	O	O
to	O	O
keep	O	O
this	O	O
short	O	O
and	O	O
simple	O	O
.	O	O
This	O	O
is	O	O
the	O	O
method	O	O
I	O	O
am	O	O
currently	O	O
using	O	O
on	O	O
one	O	O
of	O	O
my	O	O
websites	O	O
.	O	O
This	O	O
only	O	O
returns	O	O
a	O	O
relative	O	O
day	O	O
,	O	O
hour	O	O
,	O	O
time	O	O
.	O	O
And	O	O
then	O	O
the	O	O
user	O	O
has	O	O
to	O	O
slap	O	O
on	O	O
``	O	O
ago	O	O
''	O	O
in	O	O
the	O	O
output	O	O
.	O	O
public	B-API	O
static	I-API	B-API
string	I-API	O
{	0-API	O
string	O	O
output	O	O
=	O	O
String.Empty	B-API	B-API
;	O	O
if	B-API	O
(	I-API	O
time.Days	I-API	O
0	I-API	O
)	I-API	O
output	O	O
+=	O	O
time.Days	O	O
+	O	O
``	O	O
days	O	O
``	O	O
;	O	O
if	B-API	O
time.Hours	I-API	O
0	I-API	O
)	I-API	O
output	O	O
+=	O	O
time.Hours	O	O
+	O	O
``	O	O
hr	O	O
``	O	O
;	O	O
if	B-API	O
(	I-API	O
time.Days	I-API	O
==	I-API	O
0	I-API	O
time.Minutes	I-API	O
0	I-API	O
)	I-API	O
output	O	O
+=	O	O
time.Minutes	B-API	O
+	O	O
``	O	O
min	O	O
``	O	O
;	O	O
if	B-API	O
(	I-API	O
output.Length	I-API	O
==	I-API	O
0	I-API	O
)	I-API	O
output	O	O
+=	O	O
time.Seconds	B-API	O
+	O	O
``	O	O
sec	O	O
''	O	O
;	O	O
return	O	O
(	O	O
this	O	O
TimeSpan	O	O
time	O	O
)	O	O
(	O	O
time.Days	B-API	O
==	O	O
0	O	O
||	O	O
time.Days	B-API	O
==	O	O
1	O	O
)	O	O
output.Trim	B-API	B-API
(	I-API	I-API
)	I-API	I-API
Jeff	O	O
,	O	O
your	O	O
code	O	O
is	O	O
nice	O	O
but	O	O
could	O	O
be	O	O
clearer	O	O
with	O	O
constants	O	O
(	O	O
as	O	O
suggested	O	O
in	O	O
Code	O	O
Complete	O	O
)	O	O
.	O	O
const	B-API	O
int	I-API	O
SECOND	I-API	O
=	I-API	O
1	I-API	O
;	O	O
const	B-API	O
int	I-API	O
MINUTE	I-API	O
=	I-API	O
60	I-API	O
*	I-API	O
SECOND	I-API	O
;	O	O
const	B-API	O
int	I-API	O
HOUR	I-API	O
=	I-API	O
60	I-API	O
*	I-API	O
MINUTE	I-API	O
;	O	O
const	B-API	O
int	I-API	O
DAY	I-API	O
=	I-API	O
24	I-API	O
*	I-API	O
HOUR	I-API	O
;	O	O
const	B-API	O
int	I-API	O
MONTH	I-API	O
=	I-API	O
30	I-API	O
*	I-API	O
DAY	I-API	O
;	O	O
var	O	O
ts	O	O
=	O	O
new	O	O
TimeSpan	B-API	O
(	O	O
DateTime.UtcNow.Ticks	B-API	O
-	O	O
yourDate.Ticks	B-API	O
)	O	O
;	O	O
double	O	O
delta	O	O
=	O	O
Math.Abs	B-API	B-API
(	I-API	I-API
ts.TotalSeconds	I-API	I-API
)	I-API	I-API
;	O	O
if	B-API	O
(	I-API	O
delta	I-API	O
1	I-API	O
*	I-API	O
MINUTE	I-API	O
)	I-API	O
return	O	O
ts.Seconds	O	O
==	O	O
1	O	O
?	O	O
``	O	O
one	O	O
second	O	O
ago	O	O
''	O	O
:	O	O
ts.Seconds	O	B-API
+	O	O
``	O	O
seconds	O	O
ago	O	O
''	O	O
;	O	O
if	B-API	O
(	I-API	O
delta	I-API	O
2	I-API	O
*	I-API	O
MINUTE	I-API	O
)	I-API	O
return	O	O
``	O	O
a	O	O
minute	O	O
ago	O	O
''	O	O
;	O	O
if	B-API	O
(	I-API	O
delta	I-API	O
45	I-API	O
*	I-API	O
MINUTE	I-API	O
)	I-API	O
return	O	O
ts.Minutes	O	B-API
+	O	O
``	O	O
minutes	O	O
ago	O	O
''	O	O
;	O	O
if	B-API	O
(	I-API	O
delta	I-API	O
90	I-API	O
*	I-API	O
MINUTE	I-API	O
)	I-API	O
return	O	O
``	O	O
an	O	O
hour	O	O
ago	O	O
''	O	O
;	O	O
if	B-API	O
(	I-API	O
delta	I-API	O
24	I-API	O
*	I-API	O
HOUR	I-API	O
)	I-API	O
return	O	O
ts.Hours	O	B-API
+	O	O
``	O	O
hours	O	O
ago	O	O
''	O	O
;	O	O
if	B-API	O
(	I-API	O
delta	I-API	O
48	I-API	O
*	I-API	O
HOUR	I-API	O
)	I-API	O
return	O	O
``	O	O
yesterday	O	O
''	O	O
;	O	O
if	B-API	O
(	I-API	O
delta	I-API	O
30	I-API	O
*	I-API	O
DAY	I-API	O
)	I-API	O
return	O	O
ts.Days	O	B-API
+	O	O
``	O	O
days	O	O
ago	O	O
''	O	O
;	O	O
if	B-API	O
(	I-API	O
delta	I-API	O
12	I-API	O
*	I-API	O
MONTH	I-API	O
)	I-API	O
{	O	O
int	O	O
months	O	O
=	O	O
Convert.ToInt32	B-API	O
(	O	O
Math.Floor	B-API	B-API
(	O	I-API
(	O	I-API
double	O	I-API
)	O	I-API
ts.Days	O	O
/	O	O
30	O	O
)	O	O
)	O	O
;	O	O
return	O	O
months	O	O
=	O	O
1	O	O
?	O	O
``	O	O
one	O	O
month	O	O
ago	O	O
''	O	O
:	O	O
months	O	O
+	O	O
``	O	O
months	O	O
ago	O	O
''	O	O
;	O	O
}	O	O
else	O	O
{	O	O
int	O	O
years	O	O
=	O	O
Convert.ToInt32	B-API	O
(	O	O
Math.Floor	B-API	B-API
(	O	I-API
(	O	I-API
double	O	I-API
)	O	I-API
ts.Days	O	O
/	O	O
365	O	O
)	O	O
)	O	O
;	O	O
return	O	O
years	O	O
=	O	O
1	O	O
?	O	O
``	O	O
one	O	O
year	O	O
ago	O	O
''	O	O
:	O	O
years	O	O
+	O	O
``	O	O
years	O	O
ago	O	O
''	O	O
;	O	O
}	O	O
I	O	O
thought	O	O
I	O	O
'd	O	O
give	O	O
this	O	O
a	O	O
shot	O	O
using	O	O
classes	O	O
and	O	O
polymorphism	O	O
.	O	O
I	O	O
had	O	O
a	O	O
previous	O	O
iteration	O	O
which	O	O
used	O	O
sub-classing	O	O
which	O	O
ended	O	O
up	O	O
having	O	O
way	O	O
too	O	O
much	O	O
overhead	O	O
.	O	O
I	O	O
've	O	O
switched	O	O
to	O	O
a	O	O
more	O	O
flexible	O	O
delegate	O	O
/	O	O
public	O	O
property	O	O
object	O	O
model	O	O
which	O	O
is	O	O
significantly	O	O
better	O	O
.	O	O
My	O	O
code	O	O
is	O	O
very	O	O
slightly	O	O
more	O	O
accurate	O	O
,	O	O
I	O	O
wish	O	O
I	O	O
could	O	O
come	O	O
up	O	O
with	O	O
a	O	O
better	O	O
way	O	O
to	O	O
generate	O	O
``	O	O
months	O	O
ago	O	O
''	O	O
that	O	O
did	O	O
n't	O	O
seem	O	O
too	O	O
over-engineered	O	O
.	O	O
I	O	O
think	O	O
I	O	O
'd	O	O
still	O	O
stick	O	O
with	O	O
Jeff	O	O
's	O	O
if-then	O	O
cascade	O	O
because	O	O
it	O	O
's	O	O
less	O	O
code	O	O
and	O	O
it	O	O
's	O	O
simpler	O	O
(	O	O
it	O	O
's	O	O
definitely	O	O
easier	O	O
to	O	O
ensure	O	O
it	O	O
'll	O	O
work	O	O
as	O	O
expected	O	O
)	O	O
.	O	O
For	O	O
the	O	O
below	O	O
code	O	O
PrintRelativeTime.GetRelativeTimeMessage	B-API	B-API
(	I-API	I-API
TimeSpan	I-API	I-API
ago	I-API	I-API
)	I-API	I-API
returns	O	O
the	O	O
relative	O	O
time	O	O
message	O	O
(	O	O
e.g	O	O
.	O	O
``	O	O
yesterday	O	O
''	O	O
)	O	O
.	O	O
public	B-API	O
class	I-API	O
RelativeTimeRange	I-API	O
:	I-API	O
IComparable	I-API	O
{	O	O
public	O	O
TimeSpan	O	O
UpperBound	O	O
{	O	O
get	O	O
;	O	O
set	O	O
;	O	O
}	O	O
public	O	O
delegate	B-API	O
string	I-API	O
;	O	O
public	O	O
RelativeTimeTextDelegate	B-API	O
MessageCreator	I-API	O
{	O	O
get	O	O
;	O	O
set	O	O
;	O	O
}	O	O
public	O	O
int	O	O
{	O	O
if	O	O
)	O	O
{	O	O
return	O	O
1	O	O
;	O	O
}	O	O
//	O	O
note	O	O
that	O	O
this	O	O
sorts	O	O
in	O	O
reverse	O	O
order	O	O
to	O	O
the	O	O
way	O	O
you	O	O
'd	O	O
expect	O	O
,	O	O
//	O	O
this	O	O
saves	O	O
having	O	O
to	O	O
reverse	O	O
a	O	O
list	O	O
later	O	O
return	O	O
(	O	O
obj	O	O
as	O	O
;	O	O
}	O	O
}	O	O
public	O	O
class	B-API	O
PrintRelativeTime	I-API	O
{	O	O
private	O	O
static	B-API	O
ListRelativeTimeRange	I-API	O
timeRanges	I-API	O
;	O	O
static	O	O
{	O	O
timeRanges	O	O
=	O	O
new	O	O
ListRelativeTimeRange	B-API	O
{	O	O
new	O	O
RelativeTimeRange	B-API	O
{	O	O
UpperBound	B-API	O
=	O	O
,	O	O
MessageCreator	B-API	B-API
=	O	B-API
(	O	I-API
delta	O	I-API
)	O	I-API
=	O	O
{	O	O
return	O	O
``	O	O
one	O	O
second	O	O
ago	O	O
''	O	O
;	O	O
}	O	O
}	O	O
,	O	O
new	O	O
RelativeTimeRange	B-API	O
{	O	O
UpperBound	B-API	O
=	O	O
,	O	O
MessageCreator	B-API	B-API
=	O	B-API
(	O	I-API
delta	O	I-API
)	O	I-API
=	O	O
{	O	O
return	O	O
delta.Seconds	B-API	O
+	O	O
``	O	O
seconds	O	O
ago	O	O
''	O	O
;	O	O
}	O	O
}	O	O
,	O	O
new	O	O
RelativeTimeRange	B-API	O
{	O	O
UpperBound	B-API	O
=	O	O
,	O	O
MessageCreator	B-API	B-API
=	O	B-API
(	O	I-API
delta	O	I-API
)	O	I-API
=	O	O
{	O	O
return	O	O
``	O	O
one	O	O
minute	O	O
ago	O	O
''	O	O
;	O	O
}	O	O
}	O	O
,	O	O
new	O	O
RelativeTimeRange	B-API	O
{	O	O
UpperBound	B-API	O
=	O	O
,	O	O
MessageCreator	B-API	B-API
=	O	B-API
(	O	I-API
delta	O	I-API
)	O	I-API
=	O	O
{	O	O
return	O	O
delta.Minutes	O	O
+	O	O
``	O	O
minutes	O	O
ago	O	O
''	O	O
;	O	O
}	O	O
}	O	O
,	O	O
new	O	O
RelativeTimeRange	B-API	O
{	O	O
UpperBound	B-API	O
=	O	O
,	O	O
MessageCreator	B-API	B-API
=	O	B-API
(	O	I-API
delta	O	I-API
)	O	I-API
=	O	O
{	O	O
return	O	O
``	O	O
one	O	O
hour	O	O
ago	O	O
''	O	O
;	O	O
}	O	O
}	O	O
,	O	O
new	O	O
RelativeTimeRange	B-API	O
{	O	O
UpperBound	B-API	O
=	O	O
,	O	O
MessageCreator	B-API	B-API
=	O	B-API
(	O	I-API
delta	O	I-API
)	O	I-API
=	O	O
{	O	O
return	O	O
delta.Hours	O	O
+	O	O
``	O	O
hours	O	O
ago	O	O
''	O	O
;	O	O
}	O	O
}	O	O
,	O	O
new	O	O
RelativeTimeRange	B-API	O
{	O	O
UpperBound	B-API	O
=	O	O
,	O	O
MessageCreator	B-API	B-API
=	O	B-API
(	O	I-API
delta	O	I-API
)	O	I-API
=	O	O
{	O	O
return	O	O
``	O	O
yesterday	O	O
''	O	O
;	O	O
}	O	O
}	O	O
,	O	O
new	O	O
RelativeTimeRange	B-API	O
{	O	O
UpperBound	B-API	O
=	O	O
)	O	O
,	O	O
MessageCreator	B-API	B-API
=	O	B-API
(	O	I-API
delta	O	I-API
)	O	I-API
=	O	O
{	O	O
return	O	O
delta.Days	O	O
+	O	O
``	O	O
days	O	O
ago	O	O
''	O	O
;	O	O
}	O	O
}	O	O
,	I-API	O
new	O	O
RelativeTimeRange	B-API	O
{	O	O
UpperBound	B-API	O
=	O	O
)	O	O
,	O	O
MessageCreator	B-API	B-API
=	O	B-API
(	O	I-API
delta	O	I-API
)	O	I-API
=	O	O
{	O	O
return	O	O
``	O	O
one	O	O
month	O	O
ago	O	O
''	O	O
;	O	O
}	O	O
}	O	O
,	O	O
new	O	O
RelativeTimeRange	B-API	O
{	O	O
UpperBound	B-API	O
=	O	O
)	O	O
,	O	O
MessageCreator	B-API	B-API
=	O	B-API
(	O	I-API
delta	O	I-API
)	O	I-API
=	O	O
{	O	O
return	O	O
+	O	O
``	O	O
months	O	O
ago	O	O
''	O	O
;	O	O
}	O	O
}	O	O
,	O	O
new	O	O
RelativeTimeRange	B-API	O
{	O	O
UpperBound	B-API	O
=	O	O
)	O	O
,	O	O
MessageCreator	B-API	B-API
=	O	B-API
(	O	I-API
delta	O	I-API
)	O	I-API
=	O	O
{	O	O
return	O	O
``	O	O
one	O	O
year	O	O
ago	O	O
''	O	O
;	O	O
}	O	O
}	O	O
,	O	O
new	O	O
RelativeTimeRange	B-API	O
{	O	O
UpperBound	B-API	O
=	O	O
TimeSpan.MaxValue	B-API	B-API
,	O	O
MessageCreator	B-API	B-API
=	O	B-API
(	O	I-API
delta	O	I-API
)	O	I-API
=	O	O
{	O	O
return	O	O
+	O	O
``	O	O
years	O	O
ago	O	O
''	O	O
;	O	O
}	O	O
}	O	O
}	O	O
;	O	O
;	O	O
}	O	O
public	O	O
static	B-API	B-API
string	I-API	O
{	O	O
RelativeTimeRange	B-API	O
postRelativeDateRange	O	O
=	O	O
timeRanges	B-API	O
[	I-API	O
0	I-API	O
]	I-API	O
;	O	O
foreach	B-API	O
(	I-API	O
var	I-API	O
timeRange	I-API	O
in	I-API	O
timeRanges	I-API	O
)	I-API	O
{	O	O
if	O	O
=	O	O
0	O	O
)	O	O
{	O	O
postRelativeDateRange	O	O
=	O	O
timeRange	O	O
;	O	O
}	O	O
}	O	O
return	O	O
;	O	O
(	O	O
TimeSpan	O	O
timeDelta	B-API	O
)	I-API	O
(	I-API	O
object	O	O
obj	O	O
)	O	O
!	O	O
(	O	O
obj	O	O
is	O	O
RelativeTimeRange	B-API	O
)	O	O
RelativeTimeRange	B-API	O
)	O	O
.UpperBound.CompareTo	B-API	O
(	I-API	O
UpperBound	I-API	O
)	I-API	O
PrintRelativeTime	B-API	B-API
(	I-API	I-API
)	I-API	I-API
TimeSpan.FromSeconds	B-API	B-API
(	I-API	I-API
1	I-API	I-API
)	I-API	I-API
TimeSpan.FromSeconds	B-API	B-API
(	I-API	I-API
60	I-API	I-API
)	I-API	I-API
TimeSpan.FromMinutes	B-API	B-API
(	I-API	I-API
2	I-API	I-API
)	I-API	I-API
TimeSpan.FromMinutes	B-API	B-API
(	I-API	I-API
60	I-API	I-API
)	I-API	I-API
TimeSpan.FromHours	B-API	B-API
(	I-API	I-API
2	I-API	I-API
)	I-API	I-API
TimeSpan.FromHours	B-API	B-API
(	I-API	I-API
24	I-API	I-API
)	I-API	I-API
TimeSpan.FromDays	B-API	B-API
(	I-API	I-API
2	I-API	I-API
)	I-API	I-API
DateTime.Now.Subtract	B-API	B-API
(	O	I-API
DateTime.Now.AddMonths	I-API	I-API
(	I-API	I-API
-1	I-API	I-API
)	I-API	I-API
DateTime.Now.Subtract	B-API	B-API
(	O	I-API
DateTime.Now.AddMonths	I-API	B-API
(	I-API	I-API
-2	I-API	I-API
)	I-API	I-API
DateTime.Now.Subtract	B-API	B-API
(	O	I-API
DateTime.Now.AddYears	I-API	B-API
(	I-API	I-API
-1	I-API	I-API
)	I-API	I-API
int	O	O
)	O	O
Math.Floor	B-API	B-API
(	I-API	I-API
delta.TotalDays	I-API	I-API
/	I-API	I-API
30	I-API	I-API
)	I-API	I-API
DateTime.Now.Subtract	B-API	B-API
(	O	I-API
DateTime.Now.AddYears	I-API	B-API
(	I-API	I-API
-2	I-API	I-API
)	I-API	I-API
int	O	O
)	O	O
Math.Floor	B-API	B-API
(	I-API	I-API
delta.TotalDays	I-API	I-API
/	I-API	I-API
365.24D	I-API	I-API
)	I-API	I-API
timeRanges.Sort	B-API	B-API
(	I-API	I-API
)	I-API	I-API
(	O	O
TimeSpan	O	O
ago	O	O
)	O	O
(	O	O
ago.CompareTo	B-API	B-API
(	I-API	I-API
timeRange.UpperBound	I-API	I-API
)	I-API	I-API
postRelativeDateRange.MessageCreator	B-API	B-API
(	I-API	I-API
ago	I-API	I-API
)	I-API	I-API
The	O	O
size	O	O
of	O	O
the	O	O
file	O	O
is	O	O
sent	O	O
as	O	O
the	O	O
Content-Length	O	O
header	O	O
.	O	O
Here	O	O
is	O	O
how	O	O
to	O	O
get	O	O
it	O	O
with	O	O
urllib	B-API	O
:	O	O
site	O	O
=	O	O
meta	O	O
=	O	O
print	B-API	O
urllib.urlopen	B-API	B-API
(	I-API	I-API
``	I-API	I-API
http	I-API	I-API
:	I-API	I-API
//python.org	I-API	I-API
''	I-API	I-API
)	I-API	I-API
site.info	B-API	B-API
(	I-API	I-API
)	I-API	I-API
meta.getheaders	B-API	B-API
(	I-API	I-API
``	I-API	I-API
Content-Length	I-API	I-API
''	I-API	I-API
)	I-API	I-API
Using	O	O
the	O	O
returned-urllib-object	B-API	O
method	O	O
info	B-API	B-API
(	I-API	I-API
)	I-API	I-API
,	O	O
you	O	O
can	O	O
get	O	O
various	O	O
information	O	O
on	O	O
the	O	O
retrived	O	O
document	O	O
.	O	O
Example	O	O
of	O	O
grabbing	O	O
the	O	O
current	O	O
Google	O	O
logo	O	O
:	O	O
import	B-API	O
urllib	I-API	O
d	O	O
=	O	O
print	B-API	O
Content-Type	O	O
:	O	O
image/gifLast-Modified	O	O
:	O	O
Thu	O	O
,	O	O
07	O	O
Aug	O	O
2008	O	O
16:20:19	O	O
GMT	O	O
Expires	O	O
:	O	O
Sun	O	O
,	O	O
17	O	O
Jan	O	O
2038	O	O
19:14:07	O	O
GMT	O	O
Cache-Control	O	O
:	O	O
public	O	O
Date	B-API	O
:	O	O
Fri	O	O
,	O	O
08	O	O
Aug	O	O
2008	O	O
13:40:41	O	O
GMT	O	O
Server	O	O
:	O	O
gws	O	O
Content-Length	O	O
:	O	O
20172	O	O
Connection	O	O
:	O	O
urllib.urlopen	B-API	B-API
(	I-API	I-API
``	I-API	I-API
http	I-API	I-API
:	I-API	I-API
//www.google.co.uk/logos/olympics08_opening.gif	I-API	I-API
''	I-API	I-API
)	I-API	I-API
d.info	B-API	B-API
(	I-API	I-API
)	I-API	I-API
It	O	O
's	O	O
a	O	O
dict	O	O
,	O	O
so	O	O
to	O	O
get	O	O
the	O	O
size	O	O
of	O	O
the	O	O
file	O	O
,	O	O
you	O	O
do	O	O
urllibobject.info	B-API	B-API
(	I-API	I-API
)	I-API	I-API
print	B-API	O
f.info	B-API	B-API
(	I-API	I-API
)	I-API	I-API
And	O	O
to	O	O
get	O	O
the	O	O
size	O	O
of	O	O
the	O	O
local	O	O
file	O	O
(	O	O
for	O	O
comparison	O	O
)	O	O
,	O	O
you	O	O
can	O	O
use	O	O
the	O	O
os.stat	B-API	B-API
(	I-API	I-API
)	I-API	I-API
command	O	O
:	O	O
os.stat	B-API	B-API
(	I-API	I-API
``	I-API	I-API
/the/local/file.zip	I-API	I-API
''	I-API	I-API
)	I-API	I-API
Also	O	O
if	O	O
the	O	O
server	O	O
you	O	O
are	O	O
connecting	O	O
to	O	O
supports	O	O
it	O	O
,	O	O
look	O	O
at	O	O
Etags	O	O
and	O	O
the	O	O
If-Modified-Since	O	O
and	O	O
If-None-Match	O	O
headers	O	O
.	O	O
Using	O	O
these	O	O
will	O	O
take	O	O
advantage	O	O
of	O	O
the	O	O
webserver	O	O
's	O	O
caching	O	O
rules	O	O
and	O	O
will	O	O
return	O	O
a	O	O
304	O	O
Not	O	O
Modified	O	O
status	O	O
code	O	O
if	O	O
the	O	O
content	O	O
has	O	O
n't	O	O
changed	O	O
.	O	O
I	O	O
have	O	O
reproduced	O	O
what	O	O
you	O	O
are	O	O
seeing	O	O
:	O	O
import	B-API	O
urllib	B-API	O
,	O	O
oslink	O	O
=	O	O
``	O	O
http	O	O
:	O	O
//python.org	O	O
''	O	O
print	I-API	O
``	O	O
opening	O	O
url	O	O
:	O	O
''	O	O
,	O	O
linksite	O	O
=	O	O
meta	O	O
=	O	O
print	B-API	O
``	O	O
Content-Length	O	O
:	O	O
''	O	O
,	O	O
[	O	O
0	O	O
]	O	O
f	O	O
=	O	O
print	B-API	O
``	O	O
File	B-API	O
on	O	O
f	O	O
=	O	O
f	O	O
=	O	O
print	B-API	O
``	O	O
File	B-API	O
on	O	O
disk	O	O
after	O	O
print	O	O
.st_size	O	O
returns	O	O
:	O	O
''	O	O
,	O	O
urllib.urlopen	B-API	B-API
(	I-API	I-API
link	I-API	I-API
)	I-API	I-API
site.info	B-API	B-API
(	I-API	I-API
)	I-API	I-API
meta.getheaders	B-API	B-API
(	I-API	I-API
``	I-API	I-API
Content-Length	I-API	I-API
''	I-API	I-API
)	I-API	I-API
(	O	O
``	O	O
out.txt	O	O
''	O	O
,	O	O
``	O	O
r	O	O
''	O	O
)	O	O
disk	O	O
:	O	O
''	O	O
,	O	O
len	O	O
(	O	O
f.read	B-API	B-API
(	I-API	I-API
)	I-API	I-API
)	O	I-API
f.close	B-API	B-API
(	I-API	I-API
)	I-API	I-API
(	O	O
``	O	O
out.txt	O	O
''	O	O
,	O	O
``	O	O
w	O	O
''	O	O
)	O	O
f.write	B-API	B-API
(	O	I-API
site.read	B-API	I-API
(	I-API	I-API
)	I-API	I-API
)	O	I-API
site.close	B-API	B-API
(	I-API	I-API
)	I-API	I-API
f.close	B-API	B-API
(	I-API	I-API
)	I-API	I-API
(	O	O
``	O	O
out.txt	O	O
''	O	O
,	O	O
``	O	O
r	O	O
''	O	O
)	O	O
download	O	O
:	O	O
''	O	O
,	O	O
len	O	O
(	O	O
f.read	B-API	B-API
(	I-API	I-API
)	I-API	I-API
)	O	I-API
f.close	B-API	B-API
(	I-API	I-API
)	I-API	I-API
``	O	O
os.stat	B-API	B-API
(	I-API	I-API
)	I-API	I-API
os.stat	B-API	B-API
(	I-API	I-API
``	I-API	I-API
out.txt	I-API	I-API
''	I-API	I-API
)	I-API	I-API
Outputs	O	O
this	O	O
:	O	O
opening	O	O
url	O	O
:	O	O
http	O	O
:	O	O
//python.orgContent-Length	O	O
:	O	O
16535File	O	O
on	O	O
disk	O	O
:	O	O
16535File	O	O
on	O	O
disk	O	O
after	O	O
download	O	O
:	O	O
.st_size	O	O
returns	O	O
:	O	O
16535os.stat	B-API	O
(	I-API	O
)	I-API	O
What	O	O
am	O	O
I	O	O
doing	O	O
wrong	O	O
here	O	O
?	O	O
Is	O	O
os.stat	B-API	B-API
(	I-API	I-API
)	I-API	I-API
.st_size	I-API	O
not	O	O
returning	O	O
the	O	O
correct	O	O
size	O	O
?	O	O
Edit	O	O
:	O	O
OK	O	O
,	O	O
I	O	O
figured	O	O
out	O	O
what	O	O
the	O	O
problem	O	O
was	O	O
:	O	O
import	B-API	O
urllib	B-API	O
,	O	O
oslink	O	O
=	O	O
``	O	O
http	O	O
:	O	O
//python.org	O	O
''	O	O
print	B-API	O
``	O	O
opening	O	O
url	O	O
:	O	O
''	O	O
,	O	O
linksite	O	O
=	O	O
meta	O	O
=	O	O
print	B-API	O
``	O	O
Content-Length	O	O
:	O	O
''	O	O
,	O	O
[	O	O
0	O	O
]	O	O
f	O	O
=	O	O
print	B-API	O
``	O	O
File	B-API	O
on	O	O
f	O	O
=	O	O
f	O	O
=	O	O
print	O	O
``	O	O
File	B-API	O
on	O	O
disk	O	O
after	O	O
print	B-API	O
.st_size	O	O
returns	O	O
:	O	O
''	O	O
,	O	O
urllib.urlopen	B-API	B-API
(	I-API	I-API
link	I-API	I-API
)	I-API	I-API
site.info	B-API	B-API
(	I-API	I-API
)	I-API	I-API
meta.getheaders	B-API	B-API
(	O	I-API
``	O	I-API
Content-Length	O	I-API
''	O	I-API
)	O	I-API
(	O	O
``	O	O
out.txt	O	O
''	O	O
,	O	O
``	O	O
rb	O	O
''	O	O
)	O	O
disk	B-API	O
:	O	O
''	O	O
,	O	O
len	O	O
(	O	O
f.read	B-API	B-API
(	I-API	I-API
)	I-API	I-API
)	O	I-API
f.close	B-API	B-API
(	I-API	I-API
)	I-API	I-API
(	O	O
``	O	O
out.txt	O	O
''	O	O
,	O	O
``	O	O
wb	O	O
''	O	O
)	O	O
f.write	B-API	B-API
(	O	I-API
site.read	B-API	I-API
(	I-API	I-API
)	I-API	I-API
)	O	I-API
site.close	B-API	B-API
(	I-API	I-API
)	I-API	I-API
f.close	B-API	B-API
(	I-API	I-API
)	I-API	I-API
(	O	O
``	O	O
out.txt	O	O
''	O	O
,	O	O
``	O	O
rb	O	O
''	O	O
)	O	O
download	O	O
:	O	O
''	O	O
,	O	O
len	O	O
(	O	O
f.read	B-API	B-API
(	I-API	I-API
)	I-API	I-API
)	O	I-API
f.close	B-API	B-API
(	I-API	I-API
)	I-API	I-API
``	O	O
os.stat	B-API	B-API
(	I-API	I-API
)	I-API	I-API
os.stat	B-API	O
(	I-API	O
``	I-API	O
out.txt	I-API	O
''	I-API	O
)	I-API	O
this	O	O
outputs	O	O
:	O	O
$	O	O
python	O	O
test.pyopening	O	O
url	O	O
:	O	O
http	O	O
:	O	O
//python.orgContent-Length	O	O
:	O	O
16535File	O	O
on	O	O
disk	O	O
:	O	O
16535File	O	O
on	O	O
disk	O	O
after	O	O
download	O	O
:	O	O
.st_size	O	O
returns	O	O
:	O	O
16535os.stat	B-API	B-API
(	I-API	I-API
)	I-API	I-API
Make	O	O
sure	O	O
you	O	O
are	O	O
opening	O	O
both	O	O
files	O	O
for	O	O
binary	O	O
read/write	O	O
.	O	O
//	O	O
open	O	O
for	O	O
binary	O	O
//	O	O
open	O	O
for	O	O
binary	O	O
(	O	O
filename	O	O
,	O	O
``	O	O
wb	O	O
''	O	O
)	O	O
(	O	O
filename	O	O
,	O	O
``	O	O
rb	O	O
''	O	O
)	O	O
Would	O	O
use	O	O
double.TryParse	B-API	B-API
,	O	O
it	O	O
has	O	O
performance	O	O
benefits	O	O
.	O	O
I	O	O
'd	O	O
personally	O	O
use	O	O
int.tryparse	B-API	O
,	O	O
then	O	O
double.tryparse	B-API	O
.	O	O
Performance	O	O
on	O	O
those	O	O
methods	O	O
is	O	O
quite	O	O
fast	O	O
.	O	O
They	O	O
both	O	O
return	O	O
a	O	O
Boolean	B-API	O
.	O	O
If	O	O
both	O	O
fail	O	O
then	O	O
you	O	O
have	O	O
a	O	O
string	O	O
,	O	O
per	O	O
how	O	O
you	O	O
defined	O	O
your	O	O
data	O	O
.	O	O
I	O	O
would	O	O
say	O	O
,	O	O
do	O	O
n't	O	O
worry	O	O
so	O	O
much	O	O
about	O	O
such	O	O
micro	O	O
performance	O	O
.	O	O
It	O	O
is	O	O
much	O	O
better	O	O
to	O	O
just	O	O
get	O	O
something	O	O
to	O	O
work	O	O
,	O	O
and	O	O
then	O	O
make	O	O
it	O	O
as	O	O
clear	O	O
and	O	O
concise	O	O
and	O	O
easy	O	O
to	O	O
read	O	O
as	O	O
possible	O	O
.	O	O
The	O	O
worst	O	O
thing	O	O
you	O	O
can	O	O
do	O	O
is	O	O
sacrifice	O	O
readability	O	O
for	O	O
an	O	O
insignificant	O	O
amount	O	O
of	O	O
performance	O	O
.	O	O
In	O	O
the	O	O
end	O	O
,	O	O
the	O	O
best	O	O
way	O	O
to	O	O
deal	O	O
with	O	O
performance	O	O
issues	O	O
is	O	O
to	O	O
save	O	O
them	O	O
for	O	O
when	O	O
you	O	O
have	O	O
data	O	O
that	O	O
indicates	O	O
there	O	O
is	O	O
an	O	O
actual	O	O
performance	O	O
problem	O	O
...	O	O
otherwise	O	O
you	O	O
will	O	O
spend	O	O
a	O	O
lot	O	O
of	O	O
time	O	O
micro-optimizing	O	O
and	O	O
actually	O	O
cause	O	O
higher	O	O
maintenance	O	O
costs	O	O
for	O	O
later	O	O
on	O	O
.	O	O
If	O	O
you	O	O
find	O	O
this	O	O
parsing	O	O
situation	O	O
is	O	O
really	O	O
the	O	O
bottleneck	O	O
in	O	O
your	O	O
application	O	O
,	O	O
THEN	O	O
is	O	O
the	O	O
time	O	O
to	O	O
try	O	O
and	O	O
figure	O	O
out	O	O
what	O	O
the	O	O
fastest	O	O
way	O	O
to	O	O
solve	O	O
the	O	O
problem	O	O
is	O	O
.	O	O
I	O	O
think	O	O
Jeff	O	O
(	O	O
and	O	O
many	O	O
others	O	O
)	O	O
have	O	O
blogged	O	O
about	O	O
this	O	O
sort	O	O
of	O	O
thing	O	O
a	O	O
lot	O	O
.	O	O
If	O	O
the	O	O
data	O	O
modification	O	O
is	O	O
not	O	O
too	O	O
time	O	O
consuming	O	O
(	O	O
meaning	O	O
,	O	O
if	O	O
the	O	O
main	O	O
purpose	O	O
of	O	O
the	O	O
background	O	O
thread	O	O
is	O	O
not	O	O
the	O	O
actual	O	O
data	O	O
modification	O	O
)	O	O
,	O	O
try	O	O
moving	O	O
the	O	O
section	O	O
that	O	O
modifies	O	O
the	O	O
data	O	O
to	O	O
a	O	O
delegate	O	O
and	O	O
Invoke'ing	O	O
that	O	O
delegate	O	O
.	O	O
If	O	O
the	O	O
actual	O	O
heavy	O	O
work	O	O
is	O	O
on	O	O
the	O	O
data	O	O
,	O	O
you	O	O
'll	O	O
probably	O	O
have	O	O
to	O	O
create	O	O
a	O	O
deep	O	O
copy	O	O
of	O	O
this	O	O
data	O	O
to	O	O
pass	O	O
to	O	O
the	O	O
background	O	O
thread	O	O
,	O	O
which	O	O
will	O	O
send	O	O
the	O	O
processed	O	O
data	O	O
back	O	O
to	O	O
the	O	O
UI	O	O
thread	O	O
via	O	O
Invoke	O	O
again	O	O
.	O	O
You	O	O
should	O	O
be	O	O
able	O	O
to	O	O
do	O	O
something	O	O
like	O	O
:	O	O
if	B-API	O
(	I-API	O
control.InvokeRequired	I-API	B-API
)	I-API	O
{	O	O
;	O	O
}	O	O
else	O	O
{	O	O
control.Invoke	B-API	B-API
(	I-API	I-API
delegateWithMyCode	I-API	I-API
)	I-API	I-API
delegateWithMyCode	B-API	B-API
(	I-API	I-API
)	I-API	I-API
InvokeRequired	O	B-API
is	O	O
a	O	O
property	O	O
on	O	O
Controls	O	O
to	O	O
see	O	O
if	O	O
you	O	O
are	O	O
on	O	O
the	O	O
correct	O	O
thread	O	O
,	O	O
then	O	O
Invoke	O	O
will	O	O
invoke	O	O
the	O	O
delegate	O	O
on	O	O
the	O	O
correct	O	O
thread	O	O
.	O	O
UPDATE	O	O
:	O	O
Actually	O	O
,	O	O
at	O	O
my	O	O
last	O	O
job	O	O
we	O	O
did	O	O
something	O	O
like	O	O
this	O	O
:	O	O
private	O	O
void	O	O
{	O	O
if	B-API	O
(	I-API	O
this.InvokeRequired	I-API	B-API
)	I-API	O
{	O	O
,	O	O
someParam	O	O
)	O	O
;	O	O
}	O	O
//	O	O
Regular	O	O
handling	O	O
(	O	O
Object	O	O
someParam	O	O
)	O	O
(	O	O
new	O	O
SomeEventHandlerDelegate	O	O
(	O	O
SomeEventHandler	O	O
)	O	O
which	O	O
removes	O	O
the	O	O
need	O	O
for	O	O
the	O	O
else	O	O
block	O	O
and	O	O
kind	O	O
of	O	O
tightens	O	O
up	O	O
the	O	O
code	O	O
.	O	O
As	O	O
I	O	O
do	O	O
n't	O	O
have	O	O
a	O	O
test	O	O
case	O	O
to	O	O
go	O	O
from	O	O
I	O	O
ca	O	O
n't	O	O
guarantee	O	O
this	O	O
solution	O	O
,	O	O
but	O	O
it	O	O
seems	O	O
to	O	O
me	O	O
that	O	O
a	O	O
scenario	O	O
similar	O	O
to	O	O
the	O	O
one	O	O
used	O	O
to	O	O
update	O	O
progress	O	O
bars	O	O
in	O	O
different	O	O
threads	O	O
(	O	O
use	O	O
a	O	O
delegate	O	O
)	O	O
would	O	O
be	O	O
suitable	O	O
here	O	O
.	O	O
public	O	O
delegate	B-API	O
void	I-API	O
;	O	O
public	O	O
DataBindDelegate	B-API	O
BindData	O	O
=	O	O
new	O	O
;	O	O
public	O	O
void	O	O
{	O	O
DataBindDelegate	B-API	O
(	I-API	O
)	I-API	O
DataBindDelegate	B-API	O
(	I-API	O
DoDataBind	I-API	O
)	I-API	O
DoDataBind	B-API	B-API
(	I-API	I-API
)	I-API	I-API
DataBind	B-API	B-API
(	I-API	I-API
)	I-API	I-API
If	O	O
the	O	O
data	O	O
binding	O	O
needs	O	O
to	O	O
be	O	O
done	O	O
by	O	O
a	O	O
particular	O	O
thread	O	O
,	O	O
then	O	O
let	O	O
that	O	O
thread	O	O
do	O	O
the	O	O
work	O	O
!	O	O
Re	O	O
:	O	O
2004	O	O
No	O	O
,	O	O
you	O	O
will	O	O
only	O	O
move	O	O
the	O	O
code	O	O
that	O	O
changes	O	O
the	O	O
data	O	O
into	O	O
the	O	O
delegate	O	O
function	O	O
(	O	O
because	O	O
the	O	O
data	O	O
change	O	O
is	O	O
what	O	O
triggers	O	O
the	O	O
control	O	O
update	O	O
)	O	O
.	O	O
Other	O	O
than	O	O
that	O	O
,	O	O
you	O	O
should	O	O
not	O	O
have	O	O
to	O	O
write	O	O
anything	O	O
extra	O	O
.	O	O
If	O	O
the	O	O
thread	O	O
call	O	O
is	O	O
``	O	O
illegal	O	O
''	O	O
(	O	O
i.e	O	O
.	O	O
the	O	O
DataBind	O	O
call	O	O
affects	O	O
controls	O	O
that	O	O
were	O	O
not	O	O
created	O	O
in	O	O
the	O	O
thread	O	O
it	O	O
is	O	O
being	O	O
called	O	O
from	O	O
)	O	O
then	O	O
you	O	O
need	O	O
to	O	O
create	O	O
a	O	O
delegate	O	O
so	O	O
that	O	O
even	O	O
if	O	O
the	O	O
decision	O	O
/	O	O
preparation	O	O
for	O	O
the	O	O
DataBind	O	O
is	O	O
not	O	O
done	O	O
in	O	O
the	O	O
control-creating	O	O
thread	O	O
,	O	O
any	O	O
resultant	O	O
modification	O	O
of	O	O
them	O	O
(	O	O
i.e	O	O
.	O	O
DataBind	O	B-API
(	O	I-API
)	O	I-API
)	O	O
will	O	O
be	O	O
.	O	O
You	O	O
would	O	O
call	O	O
my	O	O
code	O	O
from	O	O
the	O	O
worker	O	O
thread	O	O
like	O	O
so	O	O
:	O	O
this.BindData.Invoke	B-API	B-API
(	I-API	I-API
)	I-API	I-API
This	O	O
would	O	O
then	O	O
cause	O	O
the	O	O
original	O	O
thread	O	O
to	O	O
do	O	O
the	O	O
binding	O	O
,	O	O
which	O	O
(	O	O
presuming	O	O
it	O	O
is	O	O
the	O	O
thread	O	O
that	O	O
created	O	O
the	O	O
controls	O	O
)	O	O
should	O	O
work	O	O
.	O	O
In	O	O
WPF	B-API	B-API
and	O	O
Silverlight	B-API	O
the	O	O
binding	O	O
infrastructure	O	O
takes	O	O
care	O	O
of	O	O
the	O	O
switching	O	O
to	O	O
the	O	O
UI	O	O
thread	O	O
.	O	O
NUnit	B-API	O
is	O	O
always	O	O
a	O	O
favorite	O	O
of	O	O
mine	O	O
.	O	O
However	O	O
if	O	O
you	O	O
are	O	O
using	O	O
TFS	B-API	O
as	O	O
your	O	O
source	O	O
control	O	O
I	O	O
suggest	O	O
you	O	O
stick	O	O
with	O	O
the	O	O
Microsoft	B-API	O
Stack	I-API	O
.	O	O
For	O	O
a	O	O
Mock	B-API	O
Object	I-API	O
library	O	O
,	O	O
I	O	O
've	O	O
found	O	O
the	O	O
BSD-licensed	B-API	O
Rhino.Mocks	I-API	B-API
to	O	O
be	O	O
rather	O	O
pleasing	O	O
.	O	O
NUnit	B-API	O
is	O	O
available	O	O
at	O	O
http	O	O
:	O	O
//www.nunit.org	O	O
I	O	O
would	O	O
suggest	O	O
this	O	O
even	O	O
when	O	O
working	O	O
on	O	O
the	O	O
MS	B-API	O
stack	I-API	O
-	O	O
the	O	O
support	O	O
for	O	O
non-MS	O	O
frameworks	O	O
is	O	O
happening	O	O
in	O	O
the	O	O
MVC	O	O
previews	O	O
which	O	O
shows	O	O
a	O	O
definite	O	O
movement	O	O
in	O	O
the	O	O
right	O	O
direction	O	O
to	O	O
allow	O	O
us	O	O
all	O	O
to	O	O
customise	O	O
our	O	O
stacks	O	O
to	O	O
fit	O	O
.	O	O
I	O	O
've	O	O
had	O	O
great	O	O
success	O	O
using	O	O
NUnit	B-API	O
as	O	O
well	O	O
.	O	O
I	O	O
've	O	O
also	O	O
used	O	O
NMock	B-API	O
when	O	O
the	O	O
need	O	O
arose	O	O
for	O	O
mock	O	O
objects	O	O
.	O	O
As	O	O
an	O	O
added	O	O
bonus	O	O
,	O	O
the	O	O
factory	O	O
for	O	O
creating	O	O
your	O	O
mock	O	O
objects	O	O
is	O	O
called	O	O
the	O	O
Mockery	O	O
.	O	O
To	O	O
facilitate	O	O
the	O	O
running	O	O
of	O	O
unit	O	O
tests	O	O
,	O	O
I	O	O
've	O	O
used	O	O
TestDriven.NET	B-API	B-API
to	O	O
run	O	O
unit	O	O
tests	O	O
as	O	O
I	O	O
coded	O	O
.	O	O
Also	O	O
,	O	O
I	O	O
've	O	O
used	O	O
Cruise	B-API	O
Control	I-API	O
.NET	I-API	O
to	O	O
watch	O	O
SVN	O	O
and	O	O
check	O	O
that	O	O
every	O	O
new	O	O
commit	O	O
builds	O	O
and	O	O
passes	O	O
all	O	O
unit	O	O
tests	O	O
.	O	O
We	O	O
use	O	O
MbUnit	B-API	O
and	O	O
Rihno	B-API	O
Mocks	I-API	O
and	O	O
they	O	O
prove	O	O
to	O	O
work	O	O
very	O	O
well	O	O
together	O	O
.	O	O
When	O	O
doing	O	O
TDD	O	O
you	O	O
will	O	O
almost	O	O
certainly	O	O
need	O	O
to	O	O
do	O	O
some	O	O
form	O	O
of	O	O
dependency	O	O
injection	O	O
,	O	O
while	O	O
this	O	O
can	O	O
be	O	O
done	O	O
manually	O	O
,	O	O
its	O	O
worth	O	O
looking	O	O
at	O	O
an	O	O
IoC	O	O
container	O	O
such	O	O
as	O	O
Castle	B-API	O
Windsor	I-API	O
.	O	O
It	O	O
well	O	O
worth	O	O
looking	O	O
at	O	O
John	O	O
Paul	O	O
Bodhood	O	O
's	O	O
screen	O	O
casts	O	O
to	O	O
get	O	O
you	O	O
started	O	O
.	O	O
JPB	O	O
's	O	O
Blog	O	O
I	O	O
'm	O	O
not	O	O
a	O	O
javascript	O	O
expert	O	O
but	O	O
it	O	O
looks	O	O
like	O	O
you	O	O
would	O	O
have	O	O
to	O	O
loop	O	O
through	O	O
the	O	O
elements	O	O
and	O	O
count	O	O
them	O	O
since	O	O
Object	O	O
does	O	O
n't	O	O
have	O	O
a	O	O
length	O	O
method	O	O
:	O	O
var	O	O
element_count	O	O
=	O	O
0	O	O
;	O	O
for	O	O
(	O	O
e	O	O
in	O	O
myArray	O	O
)	O	O
{	O	O
if	O	O
(	O	O
myArray.hasOwnProperty	O	B-API
(	O	I-API
e	O	I-API
)	O	I-API
)	O	O
element_count++	O	O
;	O	O
}	O	O
@	O	O
palmsey	O	O
:	O	O
In	O	O
fairness	O	O
to	O	O
the	O	O
OP	O	O
,	O	O
the	O	O
javascript	O	O
docs	O	O
actually	O	O
explicitly	O	O
refer	O	O
to	O	O
using	O	O
variables	O	O
of	O	O
type	O	O
Object	O	O
in	O	O
this	O	O
manner	O	O
as	O	O
``	O	O
associative	O	O
arrays	O	O
''	O	O
.	O	O
Here	O	O
's	O	O
how	O	O
and	O	O
do	O	O
n't	O	O
forget	O	O
to	O	O
check	O	O
that	O	O
the	O	O
property	O	O
is	O	O
not	O	O
on	O	O
the	O	O
prototype	O	O
chain	O	O
:	O	O
var	O	O
element_count	O	O
=	O	O
0	O	O
;	O	O
for	O	O
(	O	O
var	O	O
e	O	O
in	O	O
myArray	O	O
)	O	O
if	O	O
(	O	O
myArray.hasOwnProperty	O	B-API
(	O	I-API
e	O	I-API
)	O	I-API
)	O	O
element_count++	O	O
;	O	O
@	O	O
palmsey	O	O
:	O	O
In	O	O
fairness	O	O
to	O	O
the	O	O
OP	O	O
,	O	O
the	O	O
javascript	O	O
docs	O	O
actually	O	O
explicitly	O	O
refer	O	O
to	O	O
using	O	O
variables	O	O
of	O	O
type	O	O
Object	O	O
in	O	O
this	O	O
manner	O	O
as	O	O
``	O	O
associative	O	O
arrays	O	O
''	O	O
.	O	O
And	O	O
in	O	O
fairness	O	O
to	O	O
@	O	O
palmsey	O	O
he	O	O
was	O	O
quite	O	O
correct	O	O
,	O	O
they	O	O
are	O	O
n't	O	O
associative	O	O
arrays	O	O
,	O	O
they	O	O
're	O	O
definitely	O	O
objects	O	O
:	O	O
)	O	O
-	O	O
doing	O	O
the	O	O
job	O	O
of	O	O
an	O	O
associative	O	O
array	O	O
.	O	O
But	O	O
as	O	O
regards	O	O
the	O	O
wider	O	O
point	O	O
you	O	O
definitely	O	O
seem	O	O
to	O	O
have	O	O
the	O	O
right	O	O
of	O	O
it	O	O
according	O	O
to	O	O
this	O	O
rather	O	O
fine	O	O
article	O	O
I	O	O
found	O	O
:	O	O
JavaScript	O	O
Associative	O	O
Arrays	O	O
Considered	O	O
Harmful	O	O
But	O	O
according	O	O
to	O	O
all	O	O
this	O	O
,	O	O
is	O	O
n't	O	O
the	O	O
accepted	O	O
answer	O	O
itself	O	O
bad	O	O
practice	O	O
?	O	O
Specify	O	O
a	O	O
prototype	O	O
size	B-API	O
(	I-API	O
)	I-API	O
function	O	O
for	O	O
Object	O	O
If	O	O
anything	O	O
else	O	O
has	O	O
been	O	O
added	O	O
to	O	O
Object	O	O
.prototype	O	O
,	O	O
then	O	O
the	O	O
suggested	O	O
code	O	O
will	O	O
fail	O	O
:	O	O
script	O	O
type=	O	O
''	O	O
text/javascript	O	O
''	O	O
Object.prototype.size	B-API	O
=	O	O
function	O	B-API
(	O	I-API
)	O	I-API
{	O	O
var	O	O
len	O	O
=	O	O
this.length	B-API	O
?	O	O
--	O	O
this.length	B-API	O
:	O	O
-1	O	O
;	O	O
for	O	O
(	O	O
var	O	O
k	O	O
in	O	O
this	O	O
)	O	O
len++	O	O
;	O	O
return	O	O
len	O	O
;	O	O
}	O	O
Object.prototype.size2	O	O
=	O	O
function	O	O
(	O	O
)	O	O
{	O	O
var	O	O
len	O	O
=	O	O
this.length	B-API	O
?	O	O
--	O	O
this.length	B-API	O
:	O	O
-1	O	O
;	O	O
for	O	O
(	O	O
var	O	O
k	O	O
in	O	O
this	O	O
)	O	O
len++	O	O
;	O	O
return	O	O
len	O	O
;	O	O
}	O	O
var	O	O
myArray	O	O
=	O	O
new	O	O
Object	B-API	O
(	I-API	O
)	I-API	O
;	O	O
myArray	O	O
[	O	O
``	O	O
firstname	O	O
''	O	O
]	O	O
=	O	O
``	O	O
Gareth	O	O
''	O	O
;	O	O
myArray	O	O
[	O	O
``	O	O
lastname	O	O
''	O	O
]	O	O
=	O	O
``	O	O
Simpson	O	O
''	O	O
;	O	O
myArray	O	O
[	O	O
``	O	O
age	O	O
''	O	O
]	O	O
=	O	O
21	O	O
;	O	O
alert	B-API	O
(	I-API	O
``	O	O
age	O	O
is	O	O
``	O	O
+	O	O
myArray	O	O
[	O	O
``	O	O
age	O	O
''	O	O
]	O	O
)	O	O
;	O	O
alert	B-API	O
(	I-API	O
``	I-API	O
length	I-API	O
is	I-API	O
``	I-API	O
+	I-API	O
myArray.size	I-API	B-API
(	I-API	I-API
)	I-API	I-API
)	I-API	I-API
;	O	O
/script	O	O
I	O	O
do	O	O
n't	O	O
think	O	O
that	O	O
answer	O	O
should	O	O
be	O	O
the	O	O
accepted	O	O
one	O	O
as	O	O
it	O	O
ca	O	O
n't	O	O
be	O	O
trusted	O	O
to	O	O
work	O	O
if	O	O
you	O	O
have	O	O
any	O	O
other	O	O
code	O	O
running	O	O
in	O	O
the	O	O
same	O	O
execution	O	O
context	O	O
.	O	O
To	O	O
do	O	O
it	O	O
in	O	O
a	O	O
robust	O	O
fashion	O	O
surely	O	O
you	O	O
would	O	O
need	O	O
to	O	O
define	O	O
the	O	O
size	B-API	O
method	O	O
within	O	O
myArray	O	O
and	O	O
check	O	O
for	O	O
the	O	O
type	O	O
of	O	O
the	O	O
members	O	O
as	O	O
you	O	O
iterate	O	O
through	O	O
them	O	O
.	O	O
Your	O	O
object	O	O
has	O	O
a	O	O
(	O	O
String	B-API	O
paramName	O	O
)	O	O
method	O	O
that	O	O
can	O	O
be	O	O
used	O	O
to	O	O
get	O	O
parameter	O	O
values	O	O
.	O	O
http	O	O
:	O	O
//java.sun.com/javaee/5/docs/api/javax/servlet/ServletRequest.html	O	O
#	O	O
getParameter	B-API	O
(	I-API	O
java.lang.String	I-API	B-API
)	I-API	O
POST	O	O
variables	O	O
should	O	O
be	O	O
accessible	O	O
via	O	O
the	O	O
request	O	O
object	O	O
:	O	O
HttpRequest.getParameterMap	B-API	B-API
(	I-API	I-API
)	I-API	I-API
.	O	O
The	O	O
exception	O	O
is	O	O
if	O	O
the	O	O
form	O	O
is	O	O
sending	O	O
multipart	O	O
MIME	O	O
data	O	O
(	O	O
the	O	O
FORM	O	O
has	O	O
enctype=	O	O
''	O	O
multipart/form-data	O	O
''	O	O
)	O	O
.	O	O
In	O	O
that	O	O
case	O	O
,	O	O
you	O	O
need	O	O
to	O	O
parse	O	O
the	O	O
byte	O	O
stream	O	O
with	O	O
a	O	O
MIME	O	O
parser	O	O
.	O	O
You	O	O
can	O	O
write	O	O
your	O	O
own	O	O
or	O	O
use	O	O
an	O	O
existing	O	O
one	O	O
like	O	O
the	O	O
Apache	B-API	O
Commons	I-API	O
File	I-API	O
Upload	I-API	O
API	I-API	O
.	O	O
Well	O	O
,	O	O
I	O	O
do	O	O
n't	O	O
really	O	O
have	O	O
an	O	O
expert	O	O
opinion	O	O
on	O	O
this	O	O
.	O	O
I	O	O
usually	O	O
end	O	O
up	O	O
using	O	O
closures	O	O
based	O	O
approach	O	O
just	O	O
because	O	O
it	O	O
keeps	O	O
the	O	O
code	O	O
simpler	O	O
to	O	O
manager	O	O
.	O	O
But	O	O
,	O	O
I	O	O
have	O	O
found	O	O
myself	O	O
using	O	O
prototypes	O	O
for	O	O
methods	O	O
that	O	O
have	O	O
loads	O	O
of	O	O
lines	O	O
of	O	O
code	O	O
.	O	O
You	O	O
also	O	O
have	O	O
the	O	O
choice	O	O
of	O	O
:	O	O
function	O	O
{	O	O
function	O	O
{	O	O
return	O	O
;	O	O
(	O	O
x	O	O
,	O	O
y	O	O
,	O	O
z	O	O
)	O	O
length	B-API	B-API
(	I-API	I-API
)	I-API	I-API
(	O	I-API
x	O	I-API
*	O	I-API
x	O	I-API
+	O	I-API
...	O	I-API
)	O	I-API
Which	O	O
is	O	O
probably	O	O
just	O	O
as	O	O
slow	O	O
as	O	O
example	O	O
two	O	O
,	O	O
but	O	O
it	O	O
looks	O	O
more	O	O
like	O	O
Java/C	O	O
#	O	O
and	O	O
is	O	O
a	O	O
bit	O	O
more	O	O
explicit	O	O
.	O	O
Assigning	O	O
functions	O	O
to	O	O
the	O	O
prototype	O	O
is	O	O
better	O	O
(	O	O
for	O	O
public	O	O
methods	O	O
)	O	O
because	O	O
all	O	O
instances	O	O
of	O	O
the	O	O
class	O	O
will	O	O
share	O	O
the	O	O
same	O	O
copy	O	O
of	O	O
the	O	O
method	O	O
.	O	O
If	O	O
you	O	O
assign	O	O
the	O	O
function	O	O
inside	O	O
the	O	O
constructor	O	O
as	O	O
in	O	O
the	O	O
second	O	O
example	O	O
,	O	O
every	O	O
time	O	O
you	O	O
create	O	O
a	O	O
new	O	O
instance	O	O
,	O	O
the	O	O
constructor	O	O
creates	O	O
a	O	O
new	O	O
copy	O	O
of	O	O
the	O	O
length	O	O
function	O	O
and	O	O
assigns	O	O
it	O	O
to	O	O
just	O	O
that	O	O
one	O	O
instance	O	O
.	O	O
However	O	O
this	O	O
latter	O	O
technique	O	O
is	O	O
useful	O	O
if	O	O
you	O	O
want	O	O
each	O	O
copy	O	O
to	O	O
have	O	O
it	O	O
's	O	O
own	O	O
copy	O	O
,	O	O
the	O	O
main	O	O
use	O	O
of	O	O
that	O	O
being	O	O
to	O	O
do	O	O
private/privileges	O	O
methods	O	O
which	O	O
have	O	O
access	O	O
to	O	O
private	O	O
variables	O	O
declared	O	O
inside	O	O
the	O	O
constructor	O	O
and	O	O
inherited	O	O
via	O	O
the	O	O
closure	O	O
mechanism	O	O
.	O	O
Douglas	O	O
Crockford	O	O
has	O	O
a	O	O
good	O	O
summary	O	O
.	O	O
Fortunately	O	O
I	O	O
get	O	O
to	O	O
use	O	O
,	O	O
which	O	O
provides	O	O
some	O	O
nice	O	O
wrappers	O	O
.	O	O
So	O	O
you	O	O
can	O	O
do	O	O
this	O	O
:	O	O
var	O	O
Person	O	O
=	O	O
Class.create	B-API	O
(	O	O
{	O	O
initialize	O	O
:	O	O
function	O	O
(	O	O
name	O	O
)	O	O
{	O	O
this.name	O	O
=	O	O
name	O	O
;	O	O
}	O	O
,	O	O
say	O	O
:	O	O
function	O	B-API
(	O	I-API
message	O	I-API
)	O	I-API
{	O	O
return	O	O
this.name	O	O
+	O	O
'	O	O
:	O	O
'	O	O
+	O	O
message	O	O
;	O	O
}	O	O
}	O	O
)	O	O
;	O	O
Documentation	O	O
:	O	O
Defining	O	O
classes	O	O
and	O	O
inheritance	O	O
I	O	O
'm	O	O
not	O	O
certain	O	O
,	O	O
but	O	O
I	O	O
believe	O	O
you	O	O
can	O	O
put	O	O
it	O	O
in	O	O
a	O	O
config	O	O
file	O	O
and	O	O
encrypt	O	O
the	O	O
config	O	O
file	O	O
.	O	O
Update	O	O
:	O	O
See	O	O
Jon	O	O
Galloway	O	O
's	O	O
post	O	O
here	O	O
.	O	O
If	O	O
the	O	O
app	O	O
is	O	O
an	O	O
ASP.NET	O	O
app	O	O
then	O	O
just	O	O
encrypt	O	O
the	O	O
connection	O	O
strings	O	O
section	O	O
of	O	O
your	O	O
.	O	O
If	O	O
the	O	O
app	O	O
is	O	O
a	O	O
client	O	O
application	O	O
running	O	O
on	O	O
multiple	O	O
machines	O	O
,	O	O
instead	O	O
of	O	O
storing	O	O
the	O	O
connection	O	O
string	O	O
locally	O	O
,	O	O
consider	O	O
using	O	O
a	O	O
web	O	O
service	O	O
or	O	O
some	O	O
other	O	O
kind	O	O
of	O	O
secure	O	O
mechanism	O	O
to	O	O
store	O	O
it	O	O
centrally	O	O
.	O	O
This	O	O
would	O	O
facilitate	O	O
easier	O	O
updates	O	O
in	O	O
the	O	O
future	O	O
and	O	O
you	O	O
're	O	O
not	O	O
storing	O	O
the	O	O
connection	O	O
string	O	O
locally	O	O
.	O	O
Just	O	O
some	O	O
thoughts	O	O
.	O	O
Updated	O	O
:	O	O
@	O	O
lassevk	O	O
''	O	O
Storing	O	O
the	O	O
connection	O	O
string	O	O
on	O	O
a	O	O
server	O	O
,	O	O
and	O	O
obtaining	O	O
it	O	O
through	O	O
a	O	O
web	O	O
connection	O	O
sounds	O	O
good	O	O
,	O	O
until	O	O
you	O	O
realize	O	O
that	O	O
you	O	O
need	O	O
security	O	O
on	O	O
that	O	O
web	O	O
connection	O	O
as	O	O
well	O	O
,	O	O
otherwise	O	O
an	O	O
attacker	O	O
could	O	O
just	O	O
as	O	O
well	O	O
impersonate	O	O
your	O	O
program	O	O
and	O	O
talk	O	O
to	O	O
the	O	O
web	O	O
connection	O	O
.	O	O
''	O	O
Security	O	O
on	O	O
the	O	O
web	O	O
service	O	O
was	O	O
implicit	O	O
.	O	O
Depending	O	O
on	O	O
the	O	O
type	O	O
of	O	O
deployment	O	O
there	O	O
are	O	O
a	O	O
numerous	O	O
options	O	O
...	O	O
for	O	O
example	O	O
client	O	O
side	O	O
certificates	O	O
.	O	O
I	O	O
hate	O	O
to	O	O
say	O	O
this	O	O
but	O	O
as	O	O
soon	O	O
as	O	O
you	O	O
put	O	O
something	O	O
on	O	O
a	O	O
client	O	O
machine	O	O
,	O	O
security	O	O
for	O	O
that	O	O
data	O	O
goes	O	O
out	O	O
the	O	O
window	O	O
.	O	O
If	O	O
your	O	O
program	O	O
is	O	O
going	O	O
to	O	O
decrypt	O	O
that	O	O
string	O	O
,	O	O
you	O	O
need	O	O
to	O	O
assume	O	O
that	O	O
an	O	O
attacker	O	O
can	O	O
do	O	O
the	O	O
same	O	O
.	O	O
Attaching	O	O
a	O	O
debugger	O	O
to	O	O
your	O	O
program	O	O
would	O	O
be	O	O
one	O	O
way	O	O
.	O	O
Storing	O	O
the	O	O
connection	O	O
string	O	O
on	O	O
a	O	O
server	O	O
,	O	O
and	O	O
obtaining	O	O
it	O	O
through	O	O
a	O	O
web	O	O
connection	O	O
sounds	O	O
good	O	O
,	O	O
until	O	O
you	O	O
realize	O	O
that	O	O
you	O	O
need	O	O
security	O	O
on	O	O
that	O	O
web	O	O
connection	O	O
as	O	O
well	O	O
,	O	O
otherwise	O	O
an	O	O
attacker	O	O
could	O	O
just	O	O
as	O	O
well	O	O
impersonate	O	O
your	O	O
program	O	O
and	O	O
talk	O	O
to	O	O
the	O	O
web	O	O
connection	O	O
.	O	O
Let	O	O
me	O	O
ask	O	O
a	O	O
question	O	O
.	O	O
Who	O	O
are	O	O
you	O	O
hiding	O	O
the	O	O
connection	O	O
string	O	O
from	O	O
?	O	O
The	O	O
user	O	O
or	O	O
an	O	O
attacker	O	O
?	O	O
And	O	O
if	O	O
the	O	O
user	O	O
,	O	O
why	O	O
?	O	O
There	O	O
are	O	O
some	O	O
other	O	O
idea	O	O
's	O	O
also	O	O
.	O	O
You	O	O
can	O	O
always	O	O
use	O	O
impersonation	O	O
.	O	O
Also	O	O
,	O	O
you	O	O
can	O	O
use	O	O
the	O	O
Enterprise	O	O
Library	O	O
's	O	O
(	O	O
Common	O	O
Library	O	O
)	O	O
.	O	O
section	O	O
name=	O	O
''	O	O
enterpriseLibrary.ConfigurationSource	B-API	O
''	O	O
type=	O	O
''	O	O
Microsoft.Practices.EnterpriseLibrary.Common.Configuration.ConfigurationSourceSection	B-API	O
,	O	O
Microsoft.Practices.EnterpriseLibrary.Common	B-API	B-API
,	O	O
Version=3.1.0.0	B-API	O
,	O	O
Culture=neutral	B-API	O
,	O	O
PublicKeyToken=b03f5f7f11d50a3a	B-API	O
''	O	O
/enterpriseLibrary.ConfigurationSource	B-API	O
selectedSource=	O	O
''	O	O
Common	O	O
''	O	O
sources	O	O
add	O	O
name=	O	O
''	O	O
Common	O	O
''	O	O
type=	O	O
''	O	O
Microsoft.Practices.EnterpriseLibrary.Common.Configuration.FileConfigurationSource	B-API	O
,	O	O
Microsoft.Practices.EnterpriseLibrary.Common	B-API	B-API
,	O	O
Version=3.1.0.0	B-API	O
,	O	O
Culture=neutral	O	O
,	O	O
PublicKeyToken=b03f5f7f11d50a3a	B-API	O
''	O	O
filePath=	O	O
''	O	O
Config\Exception.config	B-API	O
''	I-API	O
.NET	O	O
supports	O	O
encryption	O	O
on	O	O
config	O	O
values	O	O
like	O	O
this	O	O
.	O	O
You	O	O
could	O	O
leave	O	O
it	O	O
in	O	O
a	O	O
config	O	O
file	O	O
,	O	O
but	O	O
encrypted	O	O
.	O	O
You	O	O
want	O	O
to	O	O
be	O	O
able	O	O
to	O	O
distribute	O	O
the	O	O
DLL	O	O
with	O	O
all	O	O
of	O	O
the	O	O
setup	O	O
information	O	O
being	O	O
in	O	O
a	O	O
configurable	O	O
place	O	O
,	O	O
but	O	O
the	O	O
fact	O	O
is	O	O
you	O	O
ca	O	O
n't	O	O
have	O	O
one	O	O
of	O	O
the	O	O
handy-dandy	O	O
.NET	O	O
config	O	O
files	O	O
for	O	O
a	O	O
DLL	O	O
unless	O	O
you	O	O
do	O	O
something	O	O
custom	O	O
.	O	O
Maybe	O	O
you	O	O
need	O	O
to	O	O
rethink	O	O
what	O	O
responsibility	O	O
your	O	O
DLL	O	O
should	O	O
have	O	O
.	O	O
Would	O	O
it	O	O
be	O	O
possible	O	O
,	O	O
or	O	O
make	O	O
sense	O	O
to	O	O
require	O	O
that	O	O
the	O	O
connection	O	O
string	O	O
be	O	O
passed	O	O
in	O	O
by	O	O
the	O	O
user	O	O
of	O	O
your	O	O
library	O	O
?	O	O
Does	O	O
it	O	O
really	O	O
make	O	O
sense	O	O
that	O	O
your	O	O
DLL	O	O
reads	O	O
a	O	O
config	O	O
file	O	O
?	O	O
gedit	B-API	O
Syntax	O	O
highlighting	O	O
Fast	O	O
,	O	O
lightweight	O	O
Tabs	O	O
GUI	O	O
emacs	O	O
has	O	O
been	O	O
used	O	O
by	O	O
linux	O	O
programmers	O	O
for	O	O
decades	O	O
.	O	O
It	O	O
features	O	O
syntax	O	O
highlighting	O	O
,	O	O
it	O	O
's	O	O
fast	O	O
,	O	O
and	O	O
there	O	O
are	O	O
a	O	O
million	O	O
tutorials	O	O
out	O	O
there	O	O
you	O	O
can	O	O
find	O	O
.	O	O
any	O	O
of	O	O
the	O	O
popular	O	O
editors	O	O
can	O	O
be	O	O
turned	O	O
into	O	O
an	O	O
ide	O	O
.	O	O
I	O	O
use	O	O
Vi	O	O
on	O	O
the	O	O
console	O	O
and	O	O
have	O	O
used	O	O
various	O	O
gui	O	O
editors	O	O
over	O	O
the	O	O
years	O	O
.	O	O
This	O	O
does	O	O
n't	O	O
just	O	O
go	O	O
for	O	O
linux	O	O
I	O	O
use	O	O
Crimson	O	O
Editor	O	O
on	O	O
windows	O	O
as	O	O
a	O	O
C/python/z80asm	O	O
ide	O	O
.	O	O
I	O	O
bounce	O	O
about	O	O
between	O	O
Mac	O	O
,	O	O
Windows	O	O
and	O	O
Ubuntu	O	O
and	O	O
while	O	O
Emacs	O	O
used	O	O
to	O	O
be	O	O
my	O	O
editor	O	O
of	O	O
choice	O	O
,	O	O
I	O	O
'm	O	O
finding	O	O
that	O	O
in	O	O
my	O	O
old	O	O
age	O	O
I	O	O
prefer	O	O
to	O	O
something	O	O
GUI-based	O	O
(	O	O
using	O	O
command-line	O	O
for	O	O
the	O	O
shell	O	O
is	O	O
still	O	O
fine	O	O
by	O	O
me	O	O
)	O	O
.	O	O
My	O	O
preferred	O	O
editor	O	O
is	O	O
Komodo	O	O
Edit	O	O
,	O	O
which	O	O
the	O	O
advantages	O	O
of	O	O
:	O	O
Being	O	O
free	O	O
(	O	O
as	O	O
in	O	O
beer	O	O
)	O	O
Available	O	O
for	O	O
Mac	O	O
,	O	O
Windows	O	O
and	O	O
Linux	O	O
Syntax	O	O
highlighting	O	O
for	O	O
a	O	O
boatload	O	O
of	O	O
languages	O	O
,	O	O
including	O	O
C++	O	O
and	O	O
PHP	O	O
(	O	O
I	O	O
'm	O	O
using	O	O
it	O	O
for	O	O
Ruby	O	O
,	O	O
Python	O	O
and	O	O
PHP	O	O
myself	O	O
)	O	O
Code	O	O
completion	O	O
,	O	O
even	O	O
for	O	O
classes	O	O
I	O	O
defined	O	O
myself	O	O
Ability	O	O
to	O	O
``	O	O
remote	O	O
save	O	O
''	O	O
via	O	O
FTP	O	O
,	O	O
SFTP	O	O
or	O	O
SCP	O	O
Support	O	O
for	O	O
organizing	O	O
your	O	O
files	O	O
into	O	O
projects	O	O
Tabs	O	O
and	O	O
other	O	O
interface	O	O
niceties	O	O
I	O	O
'm	O	O
not	O	O
sure	O	O
how	O	O
lightweight	O	O
it	O	O
is	O	O
,	O	O
but	O	O
it	O	O
certainly	O	O
feels	O	O
snappier	O	O
than	O	O
Eclipse	O	O
!	O	O
Joey	O	O
,	O	O
I	O	O
believe	O	O
anything	O	O
is	O	O
lighter	O	O
than	O	O
Eclipse	O	O
!	O	O
:	O	O
o	O	O
)	O	O
Vim	O	O
(	O	O
or	O	O
Emacs	O	O
varying	O	O
on	O	O
religion	O	O
)	O	O
will	O	O
always	O	O
be	O	O
my	O	O
first	O	O
answer	O	O
to	O	O
this	O	O
question	O	O
,	O	O
over	O	O
any	O	O
point-and-click	O	O
IDE	O	O
.	O	O
As	O	O
they	O	O
write	O	O
in	O	O
The	O	O
Pragmatic	O	O
Programmer	O	O
Choose	O	O
an	O	O
editor	O	O
,	O	O
know	O	O
it	O	O
thoroughly	O	O
,	O	O
and	O	O
use	O	O
it	O	O
for	O	O
all	O	O
editing	O	O
tasks	O	O
.	O	O
[	O	O
...	O	O
]	O	O
The	O	O
editor	O	O
will	O	O
be	O	O
an	O	O
extension	O	O
of	O	O
your	O	O
hand	O	O
;	O	O
the	O	O
keys	O	O
will	O	O
sing	O	O
as	O	O
they	O	O
slice	O	O
their	O	O
way	O	O
through	O	O
text	O	O
and	O	O
thought	O	O
.	O	O
That	O	O
's	O	O
our	O	O
goal	O	O
.	O	O
Make	O	O
sure	O	O
that	O	O
the	O	O
editor	O	O
you	O	O
choose	O	O
is	O	O
available	O	O
on	O	O
all	O	O
platforms	O	O
you	O	O
use	O	O
.	O	O
Vim	O	O
is	O	O
configurable	O	O
,	O	O
extensible	O	O
,	O	O
programmable	O	O
and	O	O
can	O	O
be	O	O
turned	O	O
into	O	O
an	O	O
IDE	O	O
with	O	O
all	O	O
the	O	O
regular	O	O
features	O	O
.	O	O
Lately	O	O
I	O	O
've	O	O
been	O	O
using	O	O
Eclim	O	O
to	O	O
``	O	O
bring	O	O
Eclipse	O	O
functionality	O	O
to	O	O
the	O	O
Vim	O	O
editor	O	O
''	O	O
(	O	O
projects	O	O
,	O	O
better	O	O
java	O	O
support	O	O
etc	O	O
.	O	O
)	O	O
making	O	O
it	O	O
a	O	O
complete	O	O
platform	O	O
with	O	O
advanced	O	O
IDE	O	O
features	O	O
.	O	O
If	O	O
you	O	O
are	O	O
taking	O	O
your	O	O
time	O	O
switching	O	O
to	O	O
linux	O	O
,	O	O
I	O	O
'd	O	O
switch	O	O
to	O	O
emacs	O	O
or	O	O
vim	O	O
at	O	O
some	O	O
point	O	O
as	O	O
well	O	O
.	O	O
There	O	O
will	O	O
always	O	O
be	O	O
a	O	O
resource	O	O
or	O	O
a	O	O
document	O	O
describing	O	O
exactly	O	O
the	O	O
problem	O	O
you	O	O
are	O	O
having	O	O
with	O	O
either	O	O
of	O	O
them	O	O
,	O	O
and	O	O
generally	O	O
a	O	O
solution	O	O
is	O	O
just	O	O
a	O	O
few	O	O
more	O	O
clicks	O	O
down	O	O
the	O	O
road	O	O
.	O	O
Emacs	O	O
may	O	O
be	O	O
easier	O	O
at	O	O
the	O	O
beginning	O	O
because	O	O
of	O	O
modeless	O	O
editing	O	O
...	O	O
but	O	O
do	O	O
n't	O	O
let	O	O
modal	O	O
editing	O	O
scare	O	O
you	O	O
away	O	O
from	O	O
Vim	O	O
.	O	O
The	O	O
key	O	O
with	O	O
either	O	O
Vim	O	O
or	O	O
Emacs	O	O
is	O	O
knowing	O	O
it	O	O
could	O	O
probably	O	O
take	O	O
you	O	O
the	O	O
better	O	O
part	O	O
of	O	O
the	O	O
day	O	O
just	O	O
to	O	O
figure	O	O
out	O	O
what	O	O
you	O	O
want	O	O
them	O	O
to	O	O
do	O	O
,	O	O
let	O	O
alone	O	O
how	O	O
to	O	O
get	O	O
them	O	O
to	O	O
do	O	O
that	O	O
.	O	O
Once	O	O
they	O	O
work	O	O
for	O	O
you	O	O
though	O	O
,	O	O
you	O	O
'll	O	O
see	O	O
why	O	O
mostly	O	O
everyone	O	O
is	O	O
in	O	O
one	O	O
of	O	O
two	O	O
camps	O	O
.	O	O
General	O	O
hints	O	O
:	O	O
Setting	O	O
up	O	O
a	O	O
Makefile	O	O
for	O	O
your	O	O
project	O	O
is	O	O
almost	O	O
always	O	O
worth	O	O
it	O	O
.	O	O
Using	O	O
cscope	O	O
and	O	O
or	O	O
ctags	O	O
will	O	O
make	O	O
your	O	O
life	O	O
easier	O	O
.	O	O
Vim	O	O
hints	O	O
:	O	O
:	O	O
make	O	O
:	O	O
cn	O	O
,	O	O
:	O	O
cp	O	O
OmniCompletion	B-API	O
using	O	O
BufRead	O	O
autoloads	O	O
to	O	O
set	O	O
what	O	O
:	O	O
make	O	O
should	O	O
do	O	O
depending	O	O
on	O	O
file	O	O
type	O	O
Emacs	O	O
hints	O	O
:	O	O
ecb	O	O
is	O	O
fun	O	O
M-x	O	O
dired	O	O
M-	O	O
.	O	O
M-	O	O
,	O	O
M-*	O	O
M-x	O	O
complete-tag	O	O
for	O	O
etags	O	O
M-x	O	O
compile	B-API	O
(	I-API	O
add-hook	I-API	O
'mylanguage-mode-hook	I-API	O
'	I-API	O
(	I-API	O
lambda	I-API	O
(	I-API	O
)	I-API	O
(	I-API	O
setq	I-API	O
my-customizations	I-API	O
t	I-API	O
)	I-API	O
)	I-API	O
)	I-API	O
And	O	O
check	O	O
out	O	O
other	O	O
people	O	O
's	O	O
customizations	O	O
for	O	O
examples	O	O
of	O	O
what	O	O
other	O	O
people	O	O
do	O	O
.	O	O
No	O	O
.	O	O
See	O	O
A	O	O
Pragmatic	O	O
Look	O	O
at	O	O
Exception	O	O
Specifications	O	O
for	O	O
reasons	O	O
why	O	O
not	O	O
.	O	O
The	O	O
only	O	O
way	O	O
you	O	O
can	O	O
``	O	O
help	O	O
''	O	O
this	O	O
is	O	O
to	O	O
document	O	O
the	O	O
exceptions	O	O
your	O	O
function	O	O
can	O	O
throw	O	O
,	O	O
say	O	O
as	O	O
a	O	O
comment	O	O
in	O	O
the	O	O
header	O	O
file	O	O
declaring	O	O
it	O	O
.	O	O
This	O	O
is	O	O
not	O	O
enforced	O	O
by	O	O
the	O	O
compiler	O	O
or	O	O
anything	O	O
.	O	O
Use	O	O
code	O	O
reviews	O	O
for	O	O
that	O	O
purpose	O	O
.	O	O
Or	O	O
you	O	O
could	O	O
start	O	O
throwing	O	O
critical	O	O
exceptions	O	O
.	O	O
Surely	O	O
,	O	O
an	O	O
access	O	O
violation	O	O
exception	O	O
will	O	O
catch	O	O
your	O	O
users	O	O
'	O	O
attention	O	O
.	O	O
Outside	O	O
the	O	O
scope	O	O
of	O	O
your	O	O
question	O	O
so	O	O
I	O	O
debated	O	O
not	O	O
posting	O	O
this	O	O
but	O	O
in	O	O
Java	O	O
there	O	O
are	O	O
actually	O	O
2	O	O
types	O	O
of	O	O
exceptions	O	O
,	O	O
checked	O	O
and	O	O
unchecked	O	O
.	O	O
The	O	O
basic	O	O
difference	O	O
is	O	O
that	O	O
,	O	O
much	O	O
like	O	O
in	O	O
,	O	O
you	O	O
dont	O	O
have	O	O
to	O	O
catch	O	O
an	O	O
unchecked	O	O
exception	O	O
.	O	O
For	O	O
a	O	O
good	O	O
reference	O	O
try	O	O
this	O	O
Is	O	O
there	O	O
a	O	O
way	O	O
one	O	O
can	O	O
ensure	O	O
that	O	O
the	O	O
exceptions	O	O
thrown	O	O
are	O	O
always	O	O
caught	O	O
using	O	O
try/catch	O	O
by	O	O
the	O	O
calling	O	O
function	O	O
?	O	O
I	O	O
find	O	O
it	O	O
rather	O	O
funny	O	O
,	O	O
that	O	O
the	O	O
Java	O	O
crowd	O	O
-	O	O
including	O	O
myself	O	O
-	O	O
is	O	O
trying	O	O
to	O	O
avoid	O	O
checked	O	O
Exceptions	O	O
.	O	O
They	O	O
are	O	O
trying	O	O
to	O	O
work	O	O
their	O	O
way	O	O
around	O	O
being	O	O
forced	O	O
to	O	O
catch	O	O
Exceptions	O	O
by	O	O
using	O	O
RuntimeExceptions	O	O
.	O	O
Chris	O	O
'	O	O
probably	O	O
has	O	O
the	O	O
best	O	O
pure	O	O
answer	O	O
to	O	O
the	O	O
question	O	O
:	O	O
However	O	O
,	O	O
I	O	O
'm	O	O
curious	O	O
about	O	O
the	O	O
root	O	O
of	O	O
the	O	O
question	O	O
.	O	O
If	O	O
the	O	O
user	O	O
should	O	O
always	O	O
wrap	O	O
the	O	O
call	O	O
in	O	O
a	O	O
try/catch	O	O
block	O	O
,	O	O
should	O	O
the	O	O
user-called	O	O
function	O	O
really	O	O
be	O	O
throwing	O	O
exceptions	O	O
in	O	O
the	O	O
first	O	O
place	O	O
?	O	O
This	O	O
is	O	O
a	O	O
difficult	O	O
question	O	O
to	O	O
answer	O	O
without	O	O
more	O	O
context	O	O
regarding	O	O
the	O	O
code-base	O	O
in	O	O
question	O	O
.	O	O
Shooting	O	O
from	O	O
the	O	O
hip	O	O
,	O	O
I	O	O
think	O	O
the	O	O
best	O	O
answer	O	O
here	O	O
is	O	O
to	O	O
wrap	O	O
the	O	O
function	O	O
up	O	O
such	O	O
that	O	O
the	O	O
recommended	O	O
(	O	O
if	O	O
not	O	O
only	O	O
,	O	O
depending	O	O
on	O	O
the	O	O
overall	O	O
exception	O	O
style	O	O
of	O	O
the	O	O
code	O	O
)	O	O
public	O	O
interface	O	O
does	O	O
the	O	O
try/catch	O	O
for	O	O
the	O	O
user	O	O
.	O	O
If	O	O
you	O	O
're	O	O
just	O	O
trying	O	O
to	O	O
ensure	O	O
that	O	O
there	O	O
are	O	O
no	O	O
unhandled	O	O
exceptions	O	O
in	O	O
your	O	O
code	O	O
,	O	O
unit	O	O
tests	O	O
and	O	O
code	O	O
review	O	O
are	O	O
probably	O	O
the	O	O
best	O	O
solution	O	O
.	O	O
Firebug	B-API	O
is	O	O
pretty	O	O
well	O	O
unbeatable	O	O
for	O	O
JavaScript	O	O
development	O	O
in	O	O
a	O	O
browser	O	O
.	O	O
'alert	B-API	B-API
(	I-API	I-API
x	I-API	I-API
)	I-API	I-API
;	O	O
'	O	O
was	O	O
the	O	O
primary	O	O
technique	O	O
for	O	O
too	O	O
long	O	O
.	O	O
FireBug	O	O
,	O	O
as	O	O
others	O	O
have	O	O
said	O	O
,	O	O
is	O	O
the	O	O
way	O	O
to	O	O
go	O	O
in	O	O
FireFox	O	O
debugging	O	O
.	O	O
the	O	O
Aptana	O	O
IDE	O	O
(	O	O
based	O	O
on	O	O
eclipse	O	O
)	O	O
made	O	O
a	O	O
bit	O	O
of	O	O
a	O	O
splash	O	O
in	O	O
the	O	O
javascript	O	O
IDE	O	O
region	O	O
recently	O	O
.	O	O
Visual	O	O
Studio	O	O
2008	O	O
contains	O	O
much	O	O
improved	O	O
javascript	O	O
debugging	O	O
capabilities	O	O
over	O	O
the	O	O
previous	O	O
versions	O	O
.	O	O
Try	O	O
a	O	O
combination	O	O
of	O	O
Script	B-API	O
#	I-API	O
(	I-API	O
http	I-API	O
:	I-API	O
//www.nikhilk.net/ScriptSharpIntro.aspx	I-API	O
)	I-API	O
and	O	O
Firebug	O	O
Cheers	O	O
The	O	O
nightly	O	O
builds	O	O
of	O	O
WebKit	O	O
have	O	O
some	O	O
great	O	O
new	O	O
debugging	O	O
tools	O	O
:	O	O
http	O	O
:	O	O
//nightly.webkit.org/	O	O
We	O	O
use	O	O
FindBugs	B-API	O
and	O	O
JDepend	B-API	O
integrated	O	O
with	O	O
Ant	O	O
.	O	O
We	O	O
use	O	O
JUnit	B-API	O
but	O	O
we	O	O
're	O	O
not	O	O
using	O	O
any	O	O
coverage	O	O
tool	O	O
.	O	O
I	O	O
'm	O	O
not	O	O
using	O	O
it	O	O
integrated	O	O
to	O	O
Rational	O	O
Application	O	O
Developer	O	O
(	O	O
the	O	O
IDE	O	O
I	O	O
'm	O	O
using	O	O
to	O	O
develop	O	O
J2EE	O	O
applications	O	O
)	O	O
because	O	O
I	O	O
like	O	O
how	O	O
neat	O	O
it	O	O
looks	O	O
when	O	O
you	O	O
run	O	O
javac	O	O
in	O	O
the	O	O
Windows	O	O
console	O	O
.	O	O
:	O	O
P	O	O
Checkstyle	O	O
is	O	O
another	O	O
one	O	O
I	O	O
've	O	O
used	O	O
at	O	O
a	O	O
previous	O	O
company	O	O
...	O	O
it	O	O
's	O	O
mainly	O	O
for	O	O
style	O	O
checking	O	O
,	O	O
but	O	O
it	O	O
can	O	O
do	O	O
some	O	O
static	O	O
analysis	O	O
too	O	O
.	O	O
Also	O	O
,	O	O
Clover	O	O
for	O	O
code	O	O
coverage	O	O
,	O	O
though	O	O
be	O	O
aware	O	O
it	O	O
is	O	O
not	O	O
a	O	O
free	O	O
tool	O	O
.	O	O
We	O	O
are	O	O
using	O	O
FindBugs	O	O
and	O	O
Checkstyle	O	O
as	O	O
well	O	O
as	O	O
Clover	O	O
for	O	O
Code	O	O
Coverage	O	O
.	O	O
I	O	O
think	O	O
it	O	O
's	O	O
important	O	O
to	O	O
have	O	O
some	O	O
kind	O	O
of	O	O
static	O	O
analysis	O	O
,	O	O
supporting	O	O
your	O	O
development	O	O
.	O	O
Unfortunately	O	O
it	O	O
's	O	O
still	O	O
not	O	O
widely	O	O
spread	O	O
that	O	O
these	O	O
tools	O	O
are	O	O
important	O	O
.	O	O
I	O	O
am	O	O
looking	O	O
for	O	O
many	O	O
answers	O	O
to	O	O
learn	O	O
about	O	O
new	O	O
tools	O	O
and	O	O
consolidate	O	O
this	O	O
knowledge	O	O
in	O	O
a	O	O
one	O	O
question/thread	O	O
,	O	O
so	O	O
I	O	O
doubt	O	O
there	O	O
will	O	O
be	O	O
1	O	O
true	O	O
answer	O	O
to	O	O
this	O	O
question	O	O
.	O	O
My	O	O
answer	O	O
to	O	O
my	O	O
own	O	O
question	O	O
is	O	O
that	O	O
we	O	O
use	O	O
:	O	O
Findbugs	O	O
to	O	O
look	O	O
for	O	O
common	O	O
errors	O	O
bad/coding	O	O
-	O	O
run	O	O
from	O	O
maven	O	O
,	O	O
and	O	O
also	O	O
integrates	O	O
easily	O	O
into	O	O
Eclipse	O	O
Cobertura	O	O
for	O	O
our	O	O
coverage	O	O
reports	O	O
-	O	O
run	O	O
from	O	O
maven	O	O
Hudson	O	O
also	O	O
has	O	O
a	O	O
task-scanner	O	O
plugin	O	O
that	O	O
will	O	O
display	O	O
a	O	O
count	O	O
of	O	O
your	O	O
TODO	O	O
and	O	O
FIXMEs	O	O
,	O	O
as	O	O
well	O	O
as	O	O
show	O	O
where	O	O
they	O	O
are	O	O
in	O	O
the	O	O
source	O	O
files	O	O
.	O	O
All	O	O
are	O	O
integrated	O	O
with	O	O
Maven	O	O
1.x	O	O
in	O	O
our	O	O
case	O	O
and	O	O
tied	O	O
into	O	O
Hudson	O	O
,	O	O
which	O	O
runs	O	O
our	O	O
builds	O	O
on	O	O
check-in	O	O
as	O	O
well	O	O
as	O	O
extra	O	O
things	O	O
nightly	O	O
and	O	O
weekly	O	O
.	O	O
Hudson	O	O
trend	O	O
graphs	O	O
our	O	O
JUnit	B-API	O
tests	O	O
,	O	O
coverage	O	O
,	O	O
findbugs	O	O
,	O	O
as	O	O
well	O	O
as	O	O
open	O	O
tasks	O	O
.	O	O
There	O	O
is	O	O
also	O	O
a	O	O
Hudson	O	O
plugin	O	O
that	O	O
reports	O	O
and	O	O
graphs	O	O
our	O	O
compile	O	O
warnings	O	O
.	O	O
We	O	O
also	O	O
have	O	O
several	O	O
performance	O	O
tests	O	O
with	O	O
their	O	O
own	O	O
graphs	O	O
of	O	O
performance	O	O
and	O	O
memory	O	O
use	O	O
over	O	O
time	O	O
using	O	O
the	O	O
Hudson	O	O
plots	O	O
plugin	O	O
as	O	O
well	O	O
.	O	O
I	O	O
would	O	O
first	O	O
find	O	O
out	O	O
if	O	O
the	O	O
site	B-API	O
(	I-API	O
s	I-API	O
)	I-API	O
in	O	O
question	O	O
provide	O	O
an	O	O
API	O	O
server	O	O
or	O	O
RSS	O	O
Feeds	O	O
for	O	O
access	O	O
the	O	O
data	O	O
you	O	O
require	O	O
.	O	O
The	O	O
Ruby	O	O
world	O	O
's	O	O
equivalent	O	O
to	O	O
Beautiful	O	O
Soup	O	O
is	O	O
why_the_lucky_stiff	O	O
's	O	O
Hpricot	O	O
.	O	O
Regular	O	O
expressions	O	O
work	O	O
pretty	O	O
well	O	O
for	O	O
HTML	O	O
scraping	O	O
as	O	O
well	O	O
;	O	O
-	O	O
)	O	O
Though	O	O
after	O	O
looking	O	O
at	O	O
Beautiful	O	O
Soup	O	O
,	O	O
I	O	O
can	O	O
see	O	O
why	O	O
this	O	O
would	O	O
be	O	O
a	O	O
valuable	O	O
tool	O	O
.	O	O
You	O	O
probably	O	O
have	O	O
as	O	O
much	O	O
already	O	O
,	O	O
but	O	O
I	O	O
think	O	O
this	O	O
is	O	O
what	O	O
you	O	O
are	O	O
trying	O	O
to	O	O
do	O	O
:	O	O
from	O	O
__future__	B-API	O
import	I-API	O
with_statementimport	I-API	O
re	I-API	O
,	I-API	O
osprofile	I-API	O
=	I-API	O
``	I-API	O
http	I-API	O
:	I-API	O
//stackoverflow.com/users/30/myProfile.html	I-API	O
'	I-API	O
)	I-API	O
with	O	O
as	O	O
f	O	O
:	O	O
for	O	O
line	O	O
in	O	O
f	O	O
:	O	O
profile	O	O
=	O	O
profile	O	O
+	O	O
p	O	O
=	O	O
/div	O	O
'	O	O
)	O	O
#	O	O
Rep	O	O
is	O	O
found	O	O
hereprin	O	O
pm	O	O
=	O	O
print	O	O
mprint	O	O
+	O	O
``	O	O
``	O	O
os.system	B-API	O
(	I-API	O
'wget	I-API	O
--	I-API	O
no-cookies	I-API	O
--	I-API	O
header	I-API	O
``	I-API	O
Cookie	I-API	O
:	I-API	O
soba=	B-API	O
(	I-API	O
SeCreTCODe	I-API	O
)	I-API	O
open	B-API	B-API
(	I-API	I-API
``	I-API	I-API
myProfile.html	I-API	I-API
''	I-API	I-API
)	I-API	I-API
linef.close	B-API	B-API
(	I-API	I-API
)	I-API	I-API
re.compile	B-API	B-API
(	I-API	I-API
'summarycount	I-API	I-API
''	I-API	I-API
(	I-API	I-API
\d+	I-API	I-API
)	I-API	I-API
p.search	B-API	B-API
(	I-API	I-API
profile	I-API	I-API
)	I-API	I-API
(	O	O
1	O	O
)	O	O
os.system	B-API	B-API
(	I-API	I-API
``	I-API	I-API
espeak	B-API	I-API
\	O	I-API
''	O	I-API
Rep	O	I-API
is	O	I-API
at	O	I-API
``	O	I-API
+	O	I-API
m.group	O	B-API
(	O	I-API
1	O	I-API
)	O	I-API
points\	B-API	O
''	I-API	O
''	I-API	O
os.remove	B-API	B-API
(	I-API	I-API
``	I-API	I-API
myProfile.html	I-API	I-API
''	I-API	I-API
)	I-API	I-API
For	O	O
Perl	O	O
,	O	O
there	O	O
's	O	O
WWW	O	O
:	O	O
:Mechanize	O	O
.	O	O
I	O	O
use	O	O
Hpricot	O	O
on	O	O
Ruby	O	O
.	O	O
As	O	O
an	O	O
example	O	O
this	O	O
is	O	O
a	O	O
snippet	O	O
of	O	O
code	O	O
that	O	O
I	O	O
use	O	O
to	O	O
retrieve	O	O
all	O	O
book	O	O
titles	O	O
from	O	O
the	O	O
six	O	O
pages	O	O
of	O	O
my	O	O
HireThings	O	O
account	O	O
(	O	O
as	O	O
they	O	O
do	O	O
n't	O	O
seem	O	O
to	O	O
provide	O	O
a	O	O
single	O	O
page	O	O
with	O	O
this	O	O
information	O	O
)	O	O
:	O	O
pagerange	O	O
=	O	O
1..6	O	O
proxy	O	O
=	O	O
Net	O	O
:	O	O
:HTTP	O	O
:	O	O
:Proxy	B-API	O
(	I-API	O
proxy	I-API	O
,	I-API	O
port	I-API	O
,	I-API	O
user	I-API	O
,	I-API	O
pwd	I-API	O
)	I-API	O
proxy.start	B-API	B-API
(	I-API	I-API
'www.hirethings.co.nz	I-API	I-API
'	I-API	I-API
)	I-API	I-API
do	O	O
|http|	O	O
pagerange.each	B-API	O
do	O	O
|page|	O	O
resp	O	O
,	O	O
data	O	O
=	O	O
http.get	B-API	O
``	I-API	O
/perth_dotnet	I-API	O
?	I-API	O
page=	O	O
#	O	O
{	O	O
page	O	O
}	O	O
''	O	O
if	O	O
resp.class	O	O
==	O	O
Net	O	O
:	O	O
:HTTPOK	B-API	O
(	I-API	O
Hpricot	B-API	O
(	I-API	O
data	I-API	O
)	I-API	O
/	I-API	O
''	I-API	O
h3	I-API	O
a	I-API	O
''	I-API	O
)	I-API	O
.each	O	O
{	O	O
|a|	O	O
puts	O	O
a.innerText	B-API	O
}	O	O
end	O	O
end	O	O
end	O	O
It	O	O
's	O	O
pretty	O	O
much	O	O
complete	O	O
.	O	O
All	O	O
that	O	O
comes	O	O
before	O	O
this	O	O
are	O	O
library	O	O
imports	O	O
and	O	O
the	O	O
settings	O	O
for	O	O
my	O	O
proxy	O	O
.	O	O
BeautifulSoup	O	O
is	O	O
a	O	O
great	O	O
way	O	O
to	O	O
go	O	O
for	O	O
HTML	O	O
scraping	O	O
.	O	O
My	O	O
previous	O	O
job	O	O
had	O	O
me	O	O
doing	O	O
a	O	O
lot	O	O
of	O	O
scraping	O	O
and	O	O
I	O	O
wish	O	O
I	O	O
knew	O	O
about	O	O
BeautifulSoup	B-API	O
when	O	O
I	O	O
started	O	O
.	O	O
It	O	O
's	O	O
like	O	O
the	O	O
DOM	O	O
with	O	O
a	O	O
lot	O	O
more	O	O
useful	O	O
options	O	O
and	O	O
is	O	O
a	O	O
lot	O	O
more	O	O
pythonic	O	O
.	O	O
If	O	O
you	O	O
want	O	O
to	O	O
try	O	O
Ruby	O	O
they	O	O
ported	O	O
BeautifulSoup	B-API	O
calling	O	O
it	O	O
RubyfulSoup	B-API	O
but	O	O
it	O	O
has	O	O
n't	O	O
been	O	O
updated	O	O
in	O	O
a	O	O
while	O	O
.	O	O
Other	O	O
useful	O	O
tools	O	O
are	O	O
HTMLParser	B-API	O
or	O	O
sgmllib.SGMLParser	B-API	B-API
which	O	O
are	O	O
part	O	O
of	O	O
the	O	O
standard	O	O
Python	O	O
library	O	O
.	O	O
These	O	O
work	O	O
by	O	O
calling	O	O
methods	O	O
every	O	O
time	O	O
you	O	O
enter/exit	O	O
a	O	O
tag	O	O
and	O	O
encounter	O	O
html	O	O
text	O	O
.	O	O
They	O	O
're	O	O
like	O	O
Expat	O	O
if	O	O
you	O	O
're	O	O
familiar	O	O
with	O	O
that	O	O
.	O	O
These	O	O
libraries	O	O
are	O	O
especially	O	O
useful	O	O
if	O	O
you	O	O
are	O	O
going	O	O
to	O	O
parse	O	O
very	O	O
large	O	O
files	O	O
and	O	O
creating	O	O
a	O	O
DOM	O	O
tree	O	O
would	O	O
be	O	O
long	O	O
and	O	O
expensive	O	O
.	O	O
Regular	O	O
expressions	O	O
are	O	O
n't	O	O
very	O	O
necessary	O	O
.	O	O
BeautifulSoup	B-API	O
handles	O	O
regular	O	O
expressions	O	O
so	O	O
if	O	O
you	O	O
need	O	O
their	O	O
power	O	O
you	O	O
can	O	O
utilize	O	O
it	O	O
there	O	O
.	O	O
I	O	O
say	O	O
go	O	O
with	O	O
BeautifulSoup	B-API	O
unless	O	O
you	O	O
need	O	O
speed	O	O
and	O	O
a	O	O
smaller	O	O
memory	O	O
footprint	O	O
.	O	O
If	O	O
you	O	O
find	O	O
a	O	O
better	O	O
HTML	O	O
parser	O	O
on	O	O
Python	O	O
,	O	O
let	O	O
me	O	O
know	O	O
.	O	O
I	O	O
found	O	O
HTMLSQL	O	O
to	O	O
be	O	O
a	O	O
ridiculously	O	O
simple	O	O
way	O	O
to	O	O
screenscrape	O	O
.	O	O
It	O	O
takes	O	O
literally	O	O
minutes	O	O
to	O	O
get	O	O
results	O	O
with	O	O
it	O	O
.	O	O
The	O	O
queries	O	O
are	O	O
super-intuitive	O	O
-	O	O
like	O	O
:	O	O
SELECT	B-API	O
title	I-API	O
from	I-API	O
img	I-API	O
WHERE	I-API	O
$	I-API	O
class	I-API	O
==	I-API	O
There	O	O
are	O	O
now	O	O
some	O	O
other	O	O
alternatives	O	O
that	O	O
take	O	O
the	O	O
same	O	O
approach	O	O
.	O	O
In	O	O
the	O	O
.NET	O	O
world	O	O
,	O	O
I	O	O
recommend	O	O
the	O	O
HTML	B-API	O
Agility	I-API	O
Pack	I-API	O
.	O	O
Not	O	O
near	O	O
as	O	O
simple	O	O
as	O	O
some	O	O
of	O	O
the	O	O
above	O	O
options	O	O
(	O	O
like	O	O
HTMLSQL	O	O
)	O	O
,	O	O
but	O	O
it	O	O
's	O	O
very	O	O
flexible	O	O
.	O	O
It	O	O
lets	O	O
you	O	O
maniuplate	O	O
poorly	O	O
formed	O	O
HTML	O	O
as	O	O
if	O	O
it	O	O
were	O	O
well	O	O
formed	O	O
XML	O	O
,	O	O
so	O	O
you	O	O
can	O	O
use	O	O
XPATH	B-API	O
or	O	O
just	O	O
itereate	O	O
over	O	O
nodes	O	O
.	O	O
http	O	O
:	O	O
//www.codeplex.com/htmlagilitypack	O	O
Sounds	O	O
to	O	O
me	O	O
like	O	O
you	O	O
're	O	O
trying	O	O
to	O	O
combine	O	O
things	O	O
that	O	O
should	O	O
n't	O	O
be	O	O
combined	O	O
.	O	O
If	O	O
you	O	O
need	O	O
to	O	O
do	O	O
different	O	O
processing	O	O
in	O	O
your	O	O
view	O	O
depending	O	O
on	O	O
if	O	O
it	O	O
's	O	O
a	O	O
User	O	O
or	O	O
Group	O	O
object	O	O
you	O	O
're	O	O
trying	O	O
to	O	O
look	O	O
at	O	O
then	O	O
you	O	O
should	O	O
use	O	O
two	O	O
different	O	O
view	O	O
functions	O	O
.	O	O
On	O	O
the	O	O
other	O	O
hand	O	O
there	O	O
can	O	O
be	O	O
common	O	O
idioms	O	O
you	O	O
'd	O	O
want	O	O
to	O	O
extract	O	O
out	O	O
of	O	O
your	O	O
object_detail	O	O
type	O	O
views	O	O
...	O	O
perhaps	O	O
you	O	O
could	O	O
use	O	O
a	O	O
decorator	O	O
or	O	O
just	O	O
helper	O	O
functions	O	O
?	O	O
-Dan	O	O
If	O	O
you	O	O
're	O	O
simply	O	O
displaying	O	O
data	O	O
from	O	O
models	O	O
,	O	O
why	O	O
not	O	O
use	O	O
the	O	O
Django	O	O
Generic	O	O
Views	O	O
?	O	O
They	O	O
're	O	O
designed	O	O
to	O	O
let	O	O
you	O	O
easy	O	O
show	O	O
data	O	O
from	O	O
a	O	O
model	O	O
without	O	O
having	O	O
to	O	O
write	O	O
your	O	O
own	O	O
view	O	O
and	O	O
stuff	O	O
about	O	O
mapping	O	O
URL	O	O
paramaters	O	O
to	O	O
views	O	O
,	O	O
fetching	O	O
data	O	O
,	O	O
handling	O	O
edge	O	O
cases	O	O
,	O	O
rendering	O	O
output	O	O
,	O	O
etc	O	O
.	O	O
Try	O	O
this	O	O
:	O	O
var	O	O
request	O	O
=	O	O
new	B-API	O
;	I-API	O
request.onreadystatechange	B-API	O
=	I-API	O
process	I-API	O
;	I-API	O
request.open	B-API	B-API
(	I-API	I-API
'GET	I-API	I-API
'	I-API	I-API
,	I-API	I-API
url	I-API	I-API
;	I-API	O
function	O	O
{	O	O
if	O	O
(	O	O
request.readyState	B-API	O
==	I-API	O
4	I-API	O
request.status	B-API	O
==	I-API	O
200	I-API	O
)	O	O
var	O	O
xml	O	O
=	O	O
;	O	O
(	O	O
)	O	O
;	O	O
request.overrideMimeType	B-API	B-API
(	I-API	I-API
'text/xml	I-API	I-API
'	I-API	I-API
)	I-API	I-API
;	O	O
request.send	B-API	B-API
(	I-API	I-API
null	I-API	I-API
)	I-API	I-API
process	B-API	B-API
(	I-API	I-API
)	I-API	I-API
Notice	O	O
the	O	O
overrideMimeType	O	O
and	O	O
responseXML	O	O
.	O	O
The	O	O
readyState	O	O
==	O	O
4	O	O
is	O	O
'completed	O	O
'	O	O
.	O	O
Try	O	O
creating	O	O
a	O	O
div	B-API	O
(	I-API	O
'div	I-API	O
'	I-API	O
)	I-API	O
And	O	O
then	O	O
set	O	O
the	O	O
tag	O	O
soup	O	O
HTML	O	O
to	O	O
the	O	O
innerHTML	O	O
of	O	O
the	O	O
div	O	O
.	O	O
The	O	O
browser	O	O
should	O	O
process	O	O
that	O	O
into	O	O
XML	O	B-API
,	O	O
which	O	O
then	O	O
you	O	O
can	O	O
parse	O	O
.	O	O
The	O	O
innerHTML	O	O
property	O	O
takes	O	O
a	O	O
string	O	O
that	O	O
specifies	O	O
a	O	O
valid	O	O
combination	O	O
of	O	O
text	O	O
and	O	O
elements	O	O
.	O	O
When	O	O
the	O	O
innerHTML	O	O
property	O	O
is	O	O
set	O	O
,	O	O
the	O	O
given	O	O
string	O	O
completely	O	O
replaces	O	O
the	O	O
existing	O	O
content	O	O
of	O	O
the	O	O
object	O	O
.	O	O
If	O	O
the	O	O
string	O	O
contains	O	O
HTML	O	O
tags	O	O
,	O	O
the	O	O
string	O	O
is	O	O
parsed	O	O
and	O	O
formatted	O	O
as	O	O
it	O	O
is	O	O
placed	O	O
into	O	O
the	O	O
document	O	O
.	O	O
So	O	O
you	O	O
want	O	O
to	O	O
download	O	O
a	O	O
webpage	O	O
as	O	O
an	O	O
XML	O	O
object	O	O
using	O	O
javascript	O	O
,	O	O
but	O	O
you	O	O
do	O	O
n't	O	O
want	O	O
to	O	O
use	O	O
a	O	O
webpage	O	O
?	O	O
Since	O	O
you	O	O
have	O	O
no	O	O
control	O	O
over	O	O
what	O	O
the	O	O
user	O	O
will	O	O
do	O	O
(	O	O
closing	O	O
tabs	O	O
or	O	O
windows	O	O
or	O	O
whatnot	O	O
)	O	O
you	O	O
would	O	O
need	O	O
to	O	O
do	O	O
this	O	O
in	O	O
like	O	O
a	O	O
OSX	O	O
Dashboard	O	O
widget	O	O
or	O	O
some	O	O
separate	O	O
application	O	O
.	O	O
A	O	O
Firefox	O	O
extension	O	O
would	O	O
also	O	O
work	O	O
,	O	O
unless	O	O
you	O	O
have	O	O
to	O	O
worry	O	O
about	O	O
the	O	O
user	O	O
closing	O	O
the	O	O
browser	O	O
.	O	O
Ajaxian	O	O
actually	O	O
had	O	O
a	O	O
post	O	O
on	O	O
inserting	O	O
/	O	O
retrieving	O	O
html	O	O
from	O	O
an	O	O
iframe	O	O
today	O	O
.	O	O
You	O	O
can	O	O
probably	O	O
use	O	O
the	O	O
js	O	O
snippet	O	O
they	O	O
have	O	O
posted	O	O
there	O	O
.	O	O
As	O	O
for	O	O
handling	O	O
closing	O	O
of	O	O
a	O	O
browser	O	O
/	O	O
tab	O	O
,	O	O
you	O	O
can	O	O
attach	O	O
to	O	O
the	O	O
onbeforeunload	B-API	O
(	I-API	O
http	I-API	O
:	I-API	O
//msdn.microsoft.com/en-us/library/ms536907	I-API	O
(	I-API	O
VS.85	I-API	O
)	I-API	O
.aspx	I-API	O
)	I-API	O
event	O	O
and	O	O
do	O	O
whatever	O	O
you	O	O
need	O	O
to	O	O
do	O	O
.	O	O
For	O	O
C++	O	O
,	O	O
Boost.Random	B-API	B-API
is	O	O
probably	O	O
what	O	O
you	O	O
're	O	O
looking	O	O
for	O	O
.	O	O
It	O	O
has	O	O
support	O	O
for	O	O
MT	O	O
(	O	O
among	O	O
many	O	O
other	O	O
algorithms	O	O
)	O	O
,	O	O
and	O	O
can	O	O
collect	O	O
entropy	O	O
via	O	O
the	O	O
class	O	O
.	O	O
Check	O	O
it	O	O
out	O	O
!	O	O
:	O	O
-	O	O
)	O	O
The	O	O
Gnu	O	O
Scientific	O	O
Library	O	O
(	O	O
GSL	B-API	O
)	O	O
has	O	O
a	O	O
pretty	O	O
extensive	O	O
set	O	O
of	O	O
RN	O	O
generators	O	O
,	O	O
test	O	O
harness	O	O
,	O	O
etc	O	O
.	O	O
If	O	O
you	O	O
're	O	O
on	O	O
linux	O	O
,	O	O
it	O	O
's	O	O
probably	O	O
already	O	O
available	O	O
on	O	O
your	O	O
system	O	O
.	O	O
Here	O	O
is	O	O
a	O	O
simple	O	O
static	O	O
method	O	O
to	O	O
do	O	O
this	O	O
in	O	O
C	O	O
#	O	O
:	O	O
public	B-API	O
static	O	B-API
string	O	O
{	O	O
return	O	O
(	O	O
string	B-API	O
targetString	I-API	O
)	O	O
System.Threading.Thread.CurrentThread.CurrentCulture.TextInfo.ToTitleCase	B-API	B-API
(	I-API	I-API
targetString	I-API	I-API
)	I-API	I-API
In	O	O
what	O	O
language	O	O
?	O	O
In	O	O
PHP	O	O
it	O	O
is	O	O
:	O	O
ucwords	B-API	B-API
(	I-API	I-API
)	I-API	I-API
example	O	O
:	O	O
$	O	O
HelloWorld	O	O
=	O	O
ucwords	B-API	O
(	I-API	O
'hello	I-API	O
world	I-API	O
'	I-API	O
)	I-API	O
;	O	O
Without	O	O
using	O	O
a	O	O
ready-made	O	O
function	O	O
,	O	O
a	O	O
super-simple	O	O
low-level	O	O
algorithm	O	O
to	O	O
convert	O	O
a	O	O
string	O	O
to	O	O
title	O	O
case	O	O
:	O	O
convert	B-API	O
first	B-API	O
character	B-API	O
to	B-API	O
uppercase.for	B-API	O
each	B-API	O
character	B-API	O
in	B-API	O
,	O	O
if	B-API	O
the	B-API	O
previous	B-API	O
character	B-API	O
is	B-API	O
,	O	O
convert	B-API	O
character	B-API	O
to	B-API	O
This	O	O
asssumes	O	O
the	O	O
``	O	O
convert	O	O
character	O	O
to	O	O
uppercase	O	O
''	O	O
will	O	O
do	O	O
that	O	O
correctly	O	O
regardless	O	O
of	O	O
whether	O	O
or	O	O
not	O	O
the	O	O
character	O	O
is	O	O
case-sensitive	O	O
(	O	O
e.g.	O	O
,	O	O
'+	O	O
'	O	O
)	O	O
.	O	O
If	O	O
the	O	O
language	O	O
you	O	O
are	O	O
using	O	O
has	O	O
a	O	O
supported	O	O
method/function	O	O
then	O	O
just	O	O
use	O	O
that	O	O
(	O	O
as	O	O
in	O	O
the	O	O
C	O	O
#	O	O
method	O	O
)	O	O
If	O	O
it	O	O
does	O	O
not	O	O
,	O	O
then	O	O
you	O	O
will	O	O
want	O	O
to	O	O
do	O	O
something	O	O
like	O	O
the	O	O
following	O	O
:	O	O
Read	O	O
in	O	O
the	O	O
string	O	O
Take	O	O
the	O	O
first	O	O
word	O	O
Capitalize	O	O
the	O	O
first	O	O
letter	O	O
of	O	O
that	O	O
word	O	O
1	O	O
Go	O	O
forward	O	O
and	O	O
find	O	O
the	O	O
next	O	O
word	O	O
Go	O	O
to	O	O
3	O	O
if	O	O
not	O	O
at	O	O
the	O	O
end	O	O
of	O	O
the	O	O
string	O	O
,	O	O
otherwise	O	O
exit	O	O
1	O	O
To	O	O
capitalize	O	O
it	O	O
in	O	O
,	O	O
say	O	O
,	O	O
C	O	O
-	O	O
use	O	O
the	O	O
ascii	O	O
codes	O	O
to	O	O
find	O	O
the	O	O
integer	O	O
value	O	O
of	O	O
the	O	O
char	O	O
and	O	O
subtract	O	O
32	O	O
from	O	O
it	O	O
.	O	O
There	O	O
would	O	O
need	O	O
to	O	O
be	O	O
much	O	O
more	O	O
error	O	O
checking	O	O
in	O	O
the	O	O
code	O	O
(	O	O
ensuring	O	O
valid	O	O
letters	O	O
etc	O	O
.	O	O
)	O	O
,	O	O
and	O	O
the	O	O
``	O	O
Capitalize	B-API	O
''	O	O
function	O	O
will	O	O
need	O	O
to	O	O
impose	O	O
some	O	O
sort	O	O
of	O	O
``	O	O
title-case	O	O
scheme	O	O
''	O	O
on	O	O
the	O	O
letters	O	O
to	O	O
check	O	O
for	O	O
words	O	O
that	O	O
do	O	O
not	O	O
need	O	O
to	O	O
be	O	O
capatilised	O	O
(	O	O
'and	O	O
'	O	O
,	O	O
'but	O	O
'	O	O
etc	O	O
.	O	O
Here	O	O
is	O	O
a	O	O
good	O	O
scheme	O	O
)	O	O
Here	O	O
's	O	O
a	O	O
Perl	O	O
solution	O	O
http	O	O
:	O	O
//daringfireball.net/2008/05/title_case	O	O
Here	O	O
's	O	O
a	O	O
Ruby	O	O
solution	O	O
http	O	O
:	O	O
//frankschmitt.org/projects/title-case	O	O
Here	O	O
's	O	O
a	O	O
Ruby	O	O
one-liner	O	O
solution	O	O
:	O	O
http	O	O
:	O	O
//snippets.dzone.com/posts/show/4702	O	O
'some	O	O
string	O	O
here'.gsub	O	O
(	O	O
/\b\w/	O	O
)	O	O
{	O	O
$	O	O
.upcase	O	O
}	O	O
What	O	O
the	O	O
one-liner	O	O
is	O	O
doing	O	O
is	O	O
using	O	O
a	O	O
regular	O	O
expression	O	O
substitution	O	O
of	O	O
the	O	O
first	O	O
character	O	O
of	O	O
each	O	O
word	O	O
with	O	O
the	O	O
uppercase	O	O
version	O	O
of	O	O
it	O	O
.	O	O
I	O	O
would	O	O
be	O	O
wary	O	O
of	O	O
automatically	O	O
upcasing	O	O
all	O	O
whitespace-preceded-words	O	O
in	O	O
scenarios	O	O
where	O	O
I	O	O
would	O	O
run	O	O
the	O	O
risk	O	O
of	O	O
attracting	O	O
the	O	O
fury	O	O
of	O	O
nitpickers	O	O
.	O	O
I	O	O
would	O	O
at	O	O
least	O	O
consider	O	O
implementing	O	O
a	O	O
dictionary	O	O
for	O	O
exception	O	O
cases	O	O
like	O	O
articles	O	O
and	O	O
conjunctions	O	O
.	O	O
Behold	O	O
:	O	O
``	O	O
Beauty	O	O
and	O	O
the	O	O
Beast	O	O
''	O	O
And	O	O
when	O	O
it	O	O
comes	O	O
to	O	O
proper	O	O
nouns	O	O
,	O	O
the	O	O
thing	O	O
gets	O	O
much	O	O
uglier	O	O
.	O	O
To	O	O
capatilise	O	O
it	O	O
in	O	O
,	O	O
say	O	O
,	O	O
C	O	O
-	O	O
use	O	O
the	O	O
ascii	O	O
codes	O	O
(	O	O
http	O	O
:	O	O
//www.asciitable.com/	O	O
)	O	O
to	O	O
find	O	O
the	O	O
integer	O	O
value	O	O
of	O	O
the	O	O
char	O	O
and	O	O
subtract	O	O
32	O	O
from	O	O
it	O	O
.	O	O
This	O	O
is	O	O
a	O	O
poor	O	O
solution	O	O
if	O	O
you	O	O
ever	O	O
plan	O	O
to	O	O
accept	O	O
characters	O	O
beyond	O	O
a-z	O	O
and	O	O
A-Z	O	O
.	O	O
For	O	O
instance	O	O
:	O	O
ASCII	O	O
134	O	O
:	O	O
,	O	O
ASCII	O	O
143	O	O
:	O	O
.	O	O
Using	O	O
arithmetic	O	O
gets	O	O
you	O	O
:	O	O
ASCII	O	O
102	O	O
:	O	O
f	O	O
Use	O	O
library	O	O
calls	O	O
,	O	O
do	O	O
n't	O	O
assume	O	O
you	O	O
can	O	O
use	O	O
integer	O	O
arithmetic	O	O
on	O	O
your	O	O
characters	O	O
to	O	O
get	O	O
back	O	O
something	O	O
useful	O	O
.	O	O
Unicode	O	O
is	O	O
tricky	O	O
.	O	O
Looking	O	O
into	O	O
the	O	O
registry	O	O
is	O	O
perfectly	O	O
valid	O	O
,	O	O
so	O	O
long	O	O
as	O	O
you	O	O
can	O	O
be	O	O
sure	O	O
that	O	O
the	O	O
user	O	O
of	O	O
the	O	O
application	O	O
will	O	O
always	O	O
have	O	O
access	O	O
to	O	O
what	O	O
you	O	O
need	O	O
.	O	O
Take	O	O
a	O	O
look	O	O
at	O	O
Raymond	O	O
Chens	O	O
solution	O	O
:	O	O
How	O	O
to	O	O
detect	O	O
programmatically	O	O
whether	O	O
you	O	O
are	O	O
running	O	O
on	O	O
64-bit	O	O
Windows	O	O
and	O	O
here	O	O
's	O	O
the	O	O
PINVOKE	O	O
for	O	O
.NET	O	O
:	O	O
IsWow64Process	B-API	O
(	I-API	O
kernel32	I-API	O
)	I-API	O
Update	O	O
:	O	O
I	O	O
'd	O	O
take	O	O
issue	O	O
with	O	O
checking	O	O
for	O	O
'x86	O	O
'	O	O
.	O	O
Who	O	O
's	O	O
to	O	O
say	O	O
what	O	O
intel	O	O
's	O	O
or	O	O
AMD	O	O
's	O	O
next	O	O
32	O	O
bit	O	O
processor	O	O
may	O	O
be	O	O
designated	O	O
as	O	O
.	O	O
The	O	O
probability	O	O
is	O	O
low	O	O
but	O	O
it	O	O
is	O	O
a	O	O
risk	O	O
.	O	O
You	O	O
should	O	O
ask	O	O
the	O	O
OS	O	O
to	O	O
determine	O	O
this	O	O
via	O	O
the	O	O
correct	O	O
API	O	O
's	O	O
,	O	O
not	O	O
by	O	O
querying	O	O
what	O	O
could	O	O
be	O	O
a	O	O
OS	O	O
version/platform	O	O
specific	O	O
value	O	O
that	O	O
may	O	O
be	O	O
considered	O	O
opaque	O	O
to	O	O
the	O	O
outside	O	O
world	O	O
.	O	O
Ask	O	O
yourself	O	O
the	O	O
questions	O	O
,	O	O
1	O	O
-	O	O
is	O	O
the	O	O
registry	O	O
entry	O	O
concerned	O	O
properly	O	O
documented	O	O
by	O	O
MS	O	O
,	O	O
2	O	O
-	O	O
If	O	O
it	O	O
is	O	O
do	O	O
they	O	O
provide	O	O
a	O	O
definitive	O	O
list	O	O
of	O	O
possible	O	O
values	O	O
that	O	O
is	O	O
guaranteed	O	O
to	O	O
permit	O	O
you	O	O
as	O	O
a	O	O
developer	O	O
to	O	O
make	O	O
the	O	O
informed	O	O
decision	O	O
between	O	O
whether	O	O
you	O	O
are	O	O
running	O	O
32	O	O
bit	O	O
or	O	O
64	O	O
bit	O	O
.	O	O
If	O	O
the	O	O
answer	O	O
is	O	O
no	O	O
,	O	O
then	O	O
call	O	O
the	O	O
API	O	O
's	O	O
,	O	O
yeah	O	O
it	O	O
's	O	O
a	O	O
but	O	O
more	O	O
long	O	O
winded	O	O
but	O	O
it	O	O
is	O	O
documented	O	O
and	O	O
definitive	O	O
.	O	O
The	O	O
easiest	O	O
way	O	O
to	O	O
test	O	O
for	O	O
64-bit	O	O
under	O	O
.NET	O	B-API
is	O	O
to	O	O
check	O	O
the	O	O
value	O	O
of	O	O
IntPtr.Size	B-API	B-API
.	I-API	O
EDIT	I-API	O
:	O	O
Doh	O	O
!	O	O
This	O	O
will	O	O
tell	O	O
you	O	O
whether	O	O
or	O	O
not	O	O
the	O	O
current	O	O
process	O	O
is	O	O
64-bit	O	O
,	O	O
not	O	O
the	O	O
OS	O	O
as	O	O
a	O	O
whole	O	O
.	O	O
Sorry	O	O
!	O	O
The	O	O
easiest	O	O
way	O	O
to	O	O
test	O	O
for	O	O
64-bit	O	O
under	O	O
.NET	O	B-API
is	O	O
to	O	O
check	O	O
the	O	O
value	O	O
of	O	O
IntPtr.Size	B-API	B-API
.	O	O
I	O	O
believe	O	O
the	O	O
value	O	O
of	O	O
IntPtr.Size	B-API	B-API
is	O	O
4	O	O
for	O	O
a	O	O
32bit	O	O
app	O	O
that	O	O
's	O	O
running	O	O
under	O	O
WOW	O	O
,	O	O
is	O	O
n't	O	O
it	O	O
?	O	O
Edit	O	O
:	O	O
@	O	O
Edit	O	O
:	O	O
Yeah	O	O
.	O	O
:	O	O
)	O	O
You	O	O
can	O	O
use	O	O
reflection	O	O
to	O	O
get	O	O
the	O	O
property	O	O
and	O	O
invoke	O	O
it	O	O
.	O	O
Something	O	O
like	O	O
this	O	O
:	O	O
object	O	O
result	O	O
=	O	O
(	O	O
)	O	O
.GetProperty	B-API	O
(	I-API	O
``	I-API	O
Property	I-API	O
''	I-API	O
+	I-API	O
i	I-API	O
)	I-API	O
(	O	O
theObject	O	O
,	O	O
null	O	O
)	O	O
That	O	O
is	O	O
,	O	O
assuming	O	O
the	O	O
object	O	O
that	O	O
has	O	O
the	O	O
property	O	O
is	O	O
called	O	O
``	O	O
theObject	O	O
''	O	O
:	O	O
)	O	O
You	O	O
could	O	O
do	O	O
it	O	O
with	O	O
a	O	O
prototype	O	O
function	O	O
:	O	O
void	O	O
something	O	O
(	O	O
int	O	O
i	O	O
,	O	O
string	O	O
P1	O	O
)	O	O
{	O	O
something	O	O
(	O	O
i	O	O
,	O	O
P1	O	O
,	O	O
String.Empty	B-API	B-API
)	O	O
;	O	O
}	O	O
void	O	O
something	O	O
(	O	O
int	O	O
i	O	O
,	O	O
string	O	O
P1	O	O
,	O	O
string	O	O
P2	O	O
)	O	O
{	O	O
something	O	O
(	O	O
i	O	O
,	O	O
P1	O	O
,	O	O
P2	O	O
,	O	O
String.Empty	B-API	B-API
)	O	O
;	O	O
}	O	O
void	O	O
something	O	O
(	O	O
int	O	O
i	O	O
,	O	O
string	O	O
P1	O	O
,	O	O
string	O	O
P2	O	O
,	O	O
string	O	O
P3	O	O
)	O	O
{	O	O
something	O	O
(	O	O
i	O	O
,	O	O
P1	O	O
,	O	O
P2	O	O
,	O	O
P3	O	O
,	O	O
String.Empty	B-API	B-API
)	O	O
;	O	O
}	O	O
and	O	O
so	O	O
on	O	O
...	O	O
Not	O	O
really	O	O
.	O	O
You	O	O
can	O	O
use	O	O
reflection	O	O
to	O	O
achieve	O	O
what	O	O
you	O	O
want	O	O
,	O	O
but	O	O
it	O	O
wo	O	O
n't	O	O
be	O	O
nearly	O	O
as	O	O
simple	O	O
as	O	O
in	O	O
Javascript	O	O
.	O	O
For	O	O
example	O	O
,	O	O
if	O	O
you	O	O
wanted	O	O
to	O	O
set	O	O
the	O	O
private	O	O
field	O	O
of	O	O
an	O	O
object	O	O
to	O	O
something	O	O
,	O	O
you	O	O
could	O	O
use	O	O
this	O	O
function	O	O
:	O	O
protected	O	O
static	O	O
void	O	O
SetField	O	O
(	O	O
object	O	O
o	O	O
,	O	O
string	O	O
fieldName	O	O
,	O	O
object	O	O
value	O	O
)	O	O
{	O	O
FieldInfo	O	O
field	O	O
=	O	O
o.GetType	O	B-API
(	O	I-API
)	O	I-API
.GetField	O	O
(	O	O
fieldName	O	O
,	O	O
BindingFlags.Instance	B-API	B-API
|	O	O
BindingFlags.NonPublic	B-API	B-API
)	O	O
;	O	O
field.SetValue	O	B-API
(	O	I-API
o	O	I-API
,	O	I-API
value	O	I-API
)	O	I-API
;	O	O
}	O	O
Unfortunately	O	O
,	O	O
C	O	O
#	O	O
is	O	O
n't	O	O
a	O	O
dynamic	O	O
language	O	O
like	O	O
that	O	O
.	O	O
What	O	O
you	O	O
can	O	O
do	O	O
,	O	O
however	O	O
,	O	O
is	O	O
to	O	O
create	O	O
a	O	O
C	O	O
#	O	O
source	O	O
code	O	O
file	O	O
,	O	O
full	O	O
with	O	O
class	O	O
and	O	O
everything	O	O
,	O	O
and	O	O
run	O	O
it	O	O
through	O	O
the	O	O
CodeDom	O	O
provider	O	O
for	O	O
C	O	O
#	O	O
and	O	O
compile	O	O
it	O	O
into	O	O
an	O	O
assembly	O	O
,	O	O
and	O	O
then	O	O
execute	O	O
it	O	O
.	O	O
This	O	O
forum	O	O
post	O	O
on	O	O
MSDN	O	O
contains	O	O
an	O	O
answer	O	O
with	O	O
some	O	O
example	O	O
code	O	O
down	O	O
the	O	O
page	O	O
somewhat	O	O
:	O	O
create	O	O
a	O	O
anonymous	O	O
method	O	O
from	O	O
a	O	O
string	O	O
?	O	O
I	O	O
would	O	O
hardly	O	O
say	O	O
this	O	O
is	O	O
a	O	O
very	O	O
good	O	O
solution	O	O
,	O	O
but	O	O
it	O	O
is	O	O
possible	O	O
anyway	O	O
.	O	O
What	O	O
kind	O	O
of	O	O
code	O	O
are	O	O
you	O	O
going	O	O
to	O	O
expect	O	O
in	O	O
that	O	O
string	O	O
?	O	O
If	O	O
it	O	O
is	O	O
a	O	O
minor	O	O
subset	O	O
of	O	O
valid	O	O
code	O	O
,	O	O
for	O	O
instance	O	O
just	O	O
math	O	O
expressions	O	O
,	O	O
it	O	O
might	O	O
be	O	O
that	O	O
other	O	O
alternatives	O	O
exists	O	O
.	O	O
Edit	O	O
:	O	O
Well	O	O
,	O	O
that	O	O
teaches	O	O
me	O	O
to	O	O
read	O	O
the	O	O
questions	O	O
thoroughly	O	O
first	O	O
.	O	O
Yes	O	O
,	O	O
reflection	O	O
would	O	O
be	O	O
able	O	O
to	O	O
give	O	O
you	O	O
some	O	O
help	O	O
here	O	O
.	O	O
If	O	O
you	O	O
split	O	O
the	O	O
string	O	O
by	O	O
the	O	O
;	O	O
first	O	O
,	O	O
to	O	O
get	O	O
individual	O	O
properties	O	O
,	O	O
you	O	O
can	O	O
use	O	O
the	O	O
following	O	O
code	O	O
to	O	O
get	O	O
a	O	O
PropertyInfo	O	O
object	O	O
for	O	O
a	O	O
particular	O	O
property	O	O
for	O	O
a	O	O
class	O	O
,	O	O
and	O	O
then	O	O
use	O	O
that	O	O
object	O	O
to	O	O
manipulate	O	O
a	O	O
particular	O	O
object	O	O
.	O	O
String	B-API	O
propName	I-API	O
=	I-API	O
``	I-API	O
Text	O	O
''	O	O
;	O	O
PropertyInfo	O	O
pi	O	O
=	O	O
someObject.GetType	O	B-API
(	O	I-API
)	O	I-API
.GetProperty	B-API	I-API
(	I-API	I-API
propName	I-API	I-API
)	I-API	I-API
;	O	O
pi.SetValue	O	O
(	O	O
someObject	O	O
,	O	O
``	O	O
New	O	O
Value	O	O
''	O	O
,	O	O
new	O	O
Object	O	O
[	O	O
0	O	O
]	O	O
)	O	O
;	O	O
Link	O	O
:	O	O
PropertyInfo.SetValue	O	O
Method	O	O
All	O	O
of	O	O
that	O	O
would	O	O
definitely	O	O
work	O	O
.	O	O
Personally	O	O
,	O	O
for	O	O
that	O	O
particular	O	O
problem	O	O
,	O	O
I	O	O
would	O	O
probably	O	O
take	O	O
a	O	O
little	O	O
different	O	O
approach	O	O
.	O	O
Maybe	O	O
something	O	O
like	O	O
this	O	O
:	O	O
class	B-API	O
MyClass	B-API	O
{	B-API	O
public	B-API	O
Point	B-API	O
point1	B-API	O
,	I-API	O
point2	B-API	O
,	I-API	O
point3	B-API	O
;	I-API	O
private	B-API	O
Point	B-API	O
[	I-API	O
]	I-API	O
points	B-API	O
;	I-API	O
public	B-API	O
{	B-API	O
//	B-API	O
...	I-API	O
this.points	B-API	B-API
=	B-API	O
new	B-API	O
Point	B-API	O
[	I-API	O
]	I-API	O
{	B-API	O
point1	I-API	O
,	I-API	O
point2	B-API	O
,	I-API	O
point3	B-API	O
}	I-API	O
;	I-API	O
}	B-API	O
public	B-API	O
void	B-API	O
{	B-API	O
Point	B-API	O
target	B-API	O
=	B-API	O
this.points	B-API	O
[	I-API	O
i+1	I-API	O
]	I-API	O
;	I-API	O
//	B-API	O
do	B-API	O
stuff	B-API	O
to	B-API	O
target	B-API	O
MyClass	B-API	O
(	I-API	O
)	I-API	O
(	O	O
int	O	O
i	O	O
)	O	O
When	O	O
using	O	O
patterns	O	O
like	O	O
this	O	O
,	O	O
you	O	O
have	O	O
to	O	O
be	O	O
careful	O	O
that	O	O
your	O	O
data	O	O
is	O	O
stored	O	O
by	O	O
reference	O	O
and	O	O
not	O	O
by	O	O
value	O	O
.	O	O
In	O	O
other	O	O
words	O	O
,	O	O
do	O	O
n't	O	O
do	O	O
this	O	O
with	O	O
primitives	O	O
.	O	O
You	O	O
have	O	O
to	O	O
use	O	O
their	O	O
big	O	O
bloated	O	O
class	O	O
counterparts	O	O
.	O	O
I	O	O
realized	O	O
that	O	O
's	O	O
not	O	O
exactly	O	O
the	O	O
question	O	O
,	O	O
but	O	O
the	O	O
question	O	O
has	O	O
been	O	O
pretty	O	O
well	O	O
answered	O	O
and	O	O
I	O	O
thought	O	O
maybe	O	O
an	O	O
alternative	O	O
approach	O	O
might	O	O
help	O	O
.	O	O
J	O	O
#	O	O
is	O	O
no	O	O
longer	O	O
included	O	O
in	O	O
VS2008	O	O
.	O	O
Unless	O	O
you	O	O
already	O	O
have	O	O
J	O	O
#	O	O
code	O	O
,	O	O
you	O	O
should	O	O
probably	O	O
stay	O	O
away	O	O
.	O	O
From	O	O
j	O	O
#	O	O
product	O	O
page	O	O
:	O	O
Since	O	O
customers	O	O
have	O	O
told	O	O
us	O	O
that	O	O
the	O	O
existing	O	O
J	O	O
#	O	O
feature	O	O
set	O	O
largely	O	O
meets	O	O
their	O	O
needs	O	O
and	O	O
usage	O	O
of	O	O
J	O	O
#	O	O
is	O	O
declining	O	O
,	O	O
Microsoft	O	O
is	O	O
retiring	O	O
the	O	O
Visual	O	O
J	O	O
#	O	O
product	O	O
and	O	O
Java	O	O
Language	O	O
Conversion	O	O
Assistant	O	O
tool	O	O
to	O	O
better	O	O
allocate	O	O
resources	O	O
for	O	O
other	O	O
customer	O	O
requirements	O	O
.	O	O
The	O	O
J	O	O
#	O	O
language	O	O
and	O	O
JLCA	O	O
tool	O	O
will	O	O
not	O	O
be	O	O
available	O	O
in	O	O
future	O	O
versions	O	O
of	O	O
Visual	O	O
Studio	O	O
.	O	O
To	O	O
preserve	O	O
existing	O	O
customer	O	O
investments	O	O
in	O	O
J	O	O
#	O	O
,	O	O
Microsoft	O	O
will	O	O
continue	O	O
to	O	O
support	O	O
the	O	O
J	O	O
#	O	O
and	O	O
JLCA	O	O
technology	O	O
that	O	O
shipped	O	O
with	O	O
Visual	O	B-API
Studio	O	I-API
2005	O	I-API
through	O	O
to	O	O
2015	O	O
as	O	O
per	O	O
our	O	O
product	O	O
life-cycle	O	O
strategy	O	O
.	O	O
For	O	O
more	O	O
information	O	O
,	O	O
see	O	O
Expanded	O	O
Microsoft	O	O
Support	O	O
Lifecycle	O	O
Policy	O	O
for	O	O
Business	O	O
Development	O	O
Products	O	O
.	O	O
The	O	O
whole	O	O
purpose	O	O
of	O	O
J	O	O
#	O	O
is	O	O
to	O	O
ease	O	O
the	O	O
transition	O	O
of	O	O
Java	O	O
developers	O	O
to	O	O
the	O	O
.NET	O	O
environment	O	O
which	O	O
did	O	O
n't	O	O
work	O	O
so	O	O
well	O	O
(	O	O
I	O	O
guessing	O	O
here	O	O
)	O	O
so	O	O
Microsoft	O	O
dropped	O	O
J	O	O
#	O	O
from	O	O
Visual	O	O
Studio	O	O
2008	O	O
.	O	O
For	O	O
your	O	O
question	O	O
,	O	O
``	O	O
Is	O	O
there	O	O
a	O	O
real	O	O
benefit	O	O
of	O	O
using	O	O
J	O	O
#	O	O
?	O	O
''	O	O
..	O	O
in	O	O
a	O	O
nutshell	O	O
...	O	O
No..	O	O
One	O	O
of	O	O
the	O	O
killers	O	O
I	O	O
've	O	O
found	O	O
with	O	O
J	O	O
#	O	O
in	O	O
the	O	O
past	O	O
is	O	O
that	O	O
there	O	O
is	O	O
no	O	O
built	O	O
in	O	O
support	O	O
for	O	O
referencing	O	O
web	O	O
services	O	O
.	O	O
That	O	O
alone	O	O
has	O	O
been	O	O
enough	O	O
to	O	O
deter	O	O
me	O	O
from	O	O
it	O	O
ever	O	O
since	O	O
.	O	O
C	O	O
#	O	O
syntax	O	O
is	O	O
so	O	O
close	O	O
to	O	O
Java	O	B-API
(	O	O
and	O	O
better	O	O
in	O	O
some	O	O
ways	O	O
)	O	O
that	O	O
you	O	O
might	O	O
as	O	O
well	O	O
learn	O	O
C	O	O
#	O	O
instead	O	O
of	O	O
J	O	O
#	O	O
.	O	O
And	O	O
since	O	O
C	O	O
#	O	O
is	O	O
more	O	O
widely	O	O
used	O	O
,	O	O
you	O	O
can	O	O
easily	O	O
find	O	O
Java	O	O
--	O	O
C	O	O
#	O	O
tutorials	O	O
on	O	O
google	O	O
or	O	O
check	O	O
out	O	O
http	O	O
:	O	O
//www.asp.net/learn	O	O
and	O	O
watch	O	O
some	O	O
videos	O	O
.	O	O
No	O	O
,	O	O
there	O	O
are	O	O
many	O	O
applications	O	O
built	O	O
with	O	O
VS2005	O	O
that	O	O
have	O	O
to	O	O
support	O	O
Windows	O	O
XP	O	O
,	O	O
2000	O	O
,	O	O
NT	O	O
,	O	O
the	O	O
whole	O	O
stack	O	O
.	O	O
The	O	O
issue	O	O
is	O	O
that	O	O
(	O	O
by	O	O
default	O	O
)	O	O
VS2005	O	O
wants	O	O
to	O	O
use	O	O
libraries/exports	O	O
not	O	O
present	O	O
on	O	O
NT	O	O
.	O	O
See	O	O
this	O	O
thread	O	O
for	O	O
some	O	O
background	O	O
.	O	O
Then	O	O
start	O	O
limiting	O	O
your	O	O
dependencies	O	O
via	O	O
preprocessor	O	O
macros	O	O
,	O	O
and	O	O
avoiding	O	O
APIs	O	O
which	O	O
are	O	O
n't	O	O
supported	O	O
on	O	O
NT	O	O
.	O	O
I	O	O
would	O	O
suggest	O	O
storing	O	O
the	O	O
stylesheet	O	O
selection	O	O
in	O	O
the	O	O
session	O	O
so	O	O
you	O	O
do	O	O
n't	O	O
have	O	O
to	O	O
rely	O	O
on	O	O
the	O	O
querystring	O	O
key	O	O
being	O	O
present	O	O
all	O	O
the	O	O
time	O	O
.	O	O
You	O	O
can	O	O
check	O	O
the	O	O
session	O	O
in	O	O
Page_Load	O	O
and	O	O
add	O	O
the	O	O
appropriate	O	O
stylesheet	O	O
reference	O	O
.	O	O
It	O	O
sounds	O	O
like	O	O
this	O	O
is	O	O
a	O	O
temporary/development	O	O
situation	O	O
,	O	O
so	O	O
go	O	O
with	O	O
whatever	O	O
is	O	O
easy	O	O
and	O	O
works	O	O
.	O	O
if	O	O
)	O	O
(	O	O
!	O	O
String.IsNullOrEmpty	B-API	B-API
(	O	I-API
Request.QueryString	B-API	I-API
[	O	I-API
``	O	I-API
css	O	I-API
''	O	I-API
]	O	I-API
)	O	I-API
Session.Add	B-API	B-API
(	I-API	I-API
``	I-API	I-API
CSS	I-API	I-API
''	I-API	I-API
,	I-API	I-API
Request.QueryString	B-API	B-API
[	O	I-API
``	O	I-API
css	O	I-API
''	O	I-API
]	O	I-API
)	O	I-API
In	O	O
Asp.net	O	O
3.5	O	O
,	O	O
you	O	O
should	O	O
be	O	O
able	O	O
to	O	O
set	O	O
up	O	O
the	O	O
Link	O	O
tag	O	O
in	O	O
the	O	O
header	O	O
as	O	O
a	O	O
server	O	O
tag	O	O
.	O	O
Then	O	O
in	O	O
the	O	O
codebehind	O	O
you	O	O
can	O	O
set	O	O
the	O	O
href	O	O
property	O	O
for	O	O
the	O	O
link	O	O
element	O	O
,	O	O
based	O	O
on	O	O
a	O	O
cookie	O	O
value	O	O
,	O	O
querystring	O	O
,	O	O
date	O	O
,	O	O
etc	O	O
.	O	O
In	O	O
your	O	O
aspx	O	O
file	O	O
:	O	O
head	O	O
link	O	O
id=	O	O
''	O	O
linkStyles	O	O
''	O	O
rel=	O	O
''	O	O
stylesheet	O	O
''	O	O
type=	O	O
''	O	O
text/css	O	O
''	O	O
runat=	O	O
''	O	O
server	O	O
''	O	O
/	O	O
/head	O	O
And	O	O
in	O	O
the	O	O
Code	O	O
behind	O	O
:	O	O
protected	O	O
void	O	O
Page_Load	O	O
(	O	O
object	O	O
sender	O	O
,	O	O
EventArgs	O	O
e	O	O
)	O	O
{	O	O
string	O	O
stylesheetAddress	O	O
=	O	O
//	O	O
logic	O	O
to	O	O
determine	O	O
stylesheet	O	O
linkStyles.Href	B-API	B-API
=	O	O
stylesheetAddress	O	O
;	O	O
}	O	O
You	O	O
should	O	O
look	O	O
into	O	O
ASP.NET	O	O
themes	O	O
,	O	O
that	O	O
's	O	O
exactly	O	O
what	O	O
they	O	O
're	O	O
used	O	O
for	O	O
.	O	O
They	O	O
also	O	O
allow	O	O
you	O	O
to	O	O
skin	O	O
controls	O	O
,	O	O
which	O	O
means	O	O
give	O	O
them	O	O
a	O	O
set	O	O
of	O	O
default	O	O
attributes	O	O
.	O	O
I	O	O
would	O	O
do	O	O
the	O	O
following	O	O
:	O	O
www.website.com/	O	O
?	O	O
stylesheet=new.css	O	O
Then	O	O
in	O	O
your	O	O
ASP.NET	O	O
code	O	O
:	O	O
if	O	O
(	O	O
Request.Querystring	B-API	O
[	O	O
``	O	O
stylesheet	O	O
''	O	O
]	O	O
!	O	O
=	O	O
null	O	O
)	O	O
{	O	O
Response.Cookies	B-API	O
[	I-API	O
``	I-API	O
stylesheet	I-API	O
''	I-API	O
]	I-API	O
.Value	O	O
=	O	O
Request.QueryString	B-API	B-API
[	I-API	O
``	I-API	O
stylesheet	I-API	O
''	I-API	O
]	I-API	O
;	O	O
(	O	O
Current	O	O
Page	O	O
)	O	O
Then	O	O
where	O	O
you	O	O
define	O	O
your	O	O
stylesheets	O	O
:	O	O
if	O	O
(	O	O
Request.Cookies	B-API	O
[	I-API	O
``	I-API	O
stylesheet	I-API	O
''	I-API	O
]	I-API	O
!	O	O
=	O	O
null	O	O
)	O	O
{	O	O
//	O	O
New	O	O
Stylesheet	O	O
}	O	O
else	O	O
{	O	O
//	O	O
Assuming	O	O
module	O	O
with	O	O
method	O	O
:	O	O
import	O	O
foo	B-API	O
methodToCall	I-API	O
=	I-API	O
(	I-API	O
foo	I-API	O
,	I-API	O
'bar	I-API	O
'	I-API	O
)	I-API	O
result	O	O
=	O	O
methodToCall	O	B-API
(	O	I-API
)	O	I-API
As	O	O
far	O	O
as	O	O
that	O	O
goes	O	O
,	O	O
lines	O	O
2	O	O
and	O	O
3	O	O
can	O	O
be	O	O
compressed	O	O
to	O	O
:	O	O
result	O	O
=	O	O
getattr	B-API	B-API
(	I-API	I-API
foo	I-API	I-API
,	I-API	I-API
'bar	I-API	I-API
'	I-API	I-API
)	I-API	I-API
(	O	O
)	O	O
if	O	O
that	O	O
makes	O	O
more	O	O
sense	O	O
for	O	O
your	O	O
use	O	O
case	O	O
.	O	O
You	O	O
can	O	O
use	O	O
getattr	O	O
in	O	O
this	O	O
fashion	O	O
on	O	O
class	O	O
instance	O	O
bound	O	O
methods	O	O
,	O	O
module-level	O	O
methods	O	O
,	O	O
class	O	O
methods	O	O
...	O	O
the	O	O
list	O	O
goes	O	O
on	O	O
.	O	O
Patrick	O	O
's	O	O
solution	O	O
is	O	O
probably	O	O
the	O	O
cleanest	O	O
.	O	O
If	O	O
you	O	O
need	O	O
to	O	O
dynamically	O	O
pick	O	O
up	O	O
the	O	O
module	O	O
as	O	O
well	O	O
,	O	O
you	O	O
can	O	O
import	O	O
it	O	O
like	O	O
:	O	O
m	O	O
=	O	O
__import__	O	B-API
(	O	I-API
'foo	O	I-API
'	O	I-API
)	O	I-API
func	O	O
=	O	O
getattr	O	B-API
(	O	I-API
m	O	I-API
,	O	I-API
'bar	O	I-API
'	O	I-API
)	O	I-API
func	O	B-API
(	O	I-API
)	O	I-API
Check	O	O
out	O	O
FileHelpers	O	O
Open	O	O
Source	O	O
Library	O	O
.	O	O
A	O	O
good	O	O
simple	O	O
way	O	O
to	O	O
do	O	O
it	O	O
is	O	O
to	O	O
open	O	O
the	O	O
file	O	O
,	O	O
and	O	O
read	O	O
each	O	O
line	O	O
into	O	O
an	O	O
array	O	O
,	O	O
linked	O	O
list	O	O
,	O	O
data-structure-of-your-choice	O	O
.	O	O
Be	O	O
careful	O	O
about	O	O
handling	O	O
the	O	O
first	O	O
line	O	O
though	O	O
.	O	O
This	O	O
may	O	O
be	O	O
over	O	O
your	O	O
head	O	O
,	O	O
but	O	O
there	O	O
seems	O	O
to	O	O
be	O	O
a	O	O
direct	O	O
way	O	O
to	O	O
access	O	O
them	O	O
as	O	O
well	O	O
using	O	O
a	O	O
connection	O	O
string	O	O
.	O	O
Why	O	O
not	O	O
try	O	O
using	O	O
Python	O	O
instead	O	O
of	O	O
C	O	O
#	O	O
or	O	O
VB	O	O
?	O	O
It	O	O
has	O	O
a	O	O
nice	O	O
CSV	O	O
module	O	O
to	O	O
import	O	O
that	O	O
does	O	O
all	O	O
the	O	O
heavy	O	O
lifting	O	O
for	O	O
you	O	O
.	O	O
If	O	O
you	O	O
can	O	O
guarantee	O	O
that	O	O
there	O	O
are	O	O
no	O	O
commas	O	O
in	O	O
the	O	O
data	O	O
,	O	O
then	O	O
the	O	O
simplest	O	O
way	O	O
would	O	O
probably	O	O
be	O	O
to	O	O
use	O	O
String.split	B-API	O
.	O	O
For	O	O
example	O	O
:	O	O
String	B-API	B-API
[	I-API	I-API
]	I-API	I-API
values	I-API	O
=	I-API	O
;	I-API	O
myObject.StringField	I-API	B-API
=	I-API	O
values	I-API	O
[	I-API	O
0	I-API	O
]	I-API	O
;	O	O
myObject.IntField	B-API	O
=	O	O
myString.Split	B-API	B-API
(	O	I-API
'	O	I-API
,	O	I-API
'	O	I-API
)	O	I-API
Int32.Parse	B-API	B-API
(	I-API	I-API
values	I-API	B-API
[	I-API	I-API
1	I-API	I-API
]	I-API	I-API
)	I-API	I-API
There	O	O
may	O	O
be	O	O
libraries	O	O
you	O	O
could	O	O
use	O	O
to	O	O
help	O	O
,	O	O
but	O	O
that	O	O
's	O	O
probably	O	O
as	O	O
simple	O	O
as	O	O
you	O	O
can	O	O
get	O	O
.	O	O
Just	O	O
make	O	O
sure	O	O
you	O	O
ca	O	O
n't	O	O
have	O	O
commas	O	O
in	O	O
the	O	O
data	O	O
,	O	O
otherwise	O	O
you	O	O
will	O	O
need	O	O
to	O	O
parse	O	O
it	O	O
better	O	O
.	O	O
There	O	O
are	O	O
two	O	O
articles	O	O
on	O	O
CodeProject	O	O
that	O	O
provide	O	O
code	O	O
for	O	O
a	O	O
solution	O	O
,	O	O
one	O	O
that	O	O
uses	O	O
StreamReader	B-API	O
and	O	O
one	O	O
that	O	O
imports	O	O
CSV	O	O
data	O	O
using	O	O
the	O	O
Microsoft	O	O
Text	O	O
Driver	O	O
.	O	O
I	O	O
was	O	O
bored	O	O
so	O	O
i	O	O
modified	O	O
some	O	O
stuff	O	O
i	O	O
wrote	O	O
.	O	O
It	O	O
try	O	O
's	O	O
to	O	O
encapsulate	O	O
the	O	O
parsing	O	O
in	O	O
an	O	O
OO	O	O
manner	O	O
whle	O	O
cutting	O	O
down	O	O
on	O	O
the	O	O
amount	O	O
of	O	O
iterations	O	O
through	O	O
the	O	O
file	O	O
,	O	O
it	O	O
only	O	O
iterates	O	O
once	O	O
at	O	O
the	O	O
top	O	O
foreach	O	O
.	O	O
using	O	O
System	B-API	B-API
;	O	O
using	O	O
System.Collections.Generic	B-API	B-API
;	O	O
using	O	O
System.Linq	B-API	B-API
;	O	O
using	O	O
System.Text	B-API	B-API
;	O	O
using	O	O
System.IO	B-API	O
;	O	O
namespace	O	O
ConsoleApplication1	O	O
{	O	O
class	O	O
Program	O	O
{	O	O
static	O	O
void	O	O
Main	O	O
(	O	O
string	B-API	O
[	I-API	O
]	I-API	O
args	O	O
)	O	O
{	O	O
//	O	O
usage	O	O
:	O	O
//	O	O
note	O	O
this	O	O
wont	O	O
run	O	O
as	O	O
getting	O	O
streams	O	O
is	O	O
not	O	O
Implemented	O	O
//	O	O
but	O	O
will	O	O
get	O	O
you	O	O
started	O	O
CSVFileParser	B-API	O
fileParser	I-API	O
=	I-API	O
new	I-API	O
CSVFileParser	I-API	B-API
(	I-API	I-API
)	I-API	I-API
;	O	O
//	O	O
TO	O	O
Do	O	O
:	O	O
configure	O	O
fileparser	O	O
PersonParser	B-API	O
personParser	I-API	O
=	I-API	O
new	I-API	O
PersonParser	I-API	O
(	I-API	O
fileParser	I-API	O
)	I-API	O
;	O	O
ListPerson	O	O
persons	O	O
=	O	O
new	O	O
ListPerson	O	O
(	O	O
)	O	O
;	O	O
//	O	O
if	O	O
the	O	O
file	O	O
is	O	O
large	O	O
and	O	O
there	O	O
is	O	O
a	O	O
good	O	O
way	O	O
to	O	O
limit	O	O
//	O	O
without	O	O
having	O	O
to	O	O
reparse	O	O
the	O	O
whole	O	O
file	O	O
you	O	O
can	O	O
use	O	O
a	O	O
//	O	O
linq	O	O
query	O	O
if	O	O
you	O	O
desire	O	O
foreach	O	O
(	O	O
Person	O	O
person	O	O
in	O	O
personParser.GetPersons	O	B-API
(	O	I-API
)	O	I-API
)	O	O
{	O	O
persons.Add	O	B-API
(	O	I-API
person	O	I-API
)	O	I-API
;	O	O
}	O	O
//	O	O
now	O	O
we	O	O
have	O	O
a	O	O
list	O	O
of	O	O
Person	O	O
objects	O	O
}	O	O
}	O	O
public	O	O
abstract	O	O
class	O	O
CSVParser	O	O
{	O	O
protected	O	O
String	O	B-API
[	O	I-API
]	O	I-API
deliniators	O	O
=	O	O
{	O	O
``	O	O
,	O	O
''	O	O
}	O	O
;	O	O
protected	O	O
internal	O	O
IEnumerableString	B-API	O
[	I-API	O
]	I-API	O
GetRecords	I-API	O
(	I-API	O
)	I-API	O
{	O	O
Stream	B-API	O
stream	I-API	O
=	I-API	O
GetStream	I-API	B-API
(	I-API	I-API
)	I-API	I-API
;	O	O
StreamReader	B-API	O
reader	I-API	O
=	I-API	O
new	I-API	O
StreamReader	I-API	O
(	I-API	O
stream	I-API	O
)	I-API	O
;	O	O
String	B-API	O
[	I-API	O
]	I-API	O
aRecord	I-API	O
;	O	O
while	O	O
(	O	O
!	O	O
reader.EndOfStream	B-API	O
)	O	O
{	O	O
aRecord	O	O
=	O	O
reader.ReadLine	B-API	B-API
(	I-API	I-API
)	I-API	I-API
.Split	O	I-API
(	O	I-API
deliniators	O	I-API
,	O	I-API
StringSplitOptions.None	B-API	I-API
)	O	I-API
;	O	O
yield	O	O
return	O	O
aRecord	O	O
;	O	O
}	O	O
}	O	O
protected	O	O
abstract	O	O
Stream	B-API	O
GetStream	I-API	O
(	I-API	O
)	I-API	O
;	O	O
}	O	O
public	O	O
class	O	O
CSVFileParser	O	O
:	O	O
CSVParser	O	O
{	O	O
//	O	O
to	O	O
do	O	O
:	O	O
add	O	O
logic	O	O
to	O	O
get	O	O
a	O	O
stream	O	O
from	O	O
a	O	O
file	O	O
protected	O	O
override	O	O
Stream	B-API	O
GetStream	I-API	O
(	I-API	O
)	I-API	O
{	O	O
throw	O	O
new	O	O
NotImplementedException	B-API	B-API
(	I-API	I-API
)	I-API	I-API
;	O	O
}	O	O
}	O	O
public	O	O
class	O	O
CSVWebParser	O	O
:	O	O
CSVParser	O	O
{	O	O
//	O	O
to	O	O
do	O	O
:	O	O
add	O	O
logic	O	O
to	O	O
get	O	O
a	O	O
stream	O	O
from	O	O
a	O	O
web	O	O
request	O	O
protected	O	O
override	O	O
Stream	B-API	O
GetStream	I-API	O
(	I-API	O
)	I-API	O
{	O	O
throw	O	O
new	O	O
NotImplementedException	B-API	B-API
(	I-API	I-API
)	I-API	I-API
;	O	O
}	O	O
}	O	O
public	O	O
class	O	O
Person	O	O
{	O	O
public	O	O
String	B-API	O
Name	I-API	O
{	I-API	O
get	I-API	O
;	I-API	O
set	I-API	O
;	I-API	O
}	I-API	O
public	O	O
String	B-API	O
Address	I-API	O
{	I-API	O
get	I-API	O
;	I-API	O
set	I-API	O
;	I-API	O
}	I-API	O
public	O	O
DateTime	B-API	O
DOB	O	O
{	O	O
get	O	O
;	O	O
set	O	O
;	O	O
}	O	O
}	O	O
public	O	O
class	O	O
PersonParser	O	O
{	O	O
public	O	O
PersonParser	O	O
(	O	O
CSVParser	O	O
parser	O	O
)	O	O
{	O	O
this.Parser	O	O
=	O	O
parser	O	O
;	O	O
}	O	O
public	O	O
CSVParser	O	O
Parser	O	O
{	O	O
get	O	O
;	O	O
set	O	O
;	O	O
}	O	O
public	O	O
IEnumerablePerson	O	O
GetPersons	O	O
(	O	O
)	O	O
{	O	O
foreach	O	O
(	O	O
String	B-API	O
[	I-API	O
]	I-API	O
record	I-API	O
in	I-API	O
this.Parser.GetRecords	I-API	B-API
(	I-API	I-API
)	I-API	I-API
)	O	O
{	O	O
yield	O	O
return	O	O
new	O	O
Person	O	O
(	O	O
)	O	O
{	O	O
Name	O	O
=	O	O
record	O	O
[	O	O
0	O	O
]	O	O
,	O	O
Address	O	O
=	O	O
record	O	O
[	O	O
1	O	O
]	O	O
,	O	O
DOB	O	O
=	O	O
DateTime.Parse	B-API	B-API
(	I-API	I-API
record	I-API	I-API
[	I-API	I-API
2	I-API	I-API
]	I-API	I-API
)	I-API	I-API
,	O	O
}	O	O
;	O	O
}	O	O
}	O	O
}	O	O
}	O	O
Brian	O	O
gives	O	O
a	O	O
nice	O	O
solution	O	O
for	O	O
converting	O	O
it	O	O
to	O	O
a	O	O
strongly	O	O
typed	O	O
collection	O	O
.	O	O
Most	O	O
of	O	O
the	O	O
CSV	O	O
parsing	O	O
methods	O	O
given	O	O
do	O	O
n't	O	O
take	O	O
into	O	O
account	O	O
escaping	O	O
fields	O	O
or	O	O
some	O	O
of	O	O
the	O	O
other	O	O
subtleties	O	O
of	O	O
CSV	O	O
files	O	O
(	O	O
like	O	O
trimming	O	O
fields	O	O
)	O	O
.	O	O
Here	O	O
is	O	O
the	O	O
code	O	O
I	O	O
personally	O	O
use	O	O
.	O	O
It	O	O
's	O	O
a	O	O
bit	O	O
rough	O	O
around	O	O
the	O	O
edges	O	O
and	O	O
has	O	O
pretty	O	O
much	O	O
no	O	O
error	O	O
reporting	O	O
.	O	O
public	O	O
static	B-API	O
IListIListstring	O	O
{	O	O
IListIListstring	O	O
records	O	O
=	O	O
new	O	O
;	O	O
StringReader	B-API	B-API
stringReader	I-API	O
=	I-API	O
new	I-API	O
;	O	O
bool	B-API	O
inQoutedString	I-API	O
=	I-API	O
false	I-API	O
;	I-API	O
IListstring	B-API	O
record	B-API	O
=	B-API	O
new	I-API	O
;	O	O
StringBuilder	B-API	B-API
fieldBuilder	I-API	O
=	I-API	O
new	I-API	O
;	O	O
while	O	O
!	O	O
=	O	O
-1	O	O
)	O	O
{	O	O
char	O	O
readChar	O	O
=	O	O
;	O	O
if	O	O
(	O	O
readChar	O	O
==	O	O
'\n	O	O
'	O	O
||	O	O
(	O	O
readChar	O	O
==	O	O
'\r	O	O
'	O	O
==	O	O
'\n	O	O
'	O	O
)	O	O
)	O	O
{	O	O
//	O	O
If	O	O
it	O	O
's	O	O
a	O	O
\r\n	O	O
combo	O	O
consume	O	O
the	O	O
\n	O	O
part	O	O
and	O	O
throw	O	O
it	O	O
away	O	O
.	O	O
if	O	O
(	O	O
readChar	O	O
==	O	O
'\r	O	O
'	O	O
)	O	O
{	O	O
;	O	O
}	O	O
if	O	O
(	O	O
inQoutedString	O	O
)	O	O
{	O	O
if	O	O
(	O	O
readChar	O	O
==	O	O
'\r	O	O
'	O	O
)	O	O
{	O	O
;	O	O
}	O	O
;	O	O
}	O	O
else	O	O
{	O	O
)	O	O
;	O	O
fieldBuilder	B-API	O
=	I-API	O
new	I-API	O
;	O	O
;	O	O
record	O	O
=	O	O
new	O	O
;	O	O
inQoutedString	O	O
=	O	O
false	O	O
;	O	O
}	O	O
}	O	O
else	O	O
if	O	O
(	O	O
fieldBuilder.Length	O	O
==	O	O
0	O	O
!	O	O
inQoutedString	O	O
)	O	O
{	O	O
if	O	O
)	O	O
{	O	O
//	O	O
Ignore	O	O
leading	O	O
whitespaCe	O	O
}	O	O
else	O	O
if	O	O
(	O	O
readChar	O	O
==	O	O
'	O	O
''	O	O
'	O	O
)	O	O
{	O	O
inQoutedString	O	O
=	O	O
true	O	O
;	O	O
}	O	O
else	O	B-API
if	O	I-API
(	O	I-API
readChar	O	I-API
==	O	I-API
'	O	I-API
,	O	I-API
'	O	I-API
)	O	I-API
{	O	O
)	O	O
;	O	O
fieldBuilder	O	O
=	O	O
new	O	O
;	O	O
}	O	O
else	O	O
{	O	O
;	O	O
}	O	O
}	O	O
else	O	B-API
if	O	I-API
(	O	I-API
readChaO	O	I-API
==	O	I-API
'	O	I-API
,	O	I-API
'	O	I-API
)	O	I-API
{	O	O
if	O	O
(	O	O
inQoutedString	O	O
)	O	O
{	O	O
;	O	O
}	O	O
else	O	O
{	O	O
)	O	O
;	O	O
fieldBuilder	O	O
=	O	O
new	O	O
;	O	O
}	O	O
}	O	O
else	O	O
if	O	O
(	O	O
readChar	O	O
==	O	O
'	O	O
''	O	O
'	O	O
)	O	O
{	O	O
if	O	O
(	O	O
inQoutedString	O	O
)	O	O
{	O	O
if	O	O
==	O	O
'	O	O
''	O	O
'	O	O
)	O	O
{	O	O
;	O	O
;	O	O
}	O	O
else	O	O
{	O	O
inQoutedString	O	O
=	O	O
false	O	O
;	O	O
}	O	O
}	O	O
else	O	O
{	O	O
;	O	O
}	O	O
}	O	O
else	O	B-API
{	O	I-API
;	O	I-API
}	O	I-API
}	O	I-API
)	O	I-API
;	O	O
;	O	O
return	O	O
(	O	O
string	B-API	O
content	I-API	O
)	O	O
ListIListstring	B-API	B-API
(	I-API	I-API
)	I-API	I-API
StringReader	B-API	B-API
(	I-API	I-API
content	I-API	I-API
)	I-API	I-API
Liststring	B-API	B-API
(	I-API	I-API
)	I-API	I-API
StringBuilder	B-API	B-API
(	I-API	I-API
)	I-API	I-API
(	O	O
stringReader.Peek	B-API	B-API
(	I-API	I-API
)	I-API	I-API
(	O	O
char	O	O
)	O	O
stringReader.Read	B-API	B-API
(	I-API	I-API
)	I-API	I-API
stringReader.Peek	B-API	B-API
(	I-API	I-API
)	I-API	I-API
stringReader.Read	B-API	B-API
(	I-API	I-API
)	I-API	I-API
fieldBuilder.Append	B-API	B-API
(	I-API	I-API
'\r	I-API	I-API
'	I-API	I-API
)	I-API	I-API
fieldBuilder.Append	B-API	B-API
(	I-API	I-API
'\n	I-API	I-API
'	I-API	I-API
)	I-API	I-API
record.Add	B-API	B-API
(	I-API	I-API
fieldBuilder.ToString	B-API	I-API
(	I-API	I-API
)	I-API	I-API
.TrimEnd	I-API	I-API
(	I-API	I-API
)	I-API	I-API
StringBuilder	B-API	B-API
(	I-API	I-API
)	I-API	I-API
records.Add	O	O
(	O	O
record	O	O
)	O	O
Liststring	O	B-API
(	O	I-API
)	O	I-API
(	O	O
char.IsWhiteSpace	B-API	B-API
(	I-API	I-API
readChar	I-API	I-API
)	I-API	I-API
record.Add	O	B-API
(	O	I-API
fieldBuilder.ToString	B-API	I-API
(	I-API	I-API
)	I-API	I-API
.TrimEnd	I-API	I-API
(	I-API	I-API
)	I-API	I-API
StringBuilder	B-API	B-API
(	I-API	I-API
)	I-API	I-API
fieldBuilder.Append	B-API	B-API
(	I-API	I-API
readChar	I-API	I-API
)	I-API	I-API
fieldBuilder.Append	B-API	B-API
(	I-API	I-API
'	I-API	I-API
,	I-API	I-API
'	I-API	I-API
)	I-API	I-API
record.Add	B-API	B-API
(	I-API	I-API
fieldBuilder.ToString	I-API	I-API
(	I-API	I-API
)	I-API	I-API
.TrimEnd	I-API	I-API
(	I-API	I-API
)	I-API	I-API
StringBuilder	B-API	B-API
(	I-API	I-API
)	I-API	I-API
(	O	O
stringReader.Peek	B-API	B-API
(	I-API	I-API
)	I-API	I-API
stringReader.Read	B-API	B-API
(	I-API	I-API
)	I-API	I-API
fieldBuilder.Append	B-API	B-API
(	I-API	I-API
'	I-API	I-API
''	I-API	I-API
'	I-API	I-API
)	I-API	I-API
fieldBuilder.Append	B-API	B-API
(	I-API	I-API
readChar	I-API	I-API
)	I-API	I-API
fieldBuilder.Append	B-API	B-API
(	I-API	I-API
readChar	I-API	I-API
)	I-API	I-API
record.Add	B-API	B-API
(	I-API	I-API
fieldBuilder.ToString	B-API	I-API
(	I-API	I-API
)	I-API	I-API
.TrimEnd	I-API	I-API
(	I-API	I-API
)	I-API	I-API
records.Add	B-API	O
(	I-API	O
record	I-API	O
)	I-API	O
Note	O	O
that	O	O
this	O	O
does	O	O
n't	O	O
handle	O	O
the	O	O
edge	O	O
case	O	O
of	O	O
fields	O	O
not	O	O
being	O	O
deliminated	O	O
by	O	O
double	O	O
quotes	O	O
,	O	O
but	O	O
meerley	O	O
having	O	O
a	O	O
quoted	O	O
string	O	O
inside	O	O
of	O	O
it	O	O
.	O	O
See	O	O
this	O	O
post	O	O
for	O	O
a	O	O
bit	O	O
of	O	O
a	O	O
better	O	O
expanation	O	O
as	O	O
well	O	O
as	O	O
some	O	O
links	O	O
to	O	O
some	O	O
proper	O	O
libraries	O	O
.	O	O
You	O	O
need	O	O
to	O	O
create	O	O
an	O	O
extension	O	O
method	O	O
,	O	O
which	O	O
requires	O	O
.NET	O	O
3.5	O	O
.	O	O
The	O	O
method	O	O
needs	O	O
to	O	O
be	O	O
static	O	O
,	O	O
in	O	O
a	O	O
static	O	O
class	O	O
.	O	O
The	O	O
first	O	O
parameter	O	O
of	O	O
the	O	O
method	O	O
needs	O	O
to	O	O
be	O	O
prefixed	O	O
with	O	O
``	O	O
this	O	O
''	O	O
in	O	O
the	O	O
signature	O	O
.	O	O
public	B-API	O
static	B-API	B-API
string	B-API	O
{	B-API	O
//	B-API	O
do	B-API	O
(	O	O
this	O	O
string	O	O
input	O	O
)	O	O
You	O	O
can	O	O
then	O	O
call	O	O
it	O	O
like	O	O
``	B-API	O
asdfas	I-API	O
''	I-API	O
.MyMethod	I-API	O
(	I-API	O
)	I-API	O
You	O	O
ca	O	O
n't	O	O
dynamically	O	O
add	O	O
methods	O	O
to	O	O
existing	O	O
objects	O	O
or	O	O
classes	O	O
in	O	O
.NET	O	O
,	O	O
except	O	O
by	O	O
changing	O	O
the	O	O
source	O	O
for	O	O
that	O	O
class	O	O
.	O	O
You	O	O
can	O	O
,	O	O
however	O	O
,	O	O
in	O	O
C	O	O
#	O	O
3.0	O	O
,	O	O
use	O	O
extension	O	O
methods	O	O
,	O	O
which	O	O
look	O	O
like	O	O
new	O	O
methods	O	O
,	O	O
but	O	O
are	O	O
compile-time	O	O
magic	O	O
.	O	O
To	O	O
do	O	O
this	O	O
for	O	O
your	O	O
code	O	O
:	O	O
public	B-API	O
static	B-API	O
class	B-API	O
StringExtensions	B-API	O
{	I-API	O
public	B-API	O
static	B-API	B-API
String	B-API	B-API
{	B-API	O
return	B-API	O
;	B-API	O
(	O	O
this	O	O
String	B-API	O
s	I-API	O
)	I-API	O
s.Trim	B-API	B-API
(	I-API	I-API
)	I-API	I-API
To	O	O
use	O	O
it	O	O
:	O	O
String	B-API	B-API
s	I-API	O
=	I-API	O
``	I-API	O
Test	I-API	O
``	I-API	O
;	O	O
s	O	O
=	O	O
s.trim	B-API	O
(	I-API	O
)	I-API	O
This	O	O
looks	O	O
like	O	O
a	O	O
new	O	O
method	O	O
,	O	O
but	O	O
will	O	O
compile	O	O
the	O	O
exact	O	O
same	O	O
way	O	O
as	O	O
this	O	O
code	O	O
:	O	O
String	B-API	B-API
s	I-API	O
=	I-API	O
``	I-API	O
Test	I-API	O
``	I-API	O
;	I-API	O
s	I-API	O
=	O	O
StringExtensions.trim	B-API	B-API
(	I-API	I-API
s	I-API	I-API
)	I-API	I-API
What	O	O
exactly	O	O
are	O	O
you	O	O
trying	O	O
to	O	O
accomplish	O	O
?	O	O
Perhaps	O	O
there	O	O
are	O	O
better	O	O
ways	O	O
of	O	O
doing	O	O
what	O	O
you	O	O
want	O	O
?	O	O

[0x7FFD166670E3] ANOMALY: use of REX.w is meaningless (default operand size is 64)
