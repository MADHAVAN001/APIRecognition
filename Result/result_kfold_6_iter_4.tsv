I	O	O
've	O	O
had	O	O
to	O	O
work	O	O
with	O	O
several	O	O
beginner	O	O
(	O	O
never	O	O
wrote	O	O
a	O	O
line	O	O
of	O	O
code	O	O
)	O	O
programmers	O	O
,	O	O
and	O	O
I	O	O
'll	O	O
be	O	O
doing	O	O
an	O	O
after	O	O
school	O	O
workshop	O	O
with	O	O
high	O	O
school	O	O
students	O	O
this	O	O
fall	O	O
.	O	O
This	O	O
is	O	O
the	O	O
closest	O	O
thing	O	O
I	O	O
've	O	O
got	O	O
to	O	O
documentation	O	O
.	O	O
It	O	O
's	O	O
still	O	O
a	O	O
work	O	O
in	O	O
progress	O	O
,	O	O
but	O	O
I	O	O
hope	O	O
it	O	O
helps	O	O
.	O	O
1	O	O
)	O	O
FizzBuzz	O	O
.	O	O
Start	O	O
with	O	O
command	O	O
line	O	O
programs	O	O
.	O	O
You	O	O
can	O	O
write	O	O
some	O	O
fun	O	O
games	O	O
,	O	O
or	O	O
tools	O	O
,	O	O
very	O	O
quickly	O	O
,	O	O
and	O	O
you	O	O
learn	O	O
all	O	O
of	O	O
the	O	O
language	O	O
features	O	O
very	O	O
quickly	O	O
without	O	O
having	O	O
to	O	O
learn	O	O
the	O	O
GUI	O	O
tools	O	O
first	O	O
.	O	O
These	O	O
early	O	O
apps	O	O
should	O	O
be	O	O
simple	O	O
enough	O	O
that	O	O
you	O	O
wo	O	O
n't	O	O
need	O	O
to	O	O
use	O	O
any	O	O
real	O	O
debugging	O	O
tools	O	O
to	O	O
make	O	O
them	O	O
work	O	O
.	O	O
If	O	O
nothing	O	O
else	O	O
things	O	O
like	O	O
FizzBuzz	O	O
are	O	O
good	O	O
projects	O	O
.	O	O
Your	O	O
first	O	O
few	O	O
apps	O	O
should	O	O
not	O	O
have	O	O
to	O	O
deal	O	O
with	O	O
DBs	O	O
,	O	O
file	O	O
system	O	O
,	O	O
configuration	O	O
,	O	O
ect	O	O
.	O	O
These	O	O
are	O	O
concepts	O	O
which	O	O
just	O	O
confuse	O	O
most	O	O
people	O	O
,	O	O
and	O	O
when	O	O
you	O	O
're	O	O
just	O	O
learning	O	O
the	O	O
syntax	O	O
and	O	O
basic	O	O
framework	O	O
features	O	O
you	O	O
really	O	O
do	O	O
n't	O	O
need	O	O
more	O	O
complexity	O	O
.	O	O
Some	O	O
projects	O	O
:	O	O
Hello	O	O
World	O	O
!	O	O
Take	O	O
the	O	O
year	O	O
of	O	O
my	O	O
birth	O	O
,	O	O
and	O	O
calculate	O	O
my	O	O
age	O	O
(	O	O
just	O	O
(	O	O
now	O	O
-	O	O
then	O	O
)	O	O
no	O	O
month	O	O
corrections	O	O
)	O	O
.	O	O
(	O	O
simple	O	O
math	O	O
,	O	O
input	O	O
,	O	O
output	O	O
)	O	O
Ask	O	O
for	O	O
a	O	O
direction	O	O
(	O	O
Up	O	O
,	O	O
down	O	O
,	O	O
left	O	O
,	O	O
right	O	O
)	O	O
,	O	O
then	O	O
tell	O	O
the	O	O
user	O	O
their	O	O
fate	O	O
(	O	O
fall	O	O
in	O	O
a	O	O
hole	O	O
,	O	O
find	O	O
a	O	O
cake	O	O
,	O	O
ect	O	O
)	O	O
.	O	O
(	O	O
Boolean	B-API	O
logic	O	O
)	O	O
FizzBuzz	O	O
,	O	O
but	O	O
count	O	O
once	O	O
every	O	O
second	O	O
.	O	O
(	O	O
Loops	O	O
,	O	O
timers	O	O
,	O	O
and	O	O
more	O	O
logic	O	O
)	O	O
Depending	O	O
on	O	O
their	O	O
age	O	O
some	O	O
really	O	O
like	O	O
an	O	O
app	O	O
which	O	O
calls	O	O
the	O	O
users	O	O
a	O	O
random	O	O
insult	O	O
at	O	O
some	O	O
interval	O	O
.	O	O
(	O	O
Loops	O	O
,	O	O
arrays	O	O
,	O	O
timers	O	O
,	O	O
and	O	O
random	O	O
if	O	O
you	O	O
make	O	O
the	O	O
interval	O	O
random	O	O
)	O	O
2	O	O
)	O	O
Simple	O	O
Project	O	O
Once	O	O
they	O	O
have	O	O
a	O	O
good	O	O
grasp	O	O
of	O	O
language	O	O
features	O	O
,	O	O
you	O	O
can	O	O
start	O	O
a	O	O
project	O	O
(	O	O
simple	O	O
,	O	O
fun	O	O
games	O	O
work	O	O
good.	O	O
)	O	O
.	O	O
You	O	O
should	O	O
try	O	O
to	O	O
have	O	O
the	O	O
first	O	O
project	O	O
be	O	O
able	O	O
to	O	O
be	O	O
completed	O	O
within	O	O
6-12	O	O
hours	O	O
.	O	O
Do	O	O
n't	O	O
spend	O	O
time	O	O
to	O	O
architect	O	O
it	O	O
early	O	O
.	O	O
Let	O	O
them	O	O
design	O	O
it	O	O
even	O	O
if	O	O
it	O	O
sucks	O	O
.	O	O
If	O	O
it	O	O
falls	O	O
apart	O	O
,	O	O
talk	O	O
about	O	O
what	O	O
happened	O	O
and	O	O
why	O	O
it	O	O
failed	O	O
,	O	O
then	O	O
pick	O	O
another	O	O
topic	O	O
and	O	O
start	O	O
again	O	O
.	O	O
This	O	O
is	O	O
where	O	O
you	O	O
start	O	O
introducing	O	O
the	O	O
debugging	O	O
capabilities	O	O
of	O	O
your	O	O
tools	O	O
.	O	O
Even	O	O
if	O	O
you	O	O
can	O	O
see	O	O
the	O	O
problem	O	O
by	O	O
reading	O	O
the	O	O
code	O	O
you	O	O
should	O	O
teach	O	O
them	O	O
how	O	O
to	O	O
use	O	O
the	O	O
tools	O	O
,	O	O
and	O	O
then	O	O
show	O	O
them	O	O
how	O	O
you	O	O
could	O	O
see	O	O
it	O	O
.	O	O
That	O	O
serves	O	O
the	O	O
dual	O	O
purpose	O	O
of	O	O
teaching	O	O
the	O	O
debugging	O	O
tools	O	O
and	O	O
teaching	O	O
how	O	O
to	O	O
ID	O	O
errors	O	O
without	O	O
tools	O	O
.	O	O
Once	O	O
,	O	O
or	O	O
if	O	O
,	O	O
the	O	O
project	O	O
gets	O	O
functional	O	O
you	O	O
can	O	O
use	O	O
it	O	O
to	O	O
introduce	O	O
refactoring	O	O
tools	O	O
.	O	O
Its	O	O
good	O	O
if	O	O
you	O	O
can	O	O
then	O	O
expand	O	O
the	O	O
project	O	O
with	O	O
some	O	O
simple	O	O
features	O	O
which	O	O
you	O	O
never	O	O
planned	O	O
for	O	O
.	O	O
This	O	O
usually	O	O
means	O	O
refactoring	O	O
and	O	O
significant	O	O
debugging	O	O
,	O	O
since	O	O
very	O	O
few	O	O
people	O	O
write	O	O
even	O	O
half	O	O
decent	O	O
code	O	O
their	O	O
first	O	O
time	O	O
.	O	O
Some	O	O
projects	O	O
:	O	O
Hangman	O	O
game	O	O
Experimenting	O	O
with	O	O
robotics	O	O
(	O	O
Vex	O	O
and	O	O
Mindstorms	O	O
are	O	O
options	O	O
)	O	O
3	O	O
)	O	O
Real	O	O
Project	O	O
Start	O	O
a	O	O
real	O	O
project	O	O
which	O	O
may	O	O
take	O	O
some	O	O
time	O	O
.	O	O
Use	O	O
proper	O	O
source	O	O
control	O	O
,	O	O
and	O	O
make	O	O
a	O	O
point	O	O
to	O	O
have	O	O
a	O	O
schedule	O	O
.	O	O
Run	O	O
this	O	O
project	O	O
like	O	O
a	O	O
real	O	O
project	O	O
,	O	O
if	O	O
nothing	O	O
else	O	O
its	O	O
good	O	O
experience	O	O
having	O	O
to	O	O
deal	O	O
with	O	O
the	O	O
tools	O	O
.	O	O
Obviously	O	O
you	O	O
need	O	O
to	O	O
adjust	O	O
this	O	O
for	O	O
each	O	O
person	O	O
.	O	O
The	O	O
most	O	O
important	O	O
thing	O	O
I	O	O
've	O	O
found	O	O
is	O	O
to	O	O
make	O	O
even	O	O
the	O	O
first	O	O
simple	O	O
apps	O	O
apply	O	O
to	O	O
what	O	O
the	O	O
person	O	O
is	O	O
interested	O	O
in	O	O
.	O	O
Some	O	O
projects	O	O
:	O	O
Tetris	O	O
Text	O	O
file	O	O
based	O	O
blog	O	O
engine	O	O
More	O	O
advanced	O	O
robotics	O	O
work	O	O
I	O	O
used	O	O
to	O	O
teach	O	O
programming	O	O
and	O	O
your	O	O
brother	O	O
has	O	O
one	O	O
main	O	O
advantage	O	O
over	O	O
most	O	O
of	O	O
my	O	O
students	O	O
he	O	O
wants	O	O
to	O	O
learn	O	O
:	O	O
)	O	O
If	O	O
you	O	O
decide	O	O
to	O	O
go	O	O
with	O	O
C	O	O
a	O	O
friend	O	O
has	O	O
a	O	O
site	O	O
that	O	O
has	O	O
the	O	O
sort	O	O
of	O	O
programs	O	O
those	O	O
of	O	O
use	O	O
from	O	O
older	O	O
generations	O	O
remember	O	O
as	O	O
basic	O	O
type-ins	O	O
.	O	O
The	O	O
more	O	O
complex	O	O
of	O	O
them	O	O
use	O	O
ncurses	O	O
which	O	O
sort	O	O
of	O	O
negates	O	O
their	O	O
use	O	O
as	O	O
a	O	O
teaching	O	O
aid	O	O
somewhat	O	O
but	O	O
some	O	O
of	O	O
them	O	O
are	O	O
tiny	O	O
little	O	O
things	O	O
and	O	O
you	O	O
can	O	O
learn	O	O
loads	O	O
without	O	O
being	O	O
taught	O	O
to	O	O
.	O	O
Personally	O	O
I	O	O
think	O	O
Python	B-API	O
and	O	O
Ruby	B-API	O
would	O	O
make	O	O
great	O	O
first	O	O
languages	O	O
.	O	O
EDIT	O	O
:	O	O
list	O	O
of	O	O
beginner	O	O
programming	O	O
assignments	O	O
appeared	O	O
overnight	O	O
might	O	O
be	O	O
just	O	O
what	O	O
you	O	O
are	O	O
looking	O	O
for	O	O
.	O	O
I	O	O
think	O	O
the	O	O
``	O	O
wisdom	O	O
of	O	O
crowds	O	O
''	O	O
work	O	O
here	O	O
.	O	O
How	O	O
did	O	O
most	O	O
people	O	O
learn	O	O
how	O	O
to	O	O
program	O	O
?	O	O
Many	O	O
claim	O	O
that	O	O
they	O	O
did	O	O
so	O	O
by	O	O
copying	O	O
programs	O	O
of	O	O
others	O	O
,	O	O
usually	O	O
games	O	O
they	O	O
wanted	O	O
to	O	O
play	O	O
in	O	O
BASIC	B-API	O
.	O	O
Maybe	O	O
that	O	O
route	O	O
will	O	O
work	O	O
with	O	O
him	O	O
too	O	O
?	O	O
If	O	O
you	O	O
want	O	O
to	O	O
teach	O	O
the	O	O
basics	O	O
of	O	O
programming	O	O
,	O	O
without	O	O
being	O	O
language	O	O
specific	O	O
,	O	O
there	O	O
is	O	O
an	O	O
application	O	O
called	O	O
Scratch	O	O
that	O	O
was	O	O
created	O	O
in	O	O
MIT	O	O
.	O	O
It	O	O
's	O	O
designed	O	O
to	O	O
help	O	O
people	O	O
develop	O	O
programming	O	O
skills	O	O
.	O	O
As	O	O
users	O	O
create	O	O
Scratch	O	O
projects	O	O
,	O	O
they	O	O
learn	O	O
to	O	O
create	O	O
conditions	O	O
,	O	O
loops	O	O
,	O	O
etc	O	O
.	O	O
There	O	O
is	O	O
a	O	O
also	O	O
a	O	O
community	O	O
of	O	O
scratch	O	O
projects	O	O
,	O	O
form	O	O
which	O	O
projects	O	O
can	O	O
be	O	O
downloaded	O	O
-	O	O
that	O	O
way	O	O
you	O	O
can	O	O
explore	O	O
other	O	O
people	O	O
's	O	O
programs	O	O
and	O	O
see	O	O
how	O	O
they	O	O
were	O	O
built	O	O
.	O	O
I	O	O
recently	O	O
wrote	O	O
an	O	O
article	O	O
titled	O	O
How	O	O
to	O	O
teach	O	O
your	O	O
girlfriend	O	O
programming	O	O
,	O	O
it	O	O
has	O	O
little	O	O
to	O	O
do	O	O
with	O	O
girlfriends	O	O
and	O	O
everything	O	O
about	O	O
teaching	O	O
something	O	O
technical	O	O
to	O	O
someone	O	O
that	O	O
does	O	O
not	O	O
understand	O	O
it	O	O
.	O	O
I	O	O
'm	O	O
told	O	O
it	O	O
's	O	O
also	O	O
funny	O	O
.	O	O
It	O	O
really	O	O
depends	O	O
on	O	O
your	O	O
brother	O	O
's	O	O
learning	O	O
style	O	O
.	O	O
Many	O	O
people	O	O
learn	O	O
faster	O	O
by	O	O
getting	O	O
their	O	O
hands	O	O
dirty	O	O
just	O	O
getting	O	O
into	O	O
it	O	O
,	O	O
crystallising	O	O
the	O	O
concepts	O	O
and	O	O
the	O	O
big	O	O
picture	O	O
as	O	O
they	O	O
progress	O	O
and	O	O
build	O	O
their	O	O
knowledge	O	O
.	O	O
Me	O	O
,	O	O
I	O	O
prefer	O	O
to	O	O
start	O	O
with	O	O
the	O	O
big	O	O
picture	O	O
and	O	O
drill	O	O
down	O	O
into	O	O
the	O	O
nitty-gritty	O	O
.	O	O
The	O	O
first	O	O
thing	O	O
I	O	O
wanted	O	O
to	O	O
know	O	O
was	O	O
how	O	O
it	O	O
all	O	O
fits	O	O
together	O	O
then	O	O
all	O	O
that	O	O
Object-oriented	O	O
gobbledygook	O	O
,	O	O
then	O	O
about	O	O
classes	O	O
instances	O	O
and	O	O
so-on	O	O
.	O	O
I	O	O
like	O	O
to	O	O
know	O	O
the	O	O
underlying	O	O
concepts	O	O
and	O	O
a	O	O
bit	O	O
of	O	O
theory	O	O
before	O	O
I	O	O
learn	O	O
the	O	O
syntax	O	O
.	O	O
I	O	O
had	O	O
a	O	O
bit	O	O
of	O	O
an	O	O
advantage	O	O
because	O	O
I	O	O
wrote	O	O
some	O	O
games	O	O
in	O	O
BASIC	B-API	O
20	O	O
years	O	O
ago	O	O
but	O	O
nothing	O	O
much	O	O
since	O	O
.	O	O
Perhaps	O	O
it	O	O
is	O	O
useful	O	O
to	O	O
shadow	O	O
a	O	O
production	O	O
process	O	O
by	O	O
starting	O	O
with	O	O
an	O	O
overall	O	O
mission	O	O
statement	O	O
,	O	O
then	O	O
a	O	O
plan	O	O
and/or	O	O
flowchart	O	O
,	O	O
then	O	O
elaborate	O	O
into	O	O
some	O	O
pseudo	O	O
code	O	O
(	O	O
leaning	O	O
towards	O	O
the	O	O
syntax	O	O
you	O	O
will	O	O
ultimately	O	O
use	O	O
)	O	O
before	O	O
actually	O	O
writing	O	O
the	O	O
code	O	O
.	O	O
The	O	O
golden	O	O
rule	O	O
here	O	O
is	O	O
to	O	O
suss	O	O
out	O	O
your	O	O
student	O	O
's	O	O
leaning	O	O
style	O	O
.	O	O
Try	O	O
Ruby	B-API	O
(	O	O
In	O	O
Your	O	O
Browser	O	O
)	O	O
I	O	O
agree	O	O
with	O	O
Leac	O	O
.	O	O
I	O	O
actually	O	O
play	O	O
with	O	O
Scratch	B-API	O
sometimes	O	O
if	O	O
I	O	O
'm	O	O
bored	O	O
.	O	O
It	O	O
's	O	O
a	O	O
pretty	O	O
fun	O	O
visual	O	O
way	O	O
of	O	O
looking	O	O
at	O	O
code	O	O
.	O	O
How	O	O
it	O	O
works	O	O
is	O	O
,	O	O
they	O	O
give	O	O
you	O	O
a	O	O
bunch	O	O
of	O	O
``	O	O
blocks	O	O
''	O	O
(	O	O
these	O	O
look	O	O
like	O	O
legos	O	O
)	O	O
which	O	O
you	O	O
can	O	O
stack	O	O
.	O	O
And	O	O
by	O	O
stacking	O	O
these	O	O
blocks	O	O
,	O	O
and	O	O
interacting	O	O
with	O	O
the	O	O
canvas	O	O
(	O	O
where	O	O
you	O	O
put	O	O
your	O	O
sprites	O	O
,	O	O
graphics	O	O
)	O	O
,	O	O
you	O	O
can	O	O
create	O	O
games	O	O
,	O	O
movies	O	O
,	O	O
slideshows	O	O
...	O	O
it	O	O
's	O	O
really	O	O
interesting	O	O
.	O	O
When	O	O
it	O	O
's	O	O
complete	O	O
you	O	O
can	O	O
upload	O	O
it	O	O
right	O	O
to	O	O
the	O	O
Scratch	O	O
websites	O	O
,	O	O
which	O	O
is	O	O
a	O	O
youtube-ish	O	O
portal	O	O
for	O	O
Scratch	O	O
applications	O	O
.	O	O
Not	O	O
only	O	O
that	O	O
,	O	O
but	O	O
you	O	O
can	O	O
download	O	O
any	O	O
submission	O	O
on	O	O
the	O	O
website	O	O
,	O	O
and	O	O
learn	O	O
from	O	O
or	O	O
extend	O	O
other	O	O
Scratch	B-API	O
applications	O	O
.	O	O
This	O	O
is	O	O
a	O	O
fantastic	O	O
book	O	O
which	O	O
my	O	O
little	O	O
brothers	O	O
used	O	O
to	O	O
learn	O	O
:	O	O
http	O	O
:	O	O
//pine.fm/LearnToProgram/	O	O
Of	O	O
course	O	O
,	O	O
the	O	O
most	O	O
important	O	O
thing	O	O
is	O	O
to	O	O
start	O	O
on	O	O
a	O	O
real	O	O
,	O	O
useful	O	O
program	O	O
of	O	O
some	O	O
kind	O	O
IMMEDIATELY	O	O
after	O	O
finishing	O	O
the	O	O
book	O	O
.	O	O
I	O	O
recommend	O	O
starting	O	O
them	O	O
off	O	O
with	O	O
C/C++	O	O
.	O	O
I	O	O
find	O	O
that	O	O
it	O	O
is	O	O
a	O	O
good	O	O
foundation	O	O
for	O	O
just	O	O
about	O	O
every	O	O
other	O	O
language	O	O
.	O	O
Also	O	O
,	O	O
the	O	O
different	O	O
versions	O	O
of	O	O
BASIC	O	O
can	O	O
be	O	O
pretty	O	O
dodgy	O	O
,	O	O
at	O	O
best	O	O
,	O	O
and	O	O
have	O	O
no	O	O
real	O	O
correlation	O	O
to	O	O
actual	O	O
programming	O	O
.	O	O
I	O	O
think	O	O
learning	O	O
to	O	O
program	O	O
because	O	O
you	O	O
want	O	O
to	O	O
learn	O	O
to	O	O
program	O	O
will	O	O
never	O	O
be	O	O
as	O	O
good	O	O
as	O	O
learning	O	O
to	O	O
program	O	O
because	O	O
you	O	O
want	O	O
to	O	O
DO	O	O
something	O	O
.	O	O
If	O	O
you	O	O
can	O	O
find	O	O
something	O	O
that	O	O
your	O	O
brother	O	O
is	O	O
interested	O	O
in	O	O
making	O	O
work	O	O
because	O	O
he	O	O
wants	O	O
to	O	O
make	O	O
it	O	O
work	O	O
,	O	O
you	O	O
can	O	O
just	O	O
leave	O	O
him	O	O
with	O	O
Google	O	O
and	O	O
he	O	O
'll	O	O
do	O	O
it	O	O
.	O	O
And	O	O
he	O	O
'll	O	O
have	O	O
you	O	O
around	O	O
to	O	O
check	O	O
he	O	O
's	O	O
going	O	O
along	O	O
the	O	O
right	O	O
path	O	O
.	O	O
I	O	O
think	O	O
one	O	O
of	O	O
the	O	O
biggest	O	O
problems	O	O
with	O	O
teaching	O	O
programming	O	O
in	O	O
the	O	O
abstract	O	O
is	O	O
that	O	O
it	O	O
's	O	O
not	O	O
got	O	O
a	O	O
real-world	O	O
context	O	O
that	O	O
the	O	O
learner	O	O
can	O	O
get	O	O
emotionally	O	O
invested	O	O
in	O	O
.	O	O
Programming	O	O
is	O	O
hard	O	O
,	O	O
and	O	O
there	O	O
has	O	O
to	O	O
be	O	O
some	O	O
real	O	O
payoff	O	O
to	O	O
make	O	O
it	O	O
worth	O	O
the	O	O
effort	O	O
of	O	O
doing	O	O
it	O	O
.	O	O
In	O	O
my	O	O
case	O	O
,	O	O
I	O	O
'd	O	O
done	O	O
computer	O	O
science	O	O
at	O	O
uni	O	O
,	O	O
learned	O	O
Pascal	O	O
and	O	O
COBOL	O	O
there	O	O
,	O	O
and	O	O
learned	O	O
BASIC	B-API	B-API
at	O	O
home	O	O
before	O	O
that	O	O
,	O	O
but	O	O
I	O	O
never	O	O
really	O	O
got	O	O
anywhere	O	O
with	O	O
it	O	O
until	O	O
I	O	O
became	O	O
a	O	O
self-employed	O	O
web	O	O
designer	O	O
back	O	O
in	O	O
the	O	O
90s	O	O
and	O	O
my	O	O
clients	O	O
needed	O	O
functionality	O	O
on	O	O
their	O	O
web	O	O
sites	O	O
,	O	O
and	O	O
were	O	O
willing	O	O
to	O	O
pay	O	O
about	O	O
10x	O	O
more	O	O
for	O	O
functionality	O	O
than	O	O
for	O	O
design	O	O
.	O	O
Putting	O	O
food	O	O
on	O	O
the	O	O
table	O	O
is	O	O
a	O	O
hell	O	O
of	O	O
a	O	O
motivator	O	O
!	O	O
So	O	O
I	O	O
learned	O	O
Perl	O	O
,	O	O
then	O	O
ASP/VBScript	O	O
,	O	O
then	O	O
JavaScript	B-API	O
,	O	O
then	O	O
Flash/ActionScript	O	O
then	O	O
PHP	B-API	O
-	O	O
all	O	O
in	O	O
order	O	O
to	O	O
make	O	O
the	O	O
stuff	O	O
I	O	O
wanted	O	O
to	O	O
happen	O	O
.	O	O
How	O	O
to	O	O
Design	O	O
Programs	O	O
Structure	O	O
and	O	O
Interpretation	O	O
of	O	O
Computer	O	O
Programs	O	O
.	O	O
Videos	O	O
lectures	O	O
at	O	O
http	O	O
:	O	O
//www.swiss.ai.mit.edu/classes/6.001/abelson-sussman-lectures/	O	O
I	O	O
think	O	O
that	O	O
once	O	O
he	O	O
has	O	O
the	O	O
basics	O	O
(	O	O
variables	O	O
,	O	O
loops	O	O
,	O	O
etc	O	O
)	O	O
down	O	O
you	O	O
should	O	O
try	O	O
to	O	O
help	O	O
him	O	O
find	O	O
something	O	O
specific	O	O
that	O	O
he	O	O
is	O	O
interested	O	O
in	O	O
and	O	O
help	O	O
him	O	O
learn	O	O
the	O	O
necessities	O	O
to	O	O
make	O	O
it	O	O
happen	O	O
.	O	O
I	O	O
know	O	O
that	O	O
I	O	O
am	O	O
much	O	O
more	O	O
inclined	O	O
and	O	O
motivated	O	O
to	O	O
do	O	O
something	O	O
if	O	O
it	O	O
's	O	O
of	O	O
interest	O	O
to	O	O
me	O	O
.	O	O
Also	O	O
,	O	O
make	O	O
sure	O	O
to	O	O
let	O	O
him	O	O
struggle	O	O
though	O	O
some	O	O
of	O	O
the	O	O
tougher	O	O
problems	O	O
,	O	O
nothing	O	O
is	O	O
more	O	O
satisfying	O	O
than	O	O
the	O	O
moment	O	O
you	O	O
figure	O	O
it	O	O
out	O	O
on	O	O
your	O	O
own	O	O
.	O	O
I	O	O
'd	O	O
just	O	O
let	O	O
him	O	O
write	O	O
tons	O	O
of	O	O
code	O	O
.	O	O
Let	O	O
him	O	O
drive	O	O
in	O	O
everything	O	O
you	O	O
guys	O	O
do	O	O
,	O	O
and	O	O
just	O	O
be	O	O
available	O	O
to	O	O
answer	O	O
questions	O	O
.	O	O
Believe	O	O
it	O	O
or	O	O
not	O	O
,	O	O
after	O	O
a	O	O
few	O	O
months	O	O
of	O	O
writings	O	O
tons	O	O
of	O	O
crappy	O	O
code	O	O
,	O	O
he	O	O
'll	O	O
start	O	O
to	O	O
get	O	O
the	O	O
idea	O	O
and	O	O
start	O	O
writing	O	O
better	O	O
programs	O	O
.	O	O
At	O	O
that	O	O
point	O	O
,	O	O
you	O	O
can	O	O
get	O	O
bogged	O	O
down	O	O
in	O	O
details	O	O
(	O	O
memory	O	O
,	O	O
etc	O	O
)	O	O
,	O	O
and	O	O
also	O	O
talk	O	O
about	O	O
general	O	O
design	O	O
principles	O	O
.	O	O
I	O	O
've	O	O
heard	O	O
that	O	O
what	O	O
separates	O	O
the	O	O
great	O	O
artists	O	O
from	O	O
the	O	O
mediocre	O	O
ones	O	O
,	O	O
is	O	O
that	O	O
every	O	O
time	O	O
they	O	O
practice	O	O
,	O	O
they	O	O
improve	O	O
on	O	O
something	O	O
,	O	O
no	O	O
matter	O	O
how	O	O
small	O	O
.	O	O
Let	O	O
your	O	O
brother	O	O
practice	O	O
,	O	O
and	O	O
he	O	O
'll	O	O
improve	O	O
every	O	O
time	O	O
he	O	O
sits	O	O
down	O	O
at	O	O
the	O	O
keyboard	O	O
.	O	O
Edit	O	O
:	O	O
[	O	O
Justin	O	O
Standard	O	O
]	O	O
Esteban	O	O
,	O	O
this	O	O
reminds	O	O
me	O	O
of	O	O
a	O	O
recent	O	O
coding	O	O
horror	O	O
post	O	O
,	O	O
and	O	O
I	O	O
do	O	O
think	O	O
you	O	O
are	O	O
right	O	O
.	O	O
But	O	O
I	O	O
think	O	O
its	O	O
still	O	O
worthwhile	O	O
to	O	O
find	O	O
methods	O	O
to	O	O
guide	O	O
his	O	O
practice	O	O
.	O	O
No	O	O
question	O	O
,	O	O
I	O	O
want	O	O
him	O	O
writing	O	O
as	O	O
much	O	O
code	O	O
as	O	O
he	O	O
knows	O	O
how	O	O
to	O	O
do	O	O
.	O	O
Thats	O	O
one	O	O
reason	O	O
I	O	O
'm	O	O
asking	O	O
for	O	O
sample	O	O
projects	O	O
.	O	O
I	O	O
was	O	O
taught	O	O
by	O	O
learning	O	O
how	O	O
to	O	O
solve	O	O
problems	O	O
in	O	O
a	O	O
language	O	O
agnostic	O	O
way	O	O
using	O	O
flowcharts	O	O
and	O	O
PDL	B-API	O
(	O	O
Program	O	O
Design	O	O
Language	O	O
)	O	O
.	O	O
After	O	O
a	O	O
couple	O	O
weeks	O	O
of	O	O
that	O	O
,	O	O
I	O	O
learned	O	O
to	O	O
convert	O	O
the	O	O
PDL	B-API	O
I	O	O
had	O	O
written	O	O
to	O	O
a	O	O
language	O	O
.	O	O
I	O	O
am	O	O
glad	O	O
I	O	O
learned	O	O
that	O	O
way	O	O
because	O	O
I	O	O
have	O	O
spent	O	O
the	O	O
majority	O	O
of	O	O
my	O	O
years	O	O
programming	O	O
,	O	O
solving	O	O
problems	O	O
without	O	O
being	O	O
tied	O	O
to	O	O
a	O	O
language	O	O
.	O	O
What	O	O
language	O	O
I	O	O
use	O	O
has	O	O
always	O	O
been	O	O
an	O	O
implementation	O	O
detail	O	O
and	O	O
not	O	O
part	O	O
of	O	O
the	O	O
design	O	O
.	O	O
Having	O	O
to	O	O
solve	O	O
the	O	O
problem	O	O
by	O	O
breaking	O	O
it	O	O
down	O	O
into	O	O
it	O	O
's	O	O
basic	O	O
steps	O	O
is	O	O
a	O	O
key	O	O
skill	O	O
.	O	O
I	O	O
think	O	O
it	O	O
is	O	O
one	O	O
of	O	O
the	O	O
things	O	O
that	O	O
separates	O	O
those	O	O
that	O	O
can	O	O
program	O	O
from	O	O
those	O	O
that	O	O
ca	O	O
n't	O	O
.	O	O
As	O	O
far	O	O
as	O	O
how	O	O
you	O	O
tackle	O	O
the	O	O
order	O	O
of	O	O
concepts	O	O
of	O	O
a	O	O
language	O	O
I	O	O
believe	O	O
the	O	O
easiest	O	O
way	O	O
is	O	O
to	O	O
decide	O	O
that	O	O
is	O	O
to	O	O
have	O	O
a	O	O
project	O	O
in	O	O
mind	O	O
and	O	O
tackle	O	O
the	O	O
concepts	O	O
as	O	O
they	O	O
are	O	O
needed	O	O
.	O	O
This	O	O
lets	O	O
you	O	O
apply	O	O
them	O	O
as	O	O
they	O	O
are	O	O
needed	O	O
on	O	O
something	O	O
that	O	O
you	O	O
are	O	O
interested	O	O
in	O	O
doing	O	O
.	O	O
When	O	O
learning	O	O
a	O	O
language	O	O
it	O	O
is	O	O
good	O	O
to	O	O
have	O	O
several	O	O
simple	O	O
projects	O	O
in	O	O
mind	O	O
and	O	O
a	O	O
few	O	O
with	O	O
progressive	O	O
complexity	O	O
.	O	O
Deciding	O	O
on	O	O
those	O	O
will	O	O
help	O	O
you	O	O
map	O	O
out	O	O
the	O	O
concepts	O	O
that	O	O
are	O	O
needed	O	O
and	O	O
their	O	O
order	O	O
.	O	O
With	O	O
the	O	O
``	O	O
Built	O	O
in	O	O
''	O	O
stuff	O	O
,	O	O
you	O	O
ca	O	O
n't	O	O
,	O	O
as	O	O
using	O	O
1.0	O	O
.	O	O
*	O	O
or	O	O
1.0.0	O	O
.	O	O
*	O	O
will	O	O
replace	O	O
the	O	O
revision	O	O
and	O	O
build	O	O
numbers	O	O
with	O	O
a	O	O
coded	O	O
date/timestamp	O	O
,	O	O
which	O	O
is	O	O
usually	O	O
also	O	O
a	O	O
good	O	O
way	O	O
.	O	O
For	O	O
more	O	O
info	O	O
,	O	O
see	O	O
the	O	O
Assembly	O	O
Linker	O	O
Documentation	O	O
in	O	O
the	O	O
/v	O	O
tag	O	O
.	O	O
As	O	O
for	O	O
automatically	O	O
incrementing	O	O
numbers	O	O
,	O	O
use	O	O
the	O	O
AssemblyInfo	B-API	O
Task	I-API	O
:	O	O
AssemblyInfo	B-API	O
Task	I-API	O
This	O	O
can	O	O
be	O	O
configured	O	O
to	O	O
automatically	O	O
increment	O	O
the	O	O
build	O	O
number	O	O
.	O	O
There	O	O
are	O	O
2	O	O
Gotchas	O	O
:	O	O
Each	O	O
of	O	O
the	O	O
4	O	O
numbers	O	O
in	O	O
the	O	O
Version	O	O
string	O	O
is	O	O
limited	O	O
to	O	O
65535	O	O
.	O	O
This	O	O
is	O	O
a	O	O
Windows	O	O
Limitation	O	O
and	O	O
unlikely	O	O
to	O	O
get	O	O
fixed	O	O
.	O	O
Why	O	O
are	O	O
build	O	O
numbers	O	O
limited	O	O
to	O	O
65535	O	O
?	O	O
Using	O	O
with	O	O
with	O	O
Subversion	O	O
requires	O	O
a	O	O
small	O	O
change	O	O
:	O	O
Using	O	O
MSBuild	O	O
to	O	O
generate	O	O
assembly	O	O
version	O	O
info	O	O
at	O	O
build	O	O
time	O	O
(	O	O
including	O	O
SubVersion	O	O
fix	O	O
)	O	O
Retrieving	O	O
the	O	O
Version	O	O
number	O	O
is	O	O
then	O	O
quite	O	O
easy	O	O
:	O	O
Version	B-API	O
v	O	O
=	O	O
Assembly.GetExecutingAssembly	B-API	B-API
(	I-API	I-API
)	I-API	I-API
.GetName	I-API	I-API
(	I-API	I-API
)	I-API	I-API
.Version	O	O
;	O	O
string	O	O
About	O	O
=	O	O
string.Format	B-API	B-API
(	O	I-API
CultureInfo.InvariantCulture	O	I-API
,	O	O
@	O	O
''	O	O
YourApp	O	O
Version	O	O
{	O	O
0	O	O
}	O	O
.	O	O
{	O	O
1	O	O
}	O	O
.	O	O
{	O	O
2	O	O
}	O	O
(	O	O
r	O	O
{	O	O
3	O	O
}	O	O
)	O	O
''	O	O
,	O	O
v.Major	O	O
,	O	O
v.Minor	O	O
,	O	O
v.Build	O	O
,	O	O
v.Revision	O	O
)	O	O
;	O	O
And	O	O
,	O	O
to	O	O
clarify	O	O
:	O	O
In	O	O
.net	O	O
or	O	O
at	O	O
least	O	O
in	O	O
C	B-API	O
#	I-API	O
,	O	O
the	O	O
build	O	O
is	O	O
actually	O	O
the	O	O
THIRD	O	O
number	O	O
,	O	O
not	O	O
the	O	O
fourth	O	O
one	O	O
as	O	O
some	O	O
people	O	O
(	O	O
for	O	O
example	O	O
Delphi	O	O
Developers	O	O
who	O	O
are	O	O
used	O	O
to	O	O
Major.Minor.Release.Build	B-API	B-API
)	O	O
might	O	O
expect	O	O
.	O	O
In	O	O
.net	O	O
,	O	O
it	O	O
's	O	O
Major.Minor.Build.Revision	B-API	O
.	O	O
What	O	O
source	O	O
control	O	O
system	O	O
are	O	O
you	O	O
using	O	O
?	O	O
Almost	O	O
all	O	O
of	O	O
them	O	O
have	O	O
some	O	O
form	O	O
of	O	O
$	O	O
Id	O	O
$	O	O
tag	O	O
that	O	O
gets	O	O
expanded	O	O
when	O	O
the	O	O
file	O	O
is	O	O
checked	O	O
in	O	O
.	O	O
I	O	O
usually	O	O
use	O	O
some	O	O
form	O	O
of	O	O
hackery	O	O
to	O	O
display	O	O
this	O	O
as	O	O
the	O	O
version	O	O
number	O	O
.	O	O
The	O	O
other	O	O
alternative	O	O
is	O	O
use	O	O
to	O	O
use	O	O
the	O	O
date	O	O
as	O	O
the	O	O
build	O	O
number	O	O
:	O	O
080803-1448	O	O
Some	O	O
time	O	O
ago	O	O
I	O	O
wrote	O	O
a	O	O
quick	O	O
and	O	O
dirty	O	O
exe	O	O
that	O	O
would	O	O
update	O	O
the	O	O
version	O	O
#	O	O
's	O	O
in	O	O
an	O	O
assemblyinfo	O	O
.	O	O
{	O	O
cs/vb	O	O
}	O	O
-	O	O
I	O	O
also	O	O
have	O	O
used	O	O
rxfind.exe	O	O
(	O	O
a	O	O
simple	O	O
and	O	O
powerful	O	O
regex-based	O	O
search	O	O
replace	O	O
tool	O	O
)	O	O
to	O	O
do	O	O
the	O	O
update	O	O
from	O	O
a	O	O
command	O	O
line	O	O
as	O	O
part	O	O
of	O	O
the	O	O
build	O	O
process	O	O
.	O	O
A	O	O
couple	O	O
of	O	O
other	O	O
helpfule	O	O
hints	O	O
:	O	O
separate	O	O
the	O	O
assemblyinfo	O	O
into	O	O
product	O	O
parts	O	O
(	O	O
company	O	O
name	O	O
,	O	O
version	O	O
,	O	O
etc	O	O
.	O	O
)	O	O
and	O	O
assembly	O	O
specific	O	O
parts	O	O
(	O	O
assembly	O	O
name	O	O
etc.	O	O
)	O	O
.	O	O
See	O	O
here	O	O
Also	O	O
-	O	O
i	O	O
use	O	O
subversion	O	O
,	O	O
so	O	O
I	O	O
found	O	O
it	O	O
helpful	O	O
to	O	O
set	O	O
the	O	O
build	O	O
number	O	O
to	O	O
subversion	O	O
revision	O	O
number	O	O
thereby	O	O
making	O	O
it	O	O
really	O	O
easy	O	O
to	O	O
always	O	O
get	O	O
back	O	O
to	O	O
the	O	O
codebase	O	O
that	O	O
generated	O	O
the	O	O
assembly	O	O
(	O	O
e.g	O	O
.	O	O
1.4.100.1502	O	O
was	O	O
built	O	O
from	O	O
revision	O	O
1502	O	O
)	O	O
.	O	O
You	O	O
can	O	O
use	O	O
ImageMagick	B-API	O
's	O	O
convert	O	O
utility	O	O
for	O	O
this	O	O
,	O	O
see	O	O
some	O	O
examples	O	O
in	O	O
http	O	O
:	O	O
//studio.imagemagick.org/pipermail/magick-users/2002-May/002636.html	O	O
:	O	O
Convert	O	O
taxes.pdf	O	O
taxes.jpg	O	O
Will	O	O
convert	O	O
a	O	O
two	O	O
page	O	O
PDF	O	O
file	O	O
into	O	O
[	O	O
2	O	O
]	O	O
jpeg	O	O
files	O	O
:	O	O
taxes.jpg.0	O	O
,	O	O
taxes.jpg.1	O	O
I	O	O
can	O	O
also	O	O
convert	O	O
these	O	O
JPEGS	O	O
to	O	O
a	O	O
thumbnail	O	O
as	O	O
follows	O	O
:	O	O
convert	O	O
-size	O	O
120x120	O	O
taxes.jpg.0	O	O
-geometry	O	O
120x120	O	O
+profile	O	O
'*	O	O
'	O	O
thumbnail.jpg	O	O
I	O	O
can	O	O
even	O	O
convert	O	O
the	O	O
PDF	O	O
directly	O	O
to	O	O
a	O	O
jpeg	O	O
thumbnail	O	O
as	O	O
follows	O	O
:	O	O
convert	O	O
-size	O	O
120x120	O	O
taxes.pdf	O	O
-geometry	O	O
120x120	O	O
+profile	O	O
'*	O	O
'	O	O
thumbnail.jpg	O	O
This	O	O
will	O	O
result	O	O
in	O	O
a	O	O
thumbnail.jpg.0	O	O
and	O	O
thumbnail.jpg.1	O	O
for	O	O
the	O	O
two	O	O
pages	O	O
.	O	O
While	O	O
I	O	O
have	O	O
n't	O	O
used	O	O
a	O	O
flash	O	O
object	O	O
inside	O	O
a	O	O
windows	O	O
form	O	O
application	O	O
myself	O	O
,	O	O
I	O	O
do	O	O
know	O	O
that	O	O
it	O	O
's	O	O
possible	O	O
.	O	O
In	O	O
Visual	B-API	O
studio	I-API	O
on	O	O
your	O	O
toolbox	O	O
,	O	O
choose	O	O
to	O	O
add	O	O
a	O	O
new	O	O
component	O	O
.	O	O
Then	O	O
in	O	O
the	O	O
new	O	O
window	O	O
that	O	O
appears	O	O
choose	O	O
the	O	O
``	O	O
COM	O	O
Components	O	O
''	O	O
tab	O	O
to	O	O
get	O	O
a	O	O
list	O	O
in	O	O
which	O	O
you	O	O
can	O	O
find	O	O
the	O	O
``	O	O
Shockwave	B-API	O
Flash	I-API	O
Object	I-API	O
''	O	O
Once	O	O
added	O	O
to	O	O
the	O	O
toolbox	O	O
,	O	O
simply	O	O
use	O	O
the	O	O
control	O	O
as	O	O
you	O	O
would	O	O
use	O	O
any	O	O
other	O	O
``	O	O
standard	O	O
''	O	O
control	O	O
from	O	O
visual	O	O
studio	O	O
.	O	O
three	O	O
simple	O	O
commands	O	O
are	O	O
available	O	O
to	O	O
interact	O	O
with	O	O
the	O	O
control	O	O
:	O	O
AxShockwaveFlash1.Stop	B-API	B-API
(	I-API	I-API
)	I-API	I-API
AxShockwaveFlash1.Movie	O	O
=	O	O
FilePath	O	O
''	O	O
\FileName.swf	O	O
''	O	O
AxShockwaveFlash1.Play	B-API	B-API
(	I-API	I-API
)	I-API	I-API
which	O	O
,	O	O
I	O	O
think	O	O
,	O	O
are	O	O
all	O	O
self	O	O
explanatory	O	O
.	O	O
It	O	O
would	O	O
be	O	O
great	O	O
to	O	O
be	O	O
able	O	O
to	O	O
load	O	O
the	O	O
flash	O	O
content	O	O
from	O	O
a	O	O
stream	O	O
of	O	O
sorts	O	O
rather	O	O
than	O	O
a	O	O
file	O	O
on	O	O
disk	O	O
.	O	O
I	O	O
just	O	O
saw	O	O
you	O	O
are	O	O
also	O	O
looking	O	O
for	O	O
a	O	O
means	O	O
to	O	O
load	O	O
the	O	O
content	O	O
from	O	O
a	O	O
stream	O	O
,	O	O
and	O	O
because	O	O
I	O	O
'm	O	O
not	O	O
really	O	O
sure	O	O
that	O	O
is	O	O
possible	O	O
with	O	O
the	O	O
shockwave	O	O
flash	O	O
object	O	O
I	O	O
will	O	O
give	O	O
you	O	O
another	O	O
option	O	O
(	O	O
two	O	O
actually	O	O
)	O	O
.	O	O
the	O	O
first	O	O
is	O	O
the	O	O
one	O	O
I	O	O
would	O	O
advise	O	O
you	O	O
to	O	O
use	O	O
only	O	O
when	O	O
necessary	O	O
,	O	O
as	O	O
it	O	O
uses	O	O
the	O	O
full	O	O
blown	O	O
``	O	O
webbrowser	O	O
component	O	O
''	O	O
(	O	O
also	O	O
available	O	O
as	O	O
an	O	O
extra	O	O
toolbox	O	O
item	O	O
)	O	O
,	O	O
which	O	O
is	O	O
like	O	O
trying	O	O
to	O	O
shoot	O	O
a	O	O
fly	O	O
with	O	O
a	O	O
bazooka	O	O
.	O	O
of	O	O
course	O	O
it	O	O
will	O	O
work	O	O
,	O	O
as	O	O
the	O	O
control	O	O
will	O	O
act	O	O
as	O	O
a	O	O
real	O	O
browser	O	O
window	O	O
(	O	O
actually	O	O
the	O	O
internet	O	O
explorer	O	O
browser	O	O
)	O	O
,	O	O
but	O	O
its	O	O
not	O	O
really	O	O
meant	O	O
to	O	O
be	O	O
used	O	O
in	O	O
the	O	O
way	O	O
you	O	O
need	O	O
it	O	O
.	O	O
the	O	O
second	O	O
option	O	O
is	O	O
to	O	O
use	O	O
something	O	O
I	O	O
just	O	O
discovered	O	O
while	O	O
looking	O	O
for	O	O
more	O	O
information	O	O
about	O	O
playing	O	O
flash	O	O
content	O	O
inside	O	O
a	O	O
windows	O	O
form	O	O
.	O	O
F-IN-BOX	O	O
is	O	O
a	O	O
commercial	O	O
solution	O	O
that	O	O
will	O	O
also	O	O
play	O	O
content	O	O
from	O	O
a	O	O
given	O	O
website	O	O
URL	O	O
.	O	O
(	O	O
The	O	O
link	O	O
provided	O	O
will	O	O
direct	O	O
you	O	O
to	O	O
the	O	O
.NET	B-API	O
code	O	O
you	O	O
have	O	O
to	O	O
use	O	O
)	O	O
.	O	O
Sven	O	O
,	O	O
you	O	O
reached	O	O
the	O	O
same	O	O
conclusion	O	O
as	O	O
I	O	O
did	O	O
:	O	O
I	O	O
found	O	O
the	O	O
Shockwave	B-API	O
Flash	I-API	O
Object	I-API	O
,	O	O
all	O	O
be	O	O
it	O	O
from	O	O
a	O	O
slightly	O	O
different	O	O
route	O	O
,	O	O
but	O	O
was	O	O
stumped	O	O
on	O	O
how	O	O
to	O	O
load	O	O
the	O	O
files	O	O
from	O	O
somewhere	O	O
other	O	O
than	O	O
file	O	O
on	O	O
disk/URL	O	O
.	O	O
The	O	O
F-IN-BOX	O	O
,	O	O
although	O	O
just	O	O
a	O	O
wrapper	O	O
of	O	O
the	O	O
Shockwave	B-API	O
Flash	I-API	O
Object	I-API	O
seems	O	O
to	O	O
provide	O	O
much	O	O
more	O	O
functionality	O	O
,	O	O
which	O	O
may	O	O
just	O	O
help	O	O
me	O	O
!	O	O
Shooting	O	O
flys	O	O
with	O	O
bazookas	O	O
may	O	O
be	O	O
fun	O	O
,	O	O
but	O	O
an	O	O
embeded	O	O
web	O	O
brower	O	O
is	O	O
not	O	O
the	O	O
path	O	O
that	O	O
I	O	O
am	O	O
looking	O	O
for	O	O
.	O	O
:	O	O
)	O	O
There	O	O
was	O	O
a	O	O
link	O	O
on	O	O
Adobe	O	O
's	O	O
site	O	O
that	O	O
talked	O	O
about	O	O
``	O	O
Embedding	O	O
and	O	O
Communicating	O	O
with	O	O
the	O	O
Macromedia	O	O
Flash	O	O
Player	O	O
in	O	O
C	O	O
#	O	O
Windows	O	O
Applications	O	O
''	O	O
but	O	O
they	O	O
seem	O	O
to	O	O
have	O	O
removed	O	O
it	O	O
:	O	O
(	O	O
One	O	O
implementation	O	O
of	O	O
this	O	O
problem	O	O
is	O	O
to	O	O
attempt	O	O
to	O	O
call	O	O
the	O	O
parameter-less	O	O
constructor	O	O
of	O	O
the	O	O
Type	O	O
:	O	O
public	O	O
static	O	O
object	O	O
GetNewObject	B-API	O
(	I-API	O
Type	I-API	O
t	I-API	O
)	I-API	O
{	O	O
try	O	O
{	O	O
return	O	O
t.GetConstructor	B-API	B-API
(	I-API	I-API
new	I-API	I-API
Type	I-API	I-API
[	I-API	I-API
]	I-API	I-API
{	I-API	O
}	I-API	O
)	I-API	O
.Invoke	I-API	O
(	I-API	O
new	I-API	O
object	I-API	O
[	I-API	O
]	I-API	O
{	I-API	O
}	I-API	O
)	I-API	O
;	O	O
}	O	O
catch	O	O
{	O	O
return	O	O
null	O	O
;	O	O
}	O	O
}	O	O
Here	O	O
is	O	O
the	O	O
same	O	O
approach	O	O
,	O	O
contained	O	O
in	O	O
a	O	O
generic	O	O
method	O	O
:	O	O
public	O	O
static	O	O
T	O	O
GetNewObjectT	B-API	O
(	I-API	O
)	I-API	O
{	O	O
try	O	O
{	O	O
return	O	O
(	O	O
T	O	O
)	O	O
typeof	B-API	O
(	I-API	O
T	I-API	O
)	I-API	O
.GetConstructor	B-API	O
(	I-API	O
new	I-API	O
Type	I-API	O
[	I-API	O
]	I-API	O
{	I-API	O
}	I-API	O
)	I-API	O
.Invoke	B-API	O
(	I-API	O
new	I-API	O
object	I-API	O
[	I-API	O
]	I-API	O
{	I-API	O
}	I-API	O
)	I-API	O
;	O	O
}	O	O
catch	O	O
{	O	O
return	O	O
default	B-API	O
(	I-API	O
T	I-API	O
)	I-API	O
;	O	O
}	O	O
}	O	O
The	O	O
class	O	O
within	O	O
the	O	O
root	O	O
namespace	O	O
is	O	O
pretty	O	O
powerful	O	O
.	O	O
There	O	O
are	O	O
a	O	O
lot	O	O
of	O	O
overloads	O	O
for	O	O
passing	O	O
parameters	O	O
to	O	O
the	O	O
constructor	O	O
and	O	O
such	O	O
.	O	O
Check	O	O
out	O	O
the	O	O
documentation	O	O
at	O	O
:	O	O
http	O	O
:	O	O
//msdn.microsoft.com/en-us/library/system.activator.createinstance.aspx	O	O
Here	O	O
are	O	O
some	O	O
simple	O	O
examples	O	O
:	O	O
ObjectType	O	O
instance	O	O
=	O	O
(	O	O
ObjectType	O	O
)	O	O
Activator.CreateInstance	B-API	B-API
(	I-API	I-API
objectType	I-API	I-API
)	I-API	I-API
;	O	O
ObjectType	O	O
instance	O	O
=	O	O
(	O	O
ObjectType	O	O
)	O	O
Activator.CreateInstance	B-API	B-API
(	I-API	I-API
``	I-API	I-API
MyAssembly	I-API	I-API
''	I-API	I-API
,	I-API	I-API
''	I-API	I-API
MyNamespace.ObjectType	I-API	I-API
''	I-API	I-API
)	I-API	I-API
;	O	O
open	O	O
up	O	O
a	O	O
terminal	O	O
(	O	O
Applications-Utilities-Terminal	O	O
)	O	O
and	O	O
type	O	O
this	O	O
in	O	O
:	O	O
locate	B-API	O
This	O	O
will	O	O
spit	O	O
out	O	O
every	O	O
file	O	O
that	O	O
has	O	O
the	O	O
name	O	O
you	O	O
want	O	O
.	O	O
Warning	O	O
:	O	O
there	O	O
may	O	O
be	O	O
alot	O	O
to	O	O
wade	O	O
through	O	O
.	O	O
I	O	O
have	O	O
n't	O	O
been	O	O
able	O	O
to	O	O
find	O	O
anything	O	O
that	O	O
does	O	O
this	O	O
directly	O	O
.	O	O
I	O	O
think	O	O
you	O	O
'll	O	O
have	O	O
to	O	O
iterate	O	O
through	O	O
the	O	O
various	O	O
font	O	O
folders	O	O
on	O	O
the	O	O
system	O	O
:	O	O
,	O	O
,	O	O
and	O	O
there	O	O
can	O	O
probably	O	O
be	O	O
a	O	O
user-level	O	O
directory	O	O
as	O	O
well	O	O
.	O	O
Unfortunately	O	O
the	O	O
only	O	O
API	O	O
that	O	O
is	O	O
n't	O	O
deprecated	O	O
is	O	O
located	O	O
in	O	O
the	O	O
ApplicationServices	B-API	O
framework	I-API	O
,	O	O
which	O	O
does	O	O
n't	O	O
have	O	O
a	O	O
bridge	O	O
support	O	O
file	O	O
,	O	O
and	O	O
thus	O	O
is	O	O
n't	O	O
available	O	O
in	O	O
the	O	O
bridge	O	O
.	O	O
If	O	O
you	O	O
're	O	O
wanting	O	O
to	O	O
use	O	O
ctypes	O	O
,	O	O
you	O	O
can	O	O
use	O	O
ATSFontGetFileReference	B-API	O
after	O	O
looking	O	O
up	O	O
the	O	O
ATSFontRef	B-API	O
.	O	O
Cocoa	O	O
does	O	O
n't	O	O
have	O	O
any	O	O
native	O	O
support	O	O
,	O	O
at	O	O
least	O	O
as	O	O
of	O	O
10.5	O	O
,	O	O
for	O	O
getting	O	O
the	O	O
location	O	O
of	O	O
a	O	O
font	O	O
.	O	O
Java	B-API	O
autoboxing/unboxing	O	O
does	O	O
n't	O	O
go	O	O
to	O	O
the	O	O
extent	O	O
to	O	O
allow	O	O
you	O	O
to	O	O
dereference	O	O
a	O	O
primitive	O	O
,	O	O
so	O	O
your	O	O
compiler	O	O
prevents	O	O
it	O	O
.	O	O
Your	O	O
compiler	O	O
still	O	O
knows	O	O
as	O	O
a	O	O
primitive	O	O
.	O	O
There	O	O
's	O	O
a	O	O
paper	O	O
about	O	O
this	O	O
issue	O	O
at	O	O
jcp.org	O	O
.	O	O
Autoboxing	O	O
is	O	O
mainly	O	O
useful	O	O
during	O	O
assignment	O	O
or	O	O
parameter	O	O
passing	O	O
--	O	O
allowing	O	O
you	O	O
to	O	O
pass	O	O
a	O	O
primitive	O	O
as	O	O
an	O	O
object	O	O
(	O	O
or	O	O
vice	O	O
versa	O	O
)	O	O
,	O	O
or	O	O
assign	O	O
a	O	O
primitive	O	O
to	O	O
an	O	O
object	O	O
(	O	O
or	O	O
vice	O	O
versa	O	O
)	O	O
.	O	O
So	O	O
unfortunately	O	O
,	O	O
you	O	O
would	O	O
have	O	O
to	O	O
do	O	O
it	O	O
like	O	O
this	O	O
:	O	O
(	O	O
kudos	O	O
Patrick	O	O
,	O	O
I	O	O
switched	O	O
to	O	O
your	O	O
way	O	O
)	O	O
Integer.toString	B-API	B-API
(	I-API	I-API
myInt	I-API	I-API
)	I-API	I-API
;	O	O
Ditto	O	O
on	O	O
what	O	O
Justin	O	O
said	O	O
,	O	O
but	O	O
you	O	O
should	O	O
do	O	O
this	O	O
instead	O	O
:	O	O
Integer.toString	B-API	B-API
(	I-API	I-API
myInt	I-API	I-API
)	I-API	I-API
;	O	O
It	O	O
saves	O	O
an	O	O
allocation	O	O
or	O	O
two	O	O
and	O	O
is	O	O
more	O	O
readable	O	O
.	O	O
seems	O	O
like	O	O
a	O	O
shortcoming	O	O
of	O	O
the	O	O
specification	O	O
to	O	O
me	O	O
There	O	O
are	O	O
more	O	O
shortcomings	O	O
and	O	O
this	O	O
is	O	O
a	O	O
subtle	O	O
topic	O	O
.	O	O
Check	O	O
this	O	O
out	O	O
:	O	O
public	O	O
class	O	O
methodOverloading	O	O
{	O	O
public	O	O
static	B-API	B-API
void	B-API	B-API
{	I-API	B-API
;	I-API	B-API
}	I-API	B-API
public	O	B-API
static	B-API	B-API
void	B-API	B-API
{	I-API	B-API
;	I-API	B-API
}	I-API	B-API
public	O	B-API
static	B-API	B-API
void	O	B-API
{	O	B-API
int	O	B-API
i	O	B-API
=	O	B-API
5	O	B-API
;	O	I-API
;	O	B-API
(	O	O
Integer	B-API	O
x	O	O
)	O	O
System.out.println	B-API	O
(	I-API	O
``	I-API	O
Integer	I-API	O
''	I-API	O
)	I-API	O
(	O	O
long	O	O
x	O	O
)	O	O
System.out.println	B-API	B-API
(	I-API	I-API
``	I-API	I-API
long	I-API	I-API
''	I-API	I-API
)	I-API	I-API
(	O	O
String	B-API	O
[	I-API	O
]	I-API	O
args	O	O
)	O	O
hello	B-API	O
(	I-API	O
i	I-API	O
)	I-API	O
Here	O	O
``	O	O
long	O	O
''	O	O
would	O	O
be	O	O
printed	O	O
(	O	O
have	O	O
n't	O	O
checked	O	O
it	O	O
myself	O	O
)	O	O
,	O	O
because	O	O
the	O	O
compiler	O	O
choses	O	O
widening	O	O
over	O	O
autoboxing	O	O
.	O	O
Be	O	O
careful	O	O
when	O	O
using	O	O
autoboxing	O	O
or	O	O
do	O	O
n't	O	O
use	O	O
it	O	O
at	O	O
all	O	O
!	O	O
That	O	O
actually	O	O
sounds	O	O
like	O	O
IIS	O	O
's	O	O
level	O	O
.	O	O
If	O	O
it	O	O
is	O	O
,	O	O
then	O	O
you	O	O
wo	O	O
n't	O	O
be	O	O
able	O	O
to	O	O
write	O	O
to	O	O
any	O	O
file	O	O
,	O	O
not	O	O
just	O	O
the	O	O
.	O	O
Here	O	O
are	O	O
the	O	O
levels	O	O
from	O	O
IIS	O	O
's	O	O
help	O	O
file	O	O
:	O	O
Full	O	O
(	O	O
internal	O	O
)	O	O
-	O	O
Specifies	O	O
unrestricted	O	O
permissions	O	O
.	O	O
Grants	O	O
the	O	O
ASP.NET	B-API	O
application	O	O
permissions	O	O
to	O	O
access	O	O
any	O	O
resource	O	O
that	O	O
is	O	O
subject	O	O
to	O	O
operating	O	O
system	O	O
security	O	O
.	O	O
All	O	O
privileged	O	O
operations	O	O
are	O	O
supported	O	O
.	O	O
High	B-API	O
(	I-API	O
web_hightrust.config	I-API	O
)	I-API	O
-	O	O
Specifies	O	O
a	O	O
high	O	O
level	O	O
of	O	O
code	O	O
access	O	O
security	O	O
,	O	O
which	O	O
means	O	O
that	O	O
the	O	O
application	O	O
can	O	O
not	O	O
do	O	O
any	O	O
one	O	O
of	O	O
the	O	O
following	O	O
things	O	O
by	O	O
default	O	O
:	O	O
Call	O	O
unmanaged	O	O
code	O	O
.	O	O
Call	O	O
serviced	O	O
components	O	O
.	O	O
Write	O	O
to	O	O
the	O	O
event	O	O
log	O	O
.	O	O
Access	B-API	O
Message	I-API	O
Queuing	I-API	O
service	I-API	O
queues	O	O
.	O	O
Access	O	O
ODBC	B-API	O
,	O	O
OleDb	B-API	O
,	O	O
or	O	O
Oracle	B-API	O
data	O	O
sources	O	O
.	O	O
Medium	B-API	O
(	I-API	O
web_mediumtrust.config	I-API	O
)	I-API	O
-	O	O
Specifies	O	O
a	O	O
medium	O	O
level	O	O
of	O	O
code	O	O
access	O	O
security	O	O
,	O	O
which	O	O
means	O	O
that	O	O
,	O	O
in	O	O
addition	O	O
to	O	O
High	O	O
Trust	O	O
Level	O	O
restrictions	O	O
,	O	O
the	O	O
ASP.NET	B-API	O
application	O	O
can	O	O
not	O	O
do	O	O
any	O	O
of	O	O
the	O	O
following	O	O
things	O	O
by	O	O
default	O	O
:	O	O
Access	O	O
files	O	O
outside	O	O
the	O	O
application	O	O
directory	O	O
.	O	O
Access	O	O
the	O	O
registry	O	O
.	O	O
Make	O	O
network	O	O
or	O	O
Web	O	O
service	O	O
calls	O	O
.	O	O
Low	B-API	O
(	I-API	O
web_lowtrust.config	I-API	O
)	I-API	O
-	O	O
Specifies	O	O
a	O	O
low	O	O
level	O	O
of	O	O
code	O	O
access	O	O
security	O	O
,	O	O
which	O	O
means	O	O
that	O	O
,	O	O
in	O	O
addition	O	O
to	O	O
Medium	B-API	O
Trust	I-API	O
Level	I-API	O
restrictions	O	O
,	O	O
the	O	O
application	O	O
can	O	O
not	O	O
do	O	O
any	O	O
of	O	O
the	O	O
following	O	O
things	O	O
by	O	O
default	O	O
:	O	O
Write	O	O
to	O	O
the	O	O
file	O	O
system	O	O
.	O	O
Call	O	O
the	O	O
Assert	O	O
method	O	O
.	O	O
Minimal	B-API	O
(	I-API	O
web_minimaltrust.config	I-API	O
)	I-API	O
-	O	O
Specifies	O	O
a	O	O
minimal	O	O
level	O	O
of	O	O
code	O	O
access	O	O
security	O	O
,	O	O
which	O	O
means	O	O
that	O	O
the	O	O
application	O	O
has	O	O
only	O	O
execute	O	O
permissions	O	O
.	O	O
I	O	O
would	O	O
suggest	O	O
that	O	O
if	O	O
you	O	O
are	O	O
dead	O	O
set	O	O
on	O	O
having	O	O
an	O	O
installer	O	O
,	O	O
have	O	O
it	O	O
create	O	O
a	O	O
web.config	O	O
in	O	O
memory	O	O
that	O	O
the	O	O
user	O	O
can	O	O
save	O	O
locally	O	O
and	O	O
up	O	O
afterward	O	O
.	O	O
In	O	O
Java	B-API	O
,	O	O
the	O	O
'int	O	O
'	O	O
type	O	O
is	O	O
a	O	O
primitive	O	O
,	O	O
whereas	O	O
the	O	O
'Integer	O	O
'	O	O
type	O	O
is	O	O
an	O	O
object	O	O
.	O	O
In	O	O
C	B-API	O
#	I-API	O
,	O	O
the	O	O
'int	O	O
'	O	O
type	O	O
is	O	O
the	O	O
same	O	O
as	O	O
and	O	O
is	O	O
a	O	O
value	O	O
type	O	O
(	O	O
ie	O	O
more	O	O
like	O	O
the	O	O
java	O	O
'int	O	O
'	O	O
)	O	O
.	O	O
An	O	O
integer	O	O
(	O	O
just	O	O
like	O	O
any	O	O
other	O	O
value	O	O
types	O	O
)	O	O
can	O	O
be	O	O
boxed	O	O
(	O	O
``	O	O
wrapped	O	O
''	O	O
)	O	O
into	O	O
an	O	O
object	O	O
.	O	O
The	O	O
differences	O	O
between	O	O
objects	O	O
and	O	O
primitives	O	O
are	O	O
somewhat	O	O
beyond	O	O
the	O	O
scope	O	O
of	O	O
this	O	O
question	O	O
,	O	O
but	O	O
to	O	O
summarize	O	O
:	O	O
Objects	O	O
provide	O	O
facilities	O	O
for	O	O
polymorphism	O	O
,	O	O
are	O	O
passed	O	O
by	O	O
reference	O	O
(	O	O
or	O	O
more	O	O
accurately	O	O
have	O	O
references	O	O
passed	O	O
by	O	O
value	O	O
)	O	O
,	O	O
and	O	O
are	O	O
allocated	O	O
from	O	O
the	O	O
heap	O	O
.	O	O
Conversely	O	O
,	O	O
primitives	O	O
are	O	O
immutable	O	O
types	O	O
that	O	O
are	O	O
passed	O	O
by	O	O
value	O	O
and	O	O
are	O	O
often	O	O
allocated	O	O
from	O	O
the	O	O
stack	O	O
.	O	O
Well	O	O
,	O	O
in	O	O
Java	B-API	O
an	O	O
int	O	O
is	O	O
a	O	O
primitive	O	O
while	O	O
an	O	O
Integer	B-API	O
is	O	O
an	O	O
Object	B-API	O
.	O	O
Meaning	O	O
,	O	O
if	O	O
you	O	O
made	O	O
a	O	O
new	O	O
Integer	B-API	O
:	O	O
Integer	B-API	O
i	O	O
=	O	O
new	B-API	O
Integer	I-API	O
(	I-API	O
6	I-API	O
)	I-API	O
;	O	O
You	O	O
could	O	O
call	O	O
some	O	O
method	O	O
on	O	O
i	O	O
:	O	O
String	B-API	O
s	O	O
=	O	O
i.toString	B-API	B-API
(	I-API	I-API
)	I-API	I-API
;	O	O
//sets	O	O
s	O	O
the	O	O
string	O	O
representation	O	O
of	O	O
i	O	O
Whereas	O	O
with	O	O
an	O	O
int	O	O
:	O	O
int	O	O
i	O	O
=	O	O
6	O	O
;	O	O
You	O	O
can	O	O
not	O	O
call	O	O
any	O	O
methods	O	O
on	O	O
it	O	O
,	O	O
because	O	O
it	O	O
is	O	O
simply	O	O
a	O	O
primitive	O	O
.	O	O
So	O	O
:	O	O
String	B-API	O
s	O	O
=	O	O
i.toString	B-API	B-API
(	I-API	I-API
)	I-API	I-API
;	O	O
//will	O	O
not	O	O
work	O	O
!	O	O
!	O	O
!	O	O
would	O	O
produce	O	O
an	O	O
error	O	O
,	O	O
because	O	O
int	O	O
is	O	O
not	O	O
an	O	O
object	O	O
.	O	O
int	O	O
is	O	O
one	O	O
of	O	O
the	O	O
few	O	O
primitives	O	O
in	O	O
Java	B-API	O
(	O	O
along	O	O
with	O	O
char	O	O
and	O	O
some	O	O
others	O	O
)	O	O
.	O	O
I	O	O
'm	O	O
not	O	O
100	O	O
%	O	O
sure	O	O
,	O	O
but	O	O
I	O	O
'm	O	O
thinking	O	O
that	O	O
the	O	O
Integer	B-API	O
object	O	O
more	O	O
or	O	O
less	O	O
just	O	O
has	O	O
an	O	O
int	O	O
property	O	O
and	O	O
a	O	O
whole	O	O
bunch	O	O
of	O	O
methods	O	O
to	O	O
interact	O	O
with	O	O
that	O	O
property	O	O
(	O	O
like	O	O
the	O	O
toString	B-API	B-API
(	I-API	I-API
)	I-API	I-API
method	O	O
for	O	O
example	O	O
)	O	O
.	O	O
So	O	O
Integer	B-API	O
is	O	O
a	O	O
fancy	O	O
way	O	O
to	O	O
work	O	O
with	O	O
an	O	O
int	O	O
(	O	O
Just	O	O
as	O	O
perhaps	O	O
String	B-API	O
is	O	O
a	O	O
fancy	O	O
way	O	O
to	O	O
work	O	O
with	O	O
a	O	O
group	O	O
of	O	O
chars	O	O
)	O	O
.	O	O
I	O	O
know	O	O
that	O	O
Java	B-API	O
is	O	O
n't	O	O
C	O	O
,	O	O
but	O	O
since	O	O
I	O	O
've	O	O
never	O	O
programmed	O	O
in	O	O
C	O	O
this	O	O
is	O	O
the	O	O
closest	O	O
I	O	O
could	O	O
come	O	O
to	O	O
the	O	O
answer	O	O
.	O	O
Hope	O	O
this	O	O
helps	O	O
!	O	O
Integer	B-API	O
object	O	O
javadoc	O	O
Integer	B-API	O
Ojbect	B-API	O
vs.	O	O
int	O	O
primitive	O	O
comparison	O	O
In	O	O
C	B-API	O
#	I-API	O
,	O	O
int	O	O
is	O	O
just	O	O
an	O	O
alias	O	O
for	O	O
,	O	O
string	O	O
for	O	O
,	O	O
double	O	O
for	O	O
etc	O	O
...	O	O
Personally	O	O
I	O	O
prefer	O	O
int	O	O
,	O	O
string	O	O
,	O	O
double	O	O
,	O	O
etc	O	O
.	O	O
because	O	O
they	O	O
do	O	O
n't	O	O
require	O	O
a	O	O
using	B-API	O
statement	O	O
:	O	O
)	O	O
A	O	O
silly	O	O
reason	O	O
,	O	O
I	O	O
know	O	O
...	O	O
I	O	O
'll	O	O
add	O	O
to	O	O
the	O	O
excellent	O	O
answers	O	O
given	O	O
above	O	O
,	O	O
and	O	O
talk	O	O
about	O	O
boxing	O	O
and	O	O
unboxing	O	O
,	O	O
and	O	O
how	O	O
this	O	O
applies	O	O
to	O	O
Java	B-API	O
(	O	O
although	O	O
C	B-API	O
#	I-API	O
has	O	O
it	O	O
too	O	O
)	O	O
.	O	O
I	O	O
'll	O	O
use	O	O
just	O	O
Java	B-API	O
terminology	O	O
,	O	O
because	O	O
I	O	O
am	O	O
more	O	O
au	O	O
fait	O	O
with	O	O
that	O	O
.	O	O
As	O	O
the	O	O
answers	O	O
mentioned	O	O
,	O	O
is	O	O
just	O	O
a	O	O
number	O	O
(	O	O
called	O	O
the	O	O
unboxed	O	O
type	O	O
)	O	O
,	O	O
whereas	O	O
is	O	O
an	O	O
object	O	O
(	O	O
which	O	O
contains	O	O
the	O	O
number	O	O
,	O	O
hence	O	O
a	O	O
boxed	O	O
type	O	O
)	O	O
.	O	O
In	O	O
Java	B-API	O
terms	O	O
,	O	O
that	O	O
means	O	O
(	O	O
apart	O	O
from	O	O
not	O	O
being	O	O
able	O	O
to	O	O
call	O	O
methods	O	O
on	O	O
)	O	O
,	O	O
you	O	O
can	O	O
not	O	O
store	O	O
or	O	O
other	O	O
non-object	O	O
types	O	O
in	O	O
collections	O	O
(	O	O
,	O	O
,	O	O
etc.	O	O
)	O	O
.	O	O
In	O	O
order	O	O
to	O	O
store	O	O
them	O	O
,	O	O
you	O	O
must	O	O
first	O	O
box	O	O
them	O	O
up	O	O
in	O	O
its	O	O
corresponding	O	O
boxed	O	O
type	O	O
.	O	O
Java	B-API	O
5	O	O
onwards	O	O
have	O	O
something	O	O
called	O	O
auto-boxing	O	O
and	O	O
auto-unboxing	O	O
which	O	O
allow	O	O
the	O	O
boxing/unboxing	O	O
to	O	O
be	O	O
done	O	O
behind	O	O
the	O	O
scenes	O	O
.	O	O
Compare	O	O
and	O	O
contrast	O	O
:	O	O
Java	B-API	O
5	O	O
version	O	O
:	O	O
DequeInteger	B-API	O
queue	I-API	O
;	I-API	O
void	B-API	B-API
{	I-API	B-API
;	I-API	B-API
}	I-API	B-API
int	O	B-API
{	O	B-API
return	O	B-API
(	O	I-API
int	O	I-API
n	O	I-API
)	O	I-API
queue.add	B-API	B-API
(	I-API	I-API
n	I-API	I-API
)	I-API	I-API
remove	B-API	B-API
(	I-API	I-API
)	I-API	I-API
queue.remove	B-API	B-API
(	I-API	I-API
)	I-API	I-API
Java	B-API	O
1.4	O	O
or	O	O
earlier	O	O
(	O	O
no	O	O
generics	O	O
either	O	O
)	O	O
:	O	O
Deque	B-API	O
queue	I-API	O
;	O	O
void	B-API	O
{	O	O
)	O	O
;	O	O
}	O	O
int	O	O
{	O	O
return	O	O
(	O	O
int	O	O
n	O	O
)	O	O
queue.add	B-API	B-API
(	O	I-API
Integer.valueOf	B-API	I-API
(	I-API	I-API
n	I-API	I-API
)	I-API	I-API
remove	B-API	B-API
(	I-API	I-API
)	I-API	I-API
(	O	O
(	O	O
Integer	B-API	O
)	O	O
queue.remove	B-API	B-API
(	I-API	I-API
)	I-API	I-API
)	O	O
.intValue	B-API	O
(	I-API	O
)	I-API	O
It	O	O
must	O	O
be	O	O
noted	O	O
that	O	O
despite	O	O
the	O	O
brevity	O	O
in	O	O
the	O	O
Java	B-API	O
5	O	O
version	O	O
,	O	O
both	O	O
versions	O	O
generate	O	O
identical	O	O
bytecode	O	O
.	O	O
Thus	O	O
,	O	O
although	O	O
auto-boxing	O	O
and	O	O
auto-unboxing	O	O
is	O	O
very	O	O
convenient	O	O
because	O	O
you	O	O
write	O	O
less	O	O
code	O	O
,	O	O
these	O	O
operations	O	O
do	O	O
happen	O	O
behind	O	O
the	O	O
scenes	O	O
,	O	O
with	O	O
the	O	O
same	O	O
runtime	O	O
costs	O	O
,	O	O
so	O	O
you	O	O
still	O	O
have	O	O
to	O	O
be	O	O
aware	O	O
of	O	O
their	O	O
existence	O	O
.	O	O
Hope	O	O
this	O	O
helps	O	O
!	O	O
I	O	O
'll	O	O
just	O	O
post	O	O
here	O	O
since	O	O
some	O	O
of	O	O
the	O	O
other	O	O
posts	O	O
are	O	O
slightly	O	O
inaccurate	O	O
in	O	O
relation	O	O
to	O	O
C	B-API	O
#	I-API	O
.	O	O
Correct	O	O
:	O	O
is	O	O
an	O	O
alias	O	O
for	O	O
.	O	O
Wrong	O	O
:	O	O
is	O	O
not	O	O
an	O	O
alias	O	O
for	O	O
,	O	O
but	O	O
for	O	O
Basically	O	O
,	O	O
int	O	O
is	O	O
a	O	O
reserved	O	O
keyword	O	O
in	O	O
the	O	O
C	B-API	O
#	I-API	O
programming	O	O
language	O	O
,	O	O
and	O	O
is	O	O
an	O	O
alias	O	O
for	O	O
the	O	O
value	O	O
type	O	O
.	O	O
and	O	O
Float	B-API	O
is	O	O
not	O	O
the	O	O
same	O	O
however	O	O
,	O	O
as	O	O
the	O	O
right	O	O
system	O	O
type	O	O
for	O	O
''float	O	O
''	O	O
is	O	O
System.Single	B-API	B-API
.	O	O
There	O	O
are	O	O
some	O	O
types	O	O
like	O	O
this	O	O
that	O	O
has	O	O
reserved	O	O
keywords	O	O
that	O	O
does	O	O
n't	O	O
seem	O	O
to	O	O
match	O	O
the	O	O
type	O	O
names	O	O
directly	O	O
.	O	O
In	O	O
C	B-API	O
#	I-API	O
there	O	O
is	O	O
no	O	O
difference	O	O
between	O	O
''	O	O
''	O	O
and	O	O
''	O	O
''	O	O
,	O	O
or	O	O
any	O	O
of	O	O
the	O	O
other	O	O
pa	O	O
rs	O	O
or	O	O
keywords/system	O	O
types	O	O
,	O	O
except	O	O
for	O	O
when	O	O
defining	O	O
enums	O	O
.	O	O
With	O	O
enums	O	O
you	O	O
can	O	O
specify	O	O
the	O	O
storage	O	O
size	O	O
to	O	O
use	O	O
and	O	O
in	O	O
this	O	O
case	O	O
you	O	O
can	O	O
only	O	O
use	O	O
the	O	O
reserved	O	O
keyword	O	O
,	O	O
and	O	O
not	O	O
the	O	O
system	O	O
runtime	O	O
type	O	O
name	O	O
.	O	O
Wether	O	O
the	O	O
value	O	O
in	O	O
the	O	O
int	O	O
will	O	O
be	O	O
stored	O	O
on	O	O
the	O	O
stack	O	O
,	O	O
in	O	O
memory	O	O
,	O	O
or	O	O
as	O	O
a	O	O
referenced	O	O
heap	O	O
object	O	O
depends	O	O
on	O	O
the	O	O
context	O	O
and	O	O
how	O	O
you	O	O
use	O	O
it	O	O
.	O	O
This	O	O
declaration	O	O
in	O	O
a	O	O
method	O	O
:	O	O
int	O	O
i	O	O
;	O	O
defines	O	O
a	O	O
variable	O	O
i	O	O
of	O	O
type	O	O
,	O	O
l	O	O
ving	O	O
in	O	O
a	O	O
register	O	O
or	O	O
on	O	O
the	O	O
stack	O	O
,	O	O
depending	O	O
on	O	O
optimizations	O	O
.	O	O
The	O	O
same	O	O
declaration	O	O
in	O	O
a	O	O
type	O	O
(	O	O
struct	O	O
or	O	O
class	O	O
)	O	O
defines	O	O
a	O	O
member	O	O
field	O	O
.	O	O
The	O	O
same	O	O
declaration	O	O
in	O	O
a	O	O
method	O	O
argument	O	O
list	O	O
defines	O	O
a	O	O
parameter	O	O
,	O	O
with	O	O
the	O	O
same	O	O
storage	O	O
options	O	O
as	O	O
for	O	O
a	O	O
local	O	O
variable	O	O
.	O	O
(	O	O
note	O	O
that	O	O
this	O	O
paragraph	O	O
is	O	O
not	O	O
valid	O	O
if	O	O
you	O	O
start	O	O
pulling	O	O
iterator	O	O
methods	O	O
into	O	O
the	O	O
mix	O	O
,	O	O
these	O	O
are	O	O
different	O	O
beasts	O	O
altogether	O	O
)	O	O
To	O	O
get	O	O
a	O	O
heap	O	O
object	O	O
,	O	O
you	O	O
can	O	O
use	O	O
boxing	O	O
:	O	O
object	O	O
o	O	O
=	O	O
i	O	O
;	O	O
this	O	O
will	O	O
create	O	O
a	O	O
boxed	O	O
copy	O	O
of	O	O
the	O	O
contents	O	O
of	O	O
i	O	O
on	O	O
the	O	O
heap	O	O
.	O	O
In	O	O
IL	O	O
you	O	O
can	O	O
access	O	O
methods	O	O
on	O	O
the	O	O
heap	O	O
object	O	O
directly	O	O
,	O	O
but	O	O
in	O	O
C	B-API	O
#	I-API	O
you	O	O
need	O	O
to	O	O
cast	O	O
it	O	O
back	O	O
to	O	O
an	O	O
int	O	O
,	O	O
which	O	O
will	O	O
create	O	O
another	O	O
copy	O	O
.	O	O
Thus	O	O
,	O	O
the	O	O
object	O	O
on	O	O
the	O	O
heap	O	O
can	O	O
not	O	O
easily	O	O
be	O	O
changed	O	O
in	O	O
C	B-API	O
#	I-API	O
without	O	O
creating	O	O
a	O	O
new	O	O
boxed	O	O
copy	O	O
of	O	O
a	O	O
new	O	O
int	O	O
value	O	O
.	O	O
(	O	O
Ugh	O	O
,	O	O
this	O	O
paragraph	O	O
does	O	O
n't	O	O
read	O	O
all	O	O
that	O	O
easily	O	O
.	O	O
)	O	O
This	O	O
has	O	O
already	O	O
been	O	O
answered	O	O
for	O	O
Java	B-API	O
,	O	O
here	O	O
's	O	O
the	O	O
C	B-API	O
#	I-API	O
answer	O	O
:	O	O
''	O	O
Integer	B-API	O
''	O	O
is	O	O
not	O	O
a	O	O
valid	O	O
type	O	O
name	O	O
in	O	O
C	B-API	O
#	I-API	O
and	O	O
``	O	O
int	O	O
''	O	O
is	O	O
just	O	O
an	O	O
alias	O	O
for	O	O
System.Int32	B-API	O
.	O	O
Also	O	O
,	O	O
unlike	O	O
in	O	O
Java	B-API	O
(	O	O
or	O	O
C++	B-API	O
)	O	O
there	O	O
are	O	O
n't	O	O
any	O	O
special	O	O
primitive	O	O
types	O	O
in	O	O
C	B-API	O
#	I-API	O
,	O	O
every	O	O
instance	O	O
of	O	O
a	O	O
type	O	O
in	O	O
C	B-API	O
#	I-API	O
(	O	O
including	O	O
int	O	O
)	O	O
is	O	O
an	O	O
object	O	O
.	O	O
Here	O	O
's	O	O
some	O	O
demonstrative	O	O
code	O	O
:	O	O
void	B-API	O
{	I-API	O
5	I-API	O
)	I-API	O
)	I-API	O
;	I-API	O
)	I-API	O
;	I-API	O
}	I-API	O
string	O	O
{	O	O
return	O	O
)	O	O
;	O	O
}	O	O
string	O	O
{	O	O
return	O	O
(	O	O
typeof	B-API	O
DoStuff	B-API	B-API
(	I-API	I-API
)	I-API	I-API
(	O	O
SomeMethod	O	B-API
(	O	I-API
(	O	I-API
int	O	I-API
)	O	I-API
(	O	O
GetTypeNameint	B-API	B-API
(	I-API	I-API
)	I-API	I-API
(	O	O
object	O	O
someParameter	O	O
)	O	O
(	O	O
``	O	O
Some	O	O
text	O	O
{	O	O
0	O	O
}	O	O
''	O	O
,	O	O
someParameter.ToString	B-API	B-API
(	I-API	I-API
)	I-API	I-API
GetTypeNameT	B-API	O
(	I-API	O
)	I-API	O
Regarding	O	O
Java	B-API	O
1.5	O	O
and	O	O
autoboxing	O	O
there	O	O
is	O	O
an	O	O
important	O	O
``	O	O
quirk	O	O
''	O	O
that	O	O
comes	O	O
to	O	O
play	O	O
when	O	O
comparing	O	O
Integer	B-API	O
objects	O	O
.	O	O
In	O	O
Java	B-API	O
,	O	O
Integer	B-API	O
objects	O	O
with	O	O
the	O	O
values	O	O
-128	O	O
to	O	O
127	O	O
are	O	O
immutable	O	O
(	O	O
that	O	O
is	O	O
,	O	O
for	O	O
one	O	O
particular	O	O
integer	O	O
value	O	O
,	O	O
say	O	O
23	O	O
,	O	O
all	O	O
Integer	B-API	O
objects	O	O
instantiated	O	O
through	O	O
your	O	O
program	O	O
with	O	O
the	O	O
value	O	O
23	O	O
points	O	O
to	O	O
the	O	O
exact	O	O
same	O	O
object	O	O
)	O	O
.	O	O
Example	O	O
,	O	O
this	O	O
returns	O	O
true	O	O
:	O	O
Integer	B-API	O
i1	I-API	O
=	I-API	O
new	I-API	O
;	O	O
Integer	B-API	O
i2	I-API	O
=	I-API	O
new	I-API	O
;	O	O
//	O	O
Integer	B-API	B-API
(	I-API	I-API
127	I-API	I-API
)	I-API	I-API
(	O	I-API
127	O	I-API
)	O	I-API
;	O	O
System.out.println	B-API	O
(	I-API	O
i1	I-API	O
==	I-API	O
i2	I-API	O
)	I-API	O
While	O	O
this	O	O
returns	O	O
false	O	O
:	O	O
Integer	B-API	O
i1	I-API	O
=	I-API	O
new	I-API	O
;	O	O
Integer	B-API	O
i2	I-API	O
=	I-API	O
new	I-API	O
;	O	O
//	O	O
Integer	B-API	O
(	I-API	O
128	I-API	O
)	I-API	O
(	O	O
128	O	O
)	O	O
;	O	O
System.out.println	B-API	O
(	I-API	O
i1	I-API	O
==	I-API	O
i2	I-API	O
)	I-API	O
The	O	O
==	O	O
compares	O	O
by	O	O
reference	O	O
(	O	O
does	O	O
the	O	O
variables	O	O
point	O	O
to	O	O
the	O	O
same	O	O
object	O	O
)	O	O
.	O	O
This	O	O
result	O	O
may	O	O
or	O	O
may	O	O
not	O	O
differ	O	O
depending	O	O
on	O	O
what	O	O
JVM	O	O
you	O	O
are	O	O
using	O	O
.	O	O
The	O	O
specification	O	O
autoboxing	O	O
for	O	O
Java	B-API	O
1.5	O	O
requires	O	O
that	O	O
integers	O	O
(	O	O
-128	O	O
to	O	O
127	O	O
)	O	O
always	O	O
box	O	O
to	O	O
the	O	O
same	O	O
wrapper	O	O
object	O	O
.	O	O
A	O	O
solution	O	O
?	O	O
=	O	O
)	O	O
One	O	O
should	O	O
always	O	O
use	O	O
the	O	O
Integer.equals	B-API	B-API
(	I-API	I-API
)	I-API	I-API
method	O	O
when	O	O
comparing	O	O
Integer	B-API	O
objects	O	O
.	O	O
)	O	O
;	O	O
//	O	O
System.out.println	B-API	B-API
(	I-API	I-API
i1.equals	I-API	I-API
(	I-API	I-API
i2	I-API	I-API
)	I-API	I-API
More	O	O
info	O	O
at	O	O
java.net	O	B-API
Example	O	O
at	O	O
bexhuff.com	O	O
In	O	O
Java	B-API	O
there	O	O
are	O	O
two	O	O
basic	O	O
types	O	O
in	O	O
the	O	O
JVM	B-API	O
.	O	O
1	O	O
)	O	O
Primitive	O	O
types	O	O
and	O	O
2	O	O
)	O	O
Reference	O	O
Types	O	O
.	O	O
int	O	O
is	O	O
a	O	O
primitive	O	O
type	O	O
and	O	O
Integer	B-API	O
is	O	O
a	O	O
class	O	O
type	O	O
(	O	O
which	O	O
is	O	O
kind	O	O
of	O	O
reference	O	O
type	O	O
)	O	O
.	O	O
Primitive	O	O
values	O	O
do	O	O
not	O	O
share	O	O
state	O	O
with	O	O
other	O	O
primitive	O	O
values	O	O
.	O	O
A	O	O
variable	O	O
whose	O	O
type	O	O
is	O	O
a	O	O
primitive	O	O
type	O	O
always	O	O
holds	O	O
a	O	O
primitive	O	O
value	O	O
of	O	O
that	O	O
type	O	O
.	O	O
int	O	O
aNumber	O	O
=	O	O
4	O	O
;	O	O
int	O	O
anotherNum	O	O
=	O	O
aNumber	O	O
;	O	O
aNumber	O	O
+=	O	O
6	O	O
;	O	O
System.out.println	B-API	B-API
(	I-API	I-API
anotherNum	I-API	I-API
)	I-API	I-API
;	O	O
//	O	O
Prints	O	O
4	O	O
An	O	O
object	O	O
is	O	O
a	O	O
dynamically	O	O
created	O	O
class	O	O
instance	O	O
or	O	O
an	O	O
array	O	O
.	O	O
The	O	O
reference	O	O
values	O	O
(	O	O
often	O	O
just	O	O
references	O	O
)	O	O
are	O	O
pointers	O	O
to	O	O
these	O	O
objects	O	O
and	O	O
a	O	O
special	O	O
null	O	O
reference	O	O
,	O	O
which	O	O
refers	O	O
to	O	O
no	O	O
object	O	O
.	O	O
There	O	O
may	O	O
be	O	O
many	O	O
references	O	O
to	O	O
the	O	O
same	O	O
object	O	O
.	O	O
Integer	B-API	O
aNumber	O	O
=	O	O
Integer.valueOf	B-API	O
(	I-API	O
4	I-API	O
)	I-API	O
;	O	O
Integer	B-API	O
anotherNumber	O	O
=	O	O
aNumber	O	O
;	O	O
//	O	O
anotherNumber	O	O
references	O	O
the	O	O
//	O	O
same	O	O
object	O	O
as	O	O
aNumber	O	O
Also	O	O
in	O	O
Java	B-API	O
everything	O	O
is	O	O
passed	O	O
by	O	O
value	O	O
.	O	O
With	O	O
objects	O	O
the	O	O
value	O	O
that	O	O
is	O	O
passed	O	O
is	O	O
the	O	O
reference	O	O
to	O	O
the	O	O
object	O	O
.	O	O
So	O	O
another	O	O
difference	O	O
between	O	O
int	O	O
and	O	O
Integer	B-API	O
in	O	O
java	O	O
is	O	O
how	O	O
they	O	O
are	O	O
passed	O	O
in	O	O
method	O	O
calls	O	O
.	O	O
For	O	O
example	O	O
in	O	O
public	O	O
int	O	O
add	O	O
(	O	O
int	O	O
a	O	O
,	O	O
int	O	O
b	O	O
)	O	O
{	O	O
return	O	O
a	O	O
+	O	O
b	O	O
;	O	O
}	O	O
final	O	O
int	O	O
two	O	O
=	O	O
2	O	O
;	O	O
int	O	O
sum	O	O
=	O	O
add	O	O
(	O	O
1	O	O
,	O	O
two	O	O
)	O	O
;	O	O
The	O	O
variable	O	O
two	O	O
is	O	O
passed	O	O
as	O	O
the	O	O
primitive	O	O
integer	O	O
type	O	O
2	O	O
.	O	O
Whereas	O	O
in	O	O
public	O	O
int	O	O
add	O	O
(	O	O
Integer	B-API	O
a	O	O
,	O	O
Integer	B-API	O
b	O	O
)	O	O
{	O	O
return	O	O
a.intValue	B-API	B-API
(	I-API	I-API
)	I-API	I-API
+	O	O
b.intValue	B-API	B-API
(	I-API	I-API
)	I-API	I-API
;	O	O
}	O	O
final	O	O
Integer	B-API	O
two	O	O
=	O	O
Integer.valueOf	B-API	B-API
(	I-API	I-API
2	I-API	I-API
)	I-API	I-API
;	O	O
int	O	O
sum	O	O
=	O	O
add	O	O
(	O	O
Integer.valueOf	B-API	O
(	I-API	O
1	I-API	O
)	I-API	O
,	O	O
two	O	O
)	O	O
;	O	O
The	O	O
variable	O	O
two	O	O
is	O	O
passed	O	O
as	O	O
a	O	O
reference	O	O
to	O	O
an	O	O
object	O	O
that	O	O
holds	O	O
the	O	O
integer	O	O
value	O	O
2	O	O
.	O	O
@	O	O
WolfmanDragon	O	O
:	O	O
Pass	O	O
by	O	O
reference	O	O
would	O	O
work	O	O
like	O	O
so	O	O
:	O	O
public	O	O
void	O	O
increment	O	O
(	O	O
int	O	O
x	O	O
)	O	O
{	O	O
x	O	O
=	O	O
x	O	O
+	O	O
1	O	O
;	O	O
}	O	O
int	O	O
a	O	O
=	O	O
1	O	O
;	O	O
increment	O	B-API
(	O	I-API
a	O	I-API
)	O	I-API
;	O	O
//	O	O
a	O	O
is	O	O
now	O	O
2	O	O
When	O	O
increment	O	O
is	O	O
called	O	O
it	O	O
passes	O	O
a	O	O
reference	O	O
(	O	O
pointer	O	O
)	O	O
to	O	O
variable	O	O
a	O	O
.	O	O
And	O	O
the	O	O
increment	O	O
function	O	O
directly	O	O
modifies	O	O
variable	O	O
a	O	O
.	O	O
And	O	O
for	O	O
object	O	O
types	O	O
it	O	O
would	O	O
work	O	O
as	O	O
follows	O	O
:	O	O
public	O	O
void	O	O
increment	O	O
(	O	O
Integer	B-API	O
x	O	O
)	O	O
{	O	O
x	O	O
=	O	O
Integer.valueOf	O	B-API
(	O	I-API
x.intValue	B-API	I-API
(	I-API	I-API
)	I-API	I-API
+	O	O
1	O	O
)	O	O
;	O	O
}	O	O
Integer	B-API	O
a	O	O
=	O	O
Integer.valueOf	B-API	B-API
(	I-API	I-API
1	I-API	I-API
)	I-API	I-API
;	O	O
increment	O	B-API
(	O	I-API
a	O	I-API
)	O	I-API
;	O	O
//	O	O
a	O	O
is	O	O
now	O	O
2	O	O
Do	O	O
you	O	O
see	O	O
the	O	O
difference	O	O
now	O	O
?	O	O
One	O	O
more	O	O
thing	O	O
that	O	O
I	O	O
do	O	O
n't	O	O
see	O	O
in	O	O
previous	O	O
answers	O	O
:	O	O
In	O	O
Java	B-API	O
the	O	O
primitive	O	O
wrappers	O	O
classes	O	O
like	O	O
Integer	B-API	O
,	O	O
Double	B-API	O
,	O	O
Float	B-API	O
,	O	O
Boolean	B-API	O
...	O	O
and	O	O
String	B-API	O
are	O	O
suposed	O	O
to	O	O
be	O	O
invariant	O	O
,	O	O
so	O	O
that	O	O
when	O	O
you	O	O
pass	O	O
an	O	O
instance	O	O
of	O	O
those	O	O
classes	O	O
the	O	O
invoked	O	O
method	O	O
could	O	O
n't	O	O
alter	O	O
your	O	O
data	O	O
in	O	O
any	O	O
way	O	O
,	O	O
in	O	O
opositin	O	O
with	O	O
most	O	O
of	O	O
other	O	O
classes	O	O
,	O	O
which	O	O
internal	O	O
data	O	O
could	O	O
be	O	O
altered	O	O
by	O	O
its	O	O
public	O	O
methods	O	O
.	O	O
So	O	O
that	O	O
this	O	O
classes	O	O
only	O	O
has	O	O
'getter	O	O
'	O	O
methods	O	O
,	O	O
no	O	O
'setters	O	O
'	O	O
,	O	O
besides	O	O
the	O	O
constructor	O	O
.	O	O
In	O	O
a	O	O
java	O	O
program	O	O
String	B-API	O
literals	O	O
are	O	O
stored	O	O
in	O	O
a	O	O
separate	O	O
portion	O	O
of	O	O
heap	O	O
memory	O	O
,	O	O
only	O	O
a	O	O
instance	O	O
for	O	O
literal	O	O
,	O	O
to	O	O
save	O	O
memory	O	O
reusing	O	O
those	O	O
instances	O	O
Consider	O	O
using	O	O
a	O	O
ManualResetEvent	B-API	O
to	O	O
block	O	O
the	O	O
main	O	O
thread	O	O
at	O	O
the	O	O
end	O	O
of	O	O
its	O	O
processing	O	O
,	O	O
and	O	O
call	O	O
Reset	B-API	B-API
(	I-API	I-API
)	I-API	I-API
on	O	O
it	O	O
once	O	O
the	O	O
timer	O	O
's	O	O
processing	O	O
has	O	O
finished	O	O
.	O	O
If	O	O
this	O	O
is	O	O
something	O	O
that	O	O
needs	O	O
to	O	O
run	O	O
constantly	O	O
,	O	O
consider	O	O
moving	O	O
this	O	O
into	O	O
a	O	O
service	O	O
process	O	O
instead	O	O
of	O	O
a	O	O
console	O	O
app	O	O
.	O	O
You	O	O
can	O	O
use	O	O
something	O	O
like	O	O
Console.ReadLine	B-API	B-API
(	I-API	I-API
)	I-API	I-API
to	O	O
block	O	O
the	O	O
main	O	O
thread	O	O
,	O	O
so	O	O
other	O	O
background	O	O
threads	O	O
(	O	O
like	O	O
timer	O	O
threads	O	O
)	O	O
will	O	O
still	O	O
work	O	O
.	O	O
You	O	O
may	O	O
also	O	O
use	O	O
an	O	O
AutoResetEvent	B-API	O
to	O	O
block	O	O
the	O	O
execution	O	O
,	O	O
then	O	O
(	O	O
when	O	O
you	O	O
need	O	O
to	O	O
)	O	O
you	O	O
can	O	O
call	O	O
Set	B-API	B-API
(	I-API	I-API
)	I-API	I-API
method	O	O
on	O	O
that	O	O
AutoResetEvent	B-API	O
object	O	O
to	O	O
release	O	O
the	O	O
main	O	O
thread	O	O
.	O	O
Also	O	O
ensure	O	O
that	O	O
your	O	O
reference	O	O
to	O	O
Timer	O	O
object	O	O
does	O	O
n't	O	O
go	O	O
out	O	O
of	O	O
scope	O	O
and	O	O
garbage	O	O
collected	O	O
.	O	O
If	O	O
you	O	O
are	O	O
using	O	O
a	O	O
button	O	O
or	O	O
hyperlink	O	O
or	O	O
something	O	O
to	O	O
trigger	O	O
the	O	O
popup	O	O
to	O	O
show	O	O
,	O	O
could	O	O
you	O	O
also	O	O
add	O	O
an	O	O
additional	O	O
handler	O	O
to	O	O
the	O	O
onClick	B-API	O
event	I-API	O
of	O	O
the	O	O
trigger	O	O
which	O	O
should	O	O
still	O	O
fire	O	O
the	O	O
modal	O	O
popup	O	O
and	O	O
run	O	O
the	O	O
javascript	O	O
at	O	O
the	O	O
same	O	O
time	O	O
?	O	O
The	O	O
ModalPopupExtender	B-API	O
modifies	O	O
the	O	O
button/hyperlink	O	O
that	O	O
you	O	O
tell	O	O
it	O	O
to	O	O
be	O	O
the	O	O
``	O	O
trigger	O	O
''	O	O
element	O	O
.	O	O
The	O	O
onclick	O	O
script	O	O
I	O	O
add	O	O
triggers	O	O
before	O	O
the	O	O
popup	O	O
is	O	O
shown	O	O
.	O	O
I	O	O
want	O	O
script	O	O
to	O	O
fire	O	O
after	O	O
the	O	O
popup	O	O
is	O	O
shown	O	O
.	O	O
Also	O	O
,	O	O
still	O	O
leaves	O	O
me	O	O
with	O	O
the	O	O
problem	O	O
of	O	O
when	O	O
I	O	O
show	O	O
the	O	O
modal	O	O
from	O	O
server	O	O
side	O	O
.	O	O
hmmm	O	O
...	O	O
I	O	O
'm	O	O
pretty	O	O
sure	O	O
that	O	O
there	O	O
's	O	O
a	O	O
shown	O	O
event	O	O
for	O	O
the	O	O
MPE	B-API	O
...	O	O
this	O	O
is	O	O
off	O	O
the	O	O
top	O	O
of	O	O
my	O	O
head	O	O
,	O	O
but	O	O
I	O	O
think	O	O
you	O	O
can	O	O
add	O	O
an	O	O
event	O	O
handler	O	O
to	O	O
the	O	O
shown	O	O
event	O	O
on	O	O
page_load	O	O
function	O	O
{	O	O
var	B-API	O
popup	O	O
=	O	O
;	O	O
;	O	O
}	O	O
function	O	O
{	O	O
pageLoad	B-API	B-API
(	I-API	I-API
)	I-API	I-API
$	O	O
find	B-API	O
(	I-API	O
'ModalPopupClientID	I-API	O
'	I-API	O
)	I-API	O
popup.add_shown	B-API	O
(	I-API	O
SetFocus	I-API	O
)	I-API	O
SetFocus	B-API	B-API
(	I-API	I-API
)	I-API	I-API
$	O	O
get	B-API	B-API
(	I-API	I-API
'TriggerClientId	I-API	I-API
'	I-API	I-API
)	I-API	I-API
.focus	I-API	I-API
(	I-API	I-API
)	I-API	I-API
i	O	O
'm	O	O
not	O	O
sure	O	O
tho	O	O
if	O	O
this	O	O
will	O	O
help	O	O
you	O	O
with	O	O
calling	O	O
it	O	O
from	O	O
the	O	O
server	O	O
side	O	O
tho	O	O
I	O	O
have	O	O
n't	O	O
thought	O	O
too	O	O
hard	O	O
about	O	O
this	O	O
,	O	O
but	O	O
I	O	O
reckon	O	O
you	O	O
could	O	O
get	O	O
a	O	O
Custom	B-API	O
Treeview	I-API	O
in	O	O
WPF	O	B-API
to	O	O
do	O	O
what	O	O
you	O	O
want	O	O
.	O	O
I	O	O
was	O	O
reading	O	O
an	O	O
article	O	O
on	O	O
code	O	O
project	O	O
a	O	O
while	O	O
back	O	O
that	O	O
implemented	O	O
an	O	O
org	O	O
chart	O	O
this	O	O
way	O	O
...	O	O
I	O	O
'm	O	O
all	O	O
for	O	O
writing	O	O
your	O	O
own	O	O
software	O	O
when	O	O
something	O	O
does	O	O
n't	O	O
suit	O	O
your	O	O
needs	O	O
and	O	O
a	O	O
frequent	O	O
re-inventer	O	O
of	O	O
the	O	O
wheel	O	O
.	O	O
But	O	O
this	O	O
honestly	O	O
seems	O	O
like	O	O
one	O	O
of	O	O
those	O	O
things	O	O
were	O	O
the	O	O
solution	O	O
is	O	O
readily	O	O
available	O	O
,	O	O
in	O	O
this	O	O
case	O	O
in	O	O
the	O	O
form	O	O
of	O	O
Family	O	O
Tree	O	O
Maker	O	O
And	O	O
at	O	O
a	O	O
mere	O	O
$	O	O
40	O	O
I	O	O
would	O	O
venture	O	O
to	O	O
guess	O	O
that	O	O
you	O	O
'd	O	O
come	O	O
out	O	O
ahead	O	O
compared	O	O
to	O	O
the	O	O
hours	O	O
you	O	O
would	O	O
spend	O	O
trying	O	O
to	O	O
get	O	O
your	O	O
own	O	O
program	O	O
doing	O	O
exactly	O	O
what	O	O
you	O	O
need	O	O
.	O	O
I	O	O
currently	O	O
use	O	O
the	O	O
software	O	O
and	O	O
it	O	O
works	O	O
great	O	O
.	O	O
Now	O	O
,	O	O
if	O	O
your	O	O
interest	O	O
in	O	O
writing	O	O
it	O	O
partly	O	O
for	O	O
the	O	O
purpose	O	O
of	O	O
just	O	O
doing	O	O
it	O	O
because	O	O
you	O	O
can	O	O
and	O	O
to	O	O
learn	O	O
something	O	O
...	O	O
then	O	O
by	O	O
all	O	O
means	O	O
I	O	O
salute	O	O
your	O	O
will	O	O
to	O	O
learn	O	O
and	O	O
hope	O	O
you	O	O
find	O	O
the	O	O
control	O	O
you	O	O
are	O	O
looking	O	O
for	O	O
.	O	O
Geni	B-API	O
is	O	O
probably	O	O
what	O	O
your	O	O
looking	O	O
for	O	O
.	O	O
If	O	O
you	O	O
're	O	O
really	O	O
looking	O	O
for	O	O
an	O	O
application	O	O
that	O	O
you	O	O
can	O	O
modify	O	O
try	O	O
out	O	O
Family.Show	B-API	O
on	O	O
CodePlex	B-API	O
.	O	O
Take	O	O
a	O	O
look	O	O
at	O	O
Creating	O	O
and	O	O
Using	O	O
URL	B-API	O
Monikers	I-API	O
,	O	O
About	O	O
Asynchronous	O	O
Pluggable	O	O
Protocols	O	O
and	O	O
Registering	O	O
an	O	O
Application	O	O
to	O	O
a	O	O
URL	O	O
Protocol	O	O
from	O	O
MSDN	O	O
Here	O	O
's	O	O
some	O	O
old	O	O
Delphi	B-API	O
code	O	O
we	O	O
used	O	O
as	O	O
a	O	O
way	O	O
to	O	O
get	O	O
shortcuts	O	O
in	O	O
a	O	O
web	O	O
application	O	O
to	O	O
start	O	O
a	O	O
windows	O	O
program	O	O
locally	O	O
for	O	O
the	O	O
user	O	O
.	O	O
procedure	B-API	O
InstallIntoRegistry	I-API	O
;	O	O
var	B-API	O
Reg	O	O
:	O	O
TRegistry	B-API	O
;	O	O
begin	O	O
Reg	O	O
:	O	O
=	O	O
TRegistry.Create	B-API	O
;	O	O
try	O	O
Reg.RootKey	B-API	B-API
:	O	O
=	O	O
HKEY_CLASSES_ROOT	B-API	O
;	O	O
if	B-API	O
then	I-API	O
begin	O	O
;	O	O
;	O	O
;	O	O
;	O	O
if	B-API	O
then	I-API	O
begin	O	O
+	O	O
'	O	O
''	O	O
``	O	O
%	O	O
1	O	O
''	O	O
'	O	O
)	O	O
;	O	O
end	O	O
;	O	O
end	O	O
else	B-API	O
begin	O	O
+	O	O
'Please	O	O
make	O	O
sure	O	O
you	O	O
are	O	O
logged	O	O
in	O	O
with	O	O
a	O	O
user	O	O
account	O	O
with	O	O
administrative	O	O
rights	O	O
!	O	O
'	O	O
,	O	O
'Access	O	O
denied	O	O
'	O	O
,	O	O
0	O	O
)	O	O
;	O	O
Exit	B-API	O
;	O	O
end	O	O
;	O	O
finally	O	O
;	O	O
end	O	O
;	O	O
(	O	O
'moniker	O	O
'	O	O
,	O	O
True	B-API	O
)	I-API	O
(	I-API	O
''	O	O
,	O	O
'URL	O	O
:	O	O
Name	O	O
of	O	O
moniker	O	O
'	O	O
)	O	O
(	O	O
'URL	O	O
Protocol	O	O
'	O	O
,	O	O
''	O	O
)	O	O
(	O	O
'Source	O	O
Filter	O	O
'	O	O
,	O	O
'	O	O
{	O	O
E436EBB6-524F-11CE-9F53-0020AF0BA770	O	O
}	O	O
'	O	O
)	O	B-API
(	O	I-API
'EditFlags	O	I-API
'	O	I-API
,	O	I-API
2	O	I-API
)	O	I-API
(	O	I-API
'shell\open\command	O	I-API
'	O	I-API
,	O	I-API
True	B-API	I-API
)	I-API	I-API
(	I-API	O
''	O	O
,	O	O
'	O	O
''	O	O
'	O	O
+	O	O
ParamStr	B-API	O
(	I-API	O
0	I-API	O
)	I-API	O
(	O	O
0	O	O
,	O	O
'You	O	O
do	O	O
not	O	O
have	O	O
the	O	O
necessary	O	O
access	O	O
rights	O	O
to	O	O
complete	O	O
this	O	O
installation	O	O
!	O	O
'	O	O
+	O	O
Chr	B-API	O
(	I-API	O
13	I-API	O
)	I-API	O
FreeAndNil	B-API	O
(	I-API	O
Reg	I-API	O
)	I-API	O
(	O	O
0	O	O
,	O	O
'Application	O	O
WebStart	O	O
has	O	O
been	O	O
installed	O	O
successfully	O	O
!	O	O
'	O	O
,	O	O
'Installed	O	O
'	O	O
,	O	O
0	O	O
)	O	O
A	O	O
tidier	O	O
way	O	O
is	O	O
to	O	O
create	O	O
separate	O	O
forms	O	O
for	O	O
each	O	O
'pane	O	O
'	O	O
and	O	O
,	O	O
in	O	O
each	O	O
form	O	O
constructor	O	O
,	O	O
set	B-API	O
this.TopLevel	I-API	O
=	O	O
false	O	O
;	O	O
this.FormBorderStyle	O	B-API
=	O	O
FormBorderStyle.None	B-API	B-API
;	O	O
this.Dock	O	B-API
=	O	O
DockStyle.Fill	B-API	B-API
;	O	O
That	O	O
way	O	O
,	O	O
each	O	O
of	O	O
these	O	O
forms	O	O
can	O	O
be	O	O
laid	O	O
out	O	O
in	O	O
its	O	O
own	O	O
designer	O	O
,	O	O
instantiated	O	O
one	O	O
or	O	O
more	O	O
times	O	O
at	O	O
runtime	O	O
,	O	O
and	O	O
added	O	O
to	O	O
the	O	O
empty	O	O
area	O	O
like	O	O
a	O	O
normal	O	O
control	O	O
.	O	O
Perhaps	O	O
the	O	O
main	O	O
form	O	O
could	O	O
use	O	O
a	O	O
with	O	O
a	O	O
static	O	O
in	O	O
one	O	O
panel	O	O
,	O	O
and	O	O
space	O	O
to	O	O
add	O	O
these	O	O
forms	O	O
in	O	O
the	O	O
other	O	O
.	O	O
Once	O	O
they	O	O
are	O	O
added	O	O
,	O	O
they	O	O
could	O	O
be	O	O
flipped	O	O
through	O	O
using	O	O
or	O	O
methods	O	O
.	O	O
SeparateForm	O	O
f	O	O
=	O	O
new	O	O
SeparateForm	B-API	O
(	I-API	O
)	I-API	O
;	O	O
MainFormSplitContainer.Panel2.Controls.Add	B-API	B-API
(	I-API	I-API
f	I-API	I-API
)	I-API	I-API
;	O	O
f.Show	B-API	B-API
(	I-API	I-API
)	I-API	I-API
;	O	O
Greg	O	O
Hurlman	O	O
wrote	O	O
:	O	O
Why	O	O
not	O	O
just	O	O
show/hide	O	O
the	O	O
proper	O	O
container	O	O
when	O	O
a	O	O
node	O	O
is	O	O
selected	O	O
in	O	O
the	O	O
grid	O	O
?	O	O
Have	O	O
the	O	O
containers	O	O
all	O	O
sized	O	O
appropriately	O	O
in	O	O
the	O	O
same	O	O
spot	O	O
,	O	O
and	O	O
hide	O	O
all	O	O
but	O	O
the	O	O
default	O	O
,	O	O
which	O	O
would	O	O
be	O	O
preselected	O	O
in	O	O
the	O	O
grid	O	O
on	O	O
load	O	O
.	O	O
Unfortunately	O	O
,	O	O
that	O	O
's	O	O
what	O	O
I	O	O
'm	O	O
trying	O	O
to	O	O
avoid	O	O
.	O	O
I	O	O
'm	O	O
looking	O	O
for	O	O
an	O	O
easy	O	O
way	O	O
to	O	O
handle	O	O
the	O	O
interface	O	O
during	O	O
design	O	O
time	O	O
,	O	O
with	O	O
minimal	O	O
reformatting	O	O
code	O	O
needed	O	O
to	O	O
get	O	O
it	O	O
working	O	O
during	O	O
run	O	O
time	O	O
.	O	O
I	O	O
like	O	O
Duncan	O	O
's	O	O
answer	O	O
because	O	O
it	O	O
means	O	O
the	O	O
design	O	O
of	O	O
each	O	O
node	O	O
's	O	O
interface	O	O
can	O	O
be	O	O
kept	O	O
completely	O	O
separate	O	O
.	O	O
This	O	O
means	O	O
I	O	O
do	O	O
n't	O	O
get	O	O
overlap	O	O
on	O	O
the	O	O
snapping	O	O
guidelines	O	O
and	O	O
other	O	O
design	O	O
time	O	O
advantages	O	O
.	O	O
Static	B-API	O
methods	O	O
can	O	O
not	O	O
be	O	O
inherited	O	O
or	O	O
overridden	O	O
,	O	O
and	O	O
that	O	O
is	O	O
why	O	O
they	O	O
ca	O	O
n't	O	O
be	O	O
abstract	O	O
.	O	O
Since	O	O
static	B-API	O
methods	O	O
are	O	O
defined	O	O
on	O	O
the	O	O
type	O	O
,	O	O
not	O	O
the	O	O
instance	O	O
,	O	O
of	O	O
a	O	O
class	O	O
,	O	O
they	O	O
must	O	O
be	O	O
called	O	O
explicitly	O	O
on	O	O
that	O	O
type	O	O
.	O	O
So	O	O
when	O	O
you	O	O
want	O	O
to	O	O
call	O	O
a	O	O
method	O	O
on	O	O
a	O	O
child	O	O
class	O	O
,	O	O
you	O	O
need	O	O
to	O	O
use	O	O
its	O	O
name	O	O
to	O	O
call	O	O
it	O	O
.	O	O
This	O	O
makes	O	O
inheritance	O	O
irrelevant	O	O
.	O	O
Assume	O	O
you	O	O
could	O	O
,	O	O
for	O	O
a	O	O
moment	O	O
,	O	O
inherit	O	O
static	B-API	O
methods	O	O
.	O	O
Imagine	O	O
this	O	O
scenario	O	O
:	O	O
public	O	B-API
static	B-API	B-API
class	O	O
Base	O	O
{	O	O
public	O	O
static	B-API	O
virtual	I-API	O
int	I-API	O
{	I-API	O
return	I-API	O
5	I-API	O
;	I-API	O
}	I-API	O
}	O	O
public	O	O
static	B-API	O
class	I-API	O
Child1	I-API	O
:	I-API	O
Base	I-API	O
{	O	O
public	O	O
static	B-API	B-API
override	I-API	B-API
int	I-API	B-API
{	O	O
return	O	O
1	O	O
;	O	O
}	O	O
}	O	O
public	O	O
static	B-API	O
class	I-API	O
Child2	I-API	O
:	I-API	O
Base	I-API	O
{	O	O
public	O	O
static	B-API	B-API
override	I-API	B-API
int	I-API	B-API
{	O	O
return	O	O
2	O	O
;	O	O
GetNumber	B-API	B-API
(	I-API	I-API
)	I-API	I-API
GetNumber	B-API	B-API
(	I-API	I-API
)	I-API	I-API
GetNumber	B-API	B-API
(	I-API	I-API
)	I-API	I-API
If	O	O
you	O	O
call	O	O
Base.GetNumber	B-API	B-API
(	I-API	I-API
)	I-API	I-API
,	O	O
which	O	O
method	O	O
would	O	O
be	O	O
called	O	O
?	O	O
Which	O	O
value	O	O
returned	O	O
?	O	O
Its	O	O
pretty	O	O
easy	O	O
to	O	O
see	O	O
that	O	O
without	O	O
creating	O	O
instances	O	O
of	O	O
objects	O	O
,	O	O
inheritance	O	O
is	O	O
rather	O	O
hard	O	O
.	O	O
Abstract	O	O
methods	O	O
without	O	O
inheritance	O	O
are	O	O
just	O	O
methods	O	O
that	O	O
do	O	O
n't	O	O
have	O	O
a	O	O
body	O	O
,	O	O
so	O	O
ca	O	O
n't	O	O
be	O	O
called	O	O
.	O	O
To	O	O
add	O	O
to	O	O
the	O	O
previous	O	O
explanations	O	O
,	O	O
static	B-API	O
method	O	O
calls	O	O
are	O	O
bound	O	O
to	O	O
a	O	O
specific	O	O
method	O	O
at	O	O
compile-time	O	O
,	O	O
which	O	O
rather	O	O
rules	O	O
out	O	O
polymorphic	O	O
behavior	O	O
.	O	O
Static	B-API	O
methods	O	O
are	O	O
not	O	O
instantiated	O	O
as	O	O
such	O	O
,	O	O
they	O	O
're	O	O
just	O	O
available	O	O
without	O	O
an	O	O
object	O	O
reference	O	O
.	O	O
A	O	O
call	O	O
to	O	O
a	O	O
static	B-API	O
method	O	O
is	O	O
done	O	O
through	O	O
the	O	O
class	O	O
name	O	O
,	O	O
not	O	O
through	O	O
an	O	O
object	O	O
reference	O	O
,	O	O
and	O	O
the	O	O
IL	O	O
code	O	O
to	O	O
call	O	O
it	O	O
will	O	O
call	O	O
the	O	O
abstract	O	O
method	O	O
through	O	O
the	O	O
name	O	O
of	O	O
the	O	O
class	O	O
that	O	O
defined	O	O
it	O	O
,	O	O
not	O	O
necessarily	O	O
the	O	O
name	O	O
of	O	O
the	O	O
class	O	O
you	O	O
used	O	O
.	O	O
Let	O	O
me	O	O
show	O	O
an	O	O
example	O	O
.	O	O
With	O	O
the	O	O
following	O	O
code	O	O
:	O	O
public	O	B-API
class	O	B-API
A	O	I-API
{	O	B-API
public	O	B-API
static	B-API	B-API
void	I-API	B-API
{	I-API	B-API
}	I-API	B-API
}	O	B-API
public	O	B-API
class	B-API	B-API
B	I-API	I-API
:	I-API	I-API
Test	I-API	I-API
(	I-API	I-API
)	I-API	I-API
If	O	O
you	O	O
call	O	O
B.Test	B-API	O
,	O	O
like	O	O
this	O	O
:	O	O
class	O	O
Program	O	O
{	O	O
static	B-API	O
void	I-API	O
{	I-API	O
;	I-API	O
(	I-API	O
string	B-API	B-API
[	I-API	I-API
]	I-API	I-API
args	O	I-API
)	O	I-API
B.Test	B-API	B-API
(	I-API	I-API
)	I-API	I-API
Then	O	O
the	O	O
actual	O	O
code	O	O
inside	O	O
the	O	O
Main	O	O
method	O	O
is	O	O
as	O	O
follows	O	O
:	O	O
.entrypoint.maxstack	B-API	O
8L0000	O	O
:	O	O
nop	O	O
L0001	O	O
:	O	O
call	O	O
void	O	O
L0006	O	O
:	O	O
nop	O	O
L0007	O	O
:	O	O
ret	O	O
ConsoleApplication1.A	B-API	O
:	I-API	O
:Test	I-API	B-API
(	I-API	I-API
)	I-API	I-API
As	O	O
you	O	O
can	O	O
see	O	O
,	O	O
the	O	O
call	O	O
is	O	O
made	O	O
to	O	O
A.Test	B-API	O
,	O	O
because	O	O
it	O	O
was	O	O
the	O	O
A	O	O
class	O	O
that	O	O
defined	O	O
it	O	O
,	O	O
and	O	O
not	O	O
to	O	O
B.Test	B-API	O
,	O	O
even	O	O
though	O	O
you	O	O
can	O	O
write	O	O
the	O	O
code	O	O
that	O	O
way	O	O
.	O	O
If	O	O
you	O	O
had	O	O
class	O	O
types	O	O
,	O	O
like	O	O
in	O	O
Delphi	O	O
,	O	O
where	O	O
you	O	O
can	O	O
make	O	O
a	O	O
variable	O	O
referring	O	O
to	O	O
a	O	O
type	O	O
and	O	O
not	O	O
an	O	O
object	O	O
,	O	O
you	O	O
would	O	O
have	O	O
more	O	O
use	O	O
for	O	O
virtual	O	O
and	O	O
thus	O	O
abstract	O	O
static	B-API	O
methods	O	O
(	O	O
and	O	O
also	O	O
constructors	O	O
)	O	O
,	O	O
but	O	O
they	O	O
are	O	O
n't	O	O
available	O	O
and	O	O
thus	O	O
static	O	O
calls	O	O
are	O	O
non-virtual	O	O
in	O	O
.NET	B-API	O
.	O	O
I	O	O
realize	O	O
that	O	O
the	O	O
IL	O	O
designers	O	O
could	O	O
allow	O	O
the	O	O
code	O	O
to	O	O
be	O	O
compiled	O	O
to	O	O
call	O	O
B.Test	B-API	O
,	O	O
and	O	O
resolve	O	O
the	O	O
call	O	O
at	O	O
runtime	O	O
,	O	O
but	O	O
it	O	O
still	O	O
would	O	O
n't	O	O
be	O	O
virtual	O	O
,	O	O
as	O	O
you	O	O
would	O	O
still	O	O
have	O	O
to	O	O
write	O	O
some	O	O
kind	O	O
of	O	O
class	O	O
name	O	O
there	O	O
.	O	O
Virtual	O	O
methods	O	O
,	O	O
and	O	O
thus	O	O
abstract	O	O
ones	O	O
,	O	O
are	O	O
only	O	O
useful	O	O
when	O	O
you	O	O
're	O	O
using	O	O
a	O	O
variable	O	O
which	O	O
,	O	O
at	O	O
runtime	O	O
,	O	O
can	O	O
contain	O	O
many	O	O
different	O	O
types	O	O
of	O	O
objects	O	O
,	O	O
and	O	O
you	O	O
thus	O	O
want	O	O
to	O	O
call	O	O
the	O	O
right	O	O
method	O	O
for	O	O
the	O	O
current	O	O
object	O	O
you	O	O
have	O	O
in	O	O
the	O	O
variable	O	O
.	O	O
With	O	O
static	O	O
methods	O	O
you	O	O
need	O	O
to	O	O
go	O	O
through	O	O
a	O	O
class	O	O
name	O	O
anyway	O	O
,	O	O
so	O	O
the	O	O
exact	O	O
method	O	O
to	O	O
call	O	O
is	O	O
known	O	O
at	O	O
compile	O	O
time	O	O
because	O	O
it	O	O
ca	O	O
n't	O	O
and	O	O
wo	O	O
n't	O	O
change	O	O
.	O	O
Thus	O	O
,	O	O
virtual/abstract	O	O
static	O	O
methods	O	O
are	O	O
not	O	O
available	O	O
in	O	O
.NET	B-API	O
.	O	O
using	O	O
System.Net	B-API	B-API
;	O	O
foreach	B-API	O
(	O	O
IPAddress	B-API	O
address	O	O
in	O	O
Dns.GetHostAddresses	B-API	B-API
(	I-API	I-API
``	I-API	I-API
www.google.com	I-API	I-API
''	I-API	I-API
)	I-API	I-API
)	O	O
{	O	O
Console.WriteLine	B-API	B-API
(	O	I-API
address.ToString	B-API	I-API
(	I-API	I-API
)	I-API	I-API
)	O	I-API
;	O	O
}	O	O
Try	O	O
using	O	O
the	O	O
System.Net.Dns	B-API	B-API
class	O	O
Well	O	O
,	O	O
here	O	O
's	O	O
how	O	O
we	O	O
do	O	O
it	O	O
on	O	O
Stack	O	O
Overflow	O	O
.	O	O
var	B-API	O
ts	O	O
=	O	O
new	O	O
TimeSpan	B-API	O
(	O	O
DateTime.UtcNow.Ticks	B-API	B-API
-	O	O
dt.Ticks	B-API	O
)	O	O
;	O	O
double	O	O
delta	O	O
=	O	O
Math.Abs	B-API	B-API
(	I-API	I-API
ts.TotalSeconds	I-API	I-API
)	I-API	I-API
;	O	O
if	B-API	O
(	I-API	O
delta	I-API	O
60	I-API	O
)	I-API	O
{	O	O
return	O	O
ts.Seconds	B-API	O
==	O	O
1	O	O
?	O	O
``	O	O
one	O	O
second	O	O
ago	O	O
''	O	O
:	O	O
ts.Seconds	B-API	B-API
+	O	O
``	O	O
seconds	O	O
ago	O	O
''	O	O
;	O	O
}	O	O
if	B-API	O
(	I-API	O
delta	I-API	O
120	I-API	O
)	I-API	O
{	O	O
return	O	O
``	O	O
a	O	O
minute	O	O
ago	O	O
''	O	O
;	O	O
}	O	O
if	B-API	O
(	I-API	O
delta	I-API	O
2700	I-API	O
)	I-API	O
//	O	O
45	O	O
*	O	O
60	O	O
{	O	O
return	O	O
ts.Minutes	B-API	B-API
+	O	O
``	O	O
minutes	O	O
ago	O	O
''	O	O
;	O	O
}	O	O
if	B-API	O
(	I-API	O
delta	I-API	O
5400	I-API	O
)	I-API	O
//	O	O
90	O	O
*	O	O
60	O	O
{	O	O
return	O	O
``	O	O
an	O	O
hour	O	O
ago	O	O
''	O	O
;	O	O
}	O	O
if	B-API	O
(	I-API	O
delta	I-API	O
86400	I-API	O
)	I-API	O
//	O	O
24	O	O
*	O	O
60	O	O
*	O	O
60	O	O
{	O	O
return	O	O
ts.Hours	B-API	B-API
+	O	O
``	O	O
hours	O	O
ago	O	O
''	O	O
;	O	O
}	O	O
if	B-API	O
(	I-API	O
delta	I-API	O
172800	I-API	O
)	I-API	O
//	O	O
48	O	O
*	O	O
60	O	O
*	O	O
60	O	O
{	O	O
return	O	O
``	O	O
yesterday	O	O
''	O	O
;	O	O
}	O	O
if	B-API	O
(	I-API	O
delta	I-API	O
2592000	I-API	O
)	I-API	O
//	O	O
30	O	O
*	O	O
24	O	O
*	O	O
60	O	O
*	O	O
60	O	O
{	O	O
return	O	O
ts.Days	B-API	B-API
+	O	O
``	O	O
days	O	O
ago	O	O
''	O	O
;	O	O
}	O	O
if	B-API	O
(	I-API	O
delta	I-API	O
31104000	I-API	O
)	I-API	O
//	O	O
12	O	O
*	O	O
30	O	O
*	O	O
24	O	O
*	O	O
60	O	O
*	O	O
60	O	O
{	O	O
int	O	O
months	O	O
=	O	O
Convert.ToInt32	B-API	O
(	O	O
Math.Floor	B-API	B-API
(	O	I-API
(	O	I-API
double	O	I-API
)	O	I-API
ts.Days	O	O
/	O	O
30	O	O
)	O	O
)	O	O
;	O	O
return	O	O
months	O	O
=	O	O
1	O	O
?	O	O
``	O	O
one	O	O
month	O	O
ago	O	O
''	O	O
:	O	O
months	O	O
+	O	O
``	O	O
months	O	O
ago	O	O
''	O	O
;	O	O
}	O	O
int	O	O
years	O	O
=	O	O
Convert.ToInt32	B-API	O
(	O	O
Math.Floor	B-API	B-API
(	O	I-API
(	O	I-API
double	O	I-API
)	O	I-API
ts.Days	O	O
/	O	O
365	O	O
)	O	O
)	O	O
;	O	O
return	O	O
years	O	O
=	O	O
1	O	O
?	O	O
``	O	O
one	O	O
year	O	O
ago	O	O
''	O	O
:	O	O
years	O	O
+	O	O
``	O	O
years	O	O
ago	O	O
''	O	O
;	O	O
Suggestions	O	O
?	O	O
Comments	O	O
?	O	O
Ways	O	O
to	O	O
improve	O	O
this	O	O
algorithm	O	O
?	O	O
@	O	O
jeff	O	O
IMHO	O	O
yours	O	O
seems	O	O
a	O	O
little	O	O
long	O	O
.	O	O
However	O	O
it	O	O
does	O	O
seem	O	O
a	O	O
little	O	O
more	O	O
robust	O	O
with	O	O
support	O	O
for	O	O
``	O	O
yesterday	O	O
''	O	O
and	O	O
``	O	O
years	O	O
''	O	O
.	O	O
But	O	O
in	O	O
my	O	O
experience	O	O
when	O	O
this	O	O
is	O	O
used	O	O
the	O	O
person	O	O
is	O	O
most	O	O
likely	O	O
to	O	O
view	O	O
the	O	O
content	O	O
in	O	O
the	O	O
first	O	O
30	O	O
days	O	O
.	O	O
It	O	O
is	O	O
only	O	O
the	O	O
really	O	O
hardcore	O	O
people	O	O
that	O	O
come	O	O
after	O	O
that	O	O
.	O	O
So	O	O
that	O	O
is	O	O
why	O	O
I	O	O
usually	O	O
elect	O	O
to	O	O
keep	O	O
this	O	O
short	O	O
and	O	O
simple	O	O
.	O	O
This	O	O
is	O	O
the	O	O
method	O	O
I	O	O
am	O	O
currently	O	O
using	O	O
on	O	O
one	O	O
of	O	O
my	O	O
websites	O	O
.	O	O
This	O	O
only	O	O
returns	O	O
a	O	O
relative	O	O
day	O	O
,	O	O
hour	O	O
,	O	O
time	O	O
.	O	O
And	O	O
then	O	O
the	O	O
user	O	O
has	O	O
to	O	O
slap	O	O
on	O	O
``	O	O
ago	O	O
''	O	O
in	O	O
the	O	O
output	O	O
.	O	O
public	B-API	O
static	I-API	B-API
string	I-API	O
{	0-API	O
string	O	O
output	O	O
=	O	O
String.Empty	B-API	B-API
;	O	O
if	B-API	O
(	I-API	O
time.Days	I-API	O
0	I-API	O
)	I-API	O
output	O	O
+=	O	O
time.Days	O	O
+	O	O
``	O	O
days	O	O
``	O	O
;	O	O
if	B-API	O
time.Hours	I-API	O
0	I-API	O
)	I-API	O
output	O	O
+=	O	O
time.Hours	O	O
+	O	O
``	O	O
hr	O	O
``	O	O
;	O	O
if	B-API	O
(	I-API	O
time.Days	I-API	O
==	I-API	O
0	I-API	O
time.Minutes	I-API	O
0	I-API	O
)	I-API	O
output	O	O
+=	O	O
time.Minutes	B-API	O
+	O	O
``	O	O
min	O	O
``	O	O
;	O	O
if	B-API	O
(	I-API	O
output.Length	I-API	O
==	I-API	O
0	I-API	O
)	I-API	O
output	O	O
+=	O	O
time.Seconds	B-API	O
+	O	O
``	O	O
sec	O	O
''	O	O
;	O	O
return	O	O
(	O	O
this	O	O
TimeSpan	O	O
time	O	O
)	O	O
(	O	O
time.Days	B-API	O
==	O	O
0	O	O
||	O	O
time.Days	B-API	O
==	O	O
1	O	O
)	O	O
output.Trim	B-API	B-API
(	I-API	I-API
)	I-API	I-API
Jeff	O	O
,	O	O
your	O	O
code	O	O
is	O	O
nice	O	O
but	O	O
could	O	O
be	O	O
clearer	O	O
with	O	O
constants	O	O
(	O	O
as	O	O
suggested	O	O
in	O	O
Code	O	O
Complete	O	O
)	O	O
.	O	O
const	B-API	O
int	I-API	O
SECOND	I-API	O
=	I-API	O
1	I-API	O
;	O	O
const	B-API	O
int	I-API	O
MINUTE	I-API	O
=	I-API	O
60	I-API	O
*	I-API	O
SECOND	I-API	O
;	O	O
const	B-API	O
int	I-API	O
HOUR	I-API	O
=	I-API	O
60	I-API	O
*	I-API	O
MINUTE	I-API	O
;	O	O
const	B-API	O
int	I-API	O
DAY	I-API	O
=	I-API	O
24	I-API	O
*	I-API	O
HOUR	I-API	O
;	O	O
const	B-API	O
int	I-API	O
MONTH	I-API	O
=	I-API	O
30	I-API	O
*	I-API	O
DAY	I-API	O
;	O	O
var	O	O
ts	O	O
=	O	O
new	O	O
TimeSpan	B-API	O
(	O	O
DateTime.UtcNow.Ticks	B-API	B-API
-	O	O
yourDate.Ticks	B-API	O
)	O	O
;	O	O
double	O	O
delta	O	O
=	O	O
Math.Abs	B-API	B-API
(	I-API	I-API
ts.TotalSeconds	I-API	I-API
)	I-API	I-API
;	O	O
if	B-API	O
(	I-API	O
delta	I-API	O
1	I-API	O
*	I-API	O
MINUTE	I-API	O
)	I-API	O
return	O	O
ts.Seconds	O	O
==	O	O
1	O	O
?	O	O
``	O	O
one	O	O
second	O	O
ago	O	O
''	O	O
:	O	O
ts.Seconds	O	B-API
+	O	O
``	O	O
seconds	O	O
ago	O	O
''	O	O
;	O	O
if	B-API	O
(	I-API	O
delta	I-API	O
2	I-API	O
*	I-API	O
MINUTE	I-API	O
)	I-API	O
return	O	O
``	O	O
a	O	O
minute	O	O
ago	O	O
''	O	O
;	O	O
if	B-API	O
(	I-API	O
delta	I-API	O
45	I-API	O
*	I-API	O
MINUTE	I-API	O
)	I-API	O
return	O	O
ts.Minutes	O	B-API
+	O	O
``	O	O
minutes	O	O
ago	O	O
''	O	O
;	O	O
if	B-API	O
(	I-API	O
delta	I-API	O
90	I-API	O
*	I-API	O
MINUTE	I-API	O
)	I-API	O
return	O	O
``	O	O
an	O	O
hour	O	O
ago	O	O
''	O	O
;	O	O
if	B-API	O
(	I-API	O
delta	I-API	O
24	I-API	O
*	I-API	O
HOUR	I-API	O
)	I-API	O
return	O	O
ts.Hours	O	B-API
+	O	O
``	O	O
hours	O	O
ago	O	O
''	O	O
;	O	O
if	B-API	O
(	I-API	O
delta	I-API	O
48	I-API	O
*	I-API	O
HOUR	I-API	O
)	I-API	O
return	O	O
``	O	O
yesterday	O	O
''	O	O
;	O	O
if	B-API	O
(	I-API	O
delta	I-API	O
30	I-API	O
*	I-API	O
DAY	I-API	O
)	I-API	O
return	O	O
ts.Days	O	B-API
+	O	O
``	O	O
days	O	O
ago	O	O
''	O	O
;	O	O
if	B-API	O
(	I-API	O
delta	I-API	O
12	I-API	O
*	I-API	O
MONTH	I-API	O
)	I-API	O
{	O	O
int	O	O
months	O	O
=	O	O
Convert.ToInt32	B-API	O
(	O	O
Math.Floor	B-API	B-API
(	O	I-API
(	O	I-API
double	O	I-API
)	O	I-API
ts.Days	O	O
/	O	O
30	O	O
)	O	O
)	O	O
;	O	O
return	O	O
months	O	O
=	O	O
1	O	O
?	O	O
``	O	O
one	O	O
month	O	O
ago	O	O
''	O	O
:	O	O
months	O	O
+	O	O
``	O	O
months	O	O
ago	O	O
''	O	O
;	O	O
}	O	O
else	O	O
{	O	O
int	O	O
years	O	O
=	O	O
Convert.ToInt32	B-API	O
(	O	O
Math.Floor	B-API	B-API
(	O	I-API
(	O	I-API
double	O	I-API
)	O	I-API
ts.Days	O	O
/	O	O
365	O	O
)	O	O
)	O	O
;	O	O
return	O	O
years	O	O
=	O	O
1	O	O
?	O	O
``	O	O
one	O	O
year	O	O
ago	O	O
''	O	O
:	O	O
years	O	O
+	O	O
``	O	O
years	O	O
ago	O	O
''	O	O
;	O	O
}	O	O
I	O	O
thought	O	O
I	O	O
'd	O	O
give	O	O
this	O	O
a	O	O
shot	O	O
using	O	O
classes	O	O
and	O	O
polymorphism	O	O
.	O	O
I	O	O
had	O	O
a	O	O
previous	O	O
iteration	O	O
which	O	O
used	O	O
sub-classing	O	O
which	O	O
ended	O	O
up	O	O
having	O	O
way	O	O
too	O	O
much	O	O
overhead	O	O
.	O	O
I	O	O
've	O	O
switched	O	O
to	O	O
a	O	O
more	O	O
flexible	O	O
delegate	O	O
/	O	O
public	O	O
property	O	O
object	O	O
model	O	O
which	O	O
is	O	O
significantly	O	O
better	O	O
.	O	O
My	O	O
code	O	O
is	O	O
very	O	O
slightly	O	O
more	O	O
accurate	O	O
,	O	O
I	O	O
wish	O	O
I	O	O
could	O	O
come	O	O
up	O	O
with	O	O
a	O	O
better	O	O
way	O	O
to	O	O
generate	O	O
``	O	O
months	O	O
ago	O	O
''	O	O
that	O	O
did	O	O
n't	O	O
seem	O	O
too	O	O
over-engineered	O	O
.	O	O
I	O	O
think	O	O
I	O	O
'd	O	O
still	O	O
stick	O	O
with	O	O
Jeff	O	O
's	O	O
if-then	O	O
cascade	O	O
because	O	O
it	O	O
's	O	O
less	O	O
code	O	O
and	O	O
it	O	O
's	O	O
simpler	O	O
(	O	O
it	O	O
's	O	O
definitely	O	O
easier	O	O
to	O	O
ensure	O	O
it	O	O
'll	O	O
work	O	O
as	O	O
expected	O	O
)	O	O
.	O	O
For	O	O
the	O	O
below	O	O
code	O	O
PrintRelativeTime.GetRelativeTimeMessage	B-API	B-API
(	I-API	I-API
TimeSpan	I-API	I-API
ago	I-API	I-API
)	I-API	I-API
returns	O	O
the	O	O
relative	O	O
time	O	O
message	O	O
(	O	O
e.g	O	O
.	O	O
``	O	O
yesterday	O	O
''	O	O
)	O	O
.	O	O
public	B-API	O
class	I-API	O
RelativeTimeRange	I-API	O
:	I-API	O
IComparable	I-API	O
{	O	O
public	O	O
TimeSpan	O	O
UpperBound	O	O
{	O	O
get	O	O
;	O	O
set	O	O
;	O	O
}	O	O
public	O	O
delegate	B-API	O
string	I-API	O
;	O	O
public	O	O
RelativeTimeTextDelegate	B-API	B-API
MessageCreator	I-API	B-API
{	O	I-API
get	O	I-API
;	O	I-API
set	O	I-API
;	O	I-API
}	O	I-API
public	O	O
int	O	O
{	O	O
if	O	O
)	O	O
{	O	O
return	O	O
1	O	O
;	O	O
}	O	O
//	O	O
note	O	O
that	O	O
this	O	O
sorts	O	O
in	O	O
reverse	O	O
order	O	O
to	O	O
the	O	O
way	O	O
you	O	O
'd	O	O
expect	O	O
,	O	O
//	O	O
this	O	O
saves	O	O
having	O	O
to	O	O
reverse	O	O
a	O	O
list	O	O
later	O	O
return	O	O
(	O	O
obj	O	O
as	O	O
;	O	O
}	O	O
}	O	O
public	O	O
class	B-API	O
PrintRelativeTime	I-API	O
{	O	O
private	O	O
static	B-API	O
ListRelativeTimeRange	I-API	O
timeRanges	I-API	O
;	O	O
static	O	O
{	O	O
timeRanges	O	O
=	O	O
new	O	O
ListRelativeTimeRange	B-API	O
{	O	O
new	O	O
RelativeTimeRange	B-API	O
{	O	O
UpperBound	B-API	O
=	O	O
,	O	O
MessageCreator	B-API	B-API
=	O	O
(	O	O
delta	O	O
)	O	O
=	O	O
{	O	O
return	O	O
``	O	O
one	O	O
second	O	O
ago	O	O
''	O	O
;	O	O
}	O	O
}	O	O
,	O	O
new	O	O
RelativeTimeRange	B-API	O
{	O	O
UpperBound	B-API	O
=	O	O
,	O	O
MessageCreator	B-API	B-API
=	O	O
(	O	O
delta	O	O
)	O	O
=	O	O
{	O	O
return	O	O
delta.Seconds	B-API	O
+	O	O
``	O	O
seconds	O	O
ago	O	O
''	O	O
;	O	O
}	O	O
}	O	O
,	O	O
new	O	O
RelativeTimeRange	B-API	O
{	O	O
UpperBound	B-API	O
=	O	O
,	O	O
MessageCreator	B-API	B-API
=	O	O
(	O	O
delta	O	O
)	O	O
=	O	O
{	O	O
return	O	O
``	O	O
one	O	O
minute	O	O
ago	O	O
''	O	O
;	O	O
}	O	O
}	O	O
,	O	O
new	O	O
RelativeTimeRange	B-API	O
{	O	O
UpperBound	B-API	O
=	O	O
,	O	O
MessageCreator	B-API	B-API
=	O	O
(	O	O
delta	O	O
)	O	O
=	O	O
{	O	O
return	O	O
delta.Minutes	O	O
+	O	O
``	O	O
minutes	O	O
ago	O	O
''	O	O
;	O	O
}	O	O
}	O	O
,	O	O
new	O	O
RelativeTimeRange	B-API	O
{	O	O
UpperBound	B-API	O
=	O	O
,	O	O
MessageCreator	B-API	B-API
=	O	O
(	O	O
delta	O	O
)	O	O
=	O	O
{	O	O
return	O	O
``	O	O
one	O	O
hour	O	O
ago	O	O
''	O	O
;	O	O
}	O	O
}	O	O
,	O	O
new	O	O
RelativeTimeRange	B-API	O
{	O	O
UpperBound	B-API	O
=	O	O
,	O	O
MessageCreator	B-API	B-API
=	O	O
(	O	O
delta	O	O
)	O	O
=	O	O
{	O	O
return	O	O
delta.Hours	O	O
+	O	O
``	O	O
hours	O	O
ago	O	O
''	O	O
;	O	O
}	O	O
}	O	O
,	O	O
new	O	O
RelativeTimeRange	B-API	O
{	O	O
UpperBound	B-API	O
=	O	O
,	O	O
MessageCreator	B-API	B-API
=	O	O
(	O	O
delta	O	O
)	O	O
=	O	O
{	O	O
return	O	O
``	O	O
yesterday	O	O
''	O	O
;	O	O
}	O	O
}	O	O
,	O	O
new	O	O
RelativeTimeRange	B-API	O
{	O	O
UpperBound	B-API	O
=	O	O
)	O	O
,	O	O
MessageCreator	B-API	B-API
=	O	O
(	O	O
delta	O	O
)	O	O
=	O	O
{	O	O
return	O	O
delta.Days	O	O
+	O	O
``	O	O
days	O	O
ago	O	O
''	O	O
;	O	O
}	O	O
}	O	O
,	I-API	O
new	O	O
RelativeTimeRange	B-API	O
{	O	O
UpperBound	B-API	O
=	O	O
)	O	O
,	O	O
MessageCreator	B-API	B-API
=	O	O
(	O	O
delta	O	O
)	O	O
=	O	O
{	O	O
return	O	O
``	O	O
one	O	O
month	O	O
ago	O	O
''	O	O
;	O	O
}	O	O
}	O	O
,	O	O
new	O	O
RelativeTimeRange	B-API	O
{	O	O
UpperBound	B-API	O
=	O	O
)	O	O
,	O	O
MessageCreator	B-API	B-API
=	O	O
(	O	O
delta	O	O
)	O	O
=	O	O
{	O	O
return	O	O
+	O	O
``	O	O
months	O	O
ago	O	O
''	O	O
;	O	O
}	O	O
}	O	O
,	O	O
new	O	O
RelativeTimeRange	B-API	O
{	O	O
UpperBound	B-API	O
=	O	O
)	O	O
,	O	O
MessageCreator	B-API	B-API
=	O	O
(	O	O
delta	O	O
)	O	O
=	O	O
{	O	O
return	O	O
``	O	O
one	O	O
year	O	O
ago	O	O
''	O	O
;	O	O
}	O	O
}	O	O
,	O	O
new	O	O
RelativeTimeRange	B-API	O
{	O	O
UpperBound	B-API	O
=	O	O
TimeSpan.MaxValue	B-API	B-API
,	O	O
MessageCreator	B-API	B-API
=	O	O
(	O	O
delta	O	O
)	O	O
=	O	O
{	O	O
return	O	O
+	O	O
``	O	O
years	O	O
ago	O	O
''	O	O
;	O	O
}	O	O
}	O	O
}	O	O
;	O	O
;	O	O
}	O	O
public	O	O
static	B-API	B-API
string	I-API	I-API
{	O	O
RelativeTimeRange	B-API	O
postRelativeDateRange	O	O
=	O	O
timeRanges	B-API	O
[	I-API	O
0	I-API	O
]	I-API	O
;	O	O
foreach	B-API	O
(	I-API	O
var	I-API	O
timeRange	I-API	O
in	I-API	O
timeRanges	I-API	O
)	I-API	O
{	O	O
if	O	O
=	O	O
0	O	O
)	O	O
{	O	O
postRelativeDateRange	O	O
=	O	O
timeRange	O	O
;	O	O
}	O	O
}	O	O
return	O	O
;	O	O
(	O	O
TimeSpan	O	O
timeDelta	B-API	O
)	I-API	O
(	I-API	O
object	O	O
obj	O	O
)	O	O
!	O	O
(	O	O
obj	O	O
is	O	O
RelativeTimeRange	B-API	O
)	O	O
RelativeTimeRange	B-API	O
)	O	O
.UpperBound.CompareTo	B-API	O
(	I-API	O
UpperBound	I-API	O
)	I-API	O
PrintRelativeTime	B-API	B-API
(	I-API	I-API
)	I-API	I-API
TimeSpan.FromSeconds	B-API	B-API
(	I-API	I-API
1	I-API	I-API
)	I-API	I-API
TimeSpan.FromSeconds	B-API	B-API
(	I-API	I-API
60	I-API	I-API
)	I-API	I-API
TimeSpan.FromMinutes	B-API	B-API
(	I-API	I-API
2	I-API	I-API
)	I-API	I-API
TimeSpan.FromMinutes	B-API	B-API
(	I-API	I-API
60	I-API	I-API
)	I-API	I-API
TimeSpan.FromHours	B-API	B-API
(	I-API	I-API
2	I-API	I-API
)	I-API	I-API
TimeSpan.FromHours	B-API	B-API
(	I-API	I-API
24	I-API	I-API
)	I-API	I-API
TimeSpan.FromDays	B-API	B-API
(	I-API	I-API
2	I-API	I-API
)	I-API	I-API
DateTime.Now.Subtract	B-API	B-API
(	O	I-API
DateTime.Now.AddMonths	I-API	I-API
(	I-API	I-API
-1	I-API	I-API
)	I-API	I-API
DateTime.Now.Subtract	B-API	B-API
(	O	I-API
DateTime.Now.AddMonths	I-API	B-API
(	I-API	I-API
-2	I-API	I-API
)	I-API	I-API
DateTime.Now.Subtract	B-API	B-API
(	O	I-API
DateTime.Now.AddYears	I-API	B-API
(	I-API	I-API
-1	I-API	I-API
)	I-API	I-API
int	O	O
)	O	O
Math.Floor	B-API	B-API
(	I-API	O
delta.TotalDays	I-API	O
/	I-API	O
30	I-API	O
)	I-API	O
DateTime.Now.Subtract	B-API	B-API
(	O	I-API
DateTime.Now.AddYears	I-API	B-API
(	I-API	I-API
-2	I-API	I-API
)	I-API	I-API
int	O	O
)	O	O
Math.Floor	B-API	B-API
(	I-API	I-API
delta.TotalDays	I-API	I-API
/	I-API	I-API
365.24D	I-API	I-API
)	I-API	I-API
timeRanges.Sort	B-API	B-API
(	I-API	I-API
)	I-API	I-API
(	O	O
TimeSpan	O	O
ago	O	O
)	O	O
(	O	O
ago.CompareTo	B-API	B-API
(	I-API	I-API
timeRange.UpperBound	I-API	I-API
)	I-API	I-API
postRelativeDateRange.MessageCreator	B-API	B-API
(	I-API	I-API
ago	I-API	I-API
)	I-API	I-API
The	O	O
size	O	O
of	O	O
the	O	O
file	O	O
is	O	O
sent	O	O
as	O	O
the	O	O
Content-Length	O	O
header	O	O
.	O	O
Here	O	O
is	O	O
how	O	O
to	O	O
get	O	O
it	O	O
with	O	O
urllib	B-API	O
:	O	O
site	O	O
=	O	O
meta	O	O
=	O	O
print	B-API	O
urllib.urlopen	B-API	B-API
(	I-API	I-API
``	I-API	I-API
http	I-API	I-API
:	I-API	I-API
//python.org	I-API	I-API
''	I-API	I-API
)	I-API	I-API
site.info	B-API	B-API
(	I-API	I-API
)	I-API	I-API
meta.getheaders	B-API	B-API
(	I-API	I-API
``	I-API	I-API
Content-Length	I-API	I-API
''	I-API	I-API
)	I-API	I-API
Using	O	O
the	O	O
returned-urllib-object	B-API	O
method	O	O
info	B-API	B-API
(	I-API	I-API
)	I-API	I-API
,	O	O
you	O	O
can	O	O
get	O	O
various	O	O
information	O	O
on	O	O
the	O	O
retrived	O	O
document	O	O
.	O	O
Example	O	O
of	O	O
grabbing	O	O
the	O	O
current	O	O
Google	O	O
logo	O	O
:	O	O
import	B-API	O
urllib	I-API	O
d	O	O
=	O	O
print	B-API	O
Content-Type	O	O
:	O	O
image/gifLast-Modified	O	O
:	O	O
Thu	O	O
,	O	O
07	O	O
Aug	O	O
2008	O	O
16:20:19	O	O
GMT	O	O
Expires	O	O
:	O	O
Sun	O	O
,	O	O
17	O	O
Jan	O	O
2038	O	O
19:14:07	O	O
GMT	O	O
Cache-Control	O	O
:	O	O
public	O	O
Date	B-API	O
:	O	O
Fri	O	O
,	O	O
08	O	O
Aug	O	O
2008	O	O
13:40:41	O	O
GMT	O	O
Server	O	O
:	O	O
gws	O	O
Content-Length	O	O
:	O	O
20172	O	O
Connection	O	O
:	O	O
urllib.urlopen	B-API	B-API
(	I-API	I-API
``	I-API	I-API
http	I-API	I-API
:	I-API	I-API
//www.google.co.uk/logos/olympics08_opening.gif	I-API	I-API
''	I-API	I-API
)	I-API	I-API
d.info	B-API	B-API
(	I-API	I-API
)	I-API	I-API
It	O	O
's	O	O
a	O	O
dict	O	O
,	O	O
so	O	O
to	O	O
get	O	O
the	O	O
size	O	O
of	O	O
the	O	O
file	O	O
,	O	O
you	O	O
do	O	O
urllibobject.info	B-API	B-API
(	I-API	I-API
)	I-API	I-API
print	B-API	O
f.info	B-API	B-API
(	I-API	I-API
)	I-API	I-API
And	O	O
to	O	O
get	O	O
the	O	O
size	O	O
of	O	O
the	O	O
local	O	O
file	O	O
(	O	O
for	O	O
comparison	O	O
)	O	O
,	O	O
you	O	O
can	O	O
use	O	O
the	O	O
os.stat	B-API	B-API
(	I-API	I-API
)	I-API	I-API
command	O	O
:	O	O
os.stat	B-API	B-API
(	I-API	I-API
``	I-API	I-API
/the/local/file.zip	I-API	I-API
''	I-API	I-API
)	I-API	I-API
Also	O	O
if	O	O
the	O	O
server	O	O
you	O	O
are	O	O
connecting	O	O
to	O	O
supports	O	O
it	O	O
,	O	O
look	O	O
at	O	O
Etags	O	O
and	O	O
the	O	O
If-Modified-Since	O	O
and	O	O
If-None-Match	O	O
headers	O	O
.	O	O
Using	O	O
these	O	O
will	O	O
take	O	O
advantage	O	O
of	O	O
the	O	O
webserver	O	O
's	O	O
caching	O	O
rules	O	O
and	O	O
will	O	O
return	O	O
a	O	O
304	O	O
Not	O	O
Modified	O	O
status	O	O
code	O	O
if	O	O
the	O	O
content	O	O
has	O	O
n't	O	O
changed	O	O
.	O	O
I	O	O
have	O	O
reproduced	O	O
what	O	O
you	O	O
are	O	O
seeing	O	O
:	O	O
import	B-API	O
urllib	B-API	O
,	O	O
oslink	O	O
=	O	O
``	O	O
http	O	O
:	O	O
//python.org	O	O
''	O	O
print	I-API	O
``	O	O
opening	O	O
url	O	O
:	O	O
''	O	O
,	O	O
linksite	O	O
=	O	O
meta	O	O
=	O	O
print	B-API	O
``	O	O
Content-Length	O	O
:	O	O
''	O	O
,	O	O
[	O	O
0	O	O
]	O	O
f	O	O
=	O	O
print	B-API	O
``	O	O
File	B-API	O
on	O	O
f	O	O
=	O	O
f	O	O
=	O	O
print	B-API	O
``	O	O
File	B-API	O
on	O	O
disk	O	O
after	O	O
print	O	O
.st_size	O	O
returns	O	O
:	O	O
''	O	O
,	O	O
urllib.urlopen	B-API	B-API
(	I-API	I-API
link	I-API	I-API
)	I-API	I-API
site.info	B-API	B-API
(	I-API	I-API
)	I-API	I-API
meta.getheaders	B-API	B-API
(	I-API	I-API
``	I-API	I-API
Content-Length	I-API	I-API
''	I-API	I-API
)	I-API	I-API
(	O	O
``	O	O
out.txt	O	O
''	O	O
,	O	O
``	O	O
r	O	O
''	O	O
)	O	O
disk	O	O
:	O	O
''	O	O
,	O	O
len	O	O
(	O	O
f.read	B-API	B-API
(	I-API	I-API
)	I-API	I-API
)	O	I-API
f.close	B-API	B-API
(	I-API	I-API
)	I-API	I-API
(	O	O
``	O	O
out.txt	O	O
''	O	O
,	O	O
``	O	O
w	O	O
''	O	O
)	O	O
f.write	B-API	B-API
(	O	I-API
site.read	B-API	I-API
(	I-API	I-API
)	I-API	I-API
)	O	I-API
site.close	B-API	B-API
(	I-API	I-API
)	I-API	I-API
f.close	B-API	B-API
(	I-API	I-API
)	I-API	I-API
(	O	O
``	O	O
out.txt	O	O
''	O	O
,	O	O
``	O	O
r	O	O
''	O	O
)	O	O
download	O	O
:	O	O
''	O	O
,	O	O
len	O	O
(	O	O
f.read	B-API	B-API
(	I-API	I-API
)	I-API	I-API
)	O	I-API
f.close	B-API	B-API
(	I-API	I-API
)	I-API	I-API
``	O	O
os.stat	B-API	B-API
(	I-API	I-API
)	I-API	I-API
os.stat	B-API	O
(	I-API	O
``	I-API	O
out.txt	I-API	O
''	I-API	O
)	I-API	O
Outputs	O	O
this	O	O
:	O	O
opening	O	O
url	O	O
:	O	O
http	O	O
:	O	O
//python.orgContent-Length	O	O
:	O	O
16535File	O	O
on	O	O
disk	O	O
:	O	O
16535File	O	O
on	O	O
disk	O	O
after	O	O
download	O	O
:	O	O
.st_size	O	O
returns	O	O
:	O	O
16535os.stat	B-API	B-API
(	I-API	I-API
)	I-API	I-API
What	O	O
am	O	O
I	O	O
doing	O	O
wrong	O	O
here	O	O
?	O	O
Is	O	O
os.stat	B-API	B-API
(	I-API	I-API
)	I-API	I-API
.st_size	I-API	O
not	O	O
returning	O	O
the	O	O
correct	O	O
size	O	O
?	O	O
Edit	O	O
:	O	O
OK	O	O
,	O	O
I	O	O
figured	O	O
out	O	O
what	O	O
the	O	O
problem	O	O
was	O	O
:	O	O
import	B-API	O
urllib	B-API	O
,	O	O
oslink	O	O
=	O	O
``	O	O
http	O	O
:	O	O
//python.org	O	O
''	O	O
print	B-API	O
``	O	O
opening	O	O
url	O	O
:	O	O
''	O	O
,	O	O
linksite	O	O
=	O	O
meta	O	O
=	O	O
print	B-API	O
``	O	O
Content-Length	O	O
:	O	O
''	O	O
,	O	O
[	O	O
0	O	O
]	O	O
f	O	O
=	O	O
print	B-API	O
``	O	O
File	B-API	O
on	O	O
f	O	O
=	O	O
f	O	O
=	O	O
print	O	O
``	O	O
File	B-API	O
on	O	O
disk	O	O
after	O	O
print	B-API	O
.st_size	O	O
returns	O	O
:	O	O
''	O	O
,	O	O
urllib.urlopen	B-API	B-API
(	I-API	I-API
link	I-API	I-API
)	I-API	I-API
site.info	B-API	B-API
(	I-API	I-API
)	I-API	I-API
meta.getheaders	B-API	B-API
(	O	I-API
``	O	I-API
Content-Length	O	I-API
''	O	I-API
)	O	I-API
(	O	O
``	O	O
out.txt	O	O
''	O	O
,	O	O
``	O	O
rb	O	O
''	O	O
)	O	O
disk	B-API	O
:	O	O
''	O	O
,	O	O
len	O	O
(	O	O
f.read	B-API	B-API
(	I-API	I-API
)	I-API	I-API
)	O	I-API
f.close	B-API	B-API
(	I-API	I-API
)	I-API	I-API
(	O	O
``	O	O
out.txt	O	O
''	O	O
,	O	O
``	O	O
wb	O	O
''	O	O
)	O	O
f.write	B-API	B-API
(	O	I-API
site.read	B-API	I-API
(	I-API	I-API
)	I-API	I-API
)	O	I-API
site.close	B-API	B-API
(	I-API	I-API
)	I-API	I-API
f.close	B-API	B-API
(	I-API	I-API
)	I-API	I-API
(	O	O
``	O	O
out.txt	O	O
''	O	O
,	O	O
``	O	O
rb	O	O
''	O	O
)	O	O
download	O	O
:	O	O
''	O	O
,	O	O
len	O	O
(	O	O
f.read	B-API	B-API
(	I-API	I-API
)	I-API	I-API
)	O	I-API
f.close	B-API	B-API
(	I-API	I-API
)	I-API	I-API
``	O	O
os.stat	B-API	B-API
(	I-API	I-API
)	I-API	I-API
os.stat	B-API	O
(	I-API	O
``	I-API	O
out.txt	I-API	O
''	I-API	O
)	I-API	O
this	O	O
outputs	O	O
:	O	O
$	O	O
python	O	O
test.pyopening	O	O
url	O	O
:	O	O
http	O	O
:	O	O
//python.orgContent-Length	O	O
:	O	O
16535File	O	O
on	O	O
disk	O	O
:	O	O
16535File	O	O
on	O	O
disk	O	O
after	O	O
download	O	O
:	O	O
.st_size	O	O
returns	O	O
:	O	O
16535os.stat	B-API	B-API
(	I-API	I-API
)	I-API	I-API
Make	O	O
sure	O	O
you	O	O
are	O	O
opening	O	O
both	O	O
files	O	O
for	O	O
binary	O	O
read/write	O	O
.	O	O
//	O	O
open	O	O
for	O	O
binary	O	O
//	O	O
open	O	O
for	O	O
binary	O	O
(	O	O
filename	O	O
,	O	O
``	O	O
wb	O	O
''	O	O
)	O	O
(	O	O
filename	O	O
,	O	O
``	O	O
rb	O	O
''	O	O
)	O	O
Would	O	O
use	O	O
double.TryParse	B-API	B-API
,	O	O
it	O	O
has	O	O
performance	O	O
benefits	O	O
.	O	O
I	O	O
'd	O	O
personally	O	O
use	O	O
int.tryparse	B-API	O
,	O	O
then	O	O
double.tryparse	B-API	O
.	O	O
Performance	O	O
on	O	O
those	O	O
methods	O	O
is	O	O
quite	O	O
fast	O	O
.	O	O
They	O	O
both	O	O
return	O	O
a	O	O
Boolean	B-API	O
.	O	O
If	O	O
both	O	O
fail	O	O
then	O	O
you	O	O
have	O	O
a	O	O
string	O	O
,	O	O
per	O	O
how	O	O
you	O	O
defined	O	O
your	O	O
data	O	O
.	O	O
I	O	O
would	O	O
say	O	O
,	O	O
do	O	O
n't	O	O
worry	O	O
so	O	O
much	O	O
about	O	O
such	O	O
micro	O	O
performance	O	O
.	O	O
It	O	O
is	O	O
much	O	O
better	O	O
to	O	O
just	O	O
get	O	O
something	O	O
to	O	O
work	O	O
,	O	O
and	O	O
then	O	O
make	O	O
it	O	O
as	O	O
clear	O	O
and	O	O
concise	O	O
and	O	O
easy	O	O
to	O	O
read	O	O
as	O	O
possible	O	O
.	O	O
The	O	O
worst	O	O
thing	O	O
you	O	O
can	O	O
do	O	O
is	O	O
sacrifice	O	O
readability	O	O
for	O	O
an	O	O
insignificant	O	O
amount	O	O
of	O	O
performance	O	O
.	O	O
In	O	O
the	O	O
end	O	O
,	O	O
the	O	O
best	O	O
way	O	O
to	O	O
deal	O	O
with	O	O
performance	O	O
issues	O	O
is	O	O
to	O	O
save	O	O
them	O	O
for	O	O
when	O	O
you	O	O
have	O	O
data	O	O
that	O	O
indicates	O	O
there	O	O
is	O	O
an	O	O
actual	O	O
performance	O	O
problem	O	O
...	O	O
otherwise	O	O
you	O	O
will	O	O
spend	O	O
a	O	O
lot	O	O
of	O	O
time	O	O
micro-optimizing	O	O
and	O	O
actually	O	O
cause	O	O
higher	O	O
maintenance	O	O
costs	O	O
for	O	O
later	O	O
on	O	O
.	O	O
If	O	O
you	O	O
find	O	O
this	O	O
parsing	O	O
situation	O	O
is	O	O
really	O	O
the	O	O
bottleneck	O	O
in	O	O
your	O	O
application	O	O
,	O	O
THEN	O	O
is	O	O
the	O	O
time	O	O
to	O	O
try	O	O
and	O	O
figure	O	O
out	O	O
what	O	O
the	O	O
fastest	O	O
way	O	O
to	O	O
solve	O	O
the	O	O
problem	O	O
is	O	O
.	O	O
I	O	O
think	O	O
Jeff	O	O
(	O	O
and	O	O
many	O	O
others	O	O
)	O	O
have	O	O
blogged	O	O
about	O	O
this	O	O
sort	O	O
of	O	O
thing	O	O
a	O	O
lot	O	O
.	O	O
If	O	O
the	O	O
data	O	O
modification	O	O
is	O	O
not	O	O
too	O	O
time	O	O
consuming	O	O
(	O	O
meaning	O	O
,	O	O
if	O	O
the	O	O
main	O	O
purpose	O	O
of	O	O
the	O	O
background	O	O
thread	O	O
is	O	O
not	O	O
the	O	O
actual	O	O
data	O	O
modification	O	O
)	O	O
,	O	O
try	O	O
moving	O	O
the	O	O
section	O	O
that	O	O
modifies	O	O
the	O	O
data	O	O
to	O	O
a	O	O
delegate	O	O
and	O	O
Invoke'ing	O	O
that	O	O
delegate	O	O
.	O	O
If	O	O
the	O	O
actual	O	O
heavy	O	O
work	O	O
is	O	O
on	O	O
the	O	O
data	O	O
,	O	O
you	O	O
'll	O	O
probably	O	O
have	O	O
to	O	O
create	O	O
a	O	O
deep	O	O
copy	O	O
of	O	O
this	O	O
data	O	O
to	O	O
pass	O	O
to	O	O
the	O	O
background	O	O
thread	O	O
,	O	O
which	O	O
will	O	O
send	O	O
the	O	O
processed	O	O
data	O	O
back	O	O
to	O	O
the	O	O
UI	O	O
thread	O	O
via	O	O
Invoke	O	O
again	O	O
.	O	O
You	O	O
should	O	O
be	O	O
able	O	O
to	O	O
do	O	O
something	O	O
like	O	O
:	O	O
if	B-API	O
(	I-API	O
control.InvokeRequired	I-API	B-API
)	I-API	O
{	O	O
;	O	O
}	O	O
else	O	O
{	O	O
control.Invoke	B-API	B-API
(	I-API	I-API
delegateWithMyCode	I-API	I-API
)	I-API	I-API
delegateWithMyCode	B-API	B-API
(	I-API	I-API
)	I-API	I-API
InvokeRequired	O	B-API
is	O	O
a	O	O
property	O	O
on	O	O
Controls	O	O
to	O	O
see	O	O
if	O	O
you	O	O
are	O	O
on	O	O
the	O	O
correct	O	O
thread	O	O
,	O	O
then	O	O
Invoke	O	O
will	O	O
invoke	O	O
the	O	O
delegate	O	O
on	O	O
the	O	O
correct	O	O
thread	O	O
.	O	O
UPDATE	O	O
:	O	O
Actually	O	O
,	O	O
at	O	O
my	O	O
last	O	O
job	O	O
we	O	O
did	O	O
something	O	O
like	O	O
this	O	O
:	O	O
private	O	O
void	O	O
{	O	O
if	B-API	O
(	I-API	O
this.InvokeRequired	I-API	B-API
)	I-API	O
{	O	O
,	O	O
someParam	O	O
)	O	O
;	O	O
}	O	O
//	O	O
Regular	O	O
handling	O	O
(	O	O
Object	O	O
someParam	O	O
)	O	O
(	O	O
new	O	O
SomeEventHandlerDelegate	O	O
(	O	O
SomeEventHandler	O	O
)	O	O
which	O	O
removes	O	O
the	O	O
need	O	O
for	O	O
the	O	O
else	O	O
block	O	O
and	O	O
kind	O	O
of	O	O
tightens	O	O
up	O	O
the	O	O
code	O	O
.	O	O
As	O	O
I	O	O
do	O	O
n't	O	O
have	O	O
a	O	O
test	O	O
case	O	O
to	O	O
go	O	O
from	O	O
I	O	O
ca	O	O
n't	O	O
guarantee	O	O
this	O	O
solution	O	O
,	O	O
but	O	O
it	O	O
seems	O	O
to	O	O
me	O	O
that	O	O
a	O	O
scenario	O	O
similar	O	O
to	O	O
the	O	O
one	O	O
used	O	O
to	O	O
update	O	O
progress	O	O
bars	O	O
in	O	O
different	O	O
threads	O	O
(	O	O
use	O	O
a	O	O
delegate	O	O
)	O	O
would	O	O
be	O	O
suitable	O	O
here	O	O
.	O	O
public	O	O
delegate	B-API	O
void	I-API	O
;	O	O
public	O	O
DataBindDelegate	B-API	O
BindData	O	O
=	O	O
new	O	O
;	O	O
public	O	O
void	O	O
{	O	O
DataBindDelegate	B-API	B-API
(	I-API	I-API
)	I-API	I-API
DataBindDelegate	B-API	B-API
(	I-API	I-API
DoDataBind	I-API	I-API
)	I-API	I-API
DoDataBind	B-API	B-API
(	I-API	I-API
)	I-API	I-API
DataBind	B-API	B-API
(	I-API	I-API
)	I-API	I-API
If	O	O
the	O	O
data	O	O
binding	O	O
needs	O	O
to	O	O
be	O	O
done	O	O
by	O	O
a	O	O
particular	O	O
thread	O	O
,	O	O
then	O	O
let	O	O
that	O	O
thread	O	O
do	O	O
the	O	O
work	O	O
!	O	O
Re	O	O
:	O	O
2004	O	O
No	O	O
,	O	O
you	O	O
will	O	O
only	O	O
move	O	O
the	O	O
code	O	O
that	O	O
changes	O	O
the	O	O
data	O	O
into	O	O
the	O	O
delegate	O	O
function	O	O
(	O	O
because	O	O
the	O	O
data	O	O
change	O	O
is	O	O
what	O	O
triggers	O	O
the	O	O
control	O	O
update	O	O
)	O	O
.	O	O
Other	O	O
than	O	O
that	O	O
,	O	O
you	O	O
should	O	O
not	O	O
have	O	O
to	O	O
write	O	O
anything	O	O
extra	O	O
.	O	O
If	O	O
the	O	O
thread	O	O
call	O	O
is	O	O
``	O	O
illegal	O	O
''	O	O
(	O	O
i.e	O	O
.	O	O
the	O	O
DataBind	O	O
call	O	O
affects	O	O
controls	O	O
that	O	O
were	O	O
not	O	O
created	O	O
in	O	O
the	O	O
thread	O	O
it	O	O
is	O	O
being	O	O
called	O	O
from	O	O
)	O	O
then	O	O
you	O	O
need	O	O
to	O	O
create	O	O
a	O	O
delegate	O	O
so	O	O
that	O	O
even	O	O
if	O	O
the	O	O
decision	O	O
/	O	O
preparation	O	O
for	O	O
the	O	O
DataBind	O	O
is	O	O
not	O	O
done	O	O
in	O	O
the	O	O
control-creating	O	O
thread	O	O
,	O	O
any	O	O
resultant	O	O
modification	O	O
of	O	O
them	O	O
(	O	O
i.e	O	O
.	O	O
DataBind	O	B-API
(	O	I-API
)	O	I-API
)	O	O
will	O	O
be	O	O
.	O	O
You	O	O
would	O	O
call	O	O
my	O	O
code	O	O
from	O	O
the	O	O
worker	O	O
thread	O	O
like	O	O
so	O	O
:	O	O
this.BindData.Invoke	B-API	B-API
(	I-API	I-API
)	I-API	I-API
This	O	O
would	O	O
then	O	O
cause	O	O
the	O	O
original	O	O
thread	O	O
to	O	O
do	O	O
the	O	O
binding	O	O
,	O	O
which	O	O
(	O	O
presuming	O	O
it	O	O
is	O	O
the	O	O
thread	O	O
that	O	O
created	O	O
the	O	O
controls	O	O
)	O	O
should	O	O
work	O	O
.	O	O
In	O	O
WPF	B-API	B-API
and	O	O
Silverlight	B-API	O
the	O	O
binding	O	O
infrastructure	O	O
takes	O	O
care	O	O
of	O	O
the	O	O
switching	O	O
to	O	O
the	O	O
UI	O	O
thread	O	O
.	O	O
NUnit	B-API	O
is	O	O
always	O	O
a	O	O
favorite	O	O
of	O	O
mine	O	O
.	O	O
However	O	O
if	O	O
you	O	O
are	O	O
using	O	O
TFS	B-API	O
as	O	O
your	O	O
source	O	O
control	O	O
I	O	O
suggest	O	O
you	O	O
stick	O	O
with	O	O
the	O	O
Microsoft	B-API	O
Stack	I-API	O
.	O	O
For	O	O
a	O	O
Mock	B-API	O
Object	I-API	O
library	O	O
,	O	O
I	O	O
've	O	O
found	O	O
the	O	O
BSD-licensed	B-API	O
Rhino.Mocks	I-API	B-API
to	O	O
be	O	O
rather	O	O
pleasing	O	O
.	O	O
NUnit	B-API	O
is	O	O
available	O	O
at	O	O
http	O	O
:	O	O
//www.nunit.org	O	O
I	O	O
would	O	O
suggest	O	O
this	O	O
even	O	O
when	O	O
working	O	O
on	O	O
the	O	O
MS	B-API	O
stack	I-API	O
-	O	O
the	O	O
support	O	O
for	O	O
non-MS	O	O
frameworks	O	O
is	O	O
happening	O	O
in	O	O
the	O	O
MVC	O	O
previews	O	O
which	O	O
shows	O	O
a	O	O
definite	O	O
movement	O	O
in	O	O
the	O	O
right	O	O
direction	O	O
to	O	O
allow	O	O
us	O	O
all	O	O
to	O	O
customise	O	O
our	O	O
stacks	O	O
to	O	O
fit	O	O
.	O	O
I	O	O
've	O	O
had	O	O
great	O	O
success	O	O
using	O	O
NUnit	B-API	O
as	O	O
well	O	O
.	O	O
I	O	O
've	O	O
also	O	O
used	O	O
NMock	B-API	O
when	O	O
the	O	O
need	O	O
arose	O	O
for	O	O
mock	O	O
objects	O	O
.	O	O
As	O	O
an	O	O
added	O	O
bonus	O	O
,	O	O
the	O	O
factory	O	O
for	O	O
creating	O	O
your	O	O
mock	O	O
objects	O	O
is	O	O
called	O	O
the	O	O
Mockery	O	O
.	O	O
To	O	O
facilitate	O	O
the	O	O
running	O	O
of	O	O
unit	O	O
tests	O	O
,	O	O
I	O	O
've	O	O
used	O	O
TestDriven.NET	B-API	B-API
to	O	O
run	O	O
unit	O	O
tests	O	O
as	O	O
I	O	O
coded	O	O
.	O	O
Also	O	O
,	O	O
I	O	O
've	O	O
used	O	O
Cruise	B-API	O
Control	I-API	O
.NET	I-API	O
to	O	O
watch	O	O
SVN	O	O
and	O	O
check	O	O
that	O	O
every	O	O
new	O	O
commit	O	O
builds	O	O
and	O	O
passes	O	O
all	O	O
unit	O	O
tests	O	O
.	O	O
We	O	O
use	O	O
MbUnit	B-API	O
and	O	O
Rihno	B-API	O
Mocks	I-API	O
and	O	O
they	O	O
prove	O	O
to	O	O
work	O	O
very	O	O
well	O	O
together	O	O
.	O	O
When	O	O
doing	O	O
TDD	O	O
you	O	O
will	O	O
almost	O	O
certainly	O	O
need	O	O
to	O	O
do	O	O
some	O	O
form	O	O
of	O	O
dependency	O	O
injection	O	O
,	O	O
while	O	O
this	O	O
can	O	O
be	O	O
done	O	O
manually	O	O
,	O	O
its	O	O
worth	O	O
looking	O	O
at	O	O
an	O	O
IoC	O	O
container	O	O
such	O	O
as	O	O
Castle	B-API	O
Windsor	I-API	O
.	O	O
It	O	O
well	O	O
worth	O	O
looking	O	O
at	O	O
John	O	O
Paul	O	O
Bodhood	O	O
's	O	O
screen	O	O
casts	O	O
to	O	O
get	O	O
you	O	O
started	O	O
.	O	O
JPB	O	O
's	O	O
Blog	O	O
I	O	O
'm	O	O
not	O	O
a	O	O
javascript	O	O
expert	O	O
but	O	O
it	O	O
looks	O	O
like	O	O
you	O	O
would	O	O
have	O	O
to	O	O
loop	O	O
through	O	O
the	O	O
elements	O	O
and	O	O
count	O	O
them	O	O
since	O	O
Object	O	O
does	O	O
n't	O	O
have	O	O
a	O	O
length	O	O
method	O	O
:	O	O
var	O	O
element_count	O	O
=	O	O
0	O	O
;	O	O
for	O	O
(	O	O
e	O	O
in	O	O
myArray	O	O
)	O	O
{	O	O
if	O	O
(	O	O
myArray.hasOwnProperty	O	B-API
(	O	I-API
e	O	I-API
)	O	I-API
)	O	O
element_count++	O	O
;	O	O
}	O	O
@	O	O
palmsey	O	O
:	O	O
In	O	O
fairness	O	O
to	O	O
the	O	O
OP	O	O
,	O	O
the	O	O
javascript	O	O
docs	O	O
actually	O	O
explicitly	O	O
refer	O	O
to	O	O
using	O	O
variables	O	O
of	O	O
type	O	O
Object	O	O
in	O	O
this	O	O
manner	O	O
as	O	O
``	O	O
associative	O	O
arrays	O	O
''	O	O
.	O	O
Here	O	O
's	O	O
how	O	O
and	O	O
do	O	O
n't	O	O
forget	O	O
to	O	O
check	O	O
that	O	O
the	O	O
property	O	O
is	O	O
not	O	O
on	O	O
the	O	O
prototype	O	O
chain	O	O
:	O	O
var	O	O
element_count	O	O
=	O	O
0	O	O
;	O	O
for	O	O
(	O	O
var	O	O
e	O	O
in	O	O
myArray	O	O
)	O	O
if	O	O
(	O	O
myArray.hasOwnProperty	O	B-API
(	O	I-API
e	O	I-API
)	O	I-API
)	O	O
element_count++	O	O
;	O	O
@	O	O
palmsey	O	O
:	O	O
In	O	O
fairness	O	O
to	O	O
the	O	O
OP	O	O
,	O	O
the	O	O
javascript	O	O
docs	O	O
actually	O	O
explicitly	O	O
refer	O	O
to	O	O
using	O	O
variables	O	O
of	O	O
type	O	O
Object	O	O
in	O	O
this	O	O
manner	O	O
as	O	O
``	O	O
associative	O	O
arrays	O	O
''	O	O
.	O	O
And	O	O
in	O	O
fairness	O	O
to	O	O
@	O	O
palmsey	O	O
he	O	O
was	O	O
quite	O	O
correct	O	O
,	O	O
they	O	O
are	O	O
n't	O	O
associative	O	O
arrays	O	O
,	O	O
they	O	O
're	O	O
definitely	O	O
objects	O	O
:	O	O
)	O	O
-	O	O
doing	O	O
the	O	O
job	O	O
of	O	O
an	O	O
associative	O	O
array	O	O
.	O	O
But	O	O
as	O	O
regards	O	O
the	O	O
wider	O	O
point	O	O
you	O	O
definitely	O	O
seem	O	O
to	O	O
have	O	O
the	O	O
right	O	O
of	O	O
it	O	O
according	O	O
to	O	O
this	O	O
rather	O	O
fine	O	O
article	O	O
I	O	O
found	O	O
:	O	O
JavaScript	O	O
Associative	O	O
Arrays	O	O
Considered	O	O
Harmful	O	O
But	O	O
according	O	O
to	O	O
all	O	O
this	O	O
,	O	O
is	O	O
n't	O	O
the	O	O
accepted	O	O
answer	O	O
itself	O	O
bad	O	O
practice	O	O
?	O	O
Specify	O	O
a	O	O
prototype	O	O
size	B-API	O
(	I-API	O
)	I-API	O
function	O	O
for	O	O
Object	O	O
If	O	O
anything	O	O
else	O	O
has	O	O
been	O	O
added	O	O
to	O	O
Object	O	O
.prototype	O	O
,	O	O
then	O	O
the	O	O
suggested	O	O
code	O	O
will	O	O
fail	O	O
:	O	O
script	O	O
type=	O	O
''	O	O
text/javascript	O	O
''	O	O
Object.prototype.size	B-API	O
=	O	O
function	O	O
(	O	O
)	O	O
{	O	O
var	O	O
len	O	O
=	O	O
this.length	B-API	O
?	O	O
--	O	O
this.length	B-API	O
:	O	O
-1	O	O
;	O	O
for	O	O
(	O	O
var	O	O
k	O	O
in	O	O
this	O	O
)	O	O
len++	O	O
;	O	O
return	O	O
len	O	O
;	O	O
}	O	O
Object.prototype.size2	O	O
=	O	O
function	O	O
(	O	O
)	O	O
{	O	O
var	O	O
len	O	O
=	O	O
this.length	B-API	O
?	O	O
--	O	O
this.length	B-API	O
:	O	O
-1	O	O
;	O	O
for	O	O
(	O	O
var	O	O
k	O	O
in	O	O
this	O	O
)	O	O
len++	O	O
;	O	O
return	O	O
len	O	O
;	O	O
}	O	O
var	O	O
myArray	O	O
=	O	O
new	O	O
Object	B-API	O
(	I-API	O
)	I-API	O
;	O	O
myArray	O	O
[	O	O
``	O	O
firstname	O	O
''	O	O
]	O	O
=	O	O
``	O	O
Gareth	O	O
''	O	O
;	O	O
myArray	O	O
[	O	O
``	O	O
lastname	O	O
''	O	O
]	O	O
=	O	O
``	O	O
Simpson	O	O
''	O	O
;	O	O
myArray	O	O
[	O	O
``	O	O
age	O	O
''	O	O
]	O	O
=	O	O
21	O	O
;	O	O
alert	B-API	O
(	I-API	O
``	O	O
age	O	O
is	O	O
``	O	O
+	O	O
myArray	O	O
[	O	O
``	O	O
age	O	O
''	O	O
]	O	O
)	O	O
;	O	O
alert	B-API	B-API
(	I-API	I-API
``	I-API	I-API
length	I-API	I-API
is	I-API	I-API
``	I-API	I-API
+	I-API	I-API
myArray.size	I-API	B-API
(	I-API	I-API
)	I-API	I-API
)	I-API	I-API
;	O	O
/script	O	O
I	O	O
do	O	O
n't	O	O
think	O	O
that	O	O
answer	O	O
should	O	O
be	O	O
the	O	O
accepted	O	O
one	O	O
as	O	O
it	O	O
ca	O	O
n't	O	O
be	O	O
trusted	O	O
to	O	O
work	O	O
if	O	O
you	O	O
have	O	O
any	O	O
other	O	O
code	O	O
running	O	O
in	O	O
the	O	O
same	O	O
execution	O	O
context	O	O
.	O	O
To	O	O
do	O	O
it	O	O
in	O	O
a	O	O
robust	O	O
fashion	O	O
surely	O	O
you	O	O
would	O	O
need	O	O
to	O	O
define	O	O
the	O	O
size	B-API	O
method	O	O
within	O	O
myArray	O	O
and	O	O
check	O	O
for	O	O
the	O	O
type	O	O
of	O	O
the	O	O
members	O	O
as	O	O
you	O	O
iterate	O	O
through	O	O
them	O	O
.	O	O
Your	O	O
object	O	O
has	O	O
a	O	O
(	O	O
String	B-API	O
paramName	O	O
)	O	O
method	O	O
that	O	O
can	O	O
be	O	O
used	O	O
to	O	O
get	O	O
parameter	O	O
values	O	O
.	O	O
http	O	O
:	O	O
//java.sun.com/javaee/5/docs/api/javax/servlet/ServletRequest.html	O	O
#	O	O
getParameter	B-API	O
(	I-API	O
java.lang.String	I-API	B-API
)	I-API	O
POST	O	O
variables	O	O
should	O	O
be	O	O
accessible	O	O
via	O	O
the	O	O
request	O	O
object	O	O
:	O	O
HttpRequest.getParameterMap	B-API	B-API
(	I-API	I-API
)	I-API	I-API
.	O	O
The	O	O
exception	O	O
is	O	O
if	O	O
the	O	O
form	O	O
is	O	O
sending	O	O
multipart	O	O
MIME	O	O
data	O	O
(	O	O
the	O	O
FORM	O	O
has	O	O
enctype=	O	O
''	O	O
multipart/form-data	O	O
''	O	O
)	O	O
.	O	O
In	O	O
that	O	O
case	O	O
,	O	O
you	O	O
need	O	O
to	O	O
parse	O	O
the	O	O
byte	O	O
stream	O	O
with	O	O
a	O	O
MIME	O	O
parser	O	O
.	O	O
You	O	O
can	O	O
write	O	O
your	O	O
own	O	O
or	O	O
use	O	O
an	O	O
existing	O	O
one	O	O
like	O	O
the	O	O
Apache	B-API	O
Commons	I-API	O
File	I-API	O
Upload	I-API	O
API	I-API	O
.	O	O
Well	O	O
,	O	O
I	O	O
do	O	O
n't	O	O
really	O	O
have	O	O
an	O	O
expert	O	O
opinion	O	O
on	O	O
this	O	O
.	O	O
I	O	O
usually	O	O
end	O	O
up	O	O
using	O	O
closures	O	O
based	O	O
approach	O	O
just	O	O
because	O	O
it	O	O
keeps	O	O
the	O	O
code	O	O
simpler	O	O
to	O	O
manager	O	O
.	O	O
But	O	O
,	O	O
I	O	O
have	O	O
found	O	O
myself	O	O
using	O	O
prototypes	O	O
for	O	O
methods	O	O
that	O	O
have	O	O
loads	O	O
of	O	O
lines	O	O
of	O	O
code	O	O
.	O	O
You	O	O
also	O	O
have	O	O
the	O	O
choice	O	O
of	O	O
:	O	O
function	O	O
{	O	O
function	O	O
{	O	O
return	O	O
;	O	B-API
(	O	I-API
x	O	I-API
,	O	I-API
y	O	I-API
,	O	I-API
z	O	I-API
)	O	I-API
length	B-API	B-API
(	I-API	I-API
)	I-API	I-API
(	O	I-API
x	O	I-API
*	O	I-API
x	O	I-API
+	O	I-API
...	O	I-API
)	O	I-API
Which	O	O
is	O	O
probably	O	O
just	O	O
as	O	O
slow	O	O
as	O	O
example	O	O
two	O	O
,	O	O
but	O	O
it	O	O
looks	O	O
more	O	O
like	O	O
Java/C	O	O
#	O	O
and	O	O
is	O	O
a	O	O
bit	O	O
more	O	O
explicit	O	O
.	O	O
Assigning	O	O
functions	O	O
to	O	O
the	O	O
prototype	O	O
is	O	O
better	O	O
(	O	O
for	O	O
public	O	O
methods	O	O
)	O	O
because	O	O
all	O	O
instances	O	O
of	O	O
the	O	O
class	O	O
will	O	O
share	O	O
the	O	O
same	O	O
copy	O	O
of	O	O
the	O	O
method	O	O
.	O	O
If	O	O
you	O	O
assign	O	O
the	O	O
function	O	O
inside	O	O
the	O	O
constructor	O	O
as	O	O
in	O	O
the	O	O
second	O	O
example	O	O
,	O	O
every	O	O
time	O	O
you	O	O
create	O	O
a	O	O
new	O	O
instance	O	O
,	O	O
the	O	O
constructor	O	O
creates	O	O
a	O	O
new	O	O
copy	O	O
of	O	O
the	O	O
length	O	O
function	O	O
and	O	O
assigns	O	O
it	O	O
to	O	O
just	O	O
that	O	O
one	O	O
instance	O	O
.	O	O
However	O	O
this	O	O
latter	O	O
technique	O	O
is	O	O
useful	O	O
if	O	O
you	O	O
want	O	O
each	O	O
copy	O	O
to	O	O
have	O	O
it	O	O
's	O	O
own	O	O
copy	O	O
,	O	O
the	O	O
main	O	O
use	O	O
of	O	O
that	O	O
being	O	O
to	O	O
do	O	O
private/privileges	O	O
methods	O	O
which	O	O
have	O	O
access	O	O
to	O	O
private	O	O
variables	O	O
declared	O	O
inside	O	O
the	O	O
constructor	O	O
and	O	O
inherited	O	O
via	O	O
the	O	O
closure	O	O
mechanism	O	O
.	O	O
Douglas	O	O
Crockford	O	O
has	O	O
a	O	O
good	O	O
summary	O	O
.	O	O
Fortunately	O	O
I	O	O
get	O	O
to	O	O
use	O	O
,	O	O
which	O	O
provides	O	O
some	O	O
nice	O	O
wrappers	O	O
.	O	O
So	O	O
you	O	O
can	O	O
do	O	O
this	O	O
:	O	O
var	O	O
Person	O	O
=	O	O
Class.create	B-API	O
(	O	O
{	O	O
initialize	O	O
:	O	O
function	O	O
(	O	O
name	O	O
)	O	O
{	O	O
this.name	O	O
=	O	O
name	O	O
;	O	O
}	O	O
,	O	O
say	O	O
:	O	O
function	O	O
(	O	O
message	O	O
)	O	O
{	O	O
return	O	O
this.name	O	O
+	O	O
'	O	O
:	O	O
'	O	O
+	O	O
message	O	O
;	O	O
}	O	O
}	O	O
)	O	O
;	O	O
Documentation	O	O
:	O	O
Defining	O	O
classes	O	O
and	O	O
inheritance	O	O
I	O	O
'm	O	O
not	O	O
certain	O	O
,	O	O
but	O	O
I	O	O
believe	O	O
you	O	O
can	O	O
put	O	O
it	O	O
in	O	O
a	O	O
config	O	O
file	O	O
and	O	O
encrypt	O	O
the	O	O
config	O	O
file	O	O
.	O	O
Update	O	O
:	O	O
See	O	O
Jon	O	O
Galloway	O	O
's	O	O
post	O	O
here	O	O
.	O	O
If	O	O
the	O	O
app	O	O
is	O	O
an	O	O
ASP.NET	O	O
app	O	O
then	O	O
just	O	O
encrypt	O	O
the	O	O
connection	O	O
strings	O	O
section	O	O
of	O	O
your	O	O
.	O	O
If	O	O
the	O	O
app	O	O
is	O	O
a	O	O
client	O	O
application	O	O
running	O	O
on	O	O
multiple	O	O
machines	O	O
,	O	O
instead	O	O
of	O	O
storing	O	O
the	O	O
connection	O	O
string	O	O
locally	O	O
,	O	O
consider	O	O
using	O	O
a	O	O
web	O	O
service	O	O
or	O	O
some	O	O
other	O	O
kind	O	O
of	O	O
secure	O	O
mechanism	O	O
to	O	O
store	O	O
it	O	O
centrally	O	O
.	O	O
This	O	O
would	O	O
facilitate	O	O
easier	O	O
updates	O	O
in	O	O
the	O	O
future	O	O
and	O	O
you	O	O
're	O	O
not	O	O
storing	O	O
the	O	O
connection	O	O
string	O	O
locally	O	O
.	O	O
Just	O	O
some	O	O
thoughts	O	O
.	O	O
Updated	O	O
:	O	O
@	O	O
lassevk	O	O
''	O	O
Storing	O	O
the	O	O
connection	O	O
string	O	O
on	O	O
a	O	O
server	O	O
,	O	O
and	O	O
obtaining	O	O
it	O	O
through	O	O
a	O	O
web	O	O
connection	O	O
sounds	O	O
good	O	O
,	O	O
until	O	O
you	O	O
realize	O	O
that	O	O
you	O	O
need	O	O
security	O	O
on	O	O
that	O	O
web	O	O
connection	O	O
as	O	O
well	O	O
,	O	O
otherwise	O	O
an	O	O
attacker	O	O
could	O	O
just	O	O
as	O	O
well	O	O
impersonate	O	O
your	O	O
program	O	O
and	O	O
talk	O	O
to	O	O
the	O	O
web	O	O
connection	O	O
.	O	O
''	O	O
Security	O	O
on	O	O
the	O	O
web	O	O
service	O	O
was	O	O
implicit	O	O
.	O	O
Depending	O	O
on	O	O
the	O	O
type	O	O
of	O	O
deployment	O	O
there	O	O
are	O	O
a	O	O
numerous	O	O
options	O	O
...	O	O
for	O	O
example	O	O
client	O	O
side	O	O
certificates	O	O
.	O	O
I	O	O
hate	O	O
to	O	O
say	O	O
this	O	O
but	O	O
as	O	O
soon	O	O
as	O	O
you	O	O
put	O	O
something	O	O
on	O	O
a	O	O
client	O	O
machine	O	O
,	O	O
security	O	O
for	O	O
that	O	O
data	O	O
goes	O	O
out	O	O
the	O	O
window	O	O
.	O	O
If	O	O
your	O	O
program	O	O
is	O	O
going	O	O
to	O	O
decrypt	O	O
that	O	O
string	O	O
,	O	O
you	O	O
need	O	O
to	O	O
assume	O	O
that	O	O
an	O	O
attacker	O	O
can	O	O
do	O	O
the	O	O
same	O	O
.	O	O
Attaching	O	O
a	O	O
debugger	O	O
to	O	O
your	O	O
program	O	O
would	O	O
be	O	O
one	O	O
way	O	O
.	O	O
Storing	O	O
the	O	O
connection	O	O
string	O	O
on	O	O
a	O	O
server	O	O
,	O	O
and	O	O
obtaining	O	O
it	O	O
through	O	O
a	O	O
web	O	O
connection	O	O
sounds	O	O
good	O	O
,	O	O
until	O	O
you	O	O
realize	O	O
that	O	O
you	O	O
need	O	O
security	O	O
on	O	O
that	O	O
web	O	O
connection	O	O
as	O	O
well	O	O
,	O	O
otherwise	O	O
an	O	O
attacker	O	O
could	O	O
just	O	O
as	O	O
well	O	O
impersonate	O	O
your	O	O
program	O	O
and	O	O
talk	O	O
to	O	O
the	O	O
web	O	O
connection	O	O
.	O	O
Let	O	O
me	O	O
ask	O	O
a	O	O
question	O	O
.	O	O
Who	O	O
are	O	O
you	O	O
hiding	O	O
the	O	O
connection	O	O
string	O	O
from	O	O
?	O	O
The	O	O
user	O	O
or	O	O
an	O	O
attacker	O	O
?	O	O
And	O	O
if	O	O
the	O	O
user	O	O
,	O	O
why	O	O
?	O	O
There	O	O
are	O	O
some	O	O
other	O	O
idea	O	O
's	O	O
also	O	O
.	O	O
You	O	O
can	O	O
always	O	O
use	O	O
impersonation	O	O
.	O	O
Also	O	O
,	O	O
you	O	O
can	O	O
use	O	O
the	O	O
Enterprise	O	O
Library	O	O
's	O	O
(	O	O
Common	O	O
Library	O	O
)	O	O
.	O	O
section	O	O
name=	O	O
''	O	O
enterpriseLibrary.ConfigurationSource	B-API	O
''	O	O
type=	O	O
''	O	O
Microsoft.Practices.EnterpriseLibrary.Common.Configuration.ConfigurationSourceSection	B-API	O
,	O	O
Microsoft.Practices.EnterpriseLibrary.Common	B-API	B-API
,	O	O
Version=3.1.0.0	B-API	O
,	O	O
Culture=neutral	B-API	O
,	O	O
PublicKeyToken=b03f5f7f11d50a3a	B-API	O
''	O	O
/enterpriseLibrary.ConfigurationSource	B-API	O
selectedSource=	O	O
''	O	O
Common	O	O
''	O	O
sources	O	O
add	O	O
name=	O	O
''	O	O
Common	O	O
''	O	O
type=	O	O
''	O	O
Microsoft.Practices.EnterpriseLibrary.Common.Configuration.FileConfigurationSource	B-API	O
,	O	O
Microsoft.Practices.EnterpriseLibrary.Common	B-API	B-API
,	O	O
Version=3.1.0.0	B-API	O
,	O	O
Culture=neutral	O	O
,	O	O
PublicKeyToken=b03f5f7f11d50a3a	B-API	O
''	O	O
filePath=	O	O
''	O	O
Config\Exception.config	B-API	O
''	I-API	O
.NET	O	O
supports	O	O
encryption	O	O
on	O	O
config	O	O
values	O	O
like	O	O
this	O	O
.	O	O
You	O	O
could	O	O
leave	O	O
it	O	O
in	O	O
a	O	O
config	O	O
file	O	O
,	O	O
but	O	O
encrypted	O	O
.	O	O
You	O	O
want	O	O
to	O	O
be	O	O
able	O	O
to	O	O
distribute	O	O
the	O	O
DLL	O	O
with	O	O
all	O	O
of	O	O
the	O	O
setup	O	O
information	O	O
being	O	O
in	O	O
a	O	O
configurable	O	O
place	O	O
,	O	O
but	O	O
the	O	O
fact	O	O
is	O	O
you	O	O
ca	O	O
n't	O	O
have	O	O
one	O	O
of	O	O
the	O	O
handy-dandy	O	O
.NET	O	O
config	O	O
files	O	O
for	O	O
a	O	O
DLL	O	O
unless	O	O
you	O	O
do	O	O
something	O	O
custom	O	O
.	O	O
Maybe	O	O
you	O	O
need	O	O
to	O	O
rethink	O	O
what	O	O
responsibility	O	O
your	O	O
DLL	O	O
should	O	O
have	O	O
.	O	O
Would	O	O
it	O	O
be	O	O
possible	O	O
,	O	O
or	O	O
make	O	O
sense	O	O
to	O	O
require	O	O
that	O	O
the	O	O
connection	O	O
string	O	O
be	O	O
passed	O	O
in	O	O
by	O	O
the	O	O
user	O	O
of	O	O
your	O	O
library	O	O
?	O	O
Does	O	O
it	O	O
really	O	O
make	O	O
sense	O	O
that	O	O
your	O	O
DLL	O	O
reads	O	O
a	O	O
config	O	O
file	O	O
?	O	O
gedit	B-API	O
Syntax	O	O
highlighting	O	O
Fast	O	O
,	O	O
lightweight	O	O
Tabs	O	O
GUI	O	O
emacs	O	O
has	O	O
been	O	O
used	O	O
by	O	O
linux	O	O
programmers	O	O
for	O	O
decades	O	O
.	O	O
It	O	O
features	O	O
syntax	O	O
highlighting	O	O
,	O	O
it	O	O
's	O	O
fast	O	O
,	O	O
and	O	O
there	O	O
are	O	O
a	O	O
million	O	O
tutorials	O	O
out	O	O
there	O	O
you	O	O
can	O	O
find	O	O
.	O	O
any	O	O
of	O	O
the	O	O
popular	O	O
editors	O	O
can	O	O
be	O	O
turned	O	O
into	O	O
an	O	O
ide	O	O
.	O	O
I	O	O
use	O	O
Vi	O	O
on	O	O
the	O	O
console	O	O
and	O	O
have	O	O
used	O	O
various	O	O
gui	O	O
editors	O	O
over	O	O
the	O	O
years	O	O
.	O	O
This	O	O
does	O	O
n't	O	O
just	O	O
go	O	O
for	O	O
linux	O	O
I	O	O
use	O	O
Crimson	O	O
Editor	O	O
on	O	O
windows	O	O
as	O	O
a	O	O
C/python/z80asm	O	O
ide	O	O
.	O	O
I	O	O
bounce	O	O
about	O	O
between	O	O
Mac	O	O
,	O	O
Windows	O	O
and	O	O
Ubuntu	O	O
and	O	O
while	O	O
Emacs	O	O
used	O	O
to	O	O
be	O	O
my	O	O
editor	O	O
of	O	O
choice	O	O
,	O	O
I	O	O
'm	O	O
finding	O	O
that	O	O
in	O	O
my	O	O
old	O	O
age	O	O
I	O	O
prefer	O	O
to	O	O
something	O	O
GUI-based	O	O
(	O	O
using	O	O
command-line	O	O
for	O	O
the	O	O
shell	O	O
is	O	O
still	O	O
fine	O	O
by	O	O
me	O	O
)	O	O
.	O	O
My	O	O
preferred	O	O
editor	O	O
is	O	O
Komodo	O	O
Edit	O	O
,	O	O
which	O	O
the	O	O
advantages	O	O
of	O	O
:	O	O
Being	O	O
free	O	O
(	O	O
as	O	O
in	O	O
beer	O	O
)	O	O
Available	O	O
for	O	O
Mac	O	O
,	O	O
Windows	O	O
and	O	O
Linux	O	O
Syntax	O	O
highlighting	O	O
for	O	O
a	O	O
boatload	O	O
of	O	O
languages	O	O
,	O	O
including	O	O
C++	O	O
and	O	O
PHP	O	O
(	O	O
I	O	O
'm	O	O
using	O	O
it	O	O
for	O	O
Ruby	O	O
,	O	O
Python	O	O
and	O	O
PHP	O	O
myself	O	O
)	O	O
Code	O	O
completion	O	O
,	O	O
even	O	O
for	O	O
classes	O	O
I	O	O
defined	O	O
myself	O	O
Ability	O	O
to	O	O
``	O	O
remote	O	O
save	O	O
''	O	O
via	O	O
FTP	O	O
,	O	O
SFTP	O	O
or	O	O
SCP	O	O
Support	O	O
for	O	O
organizing	O	O
your	O	O
files	O	O
into	O	O
projects	O	O
Tabs	O	O
and	O	O
other	O	O
interface	O	O
niceties	O	O
I	O	O
'm	O	O
not	O	O
sure	O	O
how	O	O
lightweight	O	O
it	O	O
is	O	O
,	O	O
but	O	O
it	O	O
certainly	O	O
feels	O	O
snappier	O	O
than	O	O
Eclipse	O	O
!	O	O
Joey	O	O
,	O	O
I	O	O
believe	O	O
anything	O	O
is	O	O
lighter	O	O
than	O	O
Eclipse	O	O
!	O	O
:	O	O
o	O	O
)	O	O
Vim	O	O
(	O	O
or	O	O
Emacs	O	O
varying	O	O
on	O	O
religion	O	O
)	O	O
will	O	O
always	O	O
be	O	O
my	O	O
first	O	O
answer	O	O
to	O	O
this	O	O
question	O	O
,	O	O
over	O	O
any	O	O
point-and-click	O	O
IDE	O	O
.	O	O
As	O	O
they	O	O
write	O	O
in	O	O
The	O	O
Pragmatic	O	O
Programmer	O	O
Choose	O	O
an	O	O
editor	O	O
,	O	O
know	O	O
it	O	O
thoroughly	O	O
,	O	O
and	O	O
use	O	O
it	O	O
for	O	O
all	O	O
editing	O	O
tasks	O	O
.	O	O
[	O	O
...	O	O
]	O	O
The	O	O
editor	O	O
will	O	O
be	O	O
an	O	O
extension	O	O
of	O	O
your	O	O
hand	O	O
;	O	O
the	O	O
keys	O	O
will	O	O
sing	O	O
as	O	O
they	O	O
slice	O	O
their	O	O
way	O	O
through	O	O
text	O	O
and	O	O
thought	O	O
.	O	O
That	O	O
's	O	O
our	O	O
goal	O	O
.	O	O
Make	O	O
sure	O	O
that	O	O
the	O	O
editor	O	O
you	O	O
choose	O	O
is	O	O
available	O	O
on	O	O
all	O	O
platforms	O	O
you	O	O
use	O	O
.	O	O
Vim	O	O
is	O	O
configurable	O	O
,	O	O
extensible	O	O
,	O	O
programmable	O	O
and	O	O
can	O	O
be	O	O
turned	O	O
into	O	O
an	O	O
IDE	O	O
with	O	O
all	O	O
the	O	O
regular	O	O
features	O	O
.	O	O
Lately	O	O
I	O	O
've	O	O
been	O	O
using	O	O
Eclim	O	O
to	O	O
``	O	O
bring	O	O
Eclipse	O	O
functionality	O	O
to	O	O
the	O	O
Vim	O	O
editor	O	O
''	O	O
(	O	O
projects	O	O
,	O	O
better	O	O
java	O	O
support	O	O
etc	O	O
.	O	O
)	O	O
making	O	O
it	O	O
a	O	O
complete	O	O
platform	O	O
with	O	O
advanced	O	O
IDE	O	O
features	O	O
.	O	O
If	O	O
you	O	O
are	O	O
taking	O	O
your	O	O
time	O	O
switching	O	O
to	O	O
linux	O	O
,	O	O
I	O	O
'd	O	O
switch	O	O
to	O	O
emacs	O	O
or	O	O
vim	O	O
at	O	O
some	O	O
point	O	O
as	O	O
well	O	O
.	O	O
There	O	O
will	O	O
always	O	O
be	O	O
a	O	O
resource	O	O
or	O	O
a	O	O
document	O	O
describing	O	O
exactly	O	O
the	O	O
problem	O	O
you	O	O
are	O	O
having	O	O
with	O	O
either	O	O
of	O	O
them	O	O
,	O	O
and	O	O
generally	O	O
a	O	O
solution	O	O
is	O	O
just	O	O
a	O	O
few	O	O
more	O	O
clicks	O	O
down	O	O
the	O	O
road	O	O
.	O	O
Emacs	O	O
may	O	O
be	O	O
easier	O	O
at	O	O
the	O	O
beginning	O	O
because	O	O
of	O	O
modeless	O	O
editing	O	O
...	O	O
but	O	O
do	O	O
n't	O	O
let	O	O
modal	O	O
editing	O	O
scare	O	O
you	O	O
away	O	O
from	O	O
Vim	O	O
.	O	O
The	O	O
key	O	O
with	O	O
either	O	O
Vim	O	O
or	O	O
Emacs	O	O
is	O	O
knowing	O	O
it	O	O
could	O	O
probably	O	O
take	O	O
you	O	O
the	O	O
better	O	O
part	O	O
of	O	O
the	O	O
day	O	O
just	O	O
to	O	O
figure	O	O
out	O	O
what	O	O
you	O	O
want	O	O
them	O	O
to	O	O
do	O	O
,	O	O
let	O	O
alone	O	O
how	O	O
to	O	O
get	O	O
them	O	O
to	O	O
do	O	O
that	O	O
.	O	O
Once	O	O
they	O	O
work	O	O
for	O	O
you	O	O
though	O	O
,	O	O
you	O	O
'll	O	O
see	O	O
why	O	O
mostly	O	O
everyone	O	O
is	O	O
in	O	O
one	O	O
of	O	O
two	O	O
camps	O	O
.	O	O
General	O	O
hints	O	O
:	O	O
Setting	O	O
up	O	O
a	O	O
Makefile	O	O
for	O	O
your	O	O
project	O	O
is	O	O
almost	O	O
always	O	O
worth	O	O
it	O	O
.	O	O
Using	O	O
cscope	O	O
and	O	O
or	O	O
ctags	O	O
will	O	O
make	O	O
your	O	O
life	O	O
easier	O	O
.	O	O
Vim	O	O
hints	O	O
:	O	O
:	O	O
make	O	O
:	O	O
cn	O	O
,	O	O
:	O	O
cp	O	O
OmniCompletion	B-API	O
using	O	O
BufRead	O	O
autoloads	O	O
to	O	O
set	O	O
what	O	O
:	O	O
make	O	O
should	O	O
do	O	O
depending	O	O
on	O	O
file	O	O
type	O	O
Emacs	O	O
hints	O	O
:	O	O
ecb	O	O
is	O	O
fun	O	O
M-x	O	O
dired	O	O
M-	O	O
.	O	O
M-	O	O
,	O	O
M-*	O	O
M-x	O	O
complete-tag	O	O
for	O	O
etags	O	O
M-x	O	O
compile	B-API	O
(	I-API	O
add-hook	I-API	O
'mylanguage-mode-hook	I-API	O
'	I-API	O
(	I-API	O
lambda	I-API	O
(	I-API	O
)	I-API	O
(	I-API	O
setq	I-API	O
my-customizations	I-API	O
t	I-API	O
)	I-API	O
)	I-API	O
)	I-API	O
And	O	O
check	O	O
out	O	O
other	O	O
people	O	O
's	O	O
customizations	O	O
for	O	O
examples	O	O
of	O	O
what	O	O
other	O	O
people	O	O
do	O	O
.	O	O
No	O	O
.	O	O
See	O	O
A	O	O
Pragmatic	O	O
Look	O	O
at	O	O
Exception	O	O
Specifications	O	O
for	O	O
reasons	O	O
why	O	O
not	O	O
.	O	O
The	O	O
only	O	O
way	O	O
you	O	O
can	O	O
``	O	O
help	O	O
''	O	O
this	O	O
is	O	O
to	O	O
document	O	O
the	O	O
exceptions	O	O
your	O	O
function	O	O
can	O	O
throw	O	O
,	O	O
say	O	O
as	O	O
a	O	O
comment	O	O
in	O	O
the	O	O
header	O	O
file	O	O
declaring	O	O
it	O	O
.	O	O
This	O	O
is	O	O
not	O	O
enforced	O	O
by	O	O
the	O	O
compiler	O	O
or	O	O
anything	O	O
.	O	O
Use	O	O
code	O	O
reviews	O	O
for	O	O
that	O	O
purpose	O	O
.	O	O
Or	O	O
you	O	O
could	O	O
start	O	O
throwing	O	O
critical	O	O
exceptions	O	O
.	O	O
Surely	O	O
,	O	O
an	O	O
access	O	O
violation	O	O
exception	O	O
will	O	O
catch	O	O
your	O	O
users	O	O
'	O	O
attention	O	O
.	O	O
Outside	O	O
the	O	O
scope	O	O
of	O	O
your	O	O
question	O	O
so	O	O
I	O	O
debated	O	O
not	O	O
posting	O	O
this	O	O
but	O	O
in	O	O
Java	O	O
there	O	O
are	O	O
actually	O	O
2	O	O
types	O	O
of	O	O
exceptions	O	O
,	O	O
checked	O	O
and	O	O
unchecked	O	O
.	O	O
The	O	O
basic	O	O
difference	O	O
is	O	O
that	O	O
,	O	O
much	O	O
like	O	O
in	O	O
,	O	O
you	O	O
dont	O	O
have	O	O
to	O	O
catch	O	O
an	O	O
unchecked	O	O
exception	O	O
.	O	O
For	O	O
a	O	O
good	O	O
reference	O	O
try	O	O
this	O	O
Is	O	O
there	O	O
a	O	O
way	O	O
one	O	O
can	O	O
ensure	O	O
that	O	O
the	O	O
exceptions	O	O
thrown	O	O
are	O	O
always	O	O
caught	O	O
using	O	O
try/catch	O	O
by	O	O
the	O	O
calling	O	O
function	O	O
?	O	O
I	O	O
find	O	O
it	O	O
rather	O	O
funny	O	O
,	O	O
that	O	O
the	O	O
Java	O	O
crowd	O	O
-	O	O
including	O	O
myself	O	O
-	O	O
is	O	O
trying	O	O
to	O	O
avoid	O	O
checked	O	O
Exceptions	O	O
.	O	O
They	O	O
are	O	O
trying	O	O
to	O	O
work	O	O
their	O	O
way	O	O
around	O	O
being	O	O
forced	O	O
to	O	O
catch	O	O
Exceptions	O	O
by	O	O
using	O	O
RuntimeExceptions	O	O
.	O	O
Chris	O	O
'	O	O
probably	O	O
has	O	O
the	O	O
best	O	O
pure	O	O
answer	O	O
to	O	O
the	O	O
question	O	O
:	O	O
However	O	O
,	O	O
I	O	O
'm	O	O
curious	O	O
about	O	O
the	O	O
root	O	O
of	O	O
the	O	O
question	O	O
.	O	O
If	O	O
the	O	O
user	O	O
should	O	O
always	O	O
wrap	O	O
the	O	O
call	O	O
in	O	O
a	O	O
try/catch	O	O
block	O	O
,	O	O
should	O	O
the	O	O
user-called	O	O
function	O	O
really	O	O
be	O	O
throwing	O	O
exceptions	O	O
in	O	O
the	O	O
first	O	O
place	O	O
?	O	O
This	O	O
is	O	O
a	O	O
difficult	O	O
question	O	O
to	O	O
answer	O	O
without	O	O
more	O	O
context	O	O
regarding	O	O
the	O	O
code-base	O	O
in	O	O
question	O	O
.	O	O
Shooting	O	O
from	O	O
the	O	O
hip	O	O
,	O	O
I	O	O
think	O	O
the	O	O
best	O	O
answer	O	O
here	O	O
is	O	O
to	O	O
wrap	O	O
the	O	O
function	O	O
up	O	O
such	O	O
that	O	O
the	O	O
recommended	O	O
(	O	O
if	O	O
not	O	O
only	O	O
,	O	O
depending	O	O
on	O	O
the	O	O
overall	O	O
exception	O	O
style	O	O
of	O	O
the	O	O
code	O	O
)	O	O
public	O	O
interface	O	O
does	O	O
the	O	O
try/catch	O	O
for	O	O
the	O	O
user	O	O
.	O	O
If	O	O
you	O	O
're	O	O
just	O	O
trying	O	O
to	O	O
ensure	O	O
that	O	O
there	O	O
are	O	O
no	O	O
unhandled	O	O
exceptions	O	O
in	O	O
your	O	O
code	O	O
,	O	O
unit	O	O
tests	O	O
and	O	O
code	O	O
review	O	O
are	O	O
probably	O	O
the	O	O
best	O	O
solution	O	O
.	O	O
Firebug	B-API	O
is	O	O
pretty	O	O
well	O	O
unbeatable	O	O
for	O	O
JavaScript	O	O
development	O	O
in	O	O
a	O	O
browser	O	O
.	O	O
'alert	B-API	B-API
(	I-API	I-API
x	I-API	I-API
)	I-API	I-API
;	O	O
'	O	O
was	O	O
the	O	O
primary	O	O
technique	O	O
for	O	O
too	O	O
long	O	O
.	O	O
FireBug	O	O
,	O	O
as	O	O
others	O	O
have	O	O
said	O	O
,	O	O
is	O	O
the	O	O
way	O	O
to	O	O
go	O	O
in	O	O
FireFox	O	O
debugging	O	O
.	O	O
the	O	O
Aptana	O	O
IDE	O	O
(	O	O
based	O	O
on	O	O
eclipse	O	O
)	O	O
made	O	O
a	O	O
bit	O	O
of	O	O
a	O	O
splash	O	O
in	O	O
the	O	O
javascript	O	O
IDE	O	O
region	O	O
recently	O	O
.	O	O
Visual	O	O
Studio	O	O
2008	O	O
contains	O	O
much	O	O
improved	O	O
javascript	O	O
debugging	O	O
capabilities	O	O
over	O	O
the	O	O
previous	O	O
versions	O	O
.	O	O
Try	O	O
a	O	O
combination	O	O
of	O	O
Script	B-API	O
#	I-API	O
(	I-API	O
http	I-API	O
:	I-API	O
//www.nikhilk.net/ScriptSharpIntro.aspx	I-API	O
)	I-API	O
and	O	O
Firebug	O	O
Cheers	O	O
The	O	O
nightly	O	O
builds	O	O
of	O	O
WebKit	O	O
have	O	O
some	O	O
great	O	O
new	O	O
debugging	O	O
tools	O	O
:	O	O
http	O	O
:	O	O
//nightly.webkit.org/	O	O
We	O	O
use	O	O
FindBugs	B-API	O
and	O	O
JDepend	B-API	O
integrated	O	O
with	O	O
Ant	O	O
.	O	O
We	O	O
use	O	O
JUnit	B-API	O
but	O	O
we	O	O
're	O	O
not	O	O
using	O	O
any	O	O
coverage	O	O
tool	O	O
.	O	O
I	O	O
'm	O	O
not	O	O
using	O	O
it	O	O
integrated	O	O
to	O	O
Rational	O	O
Application	O	O
Developer	O	O
(	O	O
the	O	O
IDE	O	O
I	O	O
'm	O	O
using	O	O
to	O	O
develop	O	O
J2EE	O	O
applications	O	O
)	O	O
because	O	O
I	O	O
like	O	O
how	O	O
neat	O	O
it	O	O
looks	O	O
when	O	O
you	O	O
run	O	O
javac	O	O
in	O	O
the	O	O
Windows	O	O
console	O	O
.	O	O
:	O	O
P	O	O
Checkstyle	O	O
is	O	O
another	O	O
one	O	O
I	O	O
've	O	O
used	O	O
at	O	O
a	O	O
previous	O	O
company	O	O
...	O	O
it	O	O
's	O	O
mainly	O	O
for	O	O
style	O	O
checking	O	O
,	O	O
but	O	O
it	O	O
can	O	O
do	O	O
some	O	O
static	O	O
analysis	O	O
too	O	O
.	O	O
Also	O	O
,	O	O
Clover	O	O
for	O	O
code	O	O
coverage	O	O
,	O	O
though	O	O
be	O	O
aware	O	O
it	O	O
is	O	O
not	O	O
a	O	O
free	O	O
tool	O	O
.	O	O
We	O	O
are	O	O
using	O	O
FindBugs	O	O
and	O	O
Checkstyle	O	O
as	O	O
well	O	O
as	O	O
Clover	O	O
for	O	O
Code	O	O
Coverage	O	O
.	O	O
I	O	O
think	O	O
it	O	O
's	O	O
important	O	O
to	O	O
have	O	O
some	O	O
kind	O	O
of	O	O
static	O	O
analysis	O	O
,	O	O
supporting	O	O
your	O	O
development	O	O
.	O	O
Unfortunately	O	O
it	O	O
's	O	O
still	O	O
not	O	O
widely	O	O
spread	O	O
that	O	O
these	O	O
tools	O	O
are	O	O
important	O	O
.	O	O
I	O	O
am	O	O
looking	O	O
for	O	O
many	O	O
answers	O	O
to	O	O
learn	O	O
about	O	O
new	O	O
tools	O	O
and	O	O
consolidate	O	O
this	O	O
knowledge	O	O
in	O	O
a	O	O
one	O	O
question/thread	O	O
,	O	O
so	O	O
I	O	O
doubt	O	O
there	O	O
will	O	O
be	O	O
1	O	O
true	O	O
answer	O	O
to	O	O
this	O	O
question	O	O
.	O	O
My	O	O
answer	O	O
to	O	O
my	O	O
own	O	O
question	O	O
is	O	O
that	O	O
we	O	O
use	O	O
:	O	O
Findbugs	O	O
to	O	O
look	O	O
for	O	O
common	O	O
errors	O	O
bad/coding	O	O
-	O	O
run	O	O
from	O	O
maven	O	O
,	O	O
and	O	O
also	O	O
integrates	O	O
easily	O	O
into	O	O
Eclipse	O	O
Cobertura	O	O
for	O	O
our	O	O
coverage	O	O
reports	O	O
-	O	O
run	O	O
from	O	O
maven	O	O
Hudson	O	O
also	O	O
has	O	O
a	O	O
task-scanner	O	O
plugin	O	O
that	O	O
will	O	O
display	O	O
a	O	O
count	O	O
of	O	O
your	O	O
TODO	O	O
and	O	O
FIXMEs	O	O
,	O	O
as	O	O
well	O	O
as	O	O
show	O	O
where	O	O
they	O	O
are	O	O
in	O	O
the	O	O
source	O	O
files	O	O
.	O	O
All	O	O
are	O	O
integrated	O	O
with	O	O
Maven	O	O
1.x	O	O
in	O	O
our	O	O
case	O	O
and	O	O
tied	O	O
into	O	O
Hudson	O	O
,	O	O
which	O	O
runs	O	O
our	O	O
builds	O	O
on	O	O
check-in	O	O
as	O	O
well	O	O
as	O	O
extra	O	O
things	O	O
nightly	O	O
and	O	O
weekly	O	O
.	O	O
Hudson	O	O
trend	O	O
graphs	O	O
our	O	O
JUnit	B-API	O
tests	O	O
,	O	O
coverage	O	O
,	O	O
findbugs	O	O
,	O	O
as	O	O
well	O	O
as	O	O
open	O	O
tasks	O	O
.	O	O
There	O	O
is	O	O
also	O	O
a	O	O
Hudson	O	O
plugin	O	O
that	O	O
reports	O	O
and	O	O
graphs	O	O
our	O	O
compile	O	O
warnings	O	O
.	O	O
We	O	O
also	O	O
have	O	O
several	O	O
performance	O	O
tests	O	O
with	O	O
their	O	O
own	O	O
graphs	O	O
of	O	O
performance	O	O
and	O	O
memory	O	O
use	O	O
over	O	O
time	O	O
using	O	O
the	O	O
Hudson	O	O
plots	O	O
plugin	O	O
as	O	O
well	O	O
.	O	O
I	O	O
would	O	O
first	O	O
find	O	O
out	O	O
if	O	O
the	O	O
site	B-API	O
(	I-API	O
s	I-API	O
)	I-API	O
in	O	O
question	O	O
provide	O	O
an	O	O
API	O	O
server	O	O
or	O	O
RSS	O	O
Feeds	O	O
for	O	O
access	O	O
the	O	O
data	O	O
you	O	O
require	O	O
.	O	O
The	O	O
Ruby	O	O
world	O	O
's	O	O
equivalent	O	O
to	O	O
Beautiful	O	O
Soup	O	O
is	O	O
why_the_lucky_stiff	O	O
's	O	O
Hpricot	O	O
.	O	O
Regular	O	O
expressions	O	O
work	O	O
pretty	O	O
well	O	O
for	O	O
HTML	O	O
scraping	O	O
as	O	O
well	O	O
;	O	O
-	O	O
)	O	O
Though	O	O
after	O	O
looking	O	O
at	O	O
Beautiful	O	O
Soup	O	O
,	O	O
I	O	O
can	O	O
see	O	O
why	O	O
this	O	O
would	O	O
be	O	O
a	O	O
valuable	O	O
tool	O	O
.	O	O
You	O	O
probably	O	O
have	O	O
as	O	O
much	O	O
already	O	O
,	O	O
but	O	O
I	O	O
think	O	O
this	O	O
is	O	O
what	O	O
you	O	O
are	O	O
trying	O	O
to	O	O
do	O	O
:	O	O
from	O	O
__future__	B-API	O
import	I-API	O
with_statementimport	I-API	O
re	I-API	O
,	I-API	O
osprofile	I-API	O
=	I-API	O
``	I-API	O
http	I-API	O
:	I-API	O
//stackoverflow.com/users/30/myProfile.html	I-API	O
'	I-API	O
)	I-API	O
with	O	O
as	O	O
f	O	O
:	O	O
for	O	O
line	O	O
in	O	O
f	O	O
:	O	O
profile	O	O
=	O	O
profile	O	O
+	O	O
p	O	O
=	O	O
/div	O	O
'	O	O
)	O	O
#	O	O
Rep	O	O
is	O	O
found	O	O
hereprin	O	O
pm	O	O
=	O	O
print	O	O
mprint	O	O
+	O	O
``	O	O
``	O	O
os.system	B-API	O
(	I-API	O
'wget	I-API	O
--	I-API	O
no-cookies	I-API	O
--	I-API	O
header	I-API	O
``	I-API	O
Cookie	I-API	O
:	I-API	O
soba=	B-API	O
(	I-API	O
SeCreTCODe	I-API	O
)	I-API	O
open	B-API	B-API
(	I-API	I-API
``	I-API	I-API
myProfile.html	I-API	I-API
''	I-API	I-API
)	I-API	I-API
linef.close	B-API	B-API
(	I-API	I-API
)	I-API	I-API
re.compile	B-API	B-API
(	I-API	I-API
'summarycount	I-API	I-API
''	I-API	I-API
(	I-API	I-API
\d+	I-API	I-API
)	I-API	I-API
p.search	B-API	B-API
(	I-API	I-API
profile	I-API	I-API
)	I-API	I-API
(	O	O
1	O	O
)	O	O
os.system	B-API	B-API
(	I-API	I-API
``	I-API	I-API
espeak	B-API	I-API
\	O	I-API
''	O	I-API
Rep	O	I-API
is	O	I-API
at	O	I-API
``	O	I-API
+	O	I-API
m.group	O	B-API
(	O	I-API
1	O	I-API
)	O	I-API
points\	B-API	O
''	I-API	O
''	I-API	O
os.remove	B-API	B-API
(	I-API	I-API
``	I-API	I-API
myProfile.html	I-API	I-API
''	I-API	I-API
)	I-API	I-API
For	O	O
Perl	O	O
,	O	O
there	O	O
's	O	O
WWW	O	O
:	O	O
:Mechanize	O	O
.	O	O
I	O	O
use	O	O
Hpricot	O	O
on	O	O
Ruby	O	O
.	O	O
As	O	O
an	O	O
example	O	O
this	O	O
is	O	O
a	O	O
snippet	O	O
of	O	O
code	O	O
that	O	O
I	O	O
use	O	O
to	O	O
retrieve	O	O
all	O	O
book	O	O
titles	O	O
from	O	O
the	O	O
six	O	O
pages	O	O
of	O	O
my	O	O
HireThings	O	O
account	O	O
(	O	O
as	O	O
they	O	O
do	O	O
n't	O	O
seem	O	O
to	O	O
provide	O	O
a	O	O
single	O	O
page	O	O
with	O	O
this	O	O
information	O	O
)	O	O
:	O	O
pagerange	O	O
=	O	O
1..6	O	O
proxy	O	O
=	O	O
Net	O	O
:	O	O
:HTTP	O	O
:	O	O
:Proxy	B-API	O
(	I-API	O
proxy	I-API	O
,	I-API	O
port	I-API	O
,	I-API	O
user	I-API	O
,	I-API	O
pwd	I-API	O
)	I-API	O
proxy.start	B-API	B-API
(	I-API	I-API
'www.hirethings.co.nz	I-API	I-API
'	I-API	I-API
)	I-API	I-API
do	O	O
|http|	O	O
pagerange.each	B-API	O
do	O	O
|page|	O	O
resp	O	O
,	O	O
data	O	O
=	O	O
http.get	B-API	O
``	I-API	O
/perth_dotnet	I-API	O
?	I-API	O
page=	O	O
#	O	O
{	O	O
page	O	O
}	O	O
''	O	O
if	O	O
resp.class	O	O
==	O	O
Net	O	O
:	O	O
:HTTPOK	B-API	O
(	I-API	O
Hpricot	B-API	O
(	I-API	O
data	I-API	O
)	I-API	O
/	I-API	O
''	I-API	O
h3	I-API	O
a	I-API	O
''	I-API	O
)	I-API	O
.each	O	O
{	O	O
|a|	O	O
puts	O	O
a.innerText	B-API	O
}	O	O
end	O	O
end	O	O
end	O	O
It	O	O
's	O	O
pretty	O	O
much	O	O
complete	O	O
.	O	O
All	O	O
that	O	O
comes	O	O
before	O	O
this	O	O
are	O	O
library	O	O
imports	O	O
and	O	O
the	O	O
settings	O	O
for	O	O
my	O	O
proxy	O	O
.	O	O
BeautifulSoup	O	O
is	O	O
a	O	O
great	O	O
way	O	O
to	O	O
go	O	O
for	O	O
HTML	O	O
scraping	O	O
.	O	O
My	O	O
previous	O	O
job	O	O
had	O	O
me	O	O
doing	O	O
a	O	O
lot	O	O
of	O	O
scraping	O	O
and	O	O
I	O	O
wish	O	O
I	O	O
knew	O	O
about	O	O
BeautifulSoup	B-API	O
when	O	O
I	O	O
started	O	O
.	O	O
It	O	O
's	O	O
like	O	O
the	O	O
DOM	O	O
with	O	O
a	O	O
lot	O	O
more	O	O
useful	O	O
options	O	O
and	O	O
is	O	O
a	O	O
lot	O	O
more	O	O
pythonic	O	O
.	O	O
If	O	O
you	O	O
want	O	O
to	O	O
try	O	O
Ruby	O	O
they	O	O
ported	O	O
BeautifulSoup	B-API	O
calling	O	O
it	O	O
RubyfulSoup	B-API	O
but	O	O
it	O	O
has	O	O
n't	O	O
been	O	O
updated	O	O
in	O	O
a	O	O
while	O	O
.	O	O
Other	O	O
useful	O	O
tools	O	O
are	O	O
HTMLParser	B-API	O
or	O	O
sgmllib.SGMLParser	B-API	O
which	O	O
are	O	O
part	O	O
of	O	O
the	O	O
standard	O	O
Python	O	O
library	O	O
.	O	O
These	O	O
work	O	O
by	O	O
calling	O	O
methods	O	O
every	O	O
time	O	O
you	O	O
enter/exit	O	O
a	O	O
tag	O	O
and	O	O
encounter	O	O
html	O	O
text	O	O
.	O	O
They	O	O
're	O	O
like	O	O
Expat	O	O
if	O	O
you	O	O
're	O	O
familiar	O	O
with	O	O
that	O	O
.	O	O
These	O	O
libraries	O	O
are	O	O
especially	O	O
useful	O	O
if	O	O
you	O	O
are	O	O
going	O	O
to	O	O
parse	O	O
very	O	O
large	O	O
files	O	O
and	O	O
creating	O	O
a	O	O
DOM	O	O
tree	O	O
would	O	O
be	O	O
long	O	O
and	O	O
expensive	O	O
.	O	O
Regular	O	O
expressions	O	O
are	O	O
n't	O	O
very	O	O
necessary	O	O
.	O	O
BeautifulSoup	B-API	O
handles	O	O
regular	O	O
expressions	O	O
so	O	O
if	O	O
you	O	O
need	O	O
their	O	O
power	O	O
you	O	O
can	O	O
utilize	O	O
it	O	O
there	O	O
.	O	O
I	O	O
say	O	O
go	O	O
with	O	O
BeautifulSoup	B-API	O
unless	O	O
you	O	O
need	O	O
speed	O	O
and	O	O
a	O	O
smaller	O	O
memory	O	O
footprint	O	O
.	O	O
If	O	O
you	O	O
find	O	O
a	O	O
better	O	O
HTML	O	O
parser	O	O
on	O	O
Python	O	O
,	O	O
let	O	O
me	O	O
know	O	O
.	O	O
I	O	O
found	O	O
HTMLSQL	O	O
to	O	O
be	O	O
a	O	O
ridiculously	O	O
simple	O	O
way	O	O
to	O	O
screenscrape	O	O
.	O	O
It	O	O
takes	O	O
literally	O	O
minutes	O	O
to	O	O
get	O	O
results	O	O
with	O	O
it	O	O
.	O	O
The	O	O
queries	O	O
are	O	O
super-intuitive	O	O
-	O	O
like	O	O
:	O	O
SELECT	B-API	O
title	I-API	O
from	I-API	O
img	I-API	O
WHERE	I-API	O
$	I-API	O
class	I-API	O
==	I-API	O
There	O	O
are	O	O
now	O	O
some	O	O
other	O	O
alternatives	O	O
that	O	O
take	O	O
the	O	O
same	O	O
approach	O	O
.	O	O
In	O	O
the	O	O
.NET	O	O
world	O	O
,	O	O
I	O	O
recommend	O	O
the	O	O
HTML	B-API	O
Agility	I-API	O
Pack	I-API	O
.	O	O
Not	O	O
near	O	O
as	O	O
simple	O	O
as	O	O
some	O	O
of	O	O
the	O	O
above	O	O
options	O	O
(	O	O
like	O	O
HTMLSQL	O	O
)	O	O
,	O	O
but	O	O
it	O	O
's	O	O
very	O	O
flexible	O	O
.	O	O
It	O	O
lets	O	O
you	O	O
maniuplate	O	O
poorly	O	O
formed	O	O
HTML	O	O
as	O	O
if	O	O
it	O	O
were	O	O
well	O	O
formed	O	O
XML	O	O
,	O	O
so	O	O
you	O	O
can	O	O
use	O	O
XPATH	B-API	O
or	O	O
just	O	O
itereate	O	O
over	O	O
nodes	O	O
.	O	O
http	O	O
:	O	O
//www.codeplex.com/htmlagilitypack	O	O
Sounds	O	O
to	O	O
me	O	O
like	O	O
you	O	O
're	O	O
trying	O	O
to	O	O
combine	O	O
things	O	O
that	O	O
should	O	O
n't	O	O
be	O	O
combined	O	O
.	O	O
If	O	O
you	O	O
need	O	O
to	O	O
do	O	O
different	O	O
processing	O	O
in	O	O
your	O	O
view	O	O
depending	O	O
on	O	O
if	O	O
it	O	O
's	O	O
a	O	O
User	O	O
or	O	O
Group	O	O
object	O	O
you	O	O
're	O	O
trying	O	O
to	O	O
look	O	O
at	O	O
then	O	O
you	O	O
should	O	O
use	O	O
two	O	O
different	O	O
view	O	O
functions	O	O
.	O	O
On	O	O
the	O	O
other	O	O
hand	O	O
there	O	O
can	O	O
be	O	O
common	O	O
idioms	O	O
you	O	O
'd	O	O
want	O	O
to	O	O
extract	O	O
out	O	O
of	O	O
your	O	O
object_detail	O	O
type	O	O
views	O	O
...	O	O
perhaps	O	O
you	O	O
could	O	O
use	O	O
a	O	O
decorator	O	O
or	O	O
just	O	O
helper	O	O
functions	O	O
?	O	O
-Dan	O	O
If	O	O
you	O	O
're	O	O
simply	O	O
displaying	O	O
data	O	O
from	O	O
models	O	O
,	O	O
why	O	O
not	O	O
use	O	O
the	O	O
Django	O	O
Generic	O	O
Views	O	O
?	O	O
They	O	O
're	O	O
designed	O	O
to	O	O
let	O	O
you	O	O
easy	O	O
show	O	O
data	O	O
from	O	O
a	O	O
model	O	O
without	O	O
having	O	O
to	O	O
write	O	O
your	O	O
own	O	O
view	O	O
and	O	O
stuff	O	O
about	O	O
mapping	O	O
URL	O	O
paramaters	O	O
to	O	O
views	O	O
,	O	O
fetching	O	O
data	O	O
,	O	O
handling	O	O
edge	O	O
cases	O	O
,	O	O
rendering	O	O
output	O	O
,	O	O
etc	O	O
.	O	O
Try	O	O
this	O	O
:	O	O
var	O	O
request	O	O
=	O	O
new	B-API	O
;	I-API	O
request.onreadystatechange	B-API	O
=	I-API	O
process	I-API	O
;	I-API	O
request.open	B-API	B-API
(	I-API	I-API
'GET	I-API	I-API
'	I-API	I-API
,	I-API	I-API
url	I-API	I-API
;	I-API	O
function	O	O
{	O	O
if	O	O
(	O	O
request.readyState	B-API	O
==	I-API	O
4	I-API	O
request.status	B-API	O
==	I-API	O
200	I-API	O
)	O	O
var	O	O
xml	O	O
=	O	O
;	O	O
(	O	O
)	O	O
;	O	O
request.overrideMimeType	B-API	B-API
(	I-API	I-API
'text/xml	I-API	I-API
'	I-API	I-API
)	I-API	I-API
;	O	O
request.send	B-API	B-API
(	I-API	I-API
null	I-API	I-API
)	I-API	I-API
process	B-API	B-API
(	I-API	I-API
)	I-API	I-API
Notice	O	O
the	O	O
overrideMimeType	O	O
and	O	O
responseXML	O	O
.	O	O
The	O	O
readyState	O	O
==	O	O
4	O	O
is	O	O
'completed	O	O
'	O	O
.	O	O
Try	O	O
creating	O	O
a	O	O
div	B-API	O
(	I-API	O
'div	I-API	O
'	I-API	O
)	I-API	O
And	O	O
then	O	O
set	O	O
the	O	O
tag	O	O
soup	O	O
HTML	O	O
to	O	O
the	O	O
innerHTML	O	O
of	O	O
the	O	O
div	O	O
.	O	O
The	O	O
browser	O	O
should	O	O
process	O	O
that	O	O
into	O	O
XML	O	B-API
,	O	O
which	O	O
then	O	O
you	O	O
can	O	O
parse	O	O
.	O	O
The	O	O
innerHTML	O	O
property	O	O
takes	O	O
a	O	O
string	O	O
that	O	O
specifies	O	O
a	O	O
valid	O	O
combination	O	O
of	O	O
text	O	O
and	O	O
elements	O	O
.	O	O
When	O	O
the	O	O
innerHTML	O	O
property	O	O
is	O	O
set	O	O
,	O	O
the	O	O
given	O	O
string	O	O
completely	O	O
replaces	O	O
the	O	O
existing	O	O
content	O	O
of	O	O
the	O	O
object	O	O
.	O	O
If	O	O
the	O	O
string	O	O
contains	O	O
HTML	O	O
tags	O	O
,	O	O
the	O	O
string	O	O
is	O	O
parsed	O	O
and	O	O
formatted	O	O
as	O	O
it	O	O
is	O	O
placed	O	O
into	O	O
the	O	O
document	O	O
.	O	O
So	O	O
you	O	O
want	O	O
to	O	O
download	O	O
a	O	O
webpage	O	O
as	O	O
an	O	O
XML	O	O
object	O	O
using	O	O
javascript	O	O
,	O	O
but	O	O
you	O	O
do	O	O
n't	O	O
want	O	O
to	O	O
use	O	O
a	O	O
webpage	O	O
?	O	O
Since	O	O
you	O	O
have	O	O
no	O	O
control	O	O
over	O	O
what	O	O
the	O	O
user	O	O
will	O	O
do	O	O
(	O	O
closing	O	O
tabs	O	O
or	O	O
windows	O	O
or	O	O
whatnot	O	O
)	O	O
you	O	O
would	O	O
need	O	O
to	O	O
do	O	O
this	O	O
in	O	O
like	O	O
a	O	O
OSX	O	O
Dashboard	O	O
widget	O	O
or	O	O
some	O	O
separate	O	O
application	O	O
.	O	O
A	O	O
Firefox	O	O
extension	O	O
would	O	O
also	O	O
work	O	O
,	O	O
unless	O	O
you	O	O
have	O	O
to	O	O
worry	O	O
about	O	O
the	O	O
user	O	O
closing	O	O
the	O	O
browser	O	O
.	O	O
Ajaxian	O	O
actually	O	O
had	O	O
a	O	O
post	O	O
on	O	O
inserting	O	O
/	O	O
retrieving	O	O
html	O	O
from	O	O
an	O	O
iframe	O	O
today	O	O
.	O	O
You	O	O
can	O	O
probably	O	O
use	O	O
the	O	O
js	O	O
snippet	O	O
they	O	O
have	O	O
posted	O	O
there	O	O
.	O	O
As	O	O
for	O	O
handling	O	O
closing	O	O
of	O	O
a	O	O
browser	O	O
/	O	O
tab	O	O
,	O	O
you	O	O
can	O	O
attach	O	O
to	O	O
the	O	O
onbeforeunload	B-API	O
(	I-API	O
http	I-API	O
:	I-API	O
//msdn.microsoft.com/en-us/library/ms536907	I-API	O
(	I-API	O
VS.85	I-API	O
)	I-API	O
.aspx	I-API	O
)	I-API	O
event	O	O
and	O	O
do	O	O
whatever	O	O
you	O	O
need	O	O
to	O	O
do	O	O
.	O	O
For	O	O
C++	O	O
,	O	O
Boost.Random	B-API	B-API
is	O	O
probably	O	O
what	O	O
you	O	O
're	O	O
looking	O	O
for	O	O
.	O	O
It	O	O
has	O	O
support	O	O
for	O	O
MT	O	O
(	O	O
among	O	O
many	O	O
other	O	O
algorithms	O	O
)	O	O
,	O	O
and	O	O
can	O	O
collect	O	O
entropy	O	O
via	O	O
the	O	O
class	O	O
.	O	O
Check	O	O
it	O	O
out	O	O
!	O	O
:	O	O
-	O	O
)	O	O
The	O	O
Gnu	O	O
Scientific	O	O
Library	O	O
(	O	O
GSL	B-API	O
)	O	O
has	O	O
a	O	O
pretty	O	O
extensive	O	O
set	O	O
of	O	O
RN	O	O
generators	O	O
,	O	O
test	O	O
harness	O	O
,	O	O
etc	O	O
.	O	O
If	O	O
you	O	O
're	O	O
on	O	O
linux	O	O
,	O	O
it	O	O
's	O	O
probably	O	O
already	O	O
available	O	O
on	O	O
your	O	O
system	O	O
.	O	O
Here	O	O
is	O	O
a	O	O
simple	O	O
static	O	O
method	O	O
to	O	O
do	O	O
this	O	O
in	O	O
C	O	O
#	O	O
:	O	O
public	B-API	B-API
static	O	B-API
string	O	O
{	O	O
return	O	O
(	O	O
string	B-API	O
targetString	I-API	O
)	O	O
System.Threading.Thread.CurrentThread.CurrentCulture.TextInfo.ToTitleCase	B-API	B-API
(	I-API	I-API
targetString	I-API	I-API
)	I-API	I-API
In	O	O
what	O	O
language	O	O
?	O	O
In	O	O
PHP	O	O
it	O	O
is	O	O
:	O	O
ucwords	B-API	B-API
(	I-API	I-API
)	I-API	I-API
example	O	O
:	O	O
$	O	O
HelloWorld	O	O
=	O	O
ucwords	B-API	O
(	I-API	O
'hello	I-API	O
world	I-API	O
'	I-API	O
)	I-API	O
;	O	O
Without	O	O
using	O	O
a	O	O
ready-made	O	O
function	O	O
,	O	O
a	O	O
super-simple	O	O
low-level	O	O
algorithm	O	O
to	O	O
convert	O	O
a	O	O
string	O	O
to	O	O
title	O	O
case	O	O
:	O	O
convert	B-API	O
first	B-API	O
character	B-API	O
to	B-API	O
uppercase.for	B-API	O
each	B-API	O
character	B-API	O
in	B-API	O
,	O	O
if	B-API	O
the	B-API	O
previous	B-API	O
character	B-API	O
is	B-API	O
,	O	O
convert	B-API	O
character	B-API	O
to	B-API	O
This	O	O
asssumes	O	O
the	O	O
``	O	O
convert	O	O
character	O	O
to	O	O
uppercase	O	O
''	O	O
will	O	O
do	O	O
that	O	O
correctly	O	O
regardless	O	O
of	O	O
whether	O	O
or	O	O
not	O	O
the	O	O
character	O	O
is	O	O
case-sensitive	O	O
(	O	O
e.g.	O	O
,	O	O
'+	O	O
'	O	O
)	O	O
.	O	O
If	O	O
the	O	O
language	O	O
you	O	O
are	O	O
using	O	O
has	O	O
a	O	O
supported	O	O
method/function	O	O
then	O	O
just	O	O
use	O	O
that	O	O
(	O	O
as	O	O
in	O	O
the	O	O
C	O	O
#	O	O
method	O	O
)	O	O
If	O	O
it	O	O
does	O	O
not	O	O
,	O	O
then	O	O
you	O	O
will	O	O
want	O	O
to	O	O
do	O	O
something	O	O
like	O	O
the	O	O
following	O	O
:	O	O
Read	O	O
in	O	O
the	O	O
string	O	O
Take	O	O
the	O	O
first	O	O
word	O	O
Capitalize	O	O
the	O	O
first	O	O
letter	O	O
of	O	O
that	O	O
word	O	O
1	O	O
Go	O	O
forward	O	O
and	O	O
find	O	O
the	O	O
next	O	O
word	O	O
Go	O	O
to	O	O
3	O	O
if	O	O
not	O	O
at	O	O
the	O	O
end	O	O
of	O	O
the	O	O
string	O	O
,	O	O
otherwise	O	O
exit	O	O
1	O	O
To	O	O
capitalize	O	O
it	O	O
in	O	O
,	O	O
say	O	O
,	O	O
C	O	O
-	O	O
use	O	O
the	O	O
ascii	O	O
codes	O	O
to	O	O
find	O	O
the	O	O
integer	O	O
value	O	O
of	O	O
the	O	O
char	O	O
and	O	O
subtract	O	O
32	O	O
from	O	O
it	O	O
.	O	O
There	O	O
would	O	O
need	O	O
to	O	O
be	O	O
much	O	O
more	O	O
error	O	O
checking	O	O
in	O	O
the	O	O
code	O	O
(	O	O
ensuring	O	O
valid	O	O
letters	O	O
etc	O	O
.	O	O
)	O	O
,	O	O
and	O	O
the	O	O
``	O	O
Capitalize	B-API	O
''	O	O
function	O	O
will	O	O
need	O	O
to	O	O
impose	O	O
some	O	O
sort	O	O
of	O	O
``	O	O
title-case	O	O
scheme	O	O
''	O	O
on	O	O
the	O	O
letters	O	O
to	O	O
check	O	O
for	O	O
words	O	O
that	O	O
do	O	O
not	O	O
need	O	O
to	O	O
be	O	O
capatilised	O	O
(	O	O
'and	O	O
'	O	O
,	O	O
'but	O	O
'	O	O
etc	O	O
.	O	O
Here	O	O
is	O	O
a	O	O
good	O	O
scheme	O	O
)	O	O
Here	O	O
's	O	O
a	O	O
Perl	O	O
solution	O	O
http	O	O
:	O	O
//daringfireball.net/2008/05/title_case	O	O
Here	O	O
's	O	O
a	O	O
Ruby	O	O
solution	O	O
http	O	O
:	O	O
//frankschmitt.org/projects/title-case	O	O
Here	O	O
's	O	O
a	O	O
Ruby	O	O
one-liner	O	O
solution	O	O
:	O	O
http	O	O
:	O	O
//snippets.dzone.com/posts/show/4702	O	O
'some	O	O
string	O	O
here'.gsub	O	O
(	O	O
/\b\w/	O	O
)	O	O
{	O	O
$	O	O
.upcase	O	O
}	O	O
What	O	O
the	O	O
one-liner	O	O
is	O	O
doing	O	O
is	O	O
using	O	O
a	O	O
regular	O	O
expression	O	O
substitution	O	O
of	O	O
the	O	O
first	O	O
character	O	O
of	O	O
each	O	O
word	O	O
with	O	O
the	O	O
uppercase	O	O
version	O	O
of	O	O
it	O	O
.	O	O
I	O	O
would	O	O
be	O	O
wary	O	O
of	O	O
automatically	O	O
upcasing	O	O
all	O	O
whitespace-preceded-words	O	O
in	O	O
scenarios	O	O
where	O	O
I	O	O
would	O	O
run	O	O
the	O	O
risk	O	O
of	O	O
attracting	O	O
the	O	O
fury	O	O
of	O	O
nitpickers	O	O
.	O	O
I	O	O
would	O	O
at	O	O
least	O	O
consider	O	O
implementing	O	O
a	O	O
dictionary	O	O
for	O	O
exception	O	O
cases	O	O
like	O	O
articles	O	O
and	O	O
conjunctions	O	O
.	O	O
Behold	O	O
:	O	O
``	O	O
Beauty	O	O
and	O	O
the	O	O
Beast	O	O
''	O	O
And	O	O
when	O	O
it	O	O
comes	O	O
to	O	O
proper	O	O
nouns	O	O
,	O	O
the	O	O
thing	O	O
gets	O	O
much	O	O
uglier	O	O
.	O	O
To	O	O
capatilise	O	O
it	O	O
in	O	O
,	O	O
say	O	O
,	O	O
C	O	O
-	O	O
use	O	O
the	O	O
ascii	O	O
codes	O	O
(	O	O
http	O	O
:	O	O
//www.asciitable.com/	O	O
)	O	O
to	O	O
find	O	O
the	O	O
integer	O	O
value	O	O
of	O	O
the	O	O
char	O	O
and	O	O
subtract	O	O
32	O	O
from	O	O
it	O	O
.	O	O
This	O	O
is	O	O
a	O	O
poor	O	O
solution	O	O
if	O	O
you	O	O
ever	O	O
plan	O	O
to	O	O
accept	O	O
characters	O	O
beyond	O	O
a-z	O	O
and	O	O
A-Z	O	O
.	O	O
For	O	O
instance	O	O
:	O	O
ASCII	O	O
134	O	O
:	O	O
,	O	O
ASCII	O	O
143	O	O
:	O	O
.	O	O
Using	O	O
arithmetic	O	O
gets	O	O
you	O	O
:	O	O
ASCII	O	O
102	O	O
:	O	O
f	O	O
Use	O	O
library	O	O
calls	O	O
,	O	O
do	O	O
n't	O	O
assume	O	O
you	O	O
can	O	O
use	O	O
integer	O	O
arithmetic	O	O
on	O	O
your	O	O
characters	O	O
to	O	O
get	O	O
back	O	O
something	O	O
useful	O	O
.	O	O
Unicode	O	O
is	O	O
tricky	O	O
.	O	O
Looking	O	O
into	O	O
the	O	O
registry	O	O
is	O	O
perfectly	O	O
valid	O	O
,	O	O
so	O	O
long	O	O
as	O	O
you	O	O
can	O	O
be	O	O
sure	O	O
that	O	O
the	O	O
user	O	O
of	O	O
the	O	O
application	O	O
will	O	O
always	O	O
have	O	O
access	O	O
to	O	O
what	O	O
you	O	O
need	O	O
.	O	O
Take	O	O
a	O	O
look	O	O
at	O	O
Raymond	O	O
Chens	O	O
solution	O	O
:	O	O
How	O	O
to	O	O
detect	O	O
programmatically	O	O
whether	O	O
you	O	O
are	O	O
running	O	O
on	O	O
64-bit	O	O
Windows	O	O
and	O	O
here	O	O
's	O	O
the	O	O
PINVOKE	O	O
for	O	O
.NET	O	O
:	O	O
IsWow64Process	B-API	O
(	I-API	O
kernel32	I-API	O
)	I-API	O
Update	O	O
:	O	O
I	O	O
'd	O	O
take	O	O
issue	O	O
with	O	O
checking	O	O
for	O	O
'x86	O	O
'	O	O
.	O	O
Who	O	O
's	O	O
to	O	O
say	O	O
what	O	O
intel	O	O
's	O	O
or	O	O
AMD	O	O
's	O	O
next	O	O
32	O	O
bit	O	O
processor	O	O
may	O	O
be	O	O
designated	O	O
as	O	O
.	O	O
The	O	O
probability	O	O
is	O	O
low	O	O
but	O	O
it	O	O
is	O	O
a	O	O
risk	O	O
.	O	O
You	O	O
should	O	O
ask	O	O
the	O	O
OS	O	O
to	O	O
determine	O	O
this	O	O
via	O	O
the	O	O
correct	O	O
API	O	O
's	O	O
,	O	O
not	O	O
by	O	O
querying	O	O
what	O	O
could	O	O
be	O	O
a	O	O
OS	O	O
version/platform	O	O
specific	O	O
value	O	O
that	O	O
may	O	O
be	O	O
considered	O	O
opaque	O	O
to	O	O
the	O	O
outside	O	O
world	O	O
.	O	O
Ask	O	O
yourself	O	O
the	O	O
questions	O	O
,	O	O
1	O	O
-	O	O
is	O	O
the	O	O
registry	O	O
entry	O	O
concerned	O	O
properly	O	O
documented	O	O
by	O	O
MS	O	O
,	O	O
2	O	O
-	O	O
If	O	O
it	O	O
is	O	O
do	O	O
they	O	O
provide	O	O
a	O	O
definitive	O	O
list	O	O
of	O	O
possible	O	O
values	O	O
that	O	O
is	O	O
guaranteed	O	O
to	O	O
permit	O	O
you	O	O
as	O	O
a	O	O
developer	O	O
to	O	O
make	O	O
the	O	O
informed	O	O
decision	O	O
between	O	O
whether	O	O
you	O	O
are	O	O
running	O	O
32	O	O
bit	O	O
or	O	O
64	O	O
bit	O	O
.	O	O
If	O	O
the	O	O
answer	O	O
is	O	O
no	O	O
,	O	O
then	O	O
call	O	O
the	O	O
API	O	O
's	O	O
,	O	O
yeah	O	O
it	O	O
's	O	O
a	O	O
but	O	O
more	O	O
long	O	O
winded	O	O
but	O	O
it	O	O
is	O	O
documented	O	O
and	O	O
definitive	O	O
.	O	O
The	O	O
easiest	O	O
way	O	O
to	O	O
test	O	O
for	O	O
64-bit	O	O
under	O	O
.NET	O	B-API
is	O	O
to	O	O
check	O	O
the	O	O
value	O	O
of	O	O
IntPtr.Size	B-API	B-API
.	I-API	O
EDIT	I-API	O
:	O	O
Doh	O	O
!	O	O
This	O	O
will	O	O
tell	O	O
you	O	O
whether	O	O
or	O	O
not	O	O
the	O	O
current	O	O
process	O	O
is	O	O
64-bit	O	O
,	O	O
not	O	O
the	O	O
OS	O	O
as	O	O
a	O	O
whole	O	O
.	O	O
Sorry	O	O
!	O	O
The	O	O
easiest	O	O
way	O	O
to	O	O
test	O	O
for	O	O
64-bit	O	O
under	O	O
.NET	O	B-API
is	O	O
to	O	O
check	O	O
the	O	O
value	O	O
of	O	O
IntPtr.Size	B-API	O
.	O	O
I	O	O
believe	O	O
the	O	O
value	O	O
of	O	O
IntPtr.Size	B-API	B-API
is	O	O
4	O	O
for	O	O
a	O	O
32bit	O	O
app	O	O
that	O	O
's	O	O
running	O	O
under	O	O
WOW	O	O
,	O	O
is	O	O
n't	O	O
it	O	O
?	O	O
Edit	O	O
:	O	O
@	O	O
Edit	O	O
:	O	O
Yeah	O	O
.	O	O
:	O	O
)	O	O
You	O	O
can	O	O
use	O	O
reflection	O	O
to	O	O
get	O	O
the	O	O
property	O	O
and	O	O
invoke	O	O
it	O	O
.	O	O
Something	O	O
like	O	O
this	O	O
:	O	O
object	O	O
result	O	O
=	O	O
(	O	O
)	O	O
.GetProperty	B-API	O
(	I-API	O
``	I-API	O
Property	I-API	O
''	I-API	O
+	I-API	O
i	I-API	O
)	I-API	O
(	O	O
theObject	O	O
,	O	O
null	O	O
)	O	O
That	O	O
is	O	O
,	O	O
assuming	O	O
the	O	O
object	O	O
that	O	O
has	O	O
the	O	O
property	O	O
is	O	O
called	O	O
``	O	O
theObject	O	O
''	O	O
:	O	O
)	O	O

[0x7FFD166670E3] ANOMALY: use of REX.w is meaningless (default operand size is 64)
