Why	O
not	O
use	O
SQLite	O
?	O
There	O
is	O
good	O
support	O
in	O
Python	O
and	O
you	O
can	O
write	O
SQL	O
queries	O
to	O
get	O
the	O
data	O
out	O
.	O
Here	O
is	O
the	O
Python	O
docs	O
for	O
sqlite3	O
If	O
you	O
do	O
n't	O
want	O
to	O
use	O
SQLite	O
you	O
could	O
do	O
an	O
array	O
of	O
dicts	O
.	O
episodes	O
=	O
]	O
episodes.append	B-API
(	I-API
{	I-API
'season':1	I-API
,	I-API
'episode	I-API
'	I-API
:	I-API
2	I-API
,	I-API
'name	I-API
'	I-API
:	I-API
'Something	I-API
'	I-API
}	I-API
)	I-API
(	O
{	O
'season':1	O
,	O
'episode	O
'	O
:	O
2	O
,	O
'name	O
'	O
:	O
'Something	O
'	O
,	O
'actors	O
'	O
:	O
[	O
'Billy	O
Bob	O
'	O
,	O
'Sean	O
Penn	O
'	O
]	O
}	O
)	O
That	O
way	O
you	O
add	O
metadata	O
to	O
any	O
record	O
and	O
search	O
it	O
very	O
easily	O
season_1	B-API
=	B-API
[	B-API
e	I-API
for	B-API
e	B-API
in	B-API
episodes	B-API
if	B-API
e	B-API
[	I-API
'season	I-API
'	I-API
]	I-API
==	B-API
1	B-API
]	I-API
billy_bob	I-API
=	B-API
[	B-API
e	I-API
for	B-API
e	B-API
in	B-API
episodes	B-API
if	B-API
'actors	B-API
'	I-API
in	B-API
e	B-API
and	B-API
'Billy	B-API
Bob	B-API
'	I-API
in	B-API
e	B-API
[	I-API
'actors	I-API
'	I-API
]	I-API
]	I-API
for	I-API
episode	B-API
in	B-API
billy_bob	B-API
:	I-API
print	B-API
``	B-API
Billy	I-API
bob	B-API
was	B-API
in	B-API
Season	B-API
%	B-API
s	I-API
Episode	B-API
%	B-API
s	I-API
''	I-API
%	B-API
(	B-API
episode	I-API
[	I-API
'season	I-API
'	I-API
]	I-API
,	I-API
There	O
are	O
several	O
ways	O
to	O
do	O
this	O
.	O
Common	O
methods	O
use	O
recursion	O
,	O
memoization	O
,	O
or	O
dynamic	O
programming	O
.	O
The	O
basic	O
idea	O
is	O
that	O
you	O
produce	O
a	O
list	O
of	O
all	O
strings	O
of	O
length	O
1	O
,	O
then	O
in	O
each	O
iteration	O
,	O
for	O
all	O
strings	O
produced	O
in	O
the	O
last	O
iteration	O
,	O
add	O
that	O
string	O
concatenated	O
with	O
each	O
character	O
in	O
the	O
string	O
individually	O
.	O
(	O
the	O
variable	O
index	O
in	O
the	O
code	O
below	O
keeps	O
track	O
of	O
the	O
start	O
of	O
the	O
last	O
and	O
the	O
next	O
iteration	O
)	O
Some	O
pseudocode	O
:	O
list	O
=	O
originalString.split	B-API
(	I-API
''	I-API
)	I-API
index	O
=	O
(	O
0,0	O
)	O
list	O
=	O
[	O
``	O
''	O
]	O
for	O
iteration	O
n	O
in	O
1	O
to	O
y	O
:	O
index	O
=	O
(	O
index	O
[	O
1	O
]	O
,	O
len	O
(	O
list	O
)	O
)	O
for	O
string	O
s	O
in	O
list.subset	B-API
(	I-API
index	I-API
[	I-API
0	I-API
]	I-API
to	I-API
end	I-API
)	I-API
:	O
for	O
character	O
c	O
in	O
originalString	O
:	O
list.add	B-API
(	I-API
s	I-API
+	I-API
c	I-API
)	I-API
you	O
'd	O
then	O
need	O
to	O
remove	O
all	O
strings	O
less	O
than	O
x	O
in	O
length	O
,	O
they	O
'll	O
be	O
the	O
first	O
(	O
x-1	O
)	O
*	O
len	B-API
(	I-API
originalString	I-API
)	I-API
entries	O
in	O
the	O
list	O
.	O
I	O
just	O
whipped	O
this	O
up	O
quick	O
in	O
Ruby	O
:	O
def	O
all	O
=	O
[	O
``	O
''	O
]	O
current_array	B-API
=	O
all.clone	B-API
{	O
|iteration|	O
next_array	O
=	O
[	O
]	O
current_array.each	B-API
{	O
|string|	O
possible_characters.each	B-API
{	O
|c|	O
value	O
=	O
string	O
+	O
c	O
next_array.insert	B-API
next_array.length	B-API
,	O
value	O
all.insert	O
all.length	O
,	O
value	O
}	O
}	O
current_array	O
=	O
next_array	O
}	O
all.delete_if	O
{	O
|string|	O
string.length	B-API
x	O
(	O
x	O
,	O
y	O
,	O
possible_characters	O
)	O
1.upto	B-API
(	I-API
y	I-API
)	I-API
You	O
might	O
look	O
into	O
language	O
API	O
for	O
built	O
in	O
permutation	O
type	O
functions	O
,	O
and	O
you	O
might	O
be	O
able	O
to	O
write	O
more	O
optimized	O
code	O
,	O
but	O
if	O
the	O
numbers	O
are	O
all	O
that	O
high	O
,	O
I	O
'm	O
not	O
sure	O
there	O
is	O
much	O
of	O
a	O
way	O
around	O
having	O
a	O
lot	O
of	O
results	O
.	O
Anyways	O
,	O
the	O
idea	O
behind	O
the	O
code	O
is	O
start	O
with	O
string	O
of	O
length	O
0	O
,	O
then	O
keep	O
track	O
of	O
all	O
the	O
strings	O
of	O
length	O
Z	O
where	O
Z	O
is	O
the	O
current	O
size	O
in	O
the	O
iteration	O
.	O
Then	O
,	O
go	O
through	O
each	O
string	O
and	O
append	O
each	O
character	O
onto	O
each	O
string	O
.	O
Finally	O
at	O
the	O
end	O
,	O
remove	O
any	O
that	O
were	O
below	O
the	O
x	O
threshold	O
and	O
return	O
the	O
result	O
.	O
I	O
did	O
n't	O
test	O
it	O
with	O
potentially	O
meaningless	O
input	O
(	O
null	O
character	O
list	O
,	O
weird	O
values	O
of	O
x	O
and	O
y	O
,	O
etc	O
)	O
.	O
I	O
'm	O
not	O
sure	O
why	O
you	O
would	O
want	O
to	O
do	O
this	O
in	O
the	O
first	O
place	O
.	O
The	O
resulting	O
set	O
for	O
any	O
moderately	O
large	O
values	O
of	O
x	O
and	O
y	O
will	O
be	O
huge	O
,	O
and	O
will	O
grow	O
exponentially	O
as	O
x	O
and/or	O
y	O
get	O
bigger	O
.	O
Lets	O
say	O
your	O
set	O
of	O
possible	O
characters	O
is	O
the	O
26	O
lowercase	O
letters	O
of	O
the	O
alphabet	O
,	O
and	O
you	O
ask	O
your	O
application	O
to	O
generate	O
all	O
permutations	O
where	O
length	O
=	O
5	O
.	O
Assuming	O
you	O
do	O
n't	O
run	O
out	O
of	O
memory	O
you	O
'll	O
get	O
11,881,376	O
(	O
i.e	O
.	O
26	O
to	O
the	O
power	O
of	O
5	O
)	O
strings	O
back	O
.	O
Bump	O
that	O
length	O
up	O
to	O
6	O
,	O
and	O
you	O
'll	O
get	O
308,915,776	O
strings	O
back	O
.	O
These	O
numbers	O
get	O
painfully	O
large	O
,	O
very	O
quickly	O
.	O
Here	O
's	O
a	O
solution	O
I	O
put	O
together	O
in	O
Java	O
.	O
You	O
'll	O
need	O
to	O
provide	O
two	O
runtime	O
arguments	O
(	O
corresponding	O
to	O
x	O
and	O
y	O
)	O
.	O
Have	O
fun	O
.	O
public	O
class	O
GeneratePermutations	B-API
{	O
public	O
static	O
void	O
{	O
int	O
lower	O
=	O
;	O
int	O
upper	O
=	O
;	O
if	O
(	O
upper	O
lower	O
||	O
upper	O
==	O
0	O
||	O
lower	O
==	O
0	O
)	O
{	O
;	O
}	O
for	O
(	O
int	O
length	O
=	O
lower	O
;	O
length	O
=	O
upper	O
;	O
length++	O
)	O
{	O
;	O
}	O
}	O
private	O
static	O
void	O
{	O
if	O
(	O
length	O
=	O
0	O
)	O
{	O
;	O
}	O
else	O
{	O
for	O
(	O
char	O
c	O
=	O
'a	O
'	O
;	O
c	O
=	O
'z	O
'	O
;	O
c++	O
)	O
{	O
;	O
}	O
}	O
(	O
String	O
[	O
]	O
args	O
)	O
Integer.parseInt	B-API
(	I-API
args	I-API
[	I-API
0	I-API
]	I-API
)	I-API
Integer.parseInt	B-API
(	I-API
args	I-API
[	I-API
1	I-API
]	I-API
)	I-API
System.exit	B-API
(	I-API
0	I-API
)	I-API
(	O
length	O
,	O
``	O
''	O
)	O
(	O
int	O
length	O
,	O
String	O
partial	O
)	O
System.out.println	B-API
(	I-API
partial	I-API
)	I-API
(	O
length	O
-	O
1	O
,	O
partial	O
+	O
c	O
)	O
You	O
are	O
going	O
to	O
get	O
a	O
lot	O
of	O
strings	O
,	O
that	O
's	O
for	O
sure	O
...	O
Where	O
,	O
x	O
and	O
y	O
is	O
how	O
you	O
define	O
them	O
and	O
r	O
is	O
the	O
number	O
of	O
characters	O
we	O
are	O
selecting	O
from	O
--	O
if	O
I	O
am	O
understanding	O
you	O
correctly	O
.	O
You	O
should	O
definitely	O
generate	O
these	O
as	O
needed	O
and	O
not	O
get	O
sloppy	O
and	O
say	O
,	O
generate	O
a	O
powerset	O
and	O
then	O
filter	O
the	O
length	O
of	O
strings	O
.	O
The	O
following	O
definitely	O
is	O
n't	O
the	O
best	O
way	O
to	O
generate	O
these	O
,	O
but	O
it	O
's	O
an	O
interesting	O
aside	O
,	O
none-the-less	O
.	O
Knuth	O
(	O
volume	O
4	O
,	O
fascicle	O
2	O
,	O
7.2.1.3	O
)	O
tells	O
us	O
that	O
(	O
s	O
,	O
t	O
)	O
-combination	O
is	O
equivalent	O
to	O
s+1	O
things	O
taken	O
t	O
at	O
a	O
time	O
with	O
repetition	O
--	O
an	O
(	O
s	O
,	O
t	O
)	O
-combination	O
is	O
notation	O
used	O
by	O
Knuth	O
that	O
is	O
equal	O
to	O
.	O
We	O
can	O
figure	O
this	O
out	O
by	O
first	O
generating	O
each	O
(	O
s	O
,	O
t	O
)	O
-combination	O
in	O
binary	O
form	O
(	O
so	O
,	O
of	O
length	O
(	O
s+t	O
)	O
)	O
and	O
counting	O
the	O
number	O
of	O
0	O
's	O
to	O
the	O
left	O
of	O
each	O
1	O
.	O
10001000011101	O
--	O
becomes	O
the	O
permutation	O
:	O
{	O
0	O
,	O
3	O
,	O
4	O
,	O
4	O
,	O
4	O
,	O
1	O
}	O
First	O
you	O
will	O
need	O
some	O
GUI	O
library	O
with	O
Python	O
bindings	O
and	O
then	O
(	O
if	O
you	O
want	O
)	O
some	O
program	O
that	O
will	O
convert	O
your	O
python	O
scripts	O
into	O
standalone	O
executables	O
.	O
Cross-platform	O
GUI	O
libraries	O
with	O
Python	O
bindings	O
(	O
Windows	O
,	O
Linux	O
,	O
Mac	O
)	O
Of	O
course	O
,	O
there	O
are	O
many	O
,	O
but	O
the	O
most	O
popular	O
that	O
I	O
've	O
seen	O
in	O
wild	O
are	O
:	O
Tkinter	O
-	O
based	O
on	O
Tk	O
GUI	O
toolkit	O
(	O
de-facto	O
standard	O
GUI	O
library	O
for	O
python	O
,	O
free	O
for	O
commercial	O
projects	O
)	O
WxPython	B-API
-	O
based	O
on	O
WxWidgets	O
(	O
very	O
popular	O
,	O
free	O
for	O
commercial	O
projects	O
)	O
PyQt	O
-	O
based	O
on	O
Qt	O
(	O
also	O
very	O
popular	O
and	O
more	O
stable	O
than	O
WxWidgets	O
but	O
costly	O
license	O
for	O
commercial	O
projects	O
)	O
Complete	O
list	O
is	O
at	O
http	O
:	O
//wiki.python.org/moin/GuiProgramming	O
Single	O
executable	O
(	O
Windows	O
)	O
py2exe	O
-	O
Probably	O
the	O
most	O
popular	O
out	O
there	O
(	O
PyInstaller	B-API
is	O
also	O
gaining	O
in	O
popularity	O
)	O
Single	O
executable	O
(	O
Linux	O
)	O
Freeze	O
-	O
works	O
the	O
same	O
way	O
like	O
py2exe	O
but	O
targets	O
Linux	O
platform	O
Single	O
executable	O
(	O
Mac	O
)	O
py2app	O
-	O
again	O
,	O
works	O
like	O
py2exe	O
but	O
targets	O
Mac	O
OS	O
You	O
do	O
n't	O
need	O
to	O
compile	O
python	O
for	O
Mac/Windows/Linux	O
.	O
It	O
is	O
an	O
interpreted	O
language	O
,	O
so	O
you	O
simply	O
need	O
to	O
have	O
the	O
Python	O
interpreter	O
installed	O
on	O
the	O
system	O
of	O
your	O
choice	O
(	O
it	O
is	O
available	O
for	O
all	O
three	O
platforms	O
)	O
.	O
As	O
for	O
a	O
GUI	O
library	O
that	O
works	O
cross	O
platform	O
,	O
Python	O
's	O
Tk/Tcl	O
widget	O
library	O
works	O
very	O
well	O
,	O
and	O
I	O
believe	O
is	O
sufficiently	O
cross	O
platform	O
.	O
Tkinter	O
is	O
the	O
python	O
interface	O
to	O
Tk/Tcl	O
From	O
the	O
python	O
project	O
webpage	O
:	O
Tkinter	O
is	O
not	O
the	O
only	O
GuiProgramming	O
toolkit	O
for	O
Python	O
.	O
It	O
is	O
however	O
the	O
most	O
commonly	O
used	O
one	O
,	O
and	O
almost	O
the	O
only	O
one	O
that	O
is	O
portable	O
between	O
Unix	O
,	O
Mac	O
and	O
Windows	O
Since	O
python	O
is	O
installed	O
on	O
nearly	O
every	O
non-Windows	O
OS	O
by	O
default	O
now	O
,	O
the	O
only	O
thing	O
you	O
really	O
need	O
to	O
make	O
sure	O
of	O
is	O
that	O
all	O
of	O
the	O
non-standard	O
libraries	O
you	O
use	O
are	O
installed	O
.	O
Having	O
said	O
that	O
,	O
it	O
is	O
possible	O
to	O
build	O
executables	O
that	O
include	O
the	O
python	O
interpreter	O
,	O
and	O
any	O
libraries	O
you	O
use	O
.	O
This	O
is	O
likely	O
to	O
create	O
a	O
large	O
executable	O
,	O
however	O
.	O
MacOS	O
X	O
even	O
includes	O
support	O
in	O
the	O
Xcode	O
IDE	O
for	O
creating	O
full	O
standalone	O
GUI	O
apps	O
.	O
These	O
can	O
be	O
run	O
by	O
any	O
user	O
running	O
OS	O
X	O
.	O
I	O
'm	O
not	O
a	O
PHP	O
dev	O
but	O
Google	O
says	O
that	O
PHP	O
5+	O
can	O
instantiate	O
COM	O
components	O
.	O
If	O
you	O
can	O
install	O
Outlook	O
on	O
a	O
box	O
you	O
could	O
write	O
a	O
PHP	O
web	O
service	O
around	O
the	O
COM	O
component	O
to	O
handle	O
the	O
requests	O
you	O
need	O
.	O
$	O
outlook	O
=	O
COM	B-API
(	I-API
``	I-API
Outlook.Application	I-API
''	I-API
)	I-API
Outlook	O
API	O
referance	O
I	O
have	O
not	O
used	O
PHP	O
to	O
do	O
this	O
but	O
have	O
experience	O
in	O
using	O
C	O
#	O
to	O
achieve	O
the	O
same	O
thing	O
.	O
The	O
Outlook	O
API	O
is	O
a	O
way	O
of	O
automating	O
Outlook	O
rather	O
than	O
connecting	O
to	O
Exchange	O
directly	O
.	O
I	O
have	O
previously	O
taken	O
this	O
approach	O
in	O
a	O
C	O
#	O
application	O
and	O
it	O
does	O
work	O
although	O
can	O
be	O
buggy	O
.	O
If	O
you	O
wish	O
to	O
connect	O
directly	O
to	O
the	O
Exchange	O
server	O
you	O
will	O
need	O
to	O
research	O
extended	O
MAPI	O
.	O
In	O
the	O
past	O
I	O
used	O
this	O
wrapper	O
MAPIEx	O
:	O
Extended	O
MAPI	O
Wrapper	O
.	O
It	O
is	O
a	O
C	O
#	O
project	O
but	O
I	O
believe	O
you	O
can	O
use	O
some	O
.NET	O
code	O
on	O
a	O
PHP5	O
Windows	O
server	O
.	O
Alternatively	O
it	O
has	O
a	O
C++	O
core	O
DLL	O
that	O
you	O
may	O
be	O
a	O
able	O
to	O
use	O
.	O
I	O
have	O
found	O
it	O
to	O
be	O
very	O
good	O
and	O
there	O
are	O
some	O
good	O
example	O
applications	O
.	O
Update	O
:	O
Sorry	O
for	O
the	O
delay	O
no	O
current	O
way	O
to	O
keep	O
track	O
of	O
posts	O
yet	O
.	O
I	O
do	O
agree	O
adding	O
more	O
layer	O
on	O
to	O
your	O
application	O
and	O
relying	O
on	O
3rd	O
party	O
code	O
can	O
be	O
scary	O
(	O
and	O
rightfully	O
so	O
.	O
)	O
Today	O
I	O
read	O
another	O
interesting	O
post	O
tagged	O
up	O
as	O
MAPI	O
that	O
is	O
on	O
a	O
different	O
subject	O
.	O
The	O
key	O
thing	O
here	O
though	O
is	O
that	O
it	O
has	O
linked	O
to	O
this	O
important	O
MS	O
article	O
.	O
I	O
have	O
been	O
unaware	O
of	O
the	O
issues	O
until	O
now	O
on	O
using	O
managed	O
code	O
to	O
interface	O
to	O
MAPI	O
although	O
the	O
C++	O
code	O
in	O
the	O
component	O
should	O
be	O
unaffected	O
by	O
this	O
error	O
as	O
it	O
is	O
unmanaged	O
.	O
This	O
blog	O
entry	O
also	O
suggests	O
other	O
ways	O
to	O
connect	O
to	O
MAPI/Exchange	O
server	O
.	O
In	O
this	O
case	O
due	O
to	O
these	O
new	O
facts	O
http	O
:	O
//us3.php.net/imap	O
may	O
be	O
the	O
answer	O
as	O
suggested	O
by	O
the	O
other	O
user	O
.	O
I	O
would	O
look	O
into	O
IMAP	O
IMAP	O
,	O
POP3	O
and	O
NNTP	O
Is	O
your	O
customer	O
using	O
Exchange	O
2007	O
?	O
If	O
so	O
,	O
I	O
'd	O
have	O
a	O
look	O
at	O
Exchange	O
Web	O
Services	O
.	O
If	O
not	O
,	O
as	O
hairy	O
as	O
it	O
can	O
be	O
,	O
I	O
think	O
WebDAV	O
is	O
your	O
best	O
bet	O
.	O
Personally	O
I	O
do	O
n't	O
like	O
using	O
the	O
Outlook.Application	B-API
COM	O
object	O
route	O
,	O
as	O
its	O
security	O
prompts	O
(	O
``	O
An	O
application	O
is	O
attempting	O
to	O
access	O
your	O
contacts	O
.	O
Allow	O
this	O
?	O
``	O
,	O
etc	O
.	O
)	O
can	O
cause	O
problems	O
on	O
a	O
server	O
.	O
I	O
also	O
think	O
it	O
would	O
be	O
difficult	O
to	O
accomplish	O
your	O
impersonation-like	O
tasks	O
using	O
Outlook	O
,	O
such	O
as	O
sending	O
mail	O
as	O
a	O
given	O
user	O
.	O
var	O
element	O
=	O
;	O
element.style.background	B-API
=	O
document.getElementById	B-API
(	I-API
'element	I-API
'	I-API
)	I-API
In	O
general	O
,	O
CSS	O
properties	O
are	O
converted	O
to	O
JavaScript	O
by	O
making	O
them	O
camelCase	O
without	O
any	O
dashes	O
.	O
So	O
becomes	O
.	O
function	O
setColor	B-API
(	I-API
element	I-API
,	I-API
color	I-API
)	I-API
{	O
element.style.backgroundColor	B-API
=	O
color	O
;	O
}	O
Or	O
,	O
using	O
a	O
little	O
jQuery	O
:	O
(	O
'	O
#	O
fieldID	O
'	O
)	O
.css	O
(	O
'background-color	O
'	O
,	O
'	O
#	O
FF6600	O
'	O
)	O
This	O
warning	O
is	O
there	O
because	O
Java	O
is	O
not	O
actually	O
storing	O
type	O
information	O
at	O
run-time	O
in	O
an	O
that	O
uses	O
generics	O
.	O
Thus	O
,	O
if	O
object	O
is	O
actually	O
a	O
,	O
there	O
will	O
be	O
no	O
at	O
run-time	O
except	O
until	O
an	O
item	O
is	O
accessed	O
from	O
the	O
list	O
that	O
does	O
n't	O
match	O
the	O
generic	O
type	O
defined	O
in	O
the	O
variable	O
.	O
This	O
can	O
cause	O
further	O
complications	O
if	O
items	O
are	O
added	O
to	O
the	O
list	O
,	O
with	O
this	O
incorrect	O
generic	O
type	O
information	O
.	O
Any	O
code	O
still	O
holding	O
a	O
reference	O
to	O
the	O
list	O
but	O
with	O
the	O
correct	O
generic	O
type	O
information	O
will	O
now	O
have	O
an	O
inconsistent	O
list	O
.	O
To	O
remove	O
the	O
warning	O
,	O
try	O
:	O
List	O
?	O
list	O
=	O
(	O
List	O
?	O
)	O
object	O
;	O
However	O
,	O
note	O
that	O
you	O
will	O
not	O
be	O
able	O
to	O
use	O
certain	O
methods	O
such	O
as	O
add	O
because	O
the	O
compiler	O
does	O
n't	O
know	O
if	O
you	O
are	O
trying	O
to	O
add	O
an	O
object	O
of	O
incorrect	O
type	O
.	O
The	O
above	O
will	O
work	O
in	O
a	O
lot	O
of	O
situations	O
,	O
but	O
if	O
you	O
have	O
to	O
use	O
add	O
,	O
or	O
some	O
similarly	O
restricted	O
method	O
,	O
you	O
will	O
just	O
have	O
to	O
suffer	O
the	O
yellow	O
underline	O
in	O
Eclipse	O
(	O
or	O
a	O
annotation	O
)	O
.	O
Try	O
removing	O
the	O
first	O
and	O
then	O
call	O
.	O
I	O
think	O
that	O
may	O
work	O
.	O
Essentially	O
:	O
0x44004500	O
Remove	O
the	O
0x	O
,	O
and	O
then	O
always	O
two	O
bytes	O
are	O
one	O
character	O
:	O
44	O
00	O
=	O
D	O
45	O
00	O
=	O
E	O
6F	O
00	O
=	O
o	O
72	O
00	O
=	O
r	O
So	O
it	O
's	O
definitely	O
a	O
Unicode/UTF	O
format	O
with	O
two	O
bytes/character	O
.	O
Hazzah	O
!	O
!	O
!	O
!	O
I	O
went	O
back	O
to	O
Michael	O
's	O
post	O
,	O
did	O
some	O
more	O
poking	O
and	O
realized	O
that	O
I	O
did	O
need	O
to	O
do	O
a	O
double	O
conversion	O
,	O
and	O
eventually	O
worked	O
out	O
this	O
little	O
nugget	O
:	O
Convert.ToString	B-API
(	I-API
Convert.ToChar	B-API
(	I-API
Int32.Parse	B-API
(	I-API
EncodedString.Substring	B-API
(	I-API
intParseIndex	B-API
,	I-API
2	I-API
)	I-API
,	I-API
System.Globalization.NumberStyles.HexNumber	B-API
)	I-API
)	I-API
)	I-API
;	O
From	O
there	O
I	O
simply	O
made	O
a	O
loop	O
to	O
go	O
through	O
all	O
the	O
characters	O
2	O
by	O
2	O
and	O
get	O
them	O
``	O
hexified	O
''	O
and	O
then	O
translated	O
to	O
a	O
string	O
.	O
To	O
Nick	O
,	O
and	O
anybody	O
else	O
interested	O
,	O
I	O
went	O
ahead	O
and	O
posted	O
my	O
little	O
application	O
over	O
in	O
CodePlex	O
.	O
Feel	O
free	O
to	O
use/modify	O
as	O
you	O
need	O
.	O
The	O
solution	O
is	O
to	O
use	O
the	O
TempData	O
property	O
to	O
store	O
the	O
desired	O
Request	O
components	O
.	O
For	O
instance	O
:	O
public	O
ActionResult	O
Send	O
(	O
)	O
{	O
TempData	O
[	O
``	O
form	O
''	O
]	O
=	O
Request.Form	B-API
;	O
return	O
this.RedirectToAction	B-API
(	I-API
a	I-API
=	I-API
a.Form	B-API
(	I-API
)	I-API
)	I-API
;	O
}	O
Then	O
in	O
your	O
``	O
Form	O
''	O
action	O
you	O
can	O
go	O
:	O
public	O
ActionResult	O
Form	O
(	O
)	O
{	O
/*	O
Declare	O
viewData	O
etc	O
.	O
*/	O
if	O
(	O
TempData	O
[	O
``	O
form	O
''	O
]	O
!	O
=	O
null	O
)	O
{	O
/*	O
Cast	O
TempData	O
[	O
``	O
form	O
''	O
]	O
to	O
System.Collections.Specialized.NameValueCollection	B-API
and	O
use	O
it	O
*/	O
}	O
return	O
View	B-API
(	I-API
``	I-API
Form	I-API
''	I-API
,	I-API
viewData	I-API
)	I-API
;	O
}	O
Keep	O
in	O
mind	O
that	O
TempData	O
stores	O
the	O
form	O
collection	O
in	O
session	O
.	O
If	O
you	O
do	O
n't	O
like	O
that	O
behavior	O
,	O
you	O
can	O
implement	O
the	O
new	O
ITempDataProvider	O
interface	O
and	O
use	O
some	O
other	O
mechanism	O
for	O
storing	O
temp	O
data	O
.	O
I	O
would	O
n't	O
do	O
that	O
unless	O
you	O
know	O
for	O
a	O
fact	O
(	O
via	O
measurement	O
and	O
profiling	O
)	O
that	O
the	O
use	O
of	O
Session	O
state	O
is	O
hurting	O
you	O
.	O
Not	O
Java	O
per-se	O
,	O
but	O
you	O
may	O
run	O
into	O
issues	O
where	O
you	O
have	O
written	O
something	O
to	O
a	O
file	O
,	O
but	O
it	O
has	O
n't	O
been	O
actually	O
written	O
yet	O
-	O
it	O
might	O
be	O
in	O
a	O
cache	O
somewhere	O
,	O
and	O
reading	O
from	O
the	O
same	O
file	O
may	O
not	O
actually	O
give	O
you	O
the	O
new	O
information	O
.	O
Short	O
version	O
-	O
use	O
flush	B-API
(	I-API
)	I-API
or	O
whatever	O
the	O
relevant	O
system	O
call	O
is	O
to	O
ensure	O
that	O
your	O
data	O
is	O
actually	O
written	O
to	O
the	O
file	O
.	O
Note	O
I	O
am	O
not	O
talking	O
about	O
the	O
OS	O
level	O
disk	O
cache	O
-	O
if	O
your	O
data	O
gets	O
into	O
here	O
,	O
it	O
should	O
appear	O
in	O
a	O
read	B-API
(	I-API
)	I-API
after	O
this	O
point	O
.	O
It	O
may	O
be	O
that	O
the	O
language	O
itself	O
caches	O
writes	O
,	O
waiting	O
until	O
a	O
buffer	O
fills	O
up	O
or	O
file	O
is	O
flushed/closed	O
.	O
I	O
've	O
never	O
tried	O
it	O
,	O
but	O
you	O
should	O
write	O
a	O
test	O
case	O
to	O
see	O
if	O
reading	O
from	O
a	O
stream	O
after	O
you	O
have	O
hit	O
the	O
end	O
will	O
work	O
,	O
regardless	O
of	O
if	O
there	O
is	O
more	O
data	O
written	O
to	O
the	O
file	O
.	O
Is	O
there	O
a	O
reason	O
you	O
ca	O
n't	O
use	O
a	O
piped	O
input/output	O
stream	O
?	O
Is	O
the	O
data	O
being	O
written	O
and	O
read	O
from	O
the	O
same	O
application	O
(	O
if	O
so	O
,	O
you	O
have	O
the	O
data	O
,	O
why	O
do	O
you	O
need	O
to	O
read	O
from	O
the	O
file	O
)	O
?	O
Otherwise	O
,	O
maybe	O
read	O
till	O
end	O
of	O
file	O
,	O
then	O
monitor	O
for	O
changes	O
and	O
seek	O
to	O
where	O
you	O
left	O
off	O
and	O
continue	O
...	O
though	O
watch	O
out	O
for	O
race	O
conditions	O
.	O
The	O
answer	O
seems	O
to	O
be	O
``	O
no	O
''	O
...	O
and	O
``	O
yes	O
''	O
.	O
There	O
seems	O
to	O
be	O
no	O
real	O
way	O
to	O
know	O
if	O
a	O
file	O
is	O
open	O
for	O
writing	O
by	O
another	O
application	O
.	O
So	O
,	O
reading	O
from	O
such	O
a	O
file	O
will	O
just	O
progress	O
until	O
content	O
is	O
exhausted	O
.	O
I	O
took	O
Mike	O
's	O
advice	O
and	O
wrote	O
some	O
test	O
code	O
:	O
Writer.java	O
writes	O
a	O
string	O
to	O
file	O
and	O
then	O
waits	O
for	O
the	O
user	O
to	O
hit	O
enter	O
before	O
writing	O
another	O
line	O
to	O
file	O
.	O
The	O
idea	O
being	O
that	O
it	O
could	O
be	O
started	O
up	O
,	O
then	O
a	O
reader	O
can	O
be	O
started	O
to	O
see	O
how	O
it	O
copes	O
with	O
the	O
``	O
partial	O
''	O
file	O
.	O
The	O
reader	O
I	O
wrote	O
is	O
in	O
Reader.java	O
.	O
Writer.java	O
public	B-API
class	B-API
Writer	B-API
extends	B-API
Object	B-API
{	I-API
Writer	B-API
(	B-API
)	I-API
{	B-API
}	B-API
public	B-API
static	B-API
String	B-API
[	I-API
]	I-API
strings	B-API
=	B-API
{	B-API
``	B-API
Hello	I-API
World	B-API
''	I-API
,	I-API
``	B-API
Goodbye	I-API
World	B-API
''	I-API
}	B-API
;	I-API
public	B-API
static	B-API
void	B-API
throws	B-API
java.io.IOException	B-API
{	B-API
java.io.PrintWriter	B-API
pw	B-API
=	B-API
new	B-API
,	B-API
true	B-API
)	I-API
;	I-API
{	B-API
;	B-API
;	B-API
}	B-API
;	B-API
(	O
String	O
[	O
]	O
args	O
)	O
(	O
new	O
java.io.FileOutputStream	O
(	O
``	O
out.txt	O
''	O
)	O
(	O
String	O
s	O
:	O
strings	O
)	O
pw.println	B-API
(	I-API
s	I-API
)	I-API
System.in.read	B-API
(	I-API
)	I-API
pw.close	B-API
(	I-API
)	I-API
Reader.java	O
public	B-API
class	B-API
Reader	B-API
extends	B-API
Object	B-API
{	I-API
Reader	B-API
(	B-API
)	I-API
{	B-API
}	B-API
public	B-API
static	B-API
void	B-API
throws	B-API
Exception	B-API
{	B-API
java.io.FileInputStream	B-API
in	B-API
=	B-API
new	B-API
;	B-API
java.nio.channels.FileChannel	B-API
fc	B-API
=	B-API
;	B-API
java.nio.ByteBuffer	B-API
bb	B-API
=	B-API
;	B-API
=	B-API
0	B-API
)	I-API
{	B-API
;	B-API
)	B-API
{	B-API
)	B-API
;	I-API
}	B-API
;	B-API
}	B-API
;	B-API
(	O
String	O
[	O
]	O
args	O
)	O
java.io.FileInputStream	B-API
(	I-API
``	I-API
out.txt	I-API
''	I-API
)	I-API
in.getChannel	B-API
(	I-API
)	I-API
java.nio.ByteBuffer.allocate	B-API
(	I-API
10	I-API
)	I-API
while	B-API
(	I-API
fc.read	I-API
(	I-API
bb	I-API
)	I-API
bb.flip	B-API
(	I-API
)	I-API
while	B-API
(	I-API
bb.hasRemaining	I-API
(	I-API
)	I-API
System.out.println	B-API
(	I-API
(	I-API
char	I-API
)	I-API
bb.get	I-API
(	I-API
)	I-API
bb.clear	B-API
(	I-API
)	I-API
System.exit	B-API
(	I-API
0	I-API
)	I-API
No	O
guarantees	O
that	O
this	O
code	O
is	O
best	O
practice	O
.	O
This	O
leaves	O
the	O
option	O
suggested	O
by	O
Mike	O
of	O
periodically	O
checking	O
if	O
there	O
is	O
new	O
data	O
to	O
be	O
read	O
from	O
the	O
file	O
.	O
This	O
then	O
requires	O
user	O
intervention	O
to	O
close	O
the	O
file	O
reader	O
when	O
it	O
is	O
determined	O
that	O
the	O
reading	O
is	O
completed	O
.	O
Or	O
,	O
the	O
reader	O
needs	O
to	O
be	O
made	O
aware	O
the	O
content	O
of	O
the	O
file	O
and	O
be	O
able	O
to	O
determine	O
and	O
end	O
of	O
write	O
condition	O
.	O
If	O
the	O
content	O
were	O
XML	O
,	O
the	O
end	O
of	O
document	O
could	O
be	O
used	O
to	O
signal	O
this	O
.	O
As	O
the	O
compiler	O
is	O
telling	O
you	O
,	O
you	O
need	O
to	O
change	O
your	O
return	O
type	O
to	O
IEnumerable	O
.	O
That	O
is	O
how	O
the	O
yield	O
return	O
syntax	O
works	O
.	O
//	O
Generic	O
function	O
that	O
gets	O
all	O
child	O
controls	O
of	O
a	O
certain	O
type	O
,	O
//	O
returned	O
in	O
a	O
List	O
collection	O
private	O
static	O
ListT	O
GetChildTextBoxesT	O
(	O
Control	O
ctrl	O
)	O
where	O
T	O
:	O
Control	O
{	O
ListT	O
tbs	O
=	O
new	O
ListT	O
(	O
)	O
;	O
foreach	O
(	O
Control	O
c	O
in	O
ctrl.Controls	O
)	O
{	O
//	O
If	O
c	O
is	O
of	O
type	O
T	O
,	O
add	O
it	O
to	O
the	O
collection	O
if	O
(	O
c	O
is	O
T	O
)	O
{	O
tbs.Add	O
(	O
(	O
T	O
)	O
c	O
)	O
;	O
}	O
}	O
return	O
tbs	O
;	O
}	O
private	O
static	O
void	O
SetChildTextBoxesHeight	O
(	O
Control	O
ctrl	O
,	O
int	O
height	O
)	O
{	O
foreach	O
(	O
TextBox	O
t	O
in	O
GetChildTextBoxesTextBox	O
(	O
ctrl	O
)	O
)	O
{	O
t.Height	O
=	O
height	O
;	O
}	O
}	O
If	O
you	O
return	O
IEnumerator	O
,	O
it	O
will	O
be	O
a	O
different	O
enumerator	O
object	O
each	O
time	O
call	O
that	O
method	O
(	O
acting	O
as	O
though	O
you	O
reset	O
the	O
enumerator	O
on	O
each	O
iteration	O
)	O
.	O
If	O
you	O
return	O
IEnumerable	O
then	O
a	O
foreach	O
can	O
enumerate	O
based	O
on	O
the	O
method	O
with	O
the	O
yield	O
statement	O
.	O
Just	O
to	O
clarify	O
private	B-API
static	B-API
IEnumeratorTextBox	B-API
(	O
Control	O
rootControl	O
)	O
Changes	O
to	O
private	B-API
static	B-API
IEnumerableTextBox	B-API
(	O
Control	O
rootControl	O
)	O
That	O
should	O
be	O
all	O
:	O
-	O
)	O
Does	O
calling	O
the	O
method	O
twice	O
work	O
?	O
Seems	O
to	O
me	O
that	O
your	O
authentication	O
is	O
being	O
approved	O
after	O
the	O
content	O
arrives	O
,	O
so	O
then	O
a	O
second	O
attempt	O
now	O
works	O
because	O
you	O
have	O
the	O
correct	O
cookies	O
.	O
Unfortunately	O
,	O
compilers	O
ca	O
n't	O
work	O
on	O
theoretical	O
principles	O
,	O
and	O
even	O
though	O
you	O
may	O
know	O
that	O
it	O
is	O
safe	O
in	O
your	O
case	O
,	O
if	O
they	O
allowed	O
it	O
,	O
it	O
would	O
have	O
to	O
be	O
safe	O
for	O
all	O
cases	O
.	O
In	O
other	O
words	O
,	O
the	O
compiler	O
is	O
n't	O
stopping	O
just	O
you	O
,	O
it	O
's	O
stopping	O
everyone	O
,	O
including	O
all	O
those	O
that	O
do	O
n't	O
know	O
that	O
it	O
is	O
unsafe	O
and	O
needs	O
special	O
handling	O
.	O
There	O
are	O
probably	O
other	O
reasons	O
for	O
this	O
as	O
well	O
,	O
as	O
all	O
languages	O
usually	O
have	O
ways	O
to	O
do	O
unsafe	O
things	O
if	O
one	O
knows	O
how	O
to	O
deal	O
with	O
them	O
.	O
In	O
C	O
#	O
.NET	O
there	O
are	O
similar	O
provisions	O
,	O
and	O
the	O
only	O
way	O
to	O
declare	O
a	O
constructor	O
that	O
calls	O
a	O
base	O
constructor	O
is	O
this	O
:	O
public	B-API
:	B-API
ClassName	B-API
(	I-API
...	I-API
)	I-API
base	B-API
(	I-API
...	I-API
)	I-API
in	O
doing	O
so	O
,	O
the	O
base	O
constructor	O
will	O
be	O
called	O
before	O
the	O
body	O
of	O
the	O
constructor	O
,	O
and	O
you	O
can	O
not	O
change	O
this	O
order	O
.	O
I	O
do	O
n't	O
know	O
how	O
Java	O
is	O
implemented	O
internally	O
,	O
but	O
if	O
the	O
constructor	O
of	O
the	O
superclass	O
throws	O
an	O
exception	O
,	O
then	O
there	O
is	O
n't	O
a	O
instance	O
of	O
the	O
class	O
you	O
extend	O
.	O
It	O
would	O
be	O
impossible	O
to	O
call	O
the	O
toString	B-API
(	I-API
)	I-API
or	O
equals	B-API
(	I-API
)	I-API
methods	O
,	O
for	O
example	O
,	O
since	O
they	O
are	O
inherited	O
in	O
most	O
cases	O
.	O
Java	O
may	O
allow	O
a	O
try/catch	O
around	O
the	O
super	O
(	O
)	O
call	O
in	O
the	O
constructor	O
if	O
1.	O
you	O
override	O
ALL	O
methods	O
from	O
the	O
superclasses	O
,	O
and	O
2.	O
you	O
do	O
n't	O
use	O
the	O
super.XXX	O
(	O
)	O
clause	O
,	O
but	O
that	O
all	O
sounds	O
too	O
complicated	O
to	O
me	O
.	O
I	O
ca	O
n't	O
presume	O
to	O
have	O
a	O
deep	O
understanding	O
of	O
Java	O
internals	O
,	O
but	O
it	O
is	O
my	O
understanding	O
that	O
,	O
when	O
a	O
compiler	O
needs	O
to	O
instantiate	O
a	O
derived	O
class	O
,	O
it	O
has	O
to	O
first	O
create	O
the	O
base	O
(	O
and	O
its	O
base	O
before	O
that	O
(	O
...	O
)	O
)	O
and	O
then	O
slap	O
on	O
the	O
extensions	O
made	O
in	O
the	O
subclass	O
.	O
So	O
it	O
is	O
not	O
even	O
the	O
danger	O
of	O
uninited	O
variables	O
or	O
anything	O
like	O
that	O
at	O
all	O
.	O
When	O
you	O
try	O
to	O
do	O
something	O
in	O
the	O
subclass	O
'	O
constructor	O
before	O
the	O
base	O
class	O
'	O
constructor	O
,	O
you	O
are	O
basically	O
asking	O
the	O
compiler	O
to	O
extend	O
a	O
base	O
object	O
instance	O
that	O
does	O
n't	O
exist	O
yet	O
.	O
Edit	O
:	O
In	O
your	O
case	O
,	O
MyClass	O
becomes	O
the	O
base	O
object	O
,	O
and	O
MyClassMock	O
is	O
a	O
subclass	O
.	O
The	O
list	O
[	O
1,2,3	O
]	O
is	O
dynamic	O
and	O
flexible	O
but	O
that	O
flexibility	O
comes	O
at	O
a	O
speed	O
cost	O
.	O
The	O
tuple	O
(	O
1,2,3	O
)	O
is	O
fixed	O
(	O
immutable	O
)	O
and	O
therefore	O
faster	O
.	O
From	O
the	O
Python	O
FAQ	O
:	O
Lists	O
and	O
tuples	O
,	O
while	O
similar	O
in	O
many	O
respects	O
,	O
are	O
generally	O
used	O
in	O
fundamentally	O
different	O
ways	O
.	O
Tuples	O
can	O
be	O
thought	O
of	O
as	O
being	O
similar	O
to	O
Pascal	O
records	O
or	O
C	O
structs	O
;	O
they	O
're	O
small	O
collections	O
of	O
related	O
data	O
which	O
may	O
be	O
of	O
different	O
types	O
which	O
are	O
operated	O
on	O
as	O
a	O
group	O
.	O
For	O
example	O
,	O
a	O
Cartesian	O
coordinate	O
is	O
appropriately	O
represented	O
as	O
a	O
tuple	O
of	O
two	O
or	O
three	O
numbers	O
.	O
Lists	O
,	O
on	O
the	O
other	O
hand	O
,	O
are	O
more	O
like	O
arrays	O
in	O
other	O
languages	O
.	O
They	O
tend	O
to	O
hold	O
a	O
varying	O
number	O
of	O
objects	O
all	O
of	O
which	O
have	O
the	O
same	O
type	O
and	O
which	O
are	O
operated	O
on	O
one-by-one	O
.	O
Generally	O
by	O
convention	O
you	O
would	O
n't	O
choose	O
a	O
list	O
or	O
a	O
tuple	O
just	O
based	O
on	O
its	O
(	O
im	O
)	O
mutability	O
.	O
You	O
would	O
choose	O
a	O
tuple	O
for	O
small	O
collections	O
of	O
completely	O
different	O
pieces	O
of	O
data	O
in	O
which	O
a	O
full-blown	O
class	O
would	O
be	O
too	O
heavyweight	O
,	O
and	O
a	O
list	O
for	O
collections	O
of	O
any	O
reasonable	O
size	O
where	O
you	O
have	O
a	O
homogeneous	O
set	O
of	O
data	O
.	O
Tuples	O
are	O
a	O
quick\flexible	O
way	O
to	O
create	O
composite	O
data-types	O
.	O
Lists	O
are	O
containers	O
for	O
,	O
well	O
,	O
lists	O
of	O
objects	O
.	O
For	O
example	O
,	O
you	O
would	O
use	O
a	O
List	O
to	O
store	O
a	O
list	O
of	O
student	O
details	O
in	O
a	O
class	O
.	O
Each	O
student	O
detail	O
in	O
that	O
list	O
may	O
be	O
a	O
3-tuple	O
containing	O
their	O
roll	O
number	O
,	O
name	O
and	O
test	O
score	O
.	O
`	B-API
[	I-API
(	I-API
1	I-API
,	I-API
'Mark',86	I-API
)	I-API
,	I-API
(	I-API
2	I-API
,	I-API
'John',34	I-API
)	I-API
Also	O
,	O
because	O
tuples	O
are	O
immutable	O
they	O
can	O
be	O
used	O
as	O
keys	O
in	O
dictionaries	O
.	O
As	O
others	O
have	O
mentioned	O
,	O
Lists	O
and	O
tuples	O
are	O
both	O
containers	O
which	O
can	O
be	O
used	O
to	O
store	O
python	O
objects	O
.	O
Lists	O
are	O
extensible	O
and	O
their	O
contents	O
can	O
change	O
by	O
assignment	O
,	O
on	O
the	O
other	O
hand	O
tuples	O
are	O
immutable	O
.	O
Also	O
,	O
lists	O
can	O
not	O
be	O
used	O
as	O
keys	O
in	O
a	O
dictionary	O
whereas	O
tuples	O
can	O
.	O
If	O
you	O
can	O
find	O
a	O
solution	O
that	O
works	O
with	O
tuples	O
,	O
use	O
them	O
,	O
as	O
it	O
forces	O
immutability	O
which	O
kind	O
of	O
drives	O
you	O
down	O
a	O
more	O
functional	O
path	O
.	O
You	O
almost	O
never	O
regret	O
going	O
down	O
the	O
functional/immutable	O
path	O
.	O
I	O
've	O
seen	O
it	O
done	O
in	O
a	O
kind	O
of	O
iffy	O
,	O
but	O
pretty	O
reliable	O
way	O
.	O
Basically	O
,	O
an	O
element	O
is	O
set	O
to	O
use	O
a	O
specific	O
font	O
and	O
a	O
string	O
is	O
set	O
to	O
that	O
element	O
.	O
If	O
the	O
font	O
set	O
for	O
the	O
element	O
does	O
not	O
exist	O
,	O
it	O
takes	O
the	O
font	O
of	O
the	O
parent	O
element	O
.	O
So	O
,	O
what	O
they	O
do	O
is	O
measure	O
the	O
width	O
of	O
the	O
rendered	O
string	O
.	O
If	O
it	O
matches	O
what	O
they	O
expected	O
for	O
the	O
desired	O
font	O
as	O
opposed	O
to	O
the	O
derived	O
font	O
,	O
it	O
's	O
present	O
.	O
Here	O
's	O
where	O
it	O
came	O
from	O
:	O
Javascript/CSS	O
Font	O
Detector	O
(	O
ajaxian.com	O
;	O
12	O
Mar	O
2007	O
)	O
This	O
is	O
an	O
active	O
area	O
of	O
research	O
.	O
There	O
are	O
literally	O
oodles	O
of	O
academic	O
papers	O
on	O
the	O
subject	O
.	O
It	O
's	O
going	O
to	O
be	O
difficult	O
to	O
give	O
you	O
assistance	O
especially	O
w/o	O
more	O
deatails	O
.	O
Are	O
you	O
looking	O
for	O
specific	O
types	O
of	O
text	O
?	O
Fonts	O
?	O
English-only	O
?	O
Are	O
you	O
familiar	O
with	O
the	O
academic	O
literature	O
?	O
``	O
Text	O
detection	O
''	O
is	O
a	O
standard	O
problem	O
in	O
any	O
OCR	O
(	O
optical	O
character	O
recognition	O
)	O
system	O
and	O
consequently	O
there	O
are	O
lots	O
of	O
bits	O
of	O
code	O
on	O
the	O
interwebs	O
that	O
deal	O
with	O
it	O
.	O
I	O
could	O
start	O
listing	O
piles	O
of	O
links	O
from	O
google	O
but	O
I	O
suggest	O
you	O
just	O
do	O
a	O
search	O
for	O
``	O
text	O
detection	O
''	O
and	O
start	O
reading	O
:	O
)	O
.	O
There	O
is	O
ample	O
example	O
code	O
available	O
as	O
well	O
.	O
recognizing	O
text	O
inside	O
an	O
image	O
is	O
indeed	O
a	O
hot	O
topic	O
for	O
researchers	O
in	O
that	O
field	O
,	O
but	O
only	O
begun	O
to	O
grow	O
out	O
of	O
control	O
when	O
captcha	O
's	O
became	O
the	O
``	O
norm	O
''	O
in	O
terms	O
of	O
defense	O
against	O
spam	O
bots	O
.	O
Why	O
use	O
captcha	O
's	O
as	O
protection	O
?	O
well	O
because	O
it	O
is/was	O
very	O
hard	O
to	O
locate	O
(	O
and	O
read	O
)	O
text	O
inside	O
an	O
image	O
!	O
The	O
reason	O
why	O
I	O
mention	O
captcha	O
's	O
is	O
because	O
the	O
most	O
advancement*	O
is	O
made	O
within	O
that	O
tiny	O
area	O
,	O
and	O
I	O
think	O
that	O
your	O
solution	O
could	O
be	O
best	O
found	O
there	O
.	O
especially	O
because	O
captcha	O
's	O
are	O
indeed	O
about	O
locating	O
text	O
(	O
or	O
something	O
that	O
resembles	O
text	O
)	O
inside	O
a	O
cluttered	O
image	O
and	O
afterwards	O
trying	O
to	O
read	O
the	O
letters	O
correctly	O
.	O
so	O
if	O
you	O
can	O
find	O
yourself	O
a	O
good	O
open	O
source	O
captcha	O
breaking	O
tool	O
you	O
probably	O
have	O
all	O
you	O
need	O
to	O
continue	O
your	O
quest	O
...	O
You	O
could	O
probably	O
even	O
throw	O
away	O
the	O
most	O
dificult	O
code	O
that	O
handles	O
the	O
character	O
recognition	O
itself	O
,	O
because	O
those	O
OCR	O
's	O
are	O
used	O
to	O
read	O
distorted	O
text	O
,	O
something	O
you	O
do	O
n't	O
have	O
to	O
do	O
.	O
*	O
:	O
advancement	O
in	O
terms	O
of	O
visible	O
,	O
usable	O
,	O
and	O
practical	O
information	O
for	O
a	O
``	O
non-researcher	O
''	O
I	O
think	O
you	O
're	O
looking	O
for	O
GetModuleFileName	O
.	O
http	O
:	O
//www.swissdelphicenter.ch/torry/showcode.php	O
?	O
id=143	O
:	O
{	O
If	O
you	O
are	O
working	O
on	O
a	O
DLL	O
and	O
are	O
interested	O
in	O
the	O
filename	O
of	O
the	O
DLL	O
rather	O
than	O
the	O
filename	O
of	O
the	O
application	O
,	O
then	O
you	O
can	O
use	O
this	O
function	O
:	O
}	O
function	O
GetModuleName	O
:	O
string	O
;	O
var	O
szFileName	O
:	O
array	O
[	O
0..MAX_PATH	O
]	O
of	O
Char	O
;	O
begin	O
FillChar	O
(	O
szFileName	O
,	O
SizeOf	O
(	O
szFileName	O
)	O
,	O
#	O
0	O
)	O
;	O
GetModuleFileName	O
(	O
hInstance	O
,	O
szFileName	O
,	O
MAX_PATH	O
)	O
;	O
Result	O
:	O
=	O
szFileName	O
;	O
end	O
;	O
Untested	O
though	O
,	O
been	O
some	O
time	O
since	O
I	O
worked	O
with	O
Delphi	O
:	O
)	O
Focus	O
on	O
the	O
shorter	O
time	O
needed	O
for	O
development/prototype	O
and	O
possibly	O
easier	O
maintenance	O
(	O
none	O
of	O
this	O
may	O
apply	O
against	O
Ruby	B-API
)	O
.	O
This	O
is	O
one	O
of	O
those	O
cases	O
that	O
really	O
boil	O
down	O
to	O
personal	O
preference	O
or	O
situational	O
details	O
.	O
If	O
you	O
're	O
more	O
comfortable	O
and	O
experienced	O
with	O
Python	B-API
,	O
then	O
say	O
so	O
.	O
Are	O
they	O
asking	O
you	O
to	O
justify	O
it	O
because	O
they	O
're	O
more	O
comfortable	O
with	O
one	O
of	O
the	O
other	O
environments	O
?	O
After	O
you	O
're	O
done	O
,	O
will	O
the	O
system	O
be	O
passed	O
off	O
to	O
someone	O
else	O
for	O
long-term	O
maintenance	O
?	O
If	O
they	O
ask	O
you	O
to	O
use	O
a	O
technology	O
or	O
language	O
that	O
you	O
're	O
not	O
as	O
familiar	O
with	O
,	O
then	O
make	O
sure	O
they	O
know	O
up-front	O
that	O
it	O
's	O
going	O
to	O
take	O
you	O
longer	O
.	O
I	O
would	O
consider	O
that	O
using	O
python	O
on	O
a	O
new	O
project	O
is	O
completely	O
dependent	O
on	O
what	O
problem	O
you	O
are	O
trying	O
to	O
solve	O
with	O
python	O
.	O
If	O
you	O
want	O
someone	O
to	O
agree	O
with	O
you	O
that	O
you	O
should	O
use	O
python	O
,	O
then	O
show	O
them	O
how	O
python	O
's	O
features	O
apply	O
specifically	O
to	O
that	O
problem	O
.	O
In	O
the	O
case	O
of	O
web	O
development	O
with	O
python	O
,	O
talk	O
about	O
WSGI	B-API
and	O
other	O
web	O
libraries	O
and	O
frameworks	O
you	O
could	O
use	O
that	O
would	O
make	O
your	O
life	O
easier	O
.	O
One	O
note	O
for	O
python	O
is	O
that	O
most	O
of	O
the	O
frameworks	O
for	O
python	O
web	O
development	O
can	O
be	O
plugged	O
right	O
into	O
any	O
current	O
project	O
.	O
With	O
ruby	O
on	O
rails	O
,	O
you	O
're	O
practically	O
working	O
in	O
a	O
DSL	O
that	O
anyone	O
who	O
uses	O
your	O
project	O
will	O
have	O
to	O
learn	O
.	O
If	O
they	O
know	O
python	O
,	O
then	O
they	O
can	O
figure	O
out	O
what	O
you	O
are	O
doing	O
with	O
django	O
,	O
etc	O
in	O
a	O
day	O
.	O
I	O
'm	O
only	O
talking	O
about	O
web	O
development	O
because	O
it	O
appears	O
that	O
's	O
what	O
you	O
are	O
going	O
to	O
be	O
working	O
on	O
seeing	O
ruby	O
,	O
python	O
and	O
PHP	B-API
in	O
the	O
same	O
list	O
.	O
The	O
real	O
message	O
that	O
's	O
important	O
is	O
applying	O
to	O
whatever	O
it	O
is	O
you	O
like	O
about	O
python	O
directly	O
to	O
some	O
problem	O
you	O
are	O
trying	O
to	O
solve	O
.	O
I	O
do	O
n't	O
have	O
Visual	O
Studio	O
installed	O
on	O
my	O
machine	O
anymore	O
(	O
and	O
I	O
'm	O
using	O
Linux	O
)	O
,	O
but	O
I	O
do	O
remember	O
that	O
there	O
was	O
an	O
wizard	O
hidden	O
somewhere	O
inside	O
one	O
of	O
the	O
menus	O
that	O
gave	O
access	O
to	O
a	O
class	O
builder	O
.	O
With	O
this	O
wizard	O
,	O
you	O
could	O
define	O
all	O
your	O
classes	O
'	O
details	O
,	O
including	O
methods	O
and	O
attributes	O
.	O
If	O
I	O
remember	O
well	O
,	O
there	O
was	O
an	O
option	O
through	O
which	O
you	O
could	O
ask	O
VS	O
to	O
create	O
the	O
setters	O
and	O
getters	O
automatically	O
for	O
you	O
.	O
I	O
know	O
it	O
's	O
quite	O
vague	O
,	O
but	O
check	O
it	O
out	O
and	O
you	O
might	O
find	O
it	O
.	O
By	O
generate	O
,	O
do	O
you	O
mean	O
auto-generate	O
?	O
If	O
that	O
's	O
not	O
what	O
you	O
mean	O
:	O
Visual	O
Studio	O
2008	O
has	O
the	O
easiest	O
implementation	O
for	O
this	O
:	O
public	B-API
PropertyType	B-API
PropertyName	B-API
{	B-API
get	B-API
;	I-API
set	B-API
;	I-API
In	O
the	O
background	O
this	O
creates	O
an	O
implied	O
instance	O
variable	O
to	O
which	O
your	O
property	O
is	O
stored	O
and	O
retrieved	O
.	O
However	O
if	O
you	O
want	O
to	O
put	O
in	O
more	O
logic	O
in	O
your	O
Properties	O
,	O
you	O
will	O
have	O
to	O
have	O
an	O
instance	O
variable	O
for	O
it	O
:	O
private	B-API
PropertyType	B-API
_property	B-API
;	I-API
public	I-API
PropertyType	B-API
PropertyName	B-API
{	I-API
get	B-API
{	B-API
//logic	B-API
here	B-API
return	B-API
_property	B-API
;	I-API
}	B-API
set	B-API
{	B-API
//logic	B-API
here	B-API
_property	B-API
=	B-API
value	B-API
;	I-API
}	B-API
Previous	O
versions	O
of	O
Visual	O
Studio	O
always	O
used	O
this	O
longhand	O
method	O
as	O
well	O
.	O
If	O
you	O
are	O
using	O
Visual	B-API
Studio	I-API
2005	I-API
and	O
up	O
you	O
can	O
create	O
a	O
setter/getter	O
real	O
fast	O
using	O
the	O
insert	O
snippet	O
command	O
.	O
Right	O
click	O
on	O
your	O
code	O
click	O
on	O
Insert	O
Snippet	O
(	O
Ctrl+k	O
,	O
x	O
)	O
and	O
then	O
choose	O
``	O
prop	O
''	O
form	O
the	O
list	O
.	O
Hope	O
this	O
helps	O
.	O
Rather	O
than	O
using	O
ctrl+k	O
,	O
x	O
you	O
can	O
also	O
just	O
type	O
and	O
then	O
hit	O
tab	O
twice	O
Visual	B-API
Studio	I-API
also	O
has	O
a	O
feature	O
that	O
will	O
generate	O
a	O
Property	O
from	O
a	O
private	O
variable	O
.	O
If	O
you	O
right-click	O
on	O
a	O
variable	O
,	O
in	O
the	O
context	O
menu	O
that	O
pops	O
up	O
click	O
on	O
the	O
``	O
Refactor	O
''	O
item	O
.	O
Then	O
choose	O
encapsulate	O
field	O
.	O
This	O
will	O
create	O
a	O
getter/setter	O
property	O
for	O
a	O
variable	O
.	O
I	O
'm	O
not	O
too	O
big	O
a	O
fan	O
of	O
this	O
technique	O
as	O
it	O
is	O
a	O
little	O
bit	O
awkward	O
to	O
use	O
if	O
you	O
have	O
to	O
create	O
a	O
lot	O
of	O
getters/setters	O
,	O
and	O
it	O
puts	O
the	O
property	O
directly	O
below	O
the	O
private	O
field	O
,	O
which	O
bugs	O
me	O
because	O
I	O
usually	O
have	O
all	O
of	O
my	O
private	O
fields	O
grouped	O
together	O
,	O
and	O
this	O
Visual	O
Studio	O
feature	O
breaks	O
my	O
class	O
'	O
formatting	O
.	O
When	O
I	O
needed	O
to	O
write	O
an	O
application	O
with	O
a	O
client-server	O
model	O
where	O
the	O
clients	O
could	O
leave	O
and	O
enter	O
whenever	O
they	O
want	O
,	O
(	O
I	O
assume	O
that	O
's	O
also	O
the	O
case	O
for	O
your	O
application	O
as	O
you	O
use	O
mobile	O
devices	O
)	O
I	O
made	O
sure	O
that	O
the	O
clients	O
send	O
an	O
online	O
message	O
to	O
the	O
server	O
,	O
indicating	O
they	O
were	O
connected	O
and	O
ready	O
to	O
do	O
whatever	O
they	O
needed	O
doing	O
.	O
at	O
that	O
time	O
the	O
server	O
could	O
send	O
messages	O
back	O
to	O
the	O
client	O
trough	O
the	O
same	O
open	O
connection	O
.	O
Also	O
,	O
but	O
I	O
do	O
n't	O
know	O
if	O
that	O
is	O
applicable	O
for	O
you	O
,	O
I	O
had	O
some	O
sort	O
of	O
heartbeat	O
the	O
clients	O
sent	O
to	O
the	O
server	O
,	O
letting	O
it	O
know	O
it	O
was	O
still	O
online	O
.	O
That	O
way	O
the	O
server	O
knows	O
when	O
a	O
client	O
was	O
forcibly	O
disconnected	O
from	O
the	O
network	O
and	O
it	O
could	O
mark	O
that	O
client	O
back	O
as	O
offline	O
.	O
I	O
'm	O
not	O
clear	O
on	O
whether	O
or	O
not	O
you	O
're	O
wanting	O
to	O
add	O
the	O
asynchronous	O
bits	O
to	O
the	O
server	O
in	O
C	B-API
#	I-API
or	O
the	O
client	O
in	O
C++	B-API
.	O
If	O
you	O
're	O
talking	O
about	O
doing	O
this	O
in	O
C++	B-API
,	O
desktop	O
Windows	O
platforms	O
can	O
do	O
socket	B-API
I/O	I-API
asynchronously	O
through	O
the	O
API	O
's	O
that	O
use	O
overlapped	O
I/O	O
.	O
For	O
sockets	O
,	O
WSASend	B-API
,	O
WSARecv	B-API
both	O
allow	O
async	O
I/O	O
(	O
read	O
the	O
documentation	O
on	O
their	O
LPOVERLAPPED	B-API
parameters	O
,	O
which	O
you	O
can	O
populate	O
with	O
events	O
that	O
get	O
set	O
when	O
the	O
I/O	O
completes	O
)	O
.	O
I	O
do	O
n't	O
know	O
if	O
Windows	O
Mobile	O
platforms	O
support	O
these	O
functions	O
,	O
so	O
you	O
might	O
have	O
to	O
do	O
some	O
additional	O
digging	O
.	O
Just	O
wondering	O
,	O
what	O
do	O
you	O
feel	O
your	O
method	O
leaves	O
to	O
be	O
desired	O
?	O
You	O
could	O
replace	O
the	O
anonymous	O
delegate	O
with	O
a..	O
named	O
?	O
delegate	O
,	O
something	O
like	O
public	B-API
delegate	B-API
void	B-API
;	B-API
public	B-API
void	B-API
{	B-API
;	B-API
}	B-API
public	B-API
void	B-API
{	B-API
;	B-API
}	B-API
public	B-API
void	B-API
{	B-API
RetryTimer	B-API
fileIORetryTimer	B-API
=	B-API
new	B-API
)	B-API
;	I-API
bool	B-API
success	B-API
=	B-API
false	B-API
;	I-API
while	B-API
(	B-API
!	I-API
success	I-API
)	I-API
{	B-API
try	B-API
{	B-API
;	B-API
success	B-API
=	B-API
true	B-API
;	I-API
}	B-API
catch	B-API
(	B-API
IOException	I-API
e	B-API
)	I-API
{	B-API
if	B-API
(	B-API
fileIORetryTimer.HasExceededRetryTimeout	I-API
)	I-API
{	B-API
throw	B-API
;	I-API
}	B-API
;	B-API
}	B-API
}	B-API
}	B-API
public	B-API
void	B-API
{	B-API
;	B-API
;	B-API
(	O
params	O
string	O
[	O
]	O
parameters	O
)	O
(	O
params	O
string	O
[	O
]	O
fileName	O
)	O
File.Delete	B-API
(	I-API
fileName	I-API
[	I-API
0	I-API
]	I-API
)	I-API
(	O
params	O
string	O
[	O
]	O
fileNames	O
)	O
(	O
fileNames	O
[	O
0	O
]	O
,	O
fileNames	O
[	O
1	O
]	O
)	O
(	O
IoOperation	O
operation	O
,	O
params	O
string	O
[	O
]	O
parameters	O
)	O
RetryTimer	B-API
(	I-API
TimeSpan.FromHours	I-API
(	I-API
10	I-API
)	I-API
operation	B-API
(	I-API
parameters	I-API
)	I-API
fileIORetryTimer.SleepUntilNextRetry	B-API
(	I-API
)	I-API
Foo	B-API
(	I-API
)	I-API
(	O
FileDeleteOperation	O
,	O
``	O
L	O
:	O
\file.to.delete	O
''	O
)	O
(	O
FileCopyOperation	O
,	O
``	O
L	O
:	O
\file.to.copy.source	O
''	O
,	O
``	O
L	O
:	O
\file.to.copy.destination	O
''	O
)	O
This	O
looks	O
like	O
an	O
excellent	O
opportunity	O
to	O
have	O
a	O
look	O
at	O
Aspect	B-API
Oriented	I-API
Programming	I-API
.	O
Here	O
is	O
a	O
good	O
article	O
on	O
AOP	B-API
in	O
.NET	B-API
.	O
The	O
general	O
idea	O
is	O
that	O
you	O
'd	O
extract	O
the	O
cross-functional	O
concern	O
(	O
i.e	O
.	O
Retry	O
for	O
x	O
hours	O
)	O
into	O
a	O
separate	O
class	O
and	O
then	O
you	O
'd	O
annotate	O
any	O
methods	O
that	O
need	O
to	O
modify	O
their	O
behaviour	O
in	O
that	O
way	O
.	O
Here	O
's	O
how	O
it	O
might	O
look	O
(	O
with	O
a	O
nice	O
extension	O
method	O
on	O
Int32	O
)	O
[	O
RetryFor	B-API
(	I-API
10.Hours	I-API
(	I-API
)	I-API
)	I-API
]	O
public	O
void	B-API
DeleteArchive	B-API
(	I-API
)	I-API
{	O
//..	O
code	O
to	O
just	O
delete	O
the	O
archive	O
}	O
You	O
could	O
also	O
use	O
a	O
more	O
OO	O
approach	O
:	O
Create	O
a	O
base	O
class	O
that	O
does	O
the	O
error	O
handling	O
and	O
calls	O
an	O
abstract	O
method	O
to	O
perform	O
the	O
concrete	O
work	O
.	O
(	O
Template	O
Method	O
pattern	O
)	O
Create	O
concrete	O
classes	O
for	O
each	O
operation	O
.	O
This	O
has	O
the	O
advantage	O
of	O
naming	O
each	O
type	O
of	O
operation	O
you	O
perform	O
and	O
gives	O
you	O
a	O
Command	O
pattern	O
-	O
operations	O
have	O
been	O
represented	O
as	O
objects	O
.	O
I	O
use	O
UnitTest++	B-API
.	O
While	O
the	O
example	O
tutorial	O
is	O
for	O
Visual	B-API
Studio	I-API
2005	I-API
,	O
the	O
concepts	O
are	O
similar	O
(	O
try	O
setting	O
one	O
up	O
for	O
VC6	O
...	O
)	O
.	O
Update	O
:	O
The	O
VC6	O
hacks	O
are	O
now	O
included	O
in	O
the	O
source	O
!	O
I	O
've	O
worked	O
on	O
a	O
SAN	O
system	O
in	O
the	O
past	O
with	O
telephony	O
audio	O
recordings	O
which	O
had	O
issues	O
with	O
numbers	O
of	O
files	O
in	O
a	O
single	O
folder	O
-	O
that	O
system	O
became	O
unusable	O
somewhere	O
near	O
5,000	O
(	O
on	O
Windows	B-API
2000	I-API
Advanced	I-API
Server	I-API
with	O
an	O
application	O
in	O
C	B-API
#	I-API
.Net	I-API
1.1	I-API
)	O
-	O
the	O
only	O
sensible	O
solution	O
that	O
we	O
came	O
up	O
with	O
was	O
to	O
change	O
the	O
folder	O
structure	O
so	O
that	O
there	O
were	O
a	O
more	O
reasonable	O
number	O
of	O
files	O
.	O
Interestingly	O
Explorer	O
would	O
also	O
time	O
out	O
!	O
The	O
convention	O
we	O
came	O
up	O
with	O
was	O
a	O
structure	O
that	O
broke	O
the	O
structure	O
up	O
in	O
years	O
,	O
months	O
and	O
days	O
-	O
but	O
that	O
will	O
depend	O
upon	O
your	O
system	O
and	O
whether	O
you	O
can	O
control	O
the	O
directory	O
structure	O
...	O
None	O
.	O
.NET	B-API
relies	O
on	O
underlying	O
Windows	O
API	O
calls	O
that	O
really	O
,	O
really	O
hate	O
that	O
amount	O
of	O
files	O
themselves	O
.	O
As	O
Ronnie	O
says	O
:	O
split	O
them	O
up	O
.	O
You	O
could	O
use	O
DOS	B-API
?	O
DIR	O
/s/b	O
Definitely	O
split	O
them	O
up	O
.	O
That	O
said	O
,	O
stay	O
as	O
far	O
away	O
from	O
the	O
Indexing	O
Service	O
as	O
you	O
can	O
.	O
You	O
could	O
also	O
look	O
at	O
either	O
indexing	O
the	O
files	O
yourself	O
,	O
or	O
getting	O
a	O
third	O
part	O
app	O
like	O
google	O
desktop	O
or	O
copernic	B-API
to	O
do	O
it	O
and	O
then	O
interface	O
with	O
their	O
index	O
.	O
I	O
know	O
copernic	B-API
has	O
an	O
API	O
that	O
you	O
can	O
use	O
to	O
search	O
for	O
any	O
file	O
in	O
their	O
index	O
and	O
it	O
also	O
supports	O
mapping	O
network	O
drives	O
.	O
The	O
second	O
example	O
will	O
execute	O
the	O
function	O
after	O
creating	O
it	O
.	O
edit	O
:	O
this	O
is	O
n't	O
really	O
true	O
.	O
@	O
Lance	O
:	O
the	O
first	O
one	O
is	O
also	O
executing	O
.	O
Compare	O
it	O
with	O
a	O
named	O
constructor	O
:	O
function	O
{	O
;	O
}	O
new	O
Blah	O
(	O
)	O
alert	B-API
(	I-API
'blah	I-API
'	I-API
)	I-API
Bla	O
(	O
)	O
this	O
is	O
actually	O
also	O
executing	O
code	O
.	O
The	O
same	O
goes	O
for	O
the	O
anonymous	O
constructor	O
...	O
But	O
that	O
was	O
not	O
the	O
question	O
;	O
-	O
)	O
Both	O
cases	O
will	O
execute	O
the	O
function	O
,	O
the	O
only	O
real	O
difference	O
is	O
what	O
the	O
return	O
value	O
of	O
the	O
expression	O
may	O
be	O
,	O
and	O
what	O
the	O
value	O
of	O
``	O
this	O
''	O
will	O
be	O
inside	O
the	O
function	O
.	O
Basically	O
behaviour	O
of	O
new	O
Is	O
effectively	O
equivalent	O
to	O
var	B-API
tempObject	O
=	O
{	O
}	O
;	O
var	B-API
result	O
=	O
;	O
if	B-API
(	I-API
result	I-API
is	I-API
not	I-API
an	I-API
object	I-API
)	I-API
result	O
=	O
expression.call	B-API
(	I-API
tempObject	I-API
)	I-API
Although	O
of	O
course	O
and	O
result	O
are	O
transient	O
values	O
you	O
can	O
never	O
see	O
(	O
they	O
're	O
implementation	O
details	O
in	O
the	O
interpreter	O
)	O
,	O
and	O
there	O
is	O
no	O
JS	B-API
mechanism	O
to	O
do	O
the	O
``	O
is	O
not	O
an	O
object	O
''	O
check	O
.	O
Broadly	O
speaking	O
the	O
``	O
new	O
function	B-API
(	I-API
)	I-API
{	O
..	O
}	O
''	O
method	O
will	O
be	O
slower	O
due	O
to	O
the	O
need	O
to	O
create	O
the	O
this	O
object	O
for	O
the	O
constructor	O
.	O
That	O
said	O
this	O
should	O
be	O
not	O
be	O
a	O
real	O
difference	O
as	O
object	O
allocation	O
is	O
not	O
slow	O
,	O
and	O
you	O
should	O
n't	O
be	O
using	O
such	O
code	O
in	O
hot	O
code	O
(	O
due	O
to	O
the	O
cost	O
of	O
creating	O
the	O
function	O
object	O
and	O
associated	O
closure	O
)	O
.	O
Edit	O
:	O
one	O
thing	O
i	O
realised	O
that	O
i	O
missed	O
from	O
this	O
is	O
that	O
the	O
tempObject	O
will	O
get	O
s	O
prototype	O
,	O
eg	O
.	O
(	O
before	O
the	O
)	O
tempObject.__proto__	B-API
=	O
Well	O
,	O
I	O
made	O
a	O
page	O
like	O
this	O
:	O
htmlbodyscript	B-API
type=	O
''	O
text/javascript	O
''	O
var	B-API
a	O
=	O
new	O
{	O
;	O
return	O
``	O
test	O
''	O
;	O
}	O
;	O
var	B-API
b	O
=	O
{	O
;	O
return	B-API
;	O
//a	O
is	O
a	O
;	O
//b	O
is	O
a	O
string	O
containing	O
function	B-API
(	I-API
)	I-API
(	O
``	O
method	O
1	O
''	O
)	O
(	O
function	B-API
(	I-API
)	I-API
(	O
``	O
method	O
2	O
''	O
)	O
``	O
test	O
''	O
;	O
}	O
)	O
(	O
)	O
;	O
alert	B-API
(	I-API
a	I-API
)	I-API
functionalert	B-API
(	I-API
b	I-API
)	I-API
Surprisingly	O
enough	O
(	O
to	O
me	O
anyway	O
)	O
it	O
alerted	O
both	O
``	O
method	O
1	O
''	O
and	O
method	O
2	O
''	O
.	O
I	O
did	O
n't	O
expect	O
``	O
method	O
1	O
''	O
to	O
be	O
alerted	O
.	O
The	O
difference	O
was	O
what	O
the	O
values	O
of	O
a	O
and	O
b	O
were	O
.	O
a	O
was	O
the	O
function	O
itself	O
,	O
while	O
b	O
was	O
the	O
string	O
that	O
the	O
function	O
returned	O
.	O
Yes	O
,	O
there	O
are	O
differences	O
between	O
the	O
two	O
.	O
Both	O
are	O
anonymous	O
functions	O
and	O
execute	O
in	O
the	O
exact	O
same	O
way	O
.	O
But	O
,	O
the	O
difference	O
between	O
the	O
two	O
is	O
that	O
in	O
the	O
second	O
case	O
scope	O
of	O
the	O
variables	O
is	O
restricted	O
to	O
the	O
anonymous	O
function	O
itself	O
.	O
There	O
is	O
no	O
chance	O
of	O
accidentally	O
adding	O
variables	O
to	O
the	O
global	O
scope	O
.	O
This	O
implies	O
that	O
by	O
using	O
the	O
second	O
method	O
,	O
you	O
are	O
not	O
cluttering	O
up	O
the	O
global	O
variables	O
scope	O
which	O
is	O
good	O
as	O
these	O
global	O
variable	O
values	O
can	O
interfere	O
with	O
some	O
other	O
global	O
variables	O
that	O
you	O
may	O
use	O
in	O
some	O
other	O
library	O
or	O
are	O
being	O
used	O
in	O
a	O
third	O
party	O
library	O
.	O
Example	O
:	O
html	O
body	O
script	O
type=	O
''	O
text/javascript	O
''	O
new	O
function	B-API
(	I-API
)	I-API
{	O
a	O
=	O
``	O
Hello	O
''	O
;	O
alert	B-API
(	I-API
a	I-API
+	O
``	O
Inside	O
Function	O
''	O
)	O
;	O
}	O
;	O
alert	O
(	O
a	O
+	O
``	O
Outside	O
Function	O
''	O
)	O
;	O
(	O
function	B-API
(	I-API
)	I-API
{	O
var	B-API
b	O
=	O
``	O
World	O
''	O
;	O
alert	O
(	O
b	O
+	O
``	O
Inside	O
Function	O
''	O
)	O
;	O
}	O
)	O
(	O
)	O
;	O
alert	O
(	O
b	O
+	O
``	O
Outside	O
Function	O
''	O
)	O
;	O
/script	O
/body	O
/html	O
In	O
the	O
above	O
code	O
the	O
output	O
is	O
something	O
like	O
:	O
Hello	O
Inside	O
Function	O
Hello	O
Outside	O
Function	O
World	O
Inside	O
Function	O
...	O
then	O
,	O
you	O
get	O
an	O
error	O
as	O
'b	O
'	O
is	O
not	O
defined	O
outside	O
the	O
function	O
!	O
Thus	O
,	O
I	O
believe	O
that	O
the	O
second	O
method	O
is	O
better	O
...	O
safer	O
!	O
They	O
both	O
create	O
a	O
closure	O
by	O
executing	O
the	O
code	O
block	O
.	O
As	O
a	O
matter	O
of	O
style	O
I	O
much	O
prefer	O
the	O
second	O
for	O
a	O
couple	O
of	O
reasons	O
:	O
It	O
's	O
not	O
immediately	O
obvious	O
by	O
glancing	O
at	O
the	O
first	O
that	O
the	O
code	O
will	O
actually	O
be	O
executed	O
;	O
the	O
line	O
looks	O
like	O
it	O
is	O
creating	O
a	O
new	O
function	O
,	O
rather	O
than	O
executing	O
it	O
as	O
a	O
constructor	O
,	O
but	O
that	O
's	O
not	O
what	O
's	O
actually	O
happening	O
.	O
Avoid	O
code	O
that	O
does	O
n't	O
do	O
what	O
it	O
looks	O
like	O
it	O
's	O
doing	O
!	O
Also	O
the	O
(	O
function	B-API
(	I-API
)	I-API
...	O
}	O
)	O
(	O
)	O
make	O
nice	O
bookend	O
tokens	O
so	O
that	O
you	O
can	O
immediately	O
see	O
that	O
you	O
're	O
entering	O
and	O
leaving	O
a	O
closure	O
scope	O
.	O
This	O
is	O
good	O
because	O
it	O
alerts	O
the	O
programmer	O
reading	O
it	O
to	O
the	O
scope	O
change	O
,	O
and	O
is	O
especially	O
useful	O
if	O
you	O
're	O
doing	O
some	O
postprocessing	O
of	O
the	O
file	O
,	O
eg	O
for	O
minification	O
.	O
The	O
reason	O
was	O
that	O
the	O
value	O
I	O
was	O
retrieving	O
was	O
from	O
a	O
form	O
element	O
,	O
but	O
the	O
submit	O
was	O
done	O
through	O
a	O
link	O
+	O
JQuery	B-API
,	O
not	O
through	O
a	O
form	O
button	O
submit	O
.	O
Request.Form	B-API
only	O
includes	O
variables	O
posted	O
through	O
a	O
form	O
,	O
while	O
Request.Params	B-API
includes	O
both	O
posted	O
form	O
variables	O
and	O
get	O
variables	O
specified	O
as	O
URL	O
parameters	O
.	O
Typically	O
,	O
integer	O
values	O
are	O
signed	O
,	O
unless	O
you	O
explicitly	O
need	O
an	O
unsigned	O
value	O
.	O
It	O
's	O
just	O
the	O
way	O
they	O
are	O
used	O
.	O
I	O
may	O
not	O
agree	O
with	O
that	O
choice	O
,	O
but	O
that	O
's	O
just	O
the	O
way	O
it	O
is	O
.	O
For	O
the	O
time	O
being	O
,	O
with	O
todays	O
typical	O
memory	O
constraints	O
,	O
if	O
your	O
array	O
or	O
similar	O
data	O
structure	O
needs	O
an	O
UInt32	B-API
length	O
,	O
you	O
should	O
consider	O
other	O
data	O
structures	O
.	O
With	O
an	O
array	O
of	O
bytes	O
,	O
Int32	B-API
will	O
give	O
you	O
2GB	O
of	O
values	O
Unsigned	O
int	O
is	O
n't	O
CLS	O
compliant	O
and	O
would	O
therefore	O
restrict	O
usage	O
of	O
the	O
property	O
to	O
those	O
languages	O
that	O
do	O
implement	O
a	O
.	O
See	O
here	O
:	O
Framework	B-API
1.1	I-API
Introduction	O
to	O
the	O
.NET	B-API
Framework	I-API
Class	I-API
Library	I-API
Framework	O
2.0	O
.NET	O
Framework	O
Class	O
Library	O
Overview	O
I	O
think	O
it	O
also	O
might	O
have	O
to	O
do	O
with	O
simplifying	O
things	O
on	O
a	O
lower	O
level	O
,	O
since	O
Array.Length	B-API
will	O
of	O
course	O
be	O
added	O
to	O
a	O
negative	O
number	O
at	O
some	O
point	O
,	O
if	O
Array.Length	B-API
were	O
unsigned	O
,	O
and	O
added	O
to	O
a	O
negative	O
int	O
(	O
two	O
's	O
complement	O
)	O
,	O
there	O
could	O
be	O
messy	O
results	O
.	O
Dive	O
Into	O
Python	B-API
has	O
a	O
chapter	O
.	O
Ca	O
n't	O
vouch	O
for	O
how	O
good	O
it	O
would	O
be	O
though	O
.	O
Personally	O
,	O
I	O
've	O
played	O
with	O
several	O
of	O
the	O
built-in	O
options	O
on	O
an	O
XML-heavy	O
project	O
and	O
have	O
settled	O
on	O
pulldom	B-API
as	O
the	O
best	O
choice	O
less	O
complex	O
documents	O
.	O
Especially	O
for	O
small	O
simple	O
stuff	O
,	O
I	O
like	O
the	O
event-driven	O
theory	O
of	O
parsing	O
rather	O
than	O
setting	O
up	O
a	O
whole	O
slew	O
of	O
callbacks	O
for	O
a	O
relatively	O
simple	O
structure	O
.	O
Here	O
is	O
a	O
good	O
quick	O
discussion	O
of	O
how	O
to	O
use	O
the	O
API	O
.	O
What	O
I	O
like	O
:	O
you	O
can	O
handle	O
the	O
parsing	O
in	O
a	O
for	O
loop	O
rather	O
than	O
using	O
callbacks	O
.	O
You	O
also	O
delay	O
full	O
parsing	O
(	O
the	O
``	O
pull	O
''	O
part	O
)	O
and	O
only	O
get	O
additional	O
detail	O
when	O
you	O
call	O
expandNode	B-API
(	I-API
)	I-API
.	O
This	O
satisfies	O
my	O
general	O
requirement	O
for	O
``	O
responsible	O
''	O
efficiency	O
without	O
sacrificing	O
ease	O
of	O
use	O
and	O
simplicity	O
.	O
ElementTree	B-API
has	O
a	O
nice	O
pythony	O
API	O
.	O
I	O
think	O
it	O
's	O
even	O
shipped	O
as	O
part	O
of	O
python	B-API
2.5	I-API
It	O
's	O
in	O
pure	O
python	O
and	O
as	O
I	O
say	O
,	O
pretty	O
nice	O
,	O
but	O
if	O
you	O
wind	O
up	O
needing	O
more	O
performance	O
,	O
then	O
lxml	O
exposes	O
the	O
same	O
API	O
and	O
uses	O
libxml2	B-API
under	O
the	O
hood	O
.	O
You	O
can	O
theoretically	O
just	O
swap	O
it	O
in	O
when	O
you	O
discover	O
you	O
need	O
it	O
.	O
Since	O
you	O
mentioned	O
that	O
you	O
'll	O
be	O
building	O
``	O
fairly	O
simple	O
''	O
XML	B-API
,	O
the	O
minidom	O
module	O
(	O
part	O
of	O
the	O
Python	B-API
Standard	I-API
Library	I-API
)	O
will	O
likely	O
suit	O
your	O
needs	O
.	O
If	O
you	O
have	O
any	O
experience	O
with	O
the	O
DOM	B-API
representation	O
of	O
XML	B-API
,	O
you	O
should	O
find	O
the	O
API	O
quite	O
straight	O
forward	O
.	O
I	O
write	O
a	O
SOAP	B-API
server	I-API
that	O
receives	O
XML	B-API
requests	O
,	O
and	O
creates	O
XML	B-API
responses	O
.	O
(	O
Unfortunately	O
,	O
it	O
's	O
not	O
my	O
project	O
,	O
so	O
it	O
's	O
closed	O
source	O
,	O
but	O
that	O
's	O
another	O
problem	O
)	O
.	O
It	O
turned	O
out	O
for	O
me	O
that	O
creating	O
(	O
SOAP	B-API
)	O
XML	B-API
documents	O
is	O
fairly	O
simple	O
,	O
if	O
you	O
have	O
a	O
data	O
structure	O
that	O
``	O
fits	O
''	O
the	O
schema	O
.	O
I	O
keep	O
the	O
envelope	O
,	O
since	O
the	O
response	O
envelope	O
is	O
(	O
almost	O
)	O
the	O
same	O
as	O
the	O
request	O
envelope	O
.	O
Then	O
,	O
since	O
my	O
data	O
structure	O
is	O
a	O
(	O
possibly	O
nested	O
)	O
dictionary	O
,	O
I	O
create	O
a	O
string	O
that	O
turns	O
this	O
dictionary	O
into	O
key	O
>	O
value/key	O
>	O
items	O
.	O
This	O
is	O
a	O
task	O
that	O
recursion	O
makes	O
simple	O
,	O
and	O
I	O
end	O
up	O
with	O
the	O
right	O
structure	O
.	O
This	O
is	O
all	O
done	O
in	O
python	O
code	O
,	O
and	O
is	O
currently	O
fast	O
enough	O
for	O
production	O
use	O
.	O
You	O
can	O
also	O
(	O
relatively	O
)	O
easily	O
build	O
lists	O
as	O
well	O
,	O
although	O
depending	O
upon	O
your	O
client	O
,	O
you	O
may	O
hit	O
problems	O
unless	O
you	O
give	O
length	O
hints	O
.	O
For	O
me	O
,	O
this	O
was	O
much	O
simpler	O
,	O
since	O
a	O
dictionary	O
is	O
a	O
much	O
easier	O
way	O
of	O
working	O
than	O
some	O
custom	O
class	O
.	O
For	O
the	O
books	O
,	O
generating	O
XML	B-API
is	O
much	O
easier	O
than	O
parsing	O
!	O
I	O
would	O
be	O
a	O
bit	O
reluctant	O
to	O
use	O
nested	O
classes	O
here	O
.	O
What	O
if	O
you	O
created	O
an	O
abstract	O
base	O
class	O
for	O
a	O
``	O
multimedia	O
driver	O
''	O
to	O
handle	O
the	O
back-end	O
stuff	O
(	O
workhorse	O
)	O
,	O
and	O
a	O
separate	O
class	O
for	O
the	O
front-end	O
work	O
?	O
The	O
front-end	O
class	O
could	O
take	O
a	O
pointer/reference	O
to	O
an	O
implemented	O
driver	O
class	O
(	O
for	O
the	O
appropriate	O
media	O
type	O
and	O
situation	O
)	O
and	O
perform	O
the	O
abstract	O
operations	O
on	O
the	O
workhorse	O
structure	O
.	O
My	O
philosophy	O
would	O
be	O
to	O
go	O
ahead	O
and	O
make	O
both	O
structures	O
accessible	O
to	O
the	O
client	O
in	O
a	O
polished	O
way	O
,	O
just	O
under	O
the	O
assumption	O
they	O
would	O
be	O
used	O
in	O
tandem	O
.	O
I	O
would	O
reference	O
something	O
like	O
a	O
QTextDocument	B-API
in	O
Qt	O
.	O
You	O
provide	O
a	O
direct	O
interface	O
to	O
the	O
bare	O
metal	O
data	O
handling	O
,	O
but	O
pass	O
the	O
authority	O
along	O
to	O
an	O
object	O
like	O
a	O
QTextEdit	B-API
to	O
do	O
the	O
manipulation	O
.	O
One	O
way	O
of	O
deciding	O
whether	O
or	O
not	O
to	O
use	O
nested	O
classes	O
is	O
to	O
think	O
whether	O
or	O
not	O
this	O
class	O
plays	O
a	O
supporting	O
role	O
or	O
it	O
's	O
own	O
part	O
.	O
If	O
it	O
exists	O
solely	O
for	O
the	O
purpose	O
of	O
helping	O
another	O
class	O
then	O
I	O
generally	O
make	O
it	O
a	O
nested	O
class	O
.	O
There	O
are	O
a	O
whole	O
load	O
of	O
caveats	O
to	O
that	O
,	O
some	O
of	O
which	O
seem	O
contradictory	O
but	O
it	O
all	O
comes	O
down	O
to	O
experience	O
and	O
gut-feeling	O
.	O
sounds	O
like	O
a	O
case	O
where	O
you	O
could	O
use	O
the	O
strategy	O
pattern	O
Assuming	O
your	O
master	O
page	O
was	O
named	O
MyMaster	B-API
:	I-API
(	I-API
Master	I-API
as	I-API
MyMaster	I-API
)	I-API
.PeopleListView.DataBind	I-API
(	I-API
)	I-API
;	O
Edit	O
:	O
since	O
PeopleListView	O
will	O
be	O
declared	O
protected	O
by	O
default	O
,	O
you	O
will	O
either	O
need	O
to	O
change	O
this	O
to	O
public	O
,	O
or	O
create	O
a	O
public	O
property	O
wrapper	O
so	O
that	O
you	O
can	O
access	O
it	O
from	O
your	O
page	O
.	O
I	O
believe	O
you	O
could	O
do	O
this	O
by	O
using	O
this.Master.FindControl	B-API
or	O
something	O
similar	O
,	O
but	O
you	O
probably	O
should	O
n't	O
-	O
it	O
requires	O
the	O
content	O
page	O
to	O
know	O
too	O
much	O
about	O
the	O
structure	O
of	O
the	O
master	O
page	O
.	O
I	O
would	O
suggest	O
another	O
method	O
,	O
such	O
as	O
firing	O
an	O
event	O
in	O
the	O
content	O
area	O
that	O
the	O
master	O
could	O
listen	O
for	O
and	O
re-bind	O
when	O
fired	O
.	O
Assuming	O
the	O
control	O
is	O
called	O
``	O
PeopleListView	O
''	O
on	O
the	O
master	O
page	O
ListView	B-API
peopleListView	O
=	O
(	B-API
ListView	I-API
)	I-API
this.Master.FindControl	B-API
(	I-API
``	I-API
PeopleListView	I-API
''	I-API
)	I-API
;	O
peopleListView.DataSource	B-API
=	O
[	O
whatever	O
]	O
;	O
peopleListView.DataBind	B-API
(	I-API
)	I-API
;	O
But	O
@	O
palmsey	O
is	O
more	O
correct	O
,	O
especially	O
if	O
your	O
page	O
could	O
have	O
the	O
possibility	O
of	O
more	O
than	O
one	O
master	O
page	O
.	O
Decouple	O
them	O
and	O
use	O
an	O
event	O
.	O
I	O
've	O
been	O
doing	O
a	O
little	O
research	O
into	O
this	O
and	O
whilst	O
I	O
'm	O
not	O
entirely	O
sure	O
its	O
the	O
cause	O
I	O
believe	O
it	O
is	O
because	O
Safari	O
is	O
not	O
returning	O
the	O
full	O
result	O
set	O
(	O
hence	O
cropping	O
it	O
)	O
.	O
I	O
have	O
been	O
in	O
dicussion	O
with	O
another	O
developer	O
and	O
found	O
the	O
following	O
post	O
on	O
Channel	O
9	O
as	O
well	O
which	O
recommends	O
making	O
use	O
of	O
the	O
SQL	B-API
State	I-API
service	O
to	O
store	O
the	O
viewstate	O
avoiding	O
the	O
postback	O
issue	O
and	O
also	O
page	O
size	O
.	O
http	O
:	O
//channel9.msdn.com/forums/TechOff/250549-ASPNET-ViewState-flawed-architecture/	O
?	O
CommentID=270477	O
#	O
263702	O
Does	O
this	O
seem	O
like	O
the	O
best	O
solution	O
?	O
My	O
first	O
port	O
of	O
call	O
would	O
be	O
to	O
go	O
through	O
the	O
elements	O
on	O
the	O
page	O
and	O
see	O
which	O
controls	O
:	O
Will	O
still	O
work	O
when	O
I	O
switch	O
ViewState	O
off	O
Can	O
be	O
moved	O
out	O
of	O
the	O
page	O
and	O
into	O
an	O
AJAX	B-API
call	O
to	O
be	O
loaded	O
when	O
required	O
Failing	O
that	O
,	O
and	O
here	O
's	O
the	O
disclaimer	O
-	O
I	O
've	O
never	O
used	O
this	O
solution	O
on	O
a	O
web-facing	O
site	O
-	O
but	O
in	O
the	O
past	O
where	O
I	O
've	O
wanted	O
to	O
eliminate	O
massive	O
ViewStates	O
in	O
limited-audience	O
applications	O
I	O
have	O
stored	O
the	O
ViewState	O
in	O
the	O
Session	O
.	O
It	O
has	O
worked	O
for	O
me	O
because	O
the	O
hit	O
to	O
memory	O
is	O
n't	O
significant	O
for	O
the	O
number	O
of	O
users	O
,	O
but	O
if	O
you	O
're	O
running	O
a	O
fairly	O
popular	O
site	O
I	O
would	O
n't	O
recommend	O
this	O
approach	O
.	O
However	O
,	O
if	O
the	O
Session	O
solution	O
works	O
for	O
Safari	O
you	O
could	O
always	O
detect	O
the	O
user	O
agent	O
and	O
fudge	O
appropriately	O
.	O
While	O
I	O
second	O
the	O
Channel	O
9	O
solution	O
,	O
also	O
be	O
aware	O
that	O
in	O
some	O
hosted	O
environments	O
Safari	O
is	O
not	O
considered	O
an	O
up-level	O
browser	O
.	O
You	O
may	O
need	O
to	O
add	O
it	O
to	O
your	O
application	O
's	O
browscap	O
in	O
order	O
to	O
make	O
use	O
of	O
some	O
ASP.Net	B-API
features	O
.	O
That	O
was	O
the	O
root	O
cause	O
of	O
some	O
headaches	O
we	O
had	O
for	O
a	O
client	O
's	O
site	O
that	O
used	O
the	O
ASP	B-API
Menu	I-API
control	O
.	O
Without	O
the	O
extra	O
quotes	O
around	O
the	O
input	O
string	O
parameter	O
,	O
the	O
Javascript	B-API
function	O
thinks	O
I	O
'm	O
passing	O
in	O
an	O
integer	O
.	O
Can	O
you	O
do	O
some	O
rudimentary	O
string	O
function	O
to	O
force	O
JavaScript	B-API
into	O
changing	O
it	O
into	O
a	O
string	O
?	O
Like	O
value	O
=	O
value	O
+	O
Try	O
putting	O
the	O
extra	O
text	O
inside	O
the	O
server-side	O
script	O
block	O
and	O
concatenating	O
.	O
onclick=	O
'	O
%	O
#	O
``	O
``	O
''	O
)	O
;	O
''	O
ToggleDisplay	O
(	O
``	O
''	O
''	O
DataBinder.Eval	B-API
(	I-API
Container.DataItem	I-API
,	I-API
``	I-API
JobCode	I-API
''	I-API
)	I-API
Edit	O
:	O
I	O
'm	O
pretty	O
sure	O
you	O
could	O
just	O
use	O
double	O
quotes	O
outside	O
the	O
script	O
block	O
as	O
well	O
.	O
I	O
had	O
recently	O
similar	O
problem	O
and	O
the	O
only	O
way	O
to	O
solve	O
it	O
was	O
to	O
use	O
plain	O
old	O
HTML	B-API
codes	O
for	O
single	O
(	O
)	O
and	O
double	O
quotes	O
(	O
)	O
.	O
Source	O
code	O
was	O
total	O
mess	O
of	O
course	O
but	O
it	O
worked	O
.	O
Try	O
a	O
id=	O
''	O
aShowHide	O
''	O
onclick='ToggleDisplay	O
(	O
#	O
34	O
;	O
%	O
#	O
DataBinder.Eval	B-API
(	I-API
Container.DataItem	I-API
,	I-API
``	I-API
JobCode	I-API
''	I-API
)	I-API
%	O
#	O
34	O
;	O
)	O
;	O
'Show/Hide/a	O
or	O
a	O
id=	O
''	O
aShowHide	O
''	O
onclick='ToggleDisplay	O
(	O
#	O
39	O
;	O
%	O
#	O
DataBinder.Eval	B-API
(	I-API
Container.DataItem	I-API
,	I-API
``	I-API
JobCode	I-API
''	I-API
)	I-API
%	O
#	O
39	O
;	O
)	O
;	O
'Show/Hide/a	O
You	O
could	O
instead	O
add	O
the	O
comma	O
as	O
the	O
first	O
thing	O
inside	O
your	O
foreach	B-API
.	O
if	B-API
(	I-API
sb.Length	I-API
0	I-API
)	I-API
sb.Append	B-API
(	I-API
``	I-API
,	I-API
''	I-API
)	I-API
How	O
about	O
tracking	O
whether	O
you	O
are	O
on	O
the	O
first	O
item	O
,	O
and	O
only	O
add	O
a	O
comma	O
before	O
the	O
item	O
if	O
it	O
is	O
not	O
the	O
first	O
one	O
.	O
public	O
string	O
ReturnAsCSV	B-API
(	I-API
ContactList	I-API
contactList	I-API
)	I-API
{	O
StringBuilder	B-API
sb	O
=	O
new	O
StringBuilder	B-API
(	I-API
)	I-API
;	O
bool	O
isFirst	O
=	O
true	O
;	O
foreach	B-API
(	I-API
Contact	I-API
c	I-API
in	I-API
contactList	I-API
)	I-API
{	O
if	B-API
(	I-API
!	I-API
isFirst	I-API
)	I-API
{	O
//	O
Only	O
add	O
comma	O
before	O
item	O
if	O
it	O
is	O
not	O
the	O
first	O
item	O
sb.Append	B-API
(	I-API
``	I-API
,	I-API
''	I-API
)	I-API
;	O
}	O
else	O
{	O
isFirst	O
=	O
false	O
;	O
}	O
sb.Append	B-API
(	I-API
c.Name	I-API
)	I-API
;	O
}	O
return	O
sb.ToString	B-API
(	I-API
)	I-API
;	O
}	O
You	O
could	O
use	O
LINQ	B-API
to	O
Objects	O
:	O
string	B-API
[	I-API
]	I-API
strings	O
=	O
contactList.Select	B-API
(	I-API
c	I-API
=	I-API
c.Name	I-API
)	I-API
.ToArray	I-API
(	I-API
)	I-API
;	O
string	O
csv	O
=	O
string.Join	B-API
(	I-API
``	I-API
,	I-API
''	I-API
,	I-API
strings	I-API
)	I-API
;	O
Obviously	O
that	O
could	O
all	O
be	O
done	O
in	O
one	O
line	O
,	O
but	O
it	O
's	O
a	O
bit	O
clearer	O
on	O
two	O
.	O
?	O
php	B-API
$	O
outputString	O
=	O
(	O
'	O
,	O
'	O
,	O
$	O
array	O
)	O
Sorry	O
,	O
PHP	B-API
specific	O
example	O
,	O
but	O
might	O
help	O
somebody	O
.	O
I	O
like	O
the	O
idea	O
of	O
adding	O
the	O
comma	O
by	O
checking	O
if	O
the	O
container	O
is	O
empty	O
,	O
but	O
does	O
n't	O
that	O
mean	O
more	O
processing	O
as	O
it	O
needs	O
to	O
check	O
the	O
length	O
of	O
the	O
string	O
on	O
each	O
occurrence	O
?	O
You	O
're	O
prematurely	O
optimizing	O
,	O
the	O
performance	O
hit	O
would	O
be	O
negligible	O
.	O
You	O
could	O
also	O
make	O
an	O
array	O
of	O
c.Name	O
data	O
and	O
use	O
String.Join	B-API
method	O
to	O
create	O
your	O
line	O
.	O
public	O
string	O
ReturnAsCSV	B-API
(	I-API
ContactList	I-API
contactList	I-API
)	I-API
{	O
ListString	B-API
tmpList	O
=	O
new	O
Liststring	B-API
(	I-API
)	I-API
;	O
foreach	B-API
(	I-API
Contact	I-API
c	I-API
in	I-API
contactList	I-API
)	I-API
{	O
tmpList.Add	B-API
(	I-API
c.Name	I-API
)	I-API
;	O
}	O
return	O
String.Join	B-API
(	I-API
``	I-API
,	I-API
''	I-API
,	I-API
tmpList.ToArray	I-API
(	I-API
)	I-API
)	I-API
;	O
}	O
This	O
might	O
not	O
be	O
as	O
performant	O
as	O
the	O
StringBuilder	B-API
approach	O
,	O
but	O
it	O
definitely	O
looks	O
cleaner	O
.	O
Also	O
,	O
you	O
might	O
want	O
to	O
consider	O
using	O
.CurrentCulture.TextInfo.ListSeparator	B-API
instead	O
of	O
a	O
hard-coded	O
comma	O
--	O
If	O
your	O
output	O
is	O
going	O
to	O
be	O
imported	O
into	O
other	O
applications	O
,	O
you	O
might	O
have	O
problems	O
with	O
it	O
.	O
ListSeparator	B-API
may	O
be	O
different	O
across	O
different	O
cultures	O
,	O
and	O
MS	B-API
Excel	I-API
at	O
the	O
very	O
least	O
,	O
honors	O
this	O
setting	O
.	O
So	O
:	O
return	O
String.Join	B-API
(	I-API
System.Globalization.CultureInfo.CurrentCulture.TextInfo.ListSeparator	I-API
,	I-API
tmpList.ToArray	I-API
(	I-API
)	I-API
)	I-API
;	O
How	O
about	O
some	O
trimming	O
?	O
public	O
string	O
ReturnAsCSV	B-API
(	I-API
ContactList	I-API
contactList	I-API
)	I-API
{	O
StringBuilder	B-API
sb	O
=	O
new	O
StringBuilder	B-API
(	I-API
)	I-API
;	O
foreach	B-API
(	I-API
Contact	I-API
c	I-API
in	I-API
contactList	I-API
)	I-API
{	O
sb.Append	B-API
(	I-API
c.Name	I-API
+	I-API
``	I-API
,	I-API
''	I-API
)	I-API
;	O
}	O
return	O
sb.ToString	B-API
(	I-API
)	I-API
.Trim	I-API
(	I-API
'	I-API
,	I-API
'	I-API
)	I-API
;	O
}	O
Just	O
a	O
thought	O
,	O
but	O
remember	O
to	O
handle	O
comma	O
's	O
and	O
quotation	O
marks	O
(	O
``	O
)	O
in	O
the	O
field	O
values	O
,	O
otherwise	O
your	O
CSV	B-API
file	O
may	O
break	O
the	O
consumers	O
reader	O
.	O
Do	O
n't	O
forget	O
our	O
old	O
friend	O
``	O
for	O
''	O
.	O
It	O
's	O
not	O
as	O
nice-looking	O
as	O
foreach	B-API
but	O
it	O
has	O
the	O
advantage	O
of	O
being	O
able	O
to	O
start	O
at	O
the	O
second	O
element	O
.	O
public	O
string	O
ReturnAsCSV	B-API
(	I-API
ContactList	I-API
contactList	I-API
)	I-API
{	O
if	B-API
(	I-API
contactList	I-API
==	I-API
null	I-API
||	I-API
contactList.Count	B-API
==	I-API
0	I-API
)	I-API
return	O
string.Empty	B-API
;	O
StringBuilder	B-API
sb	O
=	O
new	O
StringBuilder	B-API
(	I-API
contactList	I-API
[	I-API
0	I-API
]	I-API
.Name	I-API
)	I-API
;	O
for	O
(	O
int	O
i	O
=	O
1	O
;	O
i	O
contactList.Count	B-API
;	O
i++	O
)	O
{	O
sb.Append	B-API
(	I-API
``	I-API
,	I-API
''	I-API
)	I-API
;	O
sb.Append	B-API
(	I-API
contactList	I-API
[	I-API
i	I-API
]	I-API
.Name	I-API
)	I-API
;	O
}	O
return	O
sb.ToString	B-API
(	I-API
)	I-API
;	O
}	O
You	O
could	O
also	O
wrap	O
the	O
second	O
Append	O
in	O
an	O
``	O
if	O
''	O
that	O
tests	O
whether	O
the	O
Name	O
property	O
contains	O
a	O
double-quote	O
or	O
a	O
comma	O
,	O
and	O
if	O
so	O
,	O
escape	O
them	O
appropriately	O
.	O
I	O
do	O
n't	O
know	O
if	O
I	O
'd	O
call	O
it	O
a	O
good	O
place	O
to	O
start	O
,	O
but	O
if	O
you	O
want	O
to	O
be	O
future	O
ready	O
,	O
take	O
a	O
look	O
at	O
the	O
windows	O
presentation	O
foundation	O
which	O
is	O
built	O
entirely	O
for	O
the	O
purpose	O
of	O
programming	O
GUI	O
's	O
for	O
windows	O
My	O
first	O
experience	O
writing	O
simple	O
GUI	O
applications	O
for	O
Windows	O
was	O
with	O
C	B-API
#	I-API
and	O
Visual	B-API
Studio	I-API
.	O
The	O
GUI-building	O
interface	O
is	O
a	O
simple	O
drag	O
and	O
drop	O
deal	O
that	O
generates	O
skeleton	O
methods	O
based	O
on	O
potential	O
user	O
actions	O
.	O
I	O
only	O
did	O
fairly	O
basic	O
programming	O
with	O
this	O
,	O
but	O
I	O
imagine	O
it	O
would	O
be	O
an	O
excellent	O
place	O
to	O
start	O
to	O
learn	O
the	O
basics	O
and	O
extend	O
into	O
the	O
more	O
advanced	O
capabilities	O
as	O
you	O
go	O
.	O
``	O
take	O
a	O
look	O
at	O
the	O
windows	O
presentation	O
foundation	O
''	O
...	O
In	O
other	O
words	O
,	O
Silverlight	B-API
.	O
If	O
you	O
do	O
n't	O
want	O
to	O
go	O
the	O
MS	O
route	O
you	O
might	O
give	O
Adobe	B-API
's	I-API
Flash/Flex	I-API
a	O
look	O
see	O
.	O
Both	O
Silverlight	B-API
and	O
Flash/Flex	B-API
build	O
RIA	O
's	O
.	O
Which	O
I	O
think	O
is	O
where	O
we	O
are	O
headed	O
.	O
They	O
days	O
of	O
Office	B-API
like	O
apps	O
are	O
numbered	O
This	O
is	O
a	O
rather	O
broad	O
question	O
,	O
as	O
programming	O
GUI	O
applications	O
in	O
Windows	O
can	O
be	O
done	O
in	O
so	O
many	O
ways	O
.	O
There	O
are	O
two	O
main	O
parts	O
to	O
developing	O
any	O
GUI	O
app	O
:	O
the	O
language	O
and	O
the	O
API/framework	O
.	O
Considering	O
you	O
're	O
interested	O
in	O
learning	O
to	O
build	O
Windows	O
GUI	O
apps	O
,	O
the	O
language	O
is	O
n't	O
really	O
a	O
point	O
of	O
focus	O
for	O
you	O
.	O
Hence	O
,	O
you	O
should	O
pick	O
a	O
language	O
you	O
already	O
know	O
and	O
work	O
with	O
a	O
framework	O
or	O
API	O
that	O
can	O
be	O
harnessed	O
by	O
your	O
chosen	O
language	O
.	O
If	O
you	O
want	O
to	O
use	O
C	O
you	O
're	O
pretty	O
much	O
restricted	O
to	O
dealing	O
with	O
the	O
Win32	B-API
API	I-API
yourself	O
,	O
in	O
which	O
case	O
reading	O
Petzold	O
or	O
Richter	O
would	O
be	O
great	O
places	O
to	O
start	O
.	O
The	O
Win32	B-API
API	I-API
can	O
be	O
quite	O
daunting	O
,	O
but	O
it	O
's	O
well	O
worth	O
the	O
effort	O
to	O
learn	O
(	O
imho	O
)	O
.	O
There	O
are	O
plenty	O
of	O
tutorials	O
on	O
Win32	B-API
on	O
the	O
web	O
,	O
and	O
there	O
's	O
always	O
MSDN	B-API
,	O
with	O
a	O
complete	O
reference/guide	O
to	O
the	O
Win32	B-API
API	I-API
.	O
Make	O
sure	O
you	O
cover	O
not	O
just	O
the	O
API	O
,	O
but	O
other	O
areas	O
such	O
as	O
resources/dialogs	O
as	O
they	O
are	O
building	O
blocks	O
for	O
your	O
Win32	B-API
application	O
.	O
If	O
you	O
want	O
to	O
use	O
C++	B-API
you	O
have	O
all	O
of	O
the	O
options	O
that	O
you	O
have	O
when	O
using	O
C	B-API
plus	O
a	O
few	O
others	O
.	O
I	O
'd	O
recommend	O
going	O
with	O
the	O
Win32	B-API
API	I-API
directly	O
,	O
and	O
then	O
moving	O
on	O
to	O
a	O
known	O
framework	O
such	O
as	O
MFC	B-API
,	O
Qt	B-API
,	O
wxWindows	B-API
or	O
GTK	B-API
so	O
that	O
you	O
can	O
spend	O
less	O
time	O
working	O
with	O
boilerplate	O
code	O
and	O
instead	O
focus	O
on	O
writing	O
your	O
application	O
logic	O
.	O
The	O
last	O
3	O
options	O
I	O
just	O
listed	O
have	O
the	O
added	O
benefit	O
of	O
being	O
cross-platform	O
,	O
so	O
you	O
do	O
n't	O
have	O
to	O
worry	O
too	O
much	O
about	O
platform-specific	O
issues	O
.	O
Given	O
that	O
you	O
said	O
you	O
want	O
to	O
work	O
with	O
Windows	O
,	O
I	O
'll	O
assume	O
you	O
're	O
keen	O
to	O
focus	O
on	O
that	O
rather	O
than	O
cross-platform	O
--	O
so	O
go	O
with	O
MFC	B-API
,	O
but	O
spend	O
some	O
time	O
with	O
the	O
Win32	B-API
API	I-API
first	O
to	O
get	O
familiar	O
with	O
some	O
of	O
the	O
concepts	O
.	O
When	O
dealing	O
with	O
MFC	B-API
and	O
the	O
Win32	B-API
API	I-API
,	O
it	O
's	O
a	O
good	O
idea	O
to	O
try	O
and	O
get	O
a	O
solid	O
understanding	O
of	O
the	O
terminology	O
prior	O
to	O
writing	O
code	O
.	O
For	O
example	O
,	O
you	O
need	O
to	O
understand	O
what	O
the	O
message	O
pump	O
is	O
,	O
and	O
how	O
it	O
works	O
.	O
You	O
need	O
to	O
know	O
about	O
concepts	O
such	O
as	O
``	O
owner-drawn	O
controls	O
''	O
,	O
and	O
subclassing	O
.	O
When	O
you	O
understand	O
these	O
things	O
(	O
and	O
more	O
)	O
,	O
you	O
'll	O
find	O
it	O
easier	O
to	O
work	O
with	O
MFC	B-API
because	O
it	O
uses	O
similar	O
terminology	O
in	O
its	O
class	O
interfaces	O
(	O
eg	O
.	O
you	O
need	O
to	O
know	O
what	O
``	O
translate	O
messages	O
''	O
means	O
before	O
you	O
can	O
understand	O
how	O
and	O
when	O
to	O
use	O
PreTranslateMessage	B-API
)	O
.	O
You	O
could	O
also	O
use	O
Managed	O
C++	B-API
to	O
write	O
.NET	B-API
GUI	O
applications	O
,	O
but	O
I	O
've	O
read	O
in	O
a	O
few	O
places	O
that	O
Managed	B-API
C++	I-API
was	O
n't	O
really	O
intended	O
to	O
be	O
used	O
in	O
this	O
manner	O
.	O
Instead	O
it	O
should	O
be	O
used	O
as	O
a	O
gateway	O
between	O
native/unmanaged	O
code	O
and	O
managed	O
code	O
.	O
If	O
you	O
're	O
using	O
.NET	B-API
it	O
's	O
best	O
to	O
use	O
a	O
.NET	B-API
language	O
such	O
as	O
VB.NET	B-API
or	O
C	B-API
#	I-API
to	O
build	O
your	O
GUIs	O
.	O
So	O
if	O
you	O
are	O
going	O
to	O
use	O
.NET	B-API
,	O
you	O
currently	O
have	O
the	O
choice	O
of	O
the	O
WinForms	B-API
library	I-API
,	O
or	O
WPF	B-API
.	O
I	O
personally	O
feel	O
that	O
you	O
'd	O
be	O
wasting	O
time	O
learning	O
to	O
build	O
WinForms	B-API
applications	O
given	O
that	O
WPF	B-API
is	O
designed	O
to	O
replace	O
it	O
.	O
Over	O
time	O
WPF	B-API
will	O
become	O
more	O
prevelant	O
and	O
Winforms	B-API
will	O
most	O
likely	O
die	O
off	O
.	O
WPF	B-API
has	O
a	O
much	O
richer	O
API	O
set	O
,	O
and	O
does	O
n't	O
suffer	O
from	O
many	O
of	O
the	O
limitations	O
that	O
Winforms	B-API
does	O
.	O
If	O
you	O
do	O
choose	O
this	O
route	O
,	O
however	O
,	O
you	O
'll	O
no	O
doubt	O
have	O
to	O
learn	O
XAML	B-API
,	O
which	O
is	O
a	O
markup	O
language	O
that	O
drives	O
WPF	B-API
applications	O
.	O
This	O
technology	O
is	O
coming	O
of	O
age	O
,	O
and	O
there	O
are	O
many	O
great	O
places	O
to	O
learn	O
about	O
it	O
.	O
First	O
,	O
there	O
are	O
sites	O
such	O
as	O
LearnWPF	B-API
,	O
and	O
DrWPF	B-API
which	O
have	O
some	O
really	O
great	O
articles	O
.	O
Secondly	O
,	O
there	O
are	O
plenty	O
of	O
quality	O
books	O
on	O
the	O
topic	O
.	O
So	O
,	O
to	O
sum	O
up	O
,	O
once	O
you	O
've	O
picked	O
your	O
language	O
and	O
tech	O
,	O
the	O
path	O
is	O
actually	O
quite	O
easy	O
.	O
Just	O
pick	O
up	O
a	O
book	O
or	O
two	O
,	O
read	O
some	O
blogs	O
,	O
get	O
into	O
some	O
code	O
samples..	O
and	O
most	O
importantly	O
...	O
write	O
code	O
.	O
Keep	O
writing	O
,	O
keep	O
making	O
mistakes	O
,	O
and	O
keep	O
learning	O
from	O
them	O
.	O
As	O
a	O
final	O
note	O
...	O
In	O
other	O
words	O
,	O
Silverlight	B-API
.	O
If	O
you	O
do	O
n't	O
want	O
to	O
go	O
the	O
MS	O
route	O
you	O
might	O
give	O
Adobe	B-API
's	I-API
Flash/Flex	B-API
a	O
look	O
see	O
.	O
Both	O
Silverlight	B-API
and	O
Flash/Flex	B-API
build	O
RIA	B-API
's	O
.	O
Which	O
I	O
think	O
is	O
where	O
we	O
are	O
headed	O
.	O
They	O
days	O
of	O
Office	O
like	O
apps	O
are	O
numbered	O
I	O
do	O
n't	O
agree	O
at	O
all	O
.	O
Silverlight	B-API
is	O
not	O
the	O
same	O
as	O
WPF	B-API
.	O
Silverlight	B-API
is	O
web-specific	O
,	O
and	O
only	O
has	O
a	O
subset	O
of	O
WPF	B-API
's	O
features	O
.	O
Given	O
that	O
the	O
question	O
asks	O
for	O
Windows	O
GUI	O
apps	O
,	O
Flash/Flex	B-API
Rich	O
Internet	O
Apps	O
are	O
not	O
really	O
a	O
fitting	O
suggestion	O
.	O
I	O
also	O
do	O
n't	O
agree	O
that	O
the	O
days	O
of	O
Rich	B-API
Client	I-API
Applications	I-API
(	O
such	O
as	O
office	O
)	O
are	O
numbered	O
at	O
all	O
.	O
I	O
hope	O
that	O
helps	O
.	O
Good	O
luck	O
:	O
)	O
I	O
wo	O
n't	O
help	O
much	O
but	O
I	O
remember	O
that	O
I	O
was	O
able	O
to	O
wrap	O
MATLAB	B-API
simulation	O
into	O
DLL	B-API
and	O
then	O
call	O
it	O
from	O
Delphi	O
app	O
.	O
It	O
work	O
really	O
well	O
.	O
Anyway	O
:	O
good	O
luck	O
!	O
!	O
!	O
I	O
know	O
that	O
Visual	B-API
Studio	I-API
itself	O
(	O
at	O
least	O
in	O
2003	O
version	O
)	O
references	O
the	O
IE	O
dll	O
directly	O
to	O
render	O
the	O
``	O
Design	O
View	O
''	O
.	O
It	O
may	O
be	O
worth	O
looking	O
into	O
that	O
.	O
Otherwise	O
,	O
I	O
ca	O
n't	O
think	O
of	O
anything	O
beyond	O
the	O
Web	O
Browser	O
control	O
.	O
You	O
can	O
print	O
from	O
the	O
command	O
line	O
using	O
the	O
following	O
:	O
rundll32.exe	O
%	O
WINDIR	O
%	O
\System32\mshtml.dll	O
,	O
PrintHTML	B-API
``	O
%	O
1	O
''	O
Where	O
%	O
1	O
is	O
the	O
file	O
path	O
of	O
the	O
html	O
file	O
to	O
be	O
printed	O
.	O
If	O
you	O
do	O
n't	O
need	O
to	O
print	O
from	O
memory	O
(	O
or	O
can	O
afford	O
to	O
write	O
to	O
the	O
disk	O
in	O
a	O
temp	O
file	O
)	O
you	O
can	O
use	O
:	O
using	B-API
(	I-API
Process	I-API
printProcess	I-API
=	I-API
new	I-API
)	I-API
{	O
string	O
systemPath	O
=	O
;	O
printProcess.StartInfo.FileName	B-API
=	O
systemPath	O
+	O
@	O
''	O
\rundll32.exe	O
''	O
;	O
printProcess.StartInfo.Arguments	B-API
=	O
systemPath	O
+	O
@	O
''	O
\mshtml.dll	O
,	O
PrintHTML	B-API
``	O
``	O
''	O
+	O
fileToPrint	B-API
+	O
@	O
''	O
''	O
''	O
''	O
;	O
Process	B-API
(	I-API
)	I-API
Environment.GetFolderPath	B-API
(	I-API
Environment.SpecialFolder.System	I-API
)	I-API
printProcess.Start	B-API
(	I-API
)	I-API
N.B	O
.	O
This	O
only	O
works	O
on	O
Windows	B-API
2000	I-API
and	O
above	O
I	O
think	O
.	O
Depending	O
on	O
the	O
scaling	O
,	O
the	O
relative	O
image	O
pixel	O
could	O
be	O
anywhere	O
in	O
a	O
number	O
of	O
pixels	O
.	O
For	O
example	O
,	O
if	O
the	O
image	O
is	O
scaled	O
down	O
significantly	O
,	O
pixel	O
2	O
,	O
10	O
could	O
represent	O
2	O
,	O
10	O
all	O
the	O
way	O
up	O
to	O
20	O
,	O
100	O
)	O
,	O
so	O
you	O
'll	O
have	O
to	O
do	O
the	O
math	O
yourself	O
and	O
take	O
full	O
responsibility	O
for	O
any	O
inaccuracies	O
!	O
:	O
-	O
)	O
I	O
wound	O
up	O
just	O
implementing	O
the	O
translation	O
manually	O
.	O
The	O
code	O
's	O
not	O
too	O
bad	O
,	O
but	O
it	O
did	O
leave	O
me	O
wishing	O
that	O
they	O
provided	O
support	O
for	O
it	O
directly	O
.	O
I	O
could	O
see	O
such	O
a	O
method	O
being	O
useful	O
in	O
a	O
lot	O
of	O
different	O
circumstances	O
.	O
I	O
guess	O
that	O
's	O
why	O
they	O
added	O
extension	O
methods	O
:	O
)	O
In	O
pseudocode	O
:	O
//	O
Recompute	O
the	O
image	O
scaling	O
the	O
zoom	O
mode	O
uses	O
to	O
fit	O
the	O
image	O
on	O
screen	O
imageScale	O
:	O
:=	O
min	B-API
(	I-API
pictureBox.width	I-API
/	I-API
image.width	I-API
,	I-API
pictureBox.height	I-API
/	I-API
image.height	I-API
)	I-API
scaledWidth	O
:	O
:=	O
image.width	B-API
*	O
imageScale	B-API
scaledHeight	O
:	O
:=	O
image.height	B-API
*	O
imageScale	B-API
//	O
Compute	O
the	O
offset	O
of	O
the	O
image	O
to	O
center	O
it	O
in	O
the	O
picture	O
box	O
imageX	O
:	O
:=	O
(	B-API
pictureBox.width	I-API
-	I-API
scaledWidth	I-API
)	I-API
/	O
2	O
imageY	O
:	O
:=	O
(	B-API
pictureBox.height	I-API
-	I-API
scaledHeight	I-API
)	I-API
/	O
2	O
//	O
Test	O
the	O
coordinate	O
in	O
the	O
picture	O
box	O
against	O
the	O
image	O
bounds	O
if	O
pos.x	O
imageX	O
or	O
imageX	O
+	O
scaledWidth	O
pos.x	O
then	O
return	O
null	O
if	O
pos.y	O
imageY	O
or	O
imageY	O
+	O
scaledHeight	O
pos.y	O
then	O
return	O
null	O
//	O
Compute	O
the	O
normalized	O
(	O
0..1	O
)	O
coordinates	O
in	O
image	O
space	O
u	O
:	O
:=	O
(	B-API
pos.x	I-API
-	I-API
imageX	I-API
)	I-API
/	O
imageScale	B-API
v	O
:	O
:=	O
(	B-API
pos.y	I-API
-	I-API
imageY	I-API
)	I-API
/	O
imageScale	B-API
return	B-API
(	I-API
u	I-API
,	I-API
v	I-API
)	I-API
To	O
get	O
the	O
pixel	O
position	O
in	O
the	O
image	O
,	O
you	O
'd	O
just	O
multiply	O
by	O
the	O
actual	O
image	O
pixel	O
dimensions	O
,	O
but	O
the	O
normalized	O
coordinates	O
allow	O
you	O
to	O
address	O
the	O
original	O
responder	O
's	O
point	O
about	O
resolving	O
ambiguity	O
on	O
a	O
case-by-case	O
basis	O
.	O
Scott	O
Hanselman	O
had	O
a	O
good	O
Podcast	O
about	O
this	O
,	O
entitled	O
:	O
``	O
The	O
Past	O
,	O
Present	O
and	O
Future	O
of	O
.NET	B-API
Unit	I-API
Testing	I-API
Frameworks	I-API
''	O
:	O
Hanselminutes	O
#	O
112	O
I	O
think	O
is	O
your	O
best	O
bet	O
.	O
With	O
,	O
you	O
get	O
great	O
integration	O
within	O
.	O
(	O
Resharper	O
also	O
has	O
a	O
unit	O
test	O
runner	O
if	O
you	O
're	O
using	O
it	O
)	O
.	O
it	O
simple	O
to	O
use	O
and	O
follows	O
an	O
established	O
paradigm	O
.	O
You	O
'll	O
also	O
find	O
plenty	O
of	O
projects/tutorials/guides	O
using	O
it	O
which	O
always	O
helps	O
.	O
Your	O
other	O
main	O
choice	O
is	O
probably	O
MBUnit	B-API
,	O
which	O
is	O
more	O
and	O
more	O
position	O
itself	O
as	O
the	O
framework	O
of	O
choice	O
(	O
in	O
conjunction	O
with	O
Gallio	O
http	O
:	O
//www.gallio.org	O
)	O
.	O
Visual	B-API
Studio	I-API
has	O
a	O
built	O
in	O
test	O
project	O
type	O
that	O
works	O
in	O
a	O
similar	O
way	O
to	O
NUnit	B-API
,	O
but	O
obviously	O
has	O
much	O
tighter	O
integration	O
with	O
Visual	B-API
(	O
can	O
run	O
on	O
every	O
build	O
and	O
shows	O
the	O
results	O
in	O
a	O
similar	O
way	O
to	O
the	O
conversion	O
results	O
page	O
when	O
upgrading	O
solution	O
files	O
)	O
,	O
but	O
it	O
is	O
obviously	O
not	O
as	O
mature	O
as	O
NUnit	B-API
as	O
it	O
's	O
pretty	O
new	O
and	O
I	O
'm	O
not	O
sure	O
about	O
how	O
it	O
handles	O
mocking	O
.	O
But	O
it	O
would	O
be	O
worth	O
looking	O
into	O
when	O
your	O
team	O
moves	O
to	O
is	O
worth	O
alook	O
,	O
it	O
has	O
a	O
set	O
of	O
features	O
comparable	O
to	O
,	O
it	O
has	O
its	O
own	O
GUI	O
,	O
or	O
can	O
be	O
integrated	O
into	O
if	O
you	O
have	O
.	O
I	O
would	O
also	O
recommend	O
Rhino	B-API
if	O
you	O
are	O
doing	O
any	O
sort	O
of	O
.	O
I	O
would	O
say	O
mbUnit	O
also	O
,	O
I	O
like	O
being	O
able	O
to	O
run	O
a	O
single	O
test	O
many	O
times	O
just	O
by	O
specifying	O
inputs	O
and	O
result	O
right	O
above	O
the	O
test	O
function	O
.	O
Horrible	O
description	O
of	O
what	O
I	O
mean	O
so	O
here	O
is	O
a	O
link	O
that	O
shows	O
you	O
what	O
I	O
mean	O
.	O
Assuming	O
you	O
have	O
the	O
correct	O
assemblies	O
and	O
a	O
C	B-API
#	I-API
compiler	O
you	O
in	O
theory	O
can	O
use	O
whatever	O
you	O
want	O
to	O
edit	O
the	O
code	O
and	O
then	O
just	O
run	O
the	O
compiler	O
by	O
hand	O
or	O
using	O
a	O
build	O
script	O
.	O
That	O
being	O
said	O
it	O
is	O
a	O
real	O
pain	O
doing	O
.NET	B-API
development	O
without	O
Visual	B-API
Studio/SharpEdit/Monodevelop	I-API
in	O
my	O
opinion	O
.	O
There	O
is	O
nothing	O
VS	B-API
specific	O
with	O
the	O
MVC	B-API
framework	O
-	O
it	O
is	O
just	O
a	O
bunch	O
of	O
DLLs	O
that	O
you	O
can	O
use	O
.	O
The	O
wizards	O
in	O
VS	O
just	O
build	O
you	O
a	O
quick-start	O
framework	O
.	O
ASP.NET	B-API
MVC	I-API
is	O
``	O
bin-deployable	O
''	O
-	O
there	O
is	O
nothing	O
too	O
clever	O
to	O
set	O
up	O
on	O
the	O
server	O
either	O
-	O
just	O
point	O
the	O
wildcard	O
ISAPI	B-API
filter	O
to	O
ASP.NET	B-API
I	O
ca	O
n't	O
think	O
of	O
any	O
cross	O
platform	O
way	O
of	O
what	O
you	O
want	O
(	O
or	O
any	O
guaranteed	O
way	O
full	O
stop	O
)	O
but	O
as	O
you	O
are	O
using	O
GetTickCount	B-API
perhaps	O
you	O
are	O
n't	O
interested	O
in	O
cross	O
platform	O
:	O
)	O
I	O
'd	O
use	O
interprocess	O
communications	O
and	O
set	O
the	O
intensive	O
processes	O
nice	O
levels	O
to	O
get	O
what	O
you	O
require	O
but	O
I	O
'm	O
not	O
sure	O
that	O
's	O
appropriate	O
for	O
your	O
situation	O
.	O
EDIT	O
:	O
I	O
agree	O
with	O
Bernard	O
which	O
is	O
why	O
I	O
think	O
a	O
process	O
rather	O
than	O
a	O
thread	O
might	O
be	O
more	O
appropriate	O
but	O
it	O
just	O
might	O
not	O
suit	O
your	O
purposes	O
.	O
On	O
linux	O
,	O
you	O
can	O
change	O
the	O
scheduling	O
priority	O
of	O
a	O
thread	O
with	O
nice	B-API
(	I-API
)	I-API
.	O
In	O
Python	B-API
monkey	O
patching	O
generally	O
works	O
by	O
overwriting	O
a	O
class	O
or	O
functions	O
signature	O
with	O
your	O
own	O
.	O
Below	O
is	O
an	O
example	O
from	O
the	O
Zope	B-API
Wiki	I-API
:	O
from	B-API
SomeOtherProduct.SomeModule	I-API
import	B-API
SomeClassdef	I-API
:	I-API
return	I-API
``	O
ook	O
ook	O
eee	O
eee	O
eee	O
!	O
``	O
SomeClass.speak	B-API
=	O
speak	B-API
(	I-API
self	I-API
)	I-API
That	O
code	O
will	O
overwrite/create	O
a	O
method	O
called	O
speak	O
on	O
the	O
class	O
.	O
In	O
Jeff	O
Atwood	O
's	O
recent	O
post	O
on	O
monkey	O
patching	O
.	O
He	O
shows	O
an	O
example	O
in	O
C	B-API
#	I-API
3.0	I-API
which	O
is	O
the	O
current	O
language	O
I	O
use	O
for	O
work	O
.	O
I	O
do	O
n't	O
know	O
Python	B-API
syntax	O
,	O
but	O
I	O
know	O
Ruby	B-API
can	O
do	O
it	O
,	O
and	O
it	O
is	O
rather	O
trivial	O
.	O
Let	O
's	O
say	O
you	O
want	O
to	O
add	O
a	O
method	O
to	O
Array	B-API
that	O
prints	O
the	O
length	O
to	O
standard	O
out	O
:	O
class	O
Array	B-API
def	B-API
print_length	B-API
puts	O
length	O
If	O
you	O
do	O
n't	O
want	O
to	O
modify	O
the	O
whole	O
class	O
,	O
you	O
can	O
just	O
add	O
the	O
method	O
to	O
a	O
single	O
instance	O
of	O
the	O
array	O
,	O
and	O
no	O
other	O
arrays	O
will	O
have	O
the	O
method	O
:	O
array	B-API
=	O
[	B-API
1	I-API
,	I-API
2	I-API
,	I-API
3	I-API
]	I-API
def	B-API
array.print_length	B-API
puts	O
Just	O
be	O
aware	O
of	O
the	O
issues	O
involved	O
in	O
using	O
this	O
feature	O
.	O
Jeff	O
Atwood	O
actually	O
wrote	O
about	O
it	O
not	O
too	O
long	O
ago	O
.	O
In	O
Python	B-API
,	O
there	O
is	O
a	O
difference	O
between	O
functions	O
and	O
bound	O
methods	O
.	O
def	B-API
foo	O
(	O
)	O
:	O
...	O
print	O
``	O
foo	O
''	O
...	O
class	O
A	O
:	O
...	O
def	B-API
bar	O
(	O
self	O
)	O
:	O
...	O
print	O
``	O
bar	O
''	O
...	O
a	O
=	O
A	O
(	O
)	O
foo	O
function	O
foo	O
at	O
0x00A98D70	O
a.bar	O
bound	O
method	O
A.bar	O
of	O
__main__.A	B-API
instance	O
at	O
0x00A9BC88	O
Bound	O
methods	O
have	O
been	O
``	O
bound	O
''	O
(	O
how	O
descriptive	O
)	O
to	O
an	O
instance	O
,	O
and	O
that	O
instance	O
will	O
be	O
passed	O
as	O
the	O
first	O
argument	O
whenever	O
the	O
method	O
is	O
called	O
.	O
Callables	B-API
that	O
are	O
attributes	O
of	O
a	O
class	O
(	O
as	O
opposed	O
to	O
an	O
instance	O
)	O
are	O
still	O
unbound	O
,	O
though	O
,	O
so	O
you	O
can	O
modify	O
the	O
class	O
definition	O
whenever	O
you	O
want	O
:	O
def	B-API
fooFighters	O
(	O
self	O
)	O
:	O
...	O
print	O
``	O
fooFighters	O
''	O
...	O
A.fooFighters	B-API
=	O
fooFighters	O
a2	O
=	O
A	O
(	O
)	O
a2.fooFighters	B-API
bound	O
method	O
A.fooFighters	B-API
of	O
__main__.A	B-API
instance	O
at	O
0x00A9BEB8	O
a2.fooFighters	O
(	O
)	O
fooFighters	O
Previously	O
defined	O
instances	O
are	O
updated	O
as	O
well	O
(	O
as	O
long	O
as	O
they	O
have	O
n't	O
overridden	O
the	O
attribute	O
themselves	O
)	O
:	O
a.fooFighters	B-API
(	O
)	O
fooFighters	O
The	O
problem	O
comes	O
when	O
you	O
want	O
to	O
attach	O
a	O
method	O
to	O
a	O
single	O
instance	O
:	O
def	B-API
barFighters	O
(	O
self	O
)	O
:	O
...	O
print	O
``	O
barFighters	O
''	O
...	O
a.barFighters	B-API
=	O
barFighters	O
a.barFighters	B-API
(	I-API
)	I-API
Traceback	B-API
(	O
most	O
recent	O
call	O
last	O
)	O
:	O
File	O
``	O
stdin	B-API
''	O
,	O
line	O
1	O
,	O
in	O
module	O
TypeError	B-API
:	O
barFighters	B-API
(	I-API
)	I-API
takes	O
exactly	O
1	O
argument	O
(	O
0	O
given	O
)	O
The	O
function	O
is	O
not	O
automatically	O
bound	O
when	O
it	O
's	O
attached	O
directly	O
to	O
an	O
instance	O
:	O
a.barFighters	B-API
function	O
barFighters	O
at	O
0x00A98EF0	O
To	O
bind	O
it	O
,	O
we	O
can	O
use	O
the	O
MethodType	B-API
function	O
in	O
the	O
types	O
module	O
:	O
import	B-API
types	O
a.barFighters	B-API
=	O
types.MethodType	B-API
(	I-API
barFighters	I-API
,	I-API
a	I-API
)	I-API
a.barFighters	B-API
bound	O
method	O
?	O
.barFighters	O
of	O
__main__.A	B-API
instance	O
at	O
0x00A9BC88	O
a.barFighters	B-API
(	I-API
)	I-API
barFighters	O
This	O
time	O
other	O
instances	O
of	O
the	O
class	O
have	O
not	O
been	O
affected	O
:	O
a2.barFighters	B-API
(	I-API
)	I-API
Traceback	B-API
(	O
most	O
recent	O
call	O
last	O
)	O
:	O
File	B-API
``	O
stdin	B-API
''	O
,	O
line	O
1	O
,	O
in	O
module	O
AttributeError	B-API
:	O
A	O
instance	O
has	O
no	O
attribute	O
'barFighters'	O
More	O
information	O
can	O
be	O
found	O
by	O
reading	O
about	O
descriptors	O
and	O
metaclass	O
programming	O
.	O
What	O
you	O
're	O
looking	O
for	O
is	O
I	O
believe	O
.	O
Use	O
this	O
to	O
set	O
an	O
attribute	O
on	O
an	O
object	O
.	O
def	B-API
:	O
print	O
class	B-API
A	I-API
:	O
pass	O
a	O
=	O
#	O
s	O
becomes	O
the	O
implicit	O
'self	O
'	O
variable	O
__	O
main	O
__	O
.	O
A	O
instance	O
at	O
printme	B-API
(	I-API
s	I-API
)	I-API
repr	B-API
(	I-API
s	I-API
)	I-API
setattr	B-API
(	I-API
A	I-API
,	I-API
'printme	I-API
'	I-API
,	I-API
printme	I-API
)	I-API
A	B-API
(	I-API
)	I-API
a.printme	B-API
(	I-API
)	I-API
why	O
massive	O
lookup	O
table	O
?	O
string	O
GetWrittenInteger	B-API
(	I-API
int	I-API
n	I-API
)	I-API
{	O
string	B-API
[	I-API
]	I-API
a	O
=	O
new	O
string	B-API
[	I-API
]	I-API
{	O
``	O
One	O
''	O
,	O
``	O
Two	O
''	O
,	O
``	O
Three	O
''	O
,	O
``	O
Four	O
''	O
,	O
``	O
Five	O
''	O
,	O
``	O
Six	O
''	O
,	O
``	O
Seven	O
''	O
,	O
``	O
Eight	O
''	O
,	O
``	O
Nine	O
''	O
}	O
string	B-API
[	I-API
]	I-API
b	O
=	O
new	O
string	B-API
[	I-API
]	I-API
{	O
``	O
Ten	O
''	O
,	O
``	O
Eleven	O
''	O
,	O
``	O
Twelve	O
''	O
,	O
``	O
Thirteen	O
''	O
,	O
``	O
Fourteen	O
''	O
,	O
``	O
Fifteen	O
''	O
,	O
``	O
Sixteen	O
''	O
,	O
``	O
Seventeen	O
''	O
,	O
``	O
Eighteen	O
''	O
,	O
``	O
Nineteen	O
''	O
}	O
string	B-API
[	I-API
]	I-API
c	O
=	O
new	O
string	B-API
[	I-API
]	I-API
{	O
``	O
Twenty	O
''	O
,	O
``	O
Thirty	O
''	O
,	O
``	O
Forty	O
''	O
,	O
``	O
Sixty	O
''	O
,	O
``	O
Seventy	O
''	O
,	O
``	O
Eighty	O
''	O
,	O
``	O
Ninety	O
''	O
}	O
;	O
string	B-API
[	I-API
]	I-API
d	O
=	O
new	O
string	B-API
[	I-API
]	I-API
{	O
``	O
Hundred	O
''	O
,	O
``	O
Thousand	O
''	O
,	O
``	O
Million	O
''	O
}	O
string	O
s	O
=	O
n.ToString	B-API
(	I-API
)	I-API
;	O
for	O
(	O
int	O
i	O
=	O
0	O
;	O
i	O
s.Length	B-API
;	O
i++	O
)	O
{	O
//	O
logic	O
(	O
too	O
lazy	O
but	O
you	O
get	O
the	O
idea	O
)	O
}	O
}	O
Justin	O
Rogers	O
has	O
a	O
``	O
NumbersToEnglish	O
''	O
class	O
which	O
should	O
do	O
the	O
job	O
for	O
you	O
nicely	O
!	O
Initial	O
posting	O
.	O
http	O
:	O
//weblogs.asp.net/justin_rogers/archive/2004/06/09/151675.aspx	O
Finalized	O
Source	O
Code	O
http	O
:	O
//weblogs.asp.net/justin_rogers/articles/151757.aspx	O
It	O
does	O
have	O
a	O
bit	O
of	O
an	O
internal	O
lookup	O
table	O
but	O
I	O
do	O
n't	O
really	O
know	O
how	O
you	O
are	O
going	O
to	O
be	O
able	O
to	O
get	O
away	O
from	O
that	O
.	O
I	O
use	O
this	O
code.It	O
is	O
VB	B-API
code	O
but	O
you	O
can	O
easily	O
translate	O
it	O
to	O
C	B-API
#	I-API
.	O
It	O
works	O
Function	O
NumberToText	B-API
(	I-API
ByVal	I-API
n	I-API
As	I-API
Integer	I-API
)	I-API
As	O
String	O
Select	O
Case	O
n	O
Case	O
0	O
Return	O
``	O
''	O
Case	O
1	O
To	O
19	O
Dim	O
arr	B-API
(	I-API
)	I-API
As	O
String	O
=	O
{	O
``	O
One	O
''	O
,	O
''	O
Two	O
''	O
,	O
''	O
Three	O
''	O
,	O
''	O
Four	O
''	O
,	O
''	O
Five	O
''	O
,	O
''	O
Six	O
''	O
,	O
''	O
Seven	O
''	O
,	O
_	O
``	O
Eight	O
''	O
,	O
''	O
Nine	O
''	O
,	O
''	O
Ten	O
''	O
,	O
''	O
Eleven	O
''	O
,	O
''	O
Twelve	O
''	O
,	O
''	O
Thirteen	O
''	O
,	O
''	O
Fourteen	O
''	O
,	O
_	O
``	O
Fifteen	O
''	O
,	O
''	O
Sixteen	O
''	O
,	O
''	O
Seventeen	O
''	O
,	O
''	O
Eighteen	O
''	O
,	O
''	O
Nineteen	O
''	O
}	O
Return	O
arr	O
(	O
n-1	O
)	O
``	O
``	O
Case	O
20	O
to	O
99	O
Dim	O
arr	O
(	O
)	O
as	O
String	B-API
=	O
{	O
``	O
Twenty	O
''	O
,	O
''	O
Thirty	O
''	O
,	O
''	O
Forty	O
''	O
,	O
''	O
Fifty	O
''	O
,	O
''	O
Sixty	O
''	O
,	O
''	O
Seventy	O
''	O
,	O
''	O
Eighty	O
''	O
,	O
''	O
Ninety	O
''	O
}	O
Return	O
arr	O
(	O
n\10	O
-2	O
)	O
``	O
``	O
NumberToText	B-API
(	I-API
n	I-API
Mod	I-API
10	I-API
)	I-API
Case	O
100	O
to	O
199	O
Return	O
``	O
One	O
Hundred	O
``	O
NumberToText	B-API
(	I-API
n	I-API
Mod	I-API
100	I-API
)	I-API
Case	O
200	O
to	O
999	O
Return	O
NumberToText	B-API
(	I-API
n\100	I-API
)	I-API
``	O
Hundreds	O
``	O
NumberToText	B-API
(	I-API
n	I-API
mod	I-API
100	I-API
)	I-API
Case	O
1000	O
to	O
1999	O
Return	O
``	O
One	O
Thousand	O
``	O
NumberToText	B-API
(	I-API
n	I-API
Mod	I-API
1000	I-API
)	I-API
Case	O
2000	O
to	O
999999	O
Return	O
NumberToText	B-API
(	I-API
n\1000	I-API
)	I-API
``	O
Thousands	O
``	O
NumberToText	B-API
(	I-API
n	I-API
Mod	I-API
1000	I-API
)	I-API
Case	O
1000000	O
to	O
1999999	O
Return	O
``	O
One	O
Million	O
``	O
NumberToText	B-API
(	I-API
n	I-API
Mod	I-API
1000000	I-API
)	I-API
Case	O
1000000	O
to	O
999999999	O
Return	O
NumberToText	B-API
(	I-API
n\1000000	I-API
)	I-API
``	O
Millions	O
``	O
NumberToText	B-API
(	I-API
n	I-API
Mod	I-API
1000000	I-API
)	I-API
Case	O
1000000000	O
to	O
1999999999	O
Return	O
``	O
One	O
Billion	O
``	O
NumberTotext	B-API
(	I-API
n	I-API
Mod	I-API
1000000000	I-API
)	I-API
Case	O
Else	B-API
Return	I-API
NumberToText	B-API
(	I-API
n\1000000000	I-API
)	I-API
``	O
Billion	O
``	O
_	O
NumberToText	B-API
(	I-API
n	I-API
mod	I-API
1000000000	I-API
)	I-API
End	O
Select	O
End	O
Function	O
Here	O
is	O
the	O
code	O
in	O
c	B-API
#	I-API
public	O
static	B-API
string	O
AmountInWords	B-API
(	I-API
double	I-API
amount	I-API
)	I-API
{	O
var	O
n	O
=	O
(	O
int	O
)	O
amount	O
;	O
if	O
(	O
n	O
==	O
0	O
)	O
return	O
``	O
''	O
;	O
else	B-API
if	I-API
(	I-API
n	I-API
0	I-API
n	I-API
=	I-API
19	I-API
)	I-API
{	O
var	O
arr	O
=	O
new	O
string	B-API
[	I-API
]	I-API
{	O
``	O
One	O
''	O
,	O
``	O
Two	O
''	O
,	O
``	O
Three	O
''	O
,	O
``	O
Four	O
''	O
,	O
``	O
Five	O
''	O
,	O
``	O
Six	O
''	O
,	O
``	O
Seven	O
''	O
,	O
``	O
Eight	O
''	O
,	O
``	O
Nine	O
''	O
,	O
``	O
Ten	O
''	O
,	O
``	O
Eleven	O
''	O
,	O
``	O
Twelve	O
''	O
,	O
``	O
Thirteen	O
''	O
,	O
``	O
Fourteen	O
''	O
,	O
``	O
Fifteen	O
''	O
,	O
``	O
Sixteen	O
''	O
,	O
``	O
Seventeen	O
''	O
,	O
``	O
Eighteen	O
''	O
,	O
``	O
Nineteen	O
''	O
}	O
;	O
return	O
arr	O
[	O
n	O
-	O
1	O
]	O
+	O
``	O
``	O
;	O
}	O
else	B-API
if	I-API
(	I-API
n	I-API
=	I-API
20	I-API
n	I-API
=	I-API
99	I-API
)	I-API
{	O
var	O
arr	O
=	O
new	O
string	B-API
[	I-API
]	I-API
{	O
``	O
Twenty	O
''	O
,	O
``	O
Thirty	O
''	O
,	O
``	O
Forty	O
''	O
,	O
``	O
Fifty	O
''	O
,	O
``	O
Sixty	O
''	O
,	O
``	O
Seventy	O
''	O
,	O
``	O
Eighty	O
''	O
,	O
``	O
Ninety	O
''	O
}	O
;	O
return	O
arr	O
[	O
n	O
/	O
10	O
-	O
2	O
]	O
+	O
``	O
``	O
+	O
AmountInWords	B-API
(	I-API
n	I-API
%	I-API
10	I-API
)	I-API
;	O
}	O
else	B-API
if	I-API
(	I-API
n	I-API
=	I-API
100	I-API
n	I-API
=	I-API
199	I-API
)	I-API
{	O
return	O
``	O
One	O
Hundred	O
``	O
+	O
AmountInWords	B-API
(	I-API
n	I-API
%	I-API
100	I-API
)	I-API
;	O
}	O
else	B-API
if	I-API
(	I-API
n	I-API
=	I-API
200	I-API
n	I-API
=	I-API
999	I-API
)	I-API
{	O
return	O
AmountInWords	B-API
(	I-API
n	I-API
/	I-API
100	I-API
)	I-API
+	O
``	O
Hundred	O
``	O
+	O
AmountInWords	B-API
(	I-API
n	I-API
%	I-API
100	I-API
)	I-API
;	O
}	O
else	B-API
if	I-API
(	I-API
n	I-API
=	I-API
1000	I-API
n	I-API
=	I-API
1999	I-API
)	I-API
{	O
return	O
``	O
One	O
Thousand	O
``	O
+	O
AmountInWords	B-API
(	I-API
n	I-API
%	I-API
1000	I-API
)	I-API
;	O
}	O
else	B-API
if	I-API
(	I-API
n	I-API
=	I-API
2000	I-API
n	I-API
=	I-API
999999	I-API
)	I-API
{	O
return	O
AmountInWords	B-API
(	I-API
n	I-API
/	I-API
1000	I-API
)	I-API
+	O
``	O
Thousand	O
``	O
+	O
AmountInWords	B-API
(	I-API
n	I-API
%	I-API
1000	I-API
)	I-API
;	O
}	O
else	B-API
if	I-API
(	I-API
n	I-API
=	I-API
1000000	I-API
n	I-API
=	I-API
1999999	I-API
)	I-API
{	O
return	O
``	O
One	O
Million	O
``	O
+	O
AmountInWords	B-API
(	I-API
n	I-API
%	I-API
1000000	I-API
)	I-API
;	O
}	O
else	B-API
if	I-API
(	I-API
n	I-API
=	I-API
1000000	I-API
n	I-API
=	I-API
999999999	I-API
)	I-API
{	O
return	O
AmountInWords	B-API
(	I-API
n	I-API
/	I-API
1000000	I-API
)	I-API
+	O
``	O
Million	O
``	O
+	O
AmountInWords	B-API
(	I-API
n	I-API
%	I-API
1000000	I-API
)	I-API
;	O
}	O
else	B-API
if	I-API
(	I-API
n	I-API
=	I-API
1000000000	I-API
n	I-API
=	I-API
1999999999	I-API
)	I-API
{	O
return	O
``	O
One	O
Billion	O
``	O
+	O
AmountInWords	B-API
(	I-API
n	I-API
%	I-API
1000000000	I-API
)	I-API
;	O
}	O
else	O
{	O
return	O
AmountInWords	B-API
(	I-API
n	I-API
/	I-API
1000000000	I-API
)	I-API
+	O
``	O
Billion	O
``	O
+	O
AmountInWords	B-API
(	I-API
n	I-API
%	I-API
1000000000	I-API
)	I-API
;	O
}	O
}	O
This	O
should	O
work	O
reasonably	O
well	O
:	O
public	O
static	B-API
class	O
HumanFriendlyInteger	O
{	O
static	O
string	B-API
[	I-API
]	I-API
ones	O
=	O
new	O
string	B-API
[	I-API
]	I-API
{	O
``	O
''	O
,	O
``	O
One	O
''	O
,	O
``	O
Two	O
''	O
,	O
``	O
Three	O
''	O
,	O
``	O
Four	O
''	O
,	O
``	O
Five	O
''	O
,	O
``	O
Six	O
''	O
,	O
``	O
Seven	O
''	O
,	O
``	O
Eight	O
''	O
,	O
``	O
Nine	O
''	O
}	O
;	O
static	B-API
string	I-API
[	I-API
]	I-API
teens	O
=	O
new	O
string	B-API
[	I-API
]	I-API
{	O
``	O
Ten	O
''	O
,	O
``	O
Eleven	O
''	O
,	O
``	O
Twelve	O
''	O
,	O
``	O
Thirteen	O
''	O
,	O
``	O
Fourteen	O
''	O
,	O
``	O
Fifteen	O
''	O
,	O
``	O
Sixteen	O
''	O
,	O
``	O
Seventeen	O
''	O
,	O
``	O
Eighteen	O
''	O
,	O
``	O
Nineteen	O
''	O
}	O
;	O
static	B-API
string	I-API
[	I-API
]	I-API
tens	O
=	O
new	O
string	B-API
[	I-API
]	I-API
{	O
``	O
Twenty	O
''	O
,	O
``	O
Thirty	O
''	O
,	O
``	O
Forty	O
''	O
,	O
``	O
Fifty	O
''	O
,	O
``	O
Sixty	O
''	O
,	O
``	O
Seventy	O
''	O
,	O
``	O
Eighty	O
''	O
,	O
``	O
Ninety	O
''	O
}	O
;	O
static	B-API
string	I-API
[	I-API
]	I-API
thousandsGroups	O
=	O
{	O
``	O
''	O
,	O
``	O
Thousand	O
''	O
,	O
``	O
Million	O
''	O
,	O
``	O
Billion	O
''	O
}	O
;	O
private	O
static	B-API
string	I-API
FriendlyInteger	B-API
(	I-API
int	I-API
n	I-API
,	I-API
string	I-API
leftDigits	I-API
,	I-API
int	I-API
thousands	I-API
)	I-API
{	O
if	B-API
(	I-API
n	I-API
==	I-API
0	I-API
)	I-API
{	O
return	O
leftDigits	O
;	O
}	O
string	O
friendlyInt	O
=	O
leftDigits	O
;	O
if	O
(	O
friendlyInt.Length	B-API
0	O
)	O
{	O
friendlyInt	O
+=	O
``	O
``	O
;	O
}	O
if	B-API
(	I-API
n	I-API
10	I-API
)	I-API
{	O
friendlyInt	O
+=	O
ones	O
[	O
n	O
]	O
;	O
}	O
else	B-API
if	I-API
(	I-API
n	I-API
20	I-API
)	I-API
{	O
friendlyInt	O
+=	O
teens	O
[	O
n	O
-	O
10	O
]	O
;	O
}	O
else	B-API
if	I-API
(	I-API
n	I-API
100	I-API
)	I-API
{	O
friendlyInt	O
+=	O
FriendlyInteger	O
(	O
n	O
%	O
10	O
,	O
tens	O
[	O
n	O
/	O
10	O
-	O
2	O
]	O
,	O
0	O
)	O
;	O
}	O
else	B-API
if	I-API
(	I-API
n	I-API
1000	I-API
)	I-API
{	O
friendlyInt	O
+=	O
FriendlyInteger	O
(	O
n	O
%	O
100	O
,	O
(	O
ones	O
[	O
n	O
/	O
100	O
]	O
+	O
``	O
Hundred	O
''	O
)	O
,	O
0	O
)	O
;	O
}	O
else	O
{	O
friendlyInt	O
+=	O
FriendlyInteger	O
(	O
n	O
%	O
1000	O
,	O
FriendlyInteger	O
(	O
n	O
/	O
1000	O
,	O
``	O
''	O
,	O
thousands+1	O
)	O
,	O
0	O
)	O
;	O
}	O
return	O
friendlyInt	O
+	O
thousandsGroups	O
[	O
thousands	O
]	O
;	O
}	O
public	O
static	B-API
string	I-API
IntegerToWritten	O
(	O
int	O
n	O
)	O
{	O
if	B-API
(	I-API
n	I-API
==	I-API
0	I-API
)	I-API
{	O
return	O
``	O
Zero	O
''	O
;	O
}	O
else	B-API
if	I-API
(	I-API
n	I-API
0	I-API
)	I-API
{	O
return	O
``	O
Negative	O
``	O
+	O
IntegerToWritten	O
(	O
-n	O
)	O
;	O
}	O
return	O
FriendlyInteger	O
(	O
n	O
,	O
``	O
''	O
,	O
0	O
)	O
;	O
}	O
}	O
(	O
Edited	O
to	O
make	O
it	O
considerably	O
more	O
concise	O
.	O
)	O
I	O
believe	O
you	O
are	O
talking	O
about	O
a	O
content	O
management	O
system	O
.	O
The	O
way	O
I	O
have	O
delt	O
with	O
this	O
situation	O
in	O
the	O
past	O
is	O
to	O
either	O
:	O
Allow	O
a	O
page/content	O
to	O
define	O
an	O
extra	O
custom	O
stylesheet	O
or	O
Allow	O
a	O
page/content	O
to	O
define	O
inline	O
style	O
tags	O
What	O
I	O
would	O
do	O
for	O
the	O
particular	O
case	O
is	O
:	O
i	O
.	O
Define	O
the	O
body	O
as	O
a	O
server	O
side	O
control	O
body	O
runat=	O
''	O
server	O
''	O
ii	O
.	O
In	O
your	O
content	O
aspx	O
page	O
,	O
register	O
the	O
MasterPage	O
with	O
the	O
register	O
:	O
%	O
MasterPageFile=	O
''	O
...	O
''	O
iii	O
.	O
In	O
the	O
Content	O
Page	O
,	O
you	O
can	O
now	O
simply	O
use	O
Master.FindControl	B-API
(	I-API
``	I-API
masterpageBody	I-API
''	I-API
)	I-API
and	O
have	O
access	O
to	O
the	O
control	O
.	O
Now	O
,	O
you	O
can	O
change	O
whatever	O
properties/style	O
that	O
you	O
like	O
!	O
This	O
is	O
what	O
I	O
came	O
up	O
with	O
:	O
In	O
the	O
page	O
load	O
function	O
:	O
HtmlGenericControl	B-API
body	O
=	O
(	B-API
HtmlGenericControl	I-API
)	I-API
Master.FindControl	B-API
(	I-API
``	I-API
default_body	I-API
''	I-API
)	I-API
;	O
body.Style.Add	B-API
(	I-API
HtmlTextWriterStyle.BackgroundColor	I-API
,	I-API
``	I-API
#	I-API
2E6095	I-API
''	I-API
)	I-API
;	O
Where	O
default_body	O
=	O
the	O
id	O
of	O
the	O
body	O
tag	O
.	O
If	O
you	O
are	O
not	O
totally	O
tied	O
to	O
pure	O
C	O
and	O
can	O
use	O
string.h	O
there	O
is	O
strchr	B-API
(	I-API
)	I-API
See	O
here	O
returns	O
a	O
pointer	O
to	O
the	O
found	O
character	O
,	O
so	O
you	O
could	O
use	O
pointer	O
arithmetic	O
:	O
(	O
Note	O
:	O
this	O
code	O
not	O
tested	O
for	O
its	O
ability	O
to	O
compile	O
,	O
it	O
's	O
one	O
step	O
away	O
from	O
pseudocode	O
.	O
)	O
char	B-API
*	I-API
source	I-API
=	O
``	O
test	O
string	O
''	O
;	O
/*	O
assume	O
source	O
address	O
is	O
*/	O
/*	O
0x10	O
for	O
example	O
*/	O
char	O
*	O
found	O
=	O
strstr	B-API
(	I-API
source	I-API
,	I-API
``	I-API
in	I-API
''	I-API
)	I-API
;	O
/*	O
should	O
return	O
0x18	O
*/	O
if	B-API
(	I-API
found	I-API
!	I-API
=	I-API
NULL	I-API
)	I-API
/*	O
strstr	O
returns	O
NULL	O
if	O
item	O
not	O
found	O
*/	O
{	O
int	O
index	O
=	O
found	O
-	O
source	O
;	O
/*	O
index	O
is	O
8	O
*/	O
/*	O
source	O
[	O
8	O
]	O
gets	O
you	O
``	O
i	O
''	O
*/	O
}	O
EDIT	O
:	O
strchr	O
is	O
better	O
only	O
for	O
one	O
char	O
.	O
Pointer	O
aritmetics	O
says	O
``	O
Hellow	O
!	O
``	O
:	O
char	O
*pos	O
=	O
strchr	B-API
(	I-API
myString	I-API
,	I-API
'	I-API
#	I-API
'	I-API
)	I-API
;	O
int	O
pos	O
=	O
pos	O
?	O
pos	O
-	O
myString	O
:	O
-1	O
;	O
Important	O
:	O
strchr	B-API
(	I-API
)	I-API
returns	O
NULL	O
if	O
no	O
string	O
is	O
found	O
You	O
can	O
use	O
strstr	O
to	O
accomplish	O
what	O
you	O
want	O
.	O
Example	O
:	O
char	B-API
*a	I-API
=	O
``	O
Hello	O
World	O
!	O
``	O
;	O
char	B-API
*b	I-API
=	O
;	O
int	O
position	O
=	O
b	O
-	O
(	O
a	O
,	O
``	O
World	O
''	O
)	O
;	O
printf	B-API
(	I-API
``	I-API
the	I-API
offset	I-API
is	I-API
%	I-API
i\n	I-API
''	I-API
,	I-API
position	I-API
)	I-API
This	O
produces	O
the	O
result	O
:	O
the	O
offset	O
is	O
I	O
think	O
that	O
size_t	O
strcspn	B-API
(	I-API
const	I-API
char	I-API
*	I-API
str1	I-API
,	I-API
const	I-API
char	I-API
*	I-API
str2	I-API
)	I-API
;	O
is	O
what	O
you	O
want	O
.	O
Here	O
is	O
an	O
example	O
pulled	O
from	O
here	O
:	O
/*	O
strcspn	O
example	O
*/	O
#	O
include	O
stdio.h	O
#	O
include	O
string.h	O
int	O
main	B-API
(	I-API
)	I-API
{	O
char	O
str	B-API
[	I-API
]	I-API
=	O
``	O
fcba73	O
''	O
;	O
char	B-API
keys	I-API
[	I-API
]	I-API
=	O
``	O
1234567890	O
''	O
;	O
int	O
i	O
;	O
i	O
=	O
strcspn	B-API
(	I-API
str	I-API
,	I-API
keys	I-API
)	I-API
;	O
printf	B-API
(	I-API
``	I-API
The	I-API
first	I-API
number	I-API
in	I-API
str	I-API
is	I-API
at	I-API
position	I-API
%	I-API
d.\n	I-API
''	I-API
,	I-API
i+1	I-API
)	I-API
;	O
return	O
0	O
;	O
}	O
If	O
you	O
are	O
looking	O
for	O
user	O
facing	O
interaction	O
,	O
stick	O
with	O
xml	O
.	O
It	O
has	O
more	O
support	O
,	O
understanding	O
,	O
and	O
general	O
acceptance	O
currently	O
.	O
If	O
it	O
's	O
internal	O
,	O
I	O
would	O
say	O
that	O
protocol	O
buffers	O
are	O
a	O
great	O
idea	O
.	O
Maybe	O
in	O
a	O
few	O
years	O
as	O
more	O
tools	O
come	O
out	O
to	O
support	O
protocol	O
buffers	O
,	O
then	O
start	O
looking	O
towards	O
that	O
for	O
a	O
public	O
facing	O
api	O
.	O
Until	O
then	O
...	O
JSON	B-API
?	O
Protocol	O
buffers	O
are	O
intended	O
to	O
optimize	O
communications	O
between	O
machines	O
.	O
They	O
are	O
really	O
not	O
intended	O
for	O
human	O
interaction	O
.	O
Also	O
,	O
the	O
format	O
is	O
binary	O
,	O
so	O
it	O
could	O
not	O
replace	O
XML	B-API
in	O
that	O
use	O
case	O
.	O
I	O
would	O
also	O
recommend	O
JSON	B-API
as	O
being	O
the	O
most	O
compact	O
text-based	O
format	O
.	O
The	O
previous	O
answer	O
is	O
fine	O
,	O
but	O
I	O
'm	O
one	O
of	O
those	O
guys	O
that	O
's	O
firmly	O
against	O
mixing	O
behavior	O
with	O
presentation	O
(	O
putting	O
JavaScript	B-API
in	O
my	O
HTML	B-API
)	O
so	O
I	O
prefer	O
to	O
put	O
my	O
event	O
handling	O
logic	O
in	O
my	O
JavaScript	B-API
files	O
.	O
Additionally	O
,	O
not	O
all	O
browsers	O
implement	O
event	O
(	O
or	O
e	O
)	O
the	O
same	O
way	O
.	O
You	O
may	O
want	O
to	O
do	O
a	O
check	O
prior	O
to	O
running	O
any	O
logic	O
:	O
document.onkeydown	B-API
=	O
TabExample	O
;	O
function	O
{	O
var	B-API
evt	O
=	O
(	O
evt	O
)	O
?	O
evt	O
:	O
?	O
event	O
:	O
null	O
)	O
;	O
{	O
//	O
do	O
work	O
TabExample	B-API
(	I-API
evt	I-API
)	I-API
(	I-API
(	I-API
event	B-API
)	I-API
(	O
evt.keycode	O
==	O
9	O
)	O
I	O
'd	O
rather	O
tab	O
indentation	O
not	O
work	O
than	O
breaking	O
tabbing	O
between	O
form	O
items	O
.	O
If	O
you	O
want	O
to	O
indent	O
to	O
put	O
in	O
code	O
in	O
the	O
Markdown	O
box	O
,	O
use	O
Ctrl+K	O
(	O
or	O
K	O
on	O
a	O
Mac	O
)	O
.	O
In	O
terms	O
of	O
actually	O
stopping	O
the	O
action	O
,	O
jQuery	B-API
(	O
which	O
Stack	O
Overflow	O
uses	O
)	O
will	O
stop	O
an	O
event	O
from	O
bubbling	O
when	O
you	O
return	O
false	O
from	O
an	O
event	O
callback	O
.	O
This	O
makes	O
life	O
easier	O
for	O
working	O
with	O
multiple	O
browsers	O
.	O
I	O
would	O
advise	O
against	O
changing	O
the	O
default	O
behaviour	O
of	O
a	O
key	O
.	O
I	O
do	O
as	O
much	O
as	O
possible	O
without	O
touching	O
a	O
mouse	O
,	O
so	O
if	O
you	O
make	O
my	O
tab	O
key	O
not	O
move	O
to	O
the	O
next	O
field	O
on	O
a	O
form	O
I	O
will	O
be	O
very	O
aggravated	O
.	O
A	O
shortcut	O
key	O
could	O
be	O
useful	O
however	O
,	O
especially	O
with	O
large	O
code	O
blocks	O
and	O
nesting	O
.	O
Shift-TAB	O
is	O
a	O
bad	O
option	O
because	O
that	O
normally	O
takes	O
me	O
to	O
the	O
previous	O
field	O
on	O
a	O
form	O
.	O
Maybe	O
a	O
new	O
button	O
on	O
the	O
WMD	O
editor	O
to	O
insert	O
a	O
code-TAB	O
,	O
with	O
a	O
shortcut	O
key	O
,	O
would	O
be	O
possible	O
?	O
Calling	O
process.Start	B-API
on	O
the	O
Mailto	B-API
:	O
protocol	O
(	O
as	O
shown	O
below	O
)	O
will	O
give	O
you	O
basic	O
functionality	O
but	O
not	O
attachments	O
.	O
(	O
``	O
mailto	O
:	O
name	O
@	O
domain.com	O
?	O
subject=TestCodeBody=Test	O
Text	O
''	O
)	O
You	O
can	O
do	O
this	O
approach	O
with	O
attachment	O
paths	O
but	O
this	O
option	O
only	O
works	O
with	O
some	O
old	O
version	O
of	O
outlook	O
such	O
as	O
98	O
.	O
I	O
assume	O
this	O
is	O
due	O
to	O
the	O
potential	O
securty	O
risk	O
.	O
If	O
anyone	O
does	O
use	O
outlook.exe	O
it	O
will	O
give	O
security	O
warnings	O
under	O
outlook	O
2003	O
(	O
and	O
2007	O
Dependant	O
on	O
settings	O
)	O
.	O
Easy	O
one	O
!	O
``	O
\t	O
''	O
Edit	O
:	O
In	O
fact	O
,	O
here	O
's	O
something	O
official	O
:	O
Escape	O
Sequences	O
If	O
he	O
's	O
interested	O
,	O
are	O
n't	O
the	O
minor	O
details	O
the	O
good	O
parts	O
?	O
Using	O
python	O
,	O
you	O
've	O
already	O
cut	O
the	O
GUI	O
off	O
of	O
it	O
so	O
that	O
confusion	O
is	O
gone	O
.	O
Why	O
not	O
pick	O
a	O
project	O
,	O
a	O
game	O
or	O
something	O
,	O
and	O
implement	O
it	O
.	O
The	O
classic	O
hi-lo	O
number	O
guessing	O
game	O
can	O
be	O
simply	O
implemented	O
from	O
the	O
command	O
line	O
in	O
20-30	O
lines	O
of	O
code	O
(	O
depending	O
on	O
language	O
of	O
course	O
)	O
and	O
gives	O
you	O
variables	O
,	O
conditions	O
,	O
loops	O
,	O
and	O
user	O
input	O
.	O
First	O
of	O
all	O
,	O
start	O
out	O
like	O
everyone	O
else	O
does	O
:	O
with	O
a	O
Hello	O
World	O
program	O
.	O
It	O
's	O
simple	O
,	O
and	O
it	O
gives	O
them	O
a	O
basic	O
feel	O
for	O
the	O
layout	O
of	O
a	O
program	O
.	O
Try	O
and	O
remember	O
back	O
to	O
when	O
you	O
were	O
first	O
programming	O
,	O
and	O
how	O
difficult	O
some	O
of	O
the	O
concepts	O
were	O
-	O
start	O
simple	O
.	O
After	O
Hello	O
World	O
,	O
move	O
on	O
to	O
creating	O
some	O
basic	O
variables	O
,	O
arithmetic	O
,	O
then	O
onto	O
boolean	O
logic	O
and	O
if/else	O
statements	O
.	O
If	O
you	O
've	O
got	O
one	O
of	O
your	O
old	O
programming	O
textbooks	O
,	O
check	O
out	O
some	O
of	O
the	O
early	O
examples	O
and	O
have	O
him	O
run	O
through	O
those	O
.	O
Just	O
do	O
n't	O
try	O
to	O
introduce	O
too	O
much	O
all	O
at	O
once	O
,	O
or	O
it	O
will	O
be	O
overwhelming	O
and	O
confusing	O
.	O
I	O
would	O
actually	O
argue	O
to	O
pick	O
a	O
simpler	O
language	O
with	O
fewer	O
instructions	O
.	O
I	O
personally	O
learned	O
on	O
BASIC	B-API
at	O
home	O
,	O
as	O
did	O
Jeff	O
.	O
This	O
way	O
,	O
you	O
do	O
n't	O
have	O
to	O
delve	O
into	O
more	O
complicated	O
issues	O
like	O
object	O
oriented	O
programming	O
,	O
or	O
even	O
procedures	O
if	O
you	O
do	O
n't	O
want	O
to	O
.	O
Once	O
he	O
can	O
handle	O
simple	O
control	O
flow	O
,	O
then	O
move	O
on	O
to	O
something	O
a	O
little	O
more	O
complicated	O
,	O
but	O
only	O
simple	O
features	O
.	O
Maybe	O
start	O
with	O
very	O
simple	O
programs	O
that	O
just	O
add	O
2	O
numbers	O
,	O
and	O
then	O
grow	O
to	O
something	O
that	O
might	O
require	O
a	O
branch	O
,	O
then	O
maybe	O
reading	O
input	O
and	O
responding	O
to	O
it	O
,	O
then	O
some	O
kind	O
of	O
loop	O
,	O
and	O
start	O
combining	O
them	O
all	O
together	O
.	O
Just	O
start	O
little	O
and	O
work	O
your	O
way	O
up	O
.	O
Do	O
n't	O
do	O
any	O
big	O
projects	O
until	O
he	O
can	O
grasp	O
the	O
fundamentals	O
(	O
otherwise	O
it	O
may	O
very	O
well	O
be	O
too	O
daunting	O
and	O
he	O
could	O
give	O
up	O
midway	O
)	O
.	O
Once	O
he	O
's	O
mastered	O
BASIC	B-API
or	O
whatever	O
you	O
choose	O
,	O
move	O
on	O
to	O
something	O
more	O
complicated	O
.	O
Just	O
my	O
$	O
0.02	O
Something	O
you	O
should	O
be	O
very	O
mindful	O
of	O
while	O
teaching	O
your	O
brother	O
to	O
program	O
is	O
for	O
him	O
not	O
to	O
rely	O
too	O
heavily	O
on	O
you	O
.	O
Often	O
when	O
I	O
find	O
myself	O
helping	O
others	O
they	O
will	O
begin	O
to	O
think	O
of	O
me	O
as	O
answer	O
book	O
to	O
all	O
of	O
their	O
questions	O
and	O
instead	O
of	O
experimenting	O
to	O
find	O
an	O
answer	O
they	O
simply	O
ask	O
me	O
.	O
Often	O
the	O
best	O
teacher	O
is	O
experimentation	O
and	O
every	O
time	O
your	O
brother	O
has	O
a	O
question	O
like	O
``	O
What	O
will	O
happen	O
if	O
I	O
add	O
2	O
to	O
a	O
string	O
?	O
''	O
you	O
should	O
tell	O
him	O
to	O
try	O
it	O
out	O
and	O
see	O
for	O
himself	O
.	O
Also	O
I	O
have	O
noticed	O
that	O
when	O
I	O
can	O
not	O
get	O
a	O
concept	O
through	O
to	O
someone	O
,	O
it	O
helps	O
to	O
see	O
some	O
sample	O
code	O
where	O
we	O
can	O
look	O
at	O
each	O
segment	O
individually	O
and	O
explain	O
it	O
piece	O
by	O
piece	O
.	O
As	O
a	O
side	O
note	O
people	O
new	O
to	O
programming	O
often	O
have	O
trouble	O
with	O
the	O
idea	O
of	O
object	O
oriented	O
programming	O
,	O
they	O
will	O
say	O
they	O
understand	O
it	O
when	O
you	O
teach	O
it	O
to	O
them	O
but	O
will	O
not	O
get	O
a	O
clear	O
concept	O
of	O
it	O
until	O
actually	O
implementing	O
it	O
.	O
You	O
could	O
try	O
using	O
Alice	B-API
.	O
It	O
's	O
a	O
3D	O
program	O
designed	O
for	O
use	O
in	O
introductory	O
programming	O
classes	O
.	O
The	O
two	O
biggest	O
obstacles	O
for	O
new	O
programmers	O
are	O
often	O
:	O
syntax	O
errors	O
motivation	O
(	O
writing	O
something	O
meaningful	O
and	O
fun	O
rather	O
than	O
contrived	O
)	O
Alice	B-API
uses	O
a	O
drag	O
and	O
drop	O
interface	O
for	O
constructing	O
programs	O
,	O
avoiding	O
the	O
possibility	O
of	O
syntax	O
errors	O
.	O
Alice	B-API
lets	O
you	O
construct	O
3D	O
worlds	O
and	O
have	O
your	O
code	O
control	O
(	O
simple	O
)	O
3D	O
characters	O
and	O
animation	O
,	O
which	O
is	O
usually	O
a	O
lot	O
more	O
interesting	O
than	O
implementing	O
linked	O
lists	O
.	O
Experienced	O
programmers	O
may	O
look	O
down	O
at	O
Alice	B-API
as	O
a	O
toy	O
and	O
scoff	O
at	O
dragging	O
and	O
dropping	O
lines	O
of	O
code	O
,	O
but	O
research	O
shows	O
that	O
this	O
approach	O
works	O
.	O
Disclaimer	O
:	O
I	O
worked	O
on	O
Alice	B-API
.	O
A	O
good	O
python	O
course	O
is	O
MIT	O
's	O
A	O
Gentle	O
Introduction	O
to	O
Programming	O
Using	O
Python	B-API
.	O
It	O
's	O
all	O
free	O
online	O
,	O
and	O
you	O
do	O
n't	O
have	O
to	O
be	O
an	O
MIT	O
uberstudent	O
to	O
understand	O
it	O
.	O
Edit	O
[	O
Justin	O
Standard	O
]	O
This	O
course	O
uses	O
this	O
free	O
online	O
book	O
:	O
How	O
To	O
Think	O
Like	O
a	O
Computer	O
Scientist	O
I	O
'm	O
definitely	O
finding	O
it	O
quite	O
useful	O
.	O
