My	O
first	O
choice	O
would	O
be	O
a	O
dedicated	O
heap	O
tool	O
such	O
as	O
pageheap.exe	O
.	O
Rewriting	O
new	O
and	O
delete	O
might	O
be	O
useful	O
,	O
but	O
that	O
does	O
n't	O
catch	O
the	O
allocs	O
committed	O
by	O
lower-level	O
code	O
.	O
If	O
this	O
is	O
what	O
you	O
want	O
,	O
better	O
to	O
Detour	O
the	O
low-level	B-API
alloc	B-API
s	O
using	O
Microsoft	O
Detours	O
.	O
Also	O
sanity	O
checks	O
such	O
as	O
:	O
verify	O
your	O
run-time	O
libraries	O
match	O
(	O
release	O
vs.	O
debug	O
,	O
multi-threaded	O
vs.	O
single-threaded	O
,	O
dll	O
vs.	O
static	O
lib	O
)	O
,	O
look	O
for	O
bad	O
deletes	O
(	O
eg	O
,	O
delete	O
where	O
delete	O
[	O
]	O
should	O
have	O
been	O
used	O
)	O
,	O
make	O
sure	O
you	O
're	O
not	O
mixing	O
and	O
matching	O
your	O
allocs	O
.	O
Also	O
try	O
selectively	O
turning	O
off	O
threads	O
and	O
see	O
when/if	O
the	O
problem	O
goes	O
away	O
.	O
What	O
does	O
the	O
call	O
stack	O
etc	O
look	O
like	O
at	O
the	O
time	O
of	O
the	O
first	O
exception	O
?	O
My	O
first	O
action	O
would	O
be	O
as	O
follows	O
:	O
Build	O
the	O
binaries	O
in	O
``	O
Release	O
''	O
version	O
but	O
creating	O
debug	O
info	O
file	O
(	O
you	O
will	O
find	O
this	O
possibility	O
in	O
project	O
settings	O
)	O
.	O
Use	O
Dr	O
Watson	O
as	O
a	O
defualt	O
debugger	B-API
(	I-API
DrWtsn32	I-API
-I	I-API
)	I-API
on	O
a	O
machine	O
on	O
which	O
you	O
want	O
to	O
reproduce	O
the	O
problem	O
.	O
Repdroduce	O
the	O
problem	O
.	O
Dr	O
Watson	O
will	O
produce	O
a	O
dump	O
that	O
might	O
be	O
helpful	O
in	O
further	O
analysis	O
.	O
Another	O
try	O
might	O
be	O
using	O
WinDebug	O
as	O
a	O
debugging	O
tool	O
which	O
is	O
quite	O
powerful	O
being	O
at	O
the	O
same	O
time	O
also	O
lightweight	O
.	O
Maybe	O
these	O
tools	O
will	O
allow	O
you	O
at	O
least	O
to	O
narrow	O
the	O
problem	O
to	O
certain	O
component	O
.	O
And	O
are	O
you	O
sure	O
that	O
all	O
the	O
components	O
of	O
the	O
project	O
have	O
correct	O
runtime	O
library	O
settings	O
(	O
C/C++	O
tab	O
,	O
Code	O
Generation	O
category	O
in	O
VS	O
6.0	O
project	O
settings	O
)	O
?	O
I	O
have	O
same	O
problems	O
in	O
my	O
work	O
(	O
we	O
also	O
use	O
sometimes	O
)	O
.	O
And	O
there	O
is	O
no	O
easy	O
solution	O
for	O
it	O
.	O
I	O
have	O
only	O
some	O
hints	O
:	O
Try	O
with	O
automatic	O
crash	O
dumps	O
on	O
production	O
machine	O
(	O
see	O
Process	O
Dumper	O
)	O
.	O
My	O
experience	O
says	O
Dr.	O
Watson	O
is	O
not	O
perfect	O
for	O
dumping	O
.	O
Remove	O
all	O
catch	O
(	O
...	O
)	O
from	O
your	O
code	O
.	O
They	O
often	O
hide	O
serious	O
memory	O
exceptions	O
.	O
Check	O
Advanced	O
Windows	O
Debugging	O
-	O
there	O
are	O
lots	O
of	O
great	O
tips	O
for	O
problems	O
like	O
yours	O
.	O
I	O
recomend	O
this	O
with	O
all	O
my	O
heart	O
.	O
If	O
you	O
use	O
try	O
and	O
checked	O
builds	O
.	O
Invalid	O
iterator	O
are	O
hell	O
.	O
Good	O
luck	O
.	O
Problems	O
like	O
yours	O
take	O
us	O
months	O
to	O
solve	O
.	O
Be	O
ready	O
for	O
this	O
...	O
How	O
about	O
using	O
FxCop	O
to	O
check	O
to	O
see	O
if	O
the	O
assembly	O
meets	O
your	O
documentation	O
requirements	O
(	O
though	O
this	O
wont	O
be	O
able	O
to	O
check	O
the	O
grammar	O
,	O
spelling	O
and	O
relevance	O
of	O
the	O
contents	O
of	O
the	O
documentation	O
-	O
only	O
you	O
can	O
check	O
that	O
)	O
.	O
MS	O
have	O
released	O
style	O
cop	O
to	O
compliment	O
FXCop	O
http	O
:	O
//blogs.msdn.com/sourceanalysis/	O
unlike	O
fx	O
cop	O
this	O
has	O
better	O
rules	O
and	O
can	O
check	O
amount	O
of	O
comments	O
etc	O
.	O
To	O
spell	O
check	O
the	O
comment	O
see	O
on	O
my	O
article	O
on	O
spell	O
checking	O
comments	O
and	O
source	O
code	O
for	O
free	O
.	O
On	O
Linux	O
:	O
set	O
raw	O
mode	O
select	O
and	O
read	O
the	O
keystroke	O
restore	O
normal	O
settings	O
import	O
sys	O
import	O
select	O
import	O
termios	O
import	O
tty	O
def	O
getkey	B-API
(	I-API
)	I-API
:	O
old_settings	O
=	O
termios.tcgetattr	B-API
(	I-API
sys.stdin	I-API
)	I-API
tty.setraw	B-API
(	I-API
sys.stdin.fileno	B-API
(	I-API
)	I-API
)	I-API
select.select	O
(	O
[	O
sys.stdin	O
]	O
,	O
[	O
]	O
,	O
[	O
]	O
,	O
0	O
)	O
answer	O
=	O
sys.stdin.read	B-API
(	I-API
1	I-API
)	I-API
termios.tcsetattr	B-API
(	I-API
sys.stdin	I-API
,	I-API
termios.TCSADRAIN	I-API
,	I-API
old_settings	I-API
)	I-API
return	O
answer	O
print	O
``	O
''	O
''	O
Menu	O
1	O
)	O
Say	O
Foo	O
2	O
)	O
Say	O
Bar	O
''	O
''	O
''	O
answer=getkey	O
(	O
)	O
if	O
``	O
1	O
''	O
in	O
answer	O
:	O
print	O
``	O
foo	O
''	O
elif	O
``	O
2	O
''	O
in	O
answer	O
:	O
print	O
``	O
bar	O
''	O
On	O
Windows	O
:	O
import	O
msvcrt	O
answer=msvcrt.getch	B-API
(	I-API
)	I-API
Wow	O
,	O
that	O
took	O
forever	O
.	O
Ok	O
,	O
here	O
's	O
what	O
I	O
've	O
ended	O
up	O
with	O
#	O
!	O
C	O
:	O
\python25\python.exeimport	O
msvcrtprint	O
``	O
``	O
''	O
Menu1	O
)	O
Say	O
Foo	O
2	O
)	O
Say	O
Bar	O
''	O
''	O
''	O
while	O
1	O
:	O
char	O
=	O
if	O
char	O
==	O
:	O
#	O
escape	O
break	O
if	O
char	O
==	O
``	O
1	O
''	O
:	O
print	O
``	O
foo	O
''	O
break	O
if	O
char	O
==	O
``	O
2	O
''	O
:	O
print	O
``	O
Bar	O
''	O
msvcrt.getch	B-API
(	I-API
)	I-API
chr	B-API
(	I-API
27	I-API
)	I-API
It	O
fails	O
hard	O
using	O
IDLE	O
,	O
the	O
python	O
...	O
thing	O
...	O
that	O
comes	O
with	O
python	O
.	O
But	O
once	O
I	O
tried	O
it	O
in	O
DOS	B-API
(	I-API
er	I-API
,	I-API
CMD.exe	I-API
)	I-API
,	O
as	O
a	O
real	O
program	O
,	O
then	O
it	O
ran	O
fine	O
.	O
No	O
one	O
try	O
it	O
in	O
IDLE	O
,	O
unless	O
you	O
have	O
Task	O
Manager	O
handy	O
.	O
I	O
've	O
already	O
forgotten	O
how	O
I	O
lived	O
with	O
menus	O
that	O
ar	O
n't	O
super-instant	O
responsive	O
.	O
The	O
reason	O
msvcrt	O
fails	O
in	O
IDLE	O
is	O
because	O
IDLE	O
is	O
not	O
accessing	O
the	O
library	O
that	O
runs	O
msvcrt	O
.	O
Whereas	O
when	O
you	O
run	O
the	O
program	O
natively	O
in	O
cmd.exe	O
it	O
works	O
nicely	O
.	O
For	O
the	O
same	O
reason	O
that	O
your	O
program	O
blows	O
up	O
on	O
Mac	O
and	O
Linux	O
terminals	O
.	O
But	O
I	O
guess	O
if	O
you	O
're	O
going	O
to	O
be	O
using	O
this	O
specifically	O
for	O
windows	O
,	O
more	O
power	O
to	O
ya	O
.	O
Hmm	O
...	O
off	O
by	O
one	O
hour	O
.	O
DST	O
possibly	O
?	O
Is	O
the	O
date	O
set	O
correctly	O
?	O
What	O
version	O
of	O
the	O
JDK	O
is	O
this	O
running	O
on	O
?	O
(	O
``	O
java	O
-version	O
''	O
)	O
It	O
's	O
a	O
``	O
quirk	O
''	O
in	O
the	O
way	O
the	O
JVM	O
looks	O
up	O
the	O
zoneinfo	O
file	O
.	O
See	O
Bug	O
ID	O
6456628	O
.	O
The	O
easiest	O
workaround	O
is	O
to	O
make	O
/etc/localtime	O
a	O
symlink	O
to	O
the	O
correct	O
zoneinfo	O
file	O
.	O
For	O
Pacific	O
time	O
,	O
the	O
following	O
commands	O
should	O
work	O
:	O
#	B-API
sudo	B-API
cp	B-API
/etc/localtime	B-API
/etc/localtime.dist	B-API
#	I-API
sudo	B-API
ln	B-API
-fs	B-API
/usr/share/zoneinfo/America/Los_Angeles	B-API
I	O
have	O
n't	O
had	O
any	O
problems	O
with	O
the	O
symlink	O
approach	O
.	O
Edit	O
:	O
Added	O
``	O
sudo	O
''	O
to	O
the	O
commands	O
.	O
It	O
may	O
help	O
to	O
double-check	O
the	O
timezone	O
rules	O
your	O
OS	O
is	O
using	O
.	O
/usr/bin/zdump	O
-v	O
/etc/localtime	O
|	O
This	O
file	O
should	O
contain	O
your	O
daylight	O
savings	O
rules	O
,	O
like	O
this	O
one	O
for	O
the	O
year	O
2080	O
:	O
/etc/localtime	O
Sun	O
Mar	O
31	O
01:00:00	O
2080	O
UTC	O
=	O
Sun	O
Mar	O
31	O
02:00:00	O
2080	O
BST	O
isdst=1	O
You	O
can	O
compare	O
this	O
with	O
the	O
timezone	O
rules	O
you	O
think	O
you	O
should	O
be	O
using	O
.	O
They	O
can	O
be	O
found	O
in	O
/usr/share/zoneinfo/	O
.	O
Rex	O
,	O
I	O
suspect	O
a	O
good	O
place	O
to	O
start	O
looking	O
is	O
solutions	O
that	O
compress	O
the	O
ViewState	O
--	O
they	O
're	O
grabbing	O
ViewState	O
on	O
the	O
server	O
before	O
it	O
's	O
sent	O
down	O
to	O
the	O
client	O
and	O
gzipping	O
it	O
.	O
That	O
's	O
exactly	O
where	O
you	O
want	O
to	O
be	O
.	O
Scott	O
Hanselman	O
on	O
ViewState	O
Compression	B-API
(	I-API
2005	I-API
)	I-API
ViewState	O
Compression	O
with	O
System.IO.Compression	B-API
(	I-API
2007	I-API
)	I-API
See	O
this	O
blog	O
post	O
where	O
the	O
author	O
describes	O
a	O
method	O
for	O
overriding	O
the	O
default	O
behavior	O
for	O
generating	O
the	O
ViewState	O
and	O
instead	O
shows	O
how	O
to	O
save	O
it	O
on	O
the	O
server	O
Session	O
object	O
.	O
In	O
ASP.NET	O
2.0	O
,	O
ViewState	O
is	O
saved	O
by	O
a	O
descendant	O
of	O
PageStatePersister	O
class	O
.	O
This	O
class	O
is	O
an	O
abstract	O
class	O
for	O
saving	O
and	O
loading	O
ViewsState	O
and	O
there	O
are	O
two	O
implemented	O
descendants	O
of	O
this	O
class	O
in	O
.Net	O
Framework	O
,	O
named	O
HiddenFieldPageStatePersister	B-API
and	O
SessionPageStatePersister	B-API
.	O
By	O
default	O
HiddenFieldPageStatePersister	B-API
is	O
used	O
to	O
save/load	O
ViewState	O
information	O
,	O
but	O
we	O
can	O
easily	O
get	O
the	O
SessionPageStatePersister	B-API
to	O
work	O
and	O
save	O
ViewState	O
in	O
Session	O
object	O
.	O
Although	O
I	O
did	O
not	O
test	O
his	O
code	O
,	O
it	O
seems	O
to	O
show	O
exactly	O
what	O
you	O
want	O
:	O
a	O
way	O
to	O
gain	O
access	O
to	O
ViewState	O
code	O
while	O
still	O
on	O
the	O
server	O
,	O
before	O
postback	O
.	O
I	O
enabled	O
compression	O
following	O
similar	O
articles	O
to	O
those	O
posted	O
above	O
.	O
The	O
key	O
to	O
accessing	O
the	O
ViewState	O
before	O
the	O
application	O
sends	O
it	O
was	O
overriding	O
this	O
method	O
;	O
protected	B-API
override	B-API
void	B-API
(	O
object	O
viewState	O
)	O
You	O
can	O
call	O
the	O
base	O
method	O
within	O
this	O
override	O
and	O
then	O
add	O
whatever	O
additional	O
logic	O
you	O
require	O
to	O
handle	O
the	O
ViewState	O
.	O
If	O
you	O
use	O
a	O
return	O
type	O
of	O
,	O
you	O
can	O
return	O
your	O
query	O
variable	O
directly	O
.	O
Create	O
a	O
class	O
object	O
and	O
return	O
a	O
list	B-API
(	I-API
T	I-API
)	I-API
of	O
the	O
query	O
.	O
The	O
left	O
one	O
,	O
then	O
stops	O
if	O
it	O
is	O
null	O
.	O
Edit	O
:	O
In	O
vb.net	O
it	O
will	O
evaluate	O
both	O
and	O
possibly	O
throw	O
an	O
error	O
,	O
unless	O
you	O
use	O
AndAlso	O
C	O
#	O
:	O
Left	O
to	O
right	O
,	O
and	O
processing	O
stops	O
if	O
a	O
non-match	O
(	O
evaluates	O
to	O
false	O
)	O
is	O
found	O
.	O
I	O
have	O
heard	O
somewhere	O
that	O
compilers	O
work	O
backwards	O
,	O
but	O
I	O
am	O
unsure	O
how	O
true	O
this	O
is	O
.	O
vb.net	B-API
)	I-API
(	I-API
x	O
isNot	O
Nothing	O
AndAlso	O
x.go	B-API
(	I-API
)	I-API
Evaluation	O
is	O
done	O
left	O
to	O
right	O
AndAlso	O
operator	O
makes	O
sure	O
that	O
only	O
if	O
the	O
left	O
side	O
was	O
TRUE	O
,	O
the	O
right	O
side	O
will	O
be	O
evaluated	O
(	O
very	O
important	O
,	O
since	O
ifx	O
is	O
nothing	O
x.go	O
will	O
crash	O
)	O
You	O
may	O
use	O
And	O
instead	O
ofAndAlso	O
in	O
vb	O
.	O
in	O
which	O
case	O
the	O
left	O
side	O
gets	O
evaluated	O
first	O
as	O
well	O
,	O
but	O
the	O
right	O
side	O
will	O
get	O
evaluated	O
regardless	O
of	O
result	O
.	O
Best	O
Practice	O
:	O
Always	O
use	O
AndAlso	O
,	O
unless	O
you	O
have	O
a	O
very	O
good	O
reason	O
why	O
not	O
to	O
.	O
It	O
was	O
asked	O
in	O
a	O
followup	O
why	O
or	O
when	O
would	O
anyone	O
use	O
And	O
instead	O
of	O
AndAlso	O
(	O
or	O
instead	O
of	O
)	O
:	O
Here	O
is	O
an	O
example	O
:	O
if	O
(	O
And	O
)	O
then	O
end	O
x.init	B-API
(	I-API
)	I-API
y.init	B-API
(	I-API
)	I-API
x.process	B-API
(	I-API
y	I-API
)	I-API
y.doDance	B-API
(	I-API
)	I-API
In	O
this	O
case	O
,	O
I	O
want	O
to	O
init	O
both	O
X	O
and	O
Y.	O
Y	O
must	O
be	O
initialized	O
in	O
order	O
for	O
y.DoDance	O
to	O
be	O
able	O
to	O
execute	O
.	O
However	O
,	O
in	O
the	O
init	B-API
(	I-API
)	I-API
function	O
I	O
am	O
doing	O
also	O
some	O
extra	O
thing	O
like	O
checking	O
a	O
socket	O
is	O
open	O
,	O
and	O
only	O
if	O
that	O
works	O
out	O
ok	O
,	O
for	O
both	O
,	O
I	O
should	O
go	O
ahead	O
and	O
do	O
the	O
x.process	B-API
(	I-API
y	I-API
)	I-API
.	O
Again	O
,	O
this	O
is	O
probably	O
not	O
needed	O
and	O
not	O
elegant	O
in	O
99	O
%	O
of	O
the	O
cases	O
,	O
that	O
is	O
why	O
I	O
said	O
that	O
the	O
default	O
should	O
be	O
to	O
use	O
AndAlso	O
.	O
The	O
concept	O
modesty	O
is	O
referring	O
to	O
is	O
operator	O
overloading	O
.	O
in	O
the	O
statement	O
:	O
if	O
(	O
A	O
B	O
)	O
{	O
//	O
do	O
something	O
}	O
A	O
is	O
evaluated	O
first	O
,	O
if	O
it	O
evaluates	O
to	O
false	O
,	O
B	O
is	O
never	O
evaluated	O
.	O
The	O
same	O
applies	O
toif	O
(	O
A	O
||	O
B	O
)	O
{	O
//do	O
something	O
}	O
A	O
is	O
evaluated	O
first	O
,	O
if	O
it	O
evaluates	O
to	O
true	O
,	O
B	O
is	O
never	O
evaluated	O
.	O
This	O
concept	O
,	O
overloading	O
,	O
applies	O
to	O
(	O
i	O
think	O
)	O
all	O
of	O
the	O
C	O
style	O
languages	O
,	O
and	O
many	O
others	O
as	O
well	O
.	O
ZombieSheep	O
is	O
dead-on	O
.	O
The	O
only	O
``	O
gotcha	O
''	O
that	O
might	O
be	O
waiting	O
is	O
that	O
this	O
is	O
only	O
true	O
if	O
you	O
are	O
using	O
the	O
operator	O
.	O
When	O
using	O
the	O
operator	O
,	O
both	O
expressions	O
will	O
be	O
evaluated	O
every	O
time	O
,	O
regardless	O
if	O
one	O
or	O
both	O
evaluate	O
to	O
false	O
.	O
if	O
(	O
amHungry	O
whiteCastleIsNearby	O
)	O
{	O
//	O
The	O
code	O
will	O
check	O
if	O
White	O
Castle	O
is	O
nearby	O
//	O
even	O
when	O
I	O
am	O
not	O
hungry	O
}	O
if	O
(	O
amHungry	O
whiteCastleIsNearby	O
)	O
{	O
//	O
The	O
code	O
will	O
only	O
check	O
if	O
White	O
Castle	O
is	O
nearby	O
//	O
when	O
I	O
am	O
Note	O
that	O
there	O
is	O
a	O
difference	O
between	O
and	O
regarding	O
how	O
much	O
of	O
your	O
expression	O
is	O
evaluated	O
.	O
is	O
known	O
as	O
a	O
short-circuited	O
boolean	O
AND	O
,	O
and	O
will	O
,	O
as	O
noted	O
by	O
others	O
here	O
,	O
stop	O
early	O
if	O
the	O
result	O
can	O
be	O
determined	O
before	O
all	O
the	O
sub-expressions	O
are	O
evaluated	O
.	O
is	O
known	O
as	O
a	O
logical	O
bitwise	O
operator	O
and	O
will	O
always	O
evaluate	O
all	O
the	O
sub-expressions	O
.	O
As	O
such	O
:	O
if	O
(	O
a	O
(	O
)	O
b	O
(	O
)	O
)	O
Will	O
only	O
call	O
b	O
if	O
a	O
returns	O
true	O
.	O
however	O
,	O
this	O
:	O
if	O
(	O
a	O
(	O
)	O
b	O
(	O
)	O
)	O
Will	O
always	O
call	O
both	O
a	O
and	O
b	O
,	O
even	O
though	O
the	O
result	O
of	O
calling	O
a	O
is	O
false	O
and	O
thus	O
known	O
to	O
be	O
false	O
regardless	O
of	O
the	O
result	O
of	O
calling	O
b	O
.	O
This	O
same	O
difference	O
exists	O
for	O
the	O
||	O
and	O
|	O
operators	O
.	O
Some	O
languages	O
have	O
interesting	O
situations	O
where	O
expressions	O
are	O
executed	O
in	O
a	O
different	O
order	O
.	O
I	O
am	O
specifically	O
thinking	O
of	O
Ruby	O
,	O
but	O
I	O
'm	O
sure	O
they	O
borrowed	O
it	O
from	O
elsewhere	O
(	O
probably	O
Perl	O
)	O
.	O
The	O
expressions	O
in	O
the	O
logic	O
will	O
stay	O
left	O
to	O
right	O
,	O
but	O
for	O
example	O
:	O
puts	O
message	O
unless	O
The	O
above	O
will	O
evaluate	O
``	O
message.nil	B-API
?	O
''	O
first	O
,	O
then	O
if	O
it	O
evaluates	O
to	O
false	O
(	O
unless	O
is	O
like	O
if	O
except	O
it	O
executes	O
when	O
the	O
condition	O
is	O
false	O
instead	O
of	O
true	O
)	O
,	O
``	O
puts	O
message	O
''	O
will	O
execute	O
,	O
which	O
prints	O
the	O
contents	O
of	O
the	O
message	O
variable	O
to	O
the	O
screen	O
.	O
It	O
's	O
kind	O
of	O
an	O
interesting	O
way	O
to	O
structure	O
your	O
code	O
sometimes	O
...	O
I	O
personally	O
like	O
to	O
use	O
it	O
for	O
very	O
short	O
1	O
liners	O
like	O
the	O
above	O
.	O
Edit	O
:	O
To	O
make	O
it	O
a	O
little	O
clearer	O
,	O
the	O
above	O
is	O
the	O
same	O
as	O
:	O
unless	O
message.nil	B-API
?	O
puts	O
Nopes	O
,	O
at	O
least	O
the	O
C	O
#	O
compiler	O
does	O
n't	O
work	O
backwards	O
(	O
in	O
either	O
or	O
||	O
)	O
.	O
It	O
's	O
left	O
to	O
right	O
.	O
What	O
is	O
a	O
good	O
example	O
of	O
when	O
to	O
use	O
the	O
bitwise	O
operator	O
instead	O
of	O
the	O
``	O
short-circuited	O
boolean	O
''	O
?	O
Suppose	O
you	O
have	O
flags	O
,	O
say	O
for	O
file	O
attributes	O
.	O
Suppose	O
you	O
've	O
defined	O
READ	O
as	O
4	O
,	O
WRITE	O
as	O
2	O
,	O
and	O
EXEC	O
as	O
1	O
.	O
In	O
binary	O
,	O
that	O
's	O
:	O
READ	B-API
0100	O
WRITE	B-API
0010	O
EXEC	B-API
Each	O
flag	O
has	O
one	O
bit	O
set	O
,	O
and	O
each	O
one	O
is	O
unique	O
.	O
The	O
bitwise	O
operators	O
let	O
you	O
combine	O
these	O
flags	B-API
:	O
flags	B-API
=	O
READ	B-API
EXEC	B-API
;	O
//	O
value	O
of	O
flags	B-API
is	O
@	O
shsteimer	O
The	O
concept	O
modesty	O
is	O
referring	O
to	O
is	O
operator	O
overloading	O
.	O
in	O
the	O
statement	O
:	O
...	O
A	O
is	O
evaluated	O
first	O
,	O
if	O
it	O
evaluates	O
to	O
false	O
,	O
B	O
is	O
never	O
evaluated	O
.	O
The	O
same	O
applies	O
to	O
That	O
's	O
not	O
operator	O
overloading	O
.	O
Operator	O
overloading	O
is	O
the	O
term	O
given	O
for	O
letting	O
you	O
define	O
custom	O
behaviour	O
for	O
operators	O
,	O
such	O
as	O
*	O
,	O
+	O
,	O
=	O
and	O
so	O
on	O
.	O
This	O
would	O
let	O
you	O
write	O
your	O
own	O
'Log	O
'	O
class	O
,	O
and	O
then	O
do	O
a	O
=	O
new	O
;	O
//	O
Log	O
class	O
overloads	O
the	O
+	O
operatora	O
+	O
``	O
some	O
string	O
''	O
;	O
//	O
Call	O
the	O
overloaded	O
method	O
-	O
otherwise	O
this	O
would	O
n't	O
work	O
because	O
you	O
ca	O
n't	O
normally	O
add	O
strings	O
to	O
Log	B-API
(	I-API
)	I-API
Doing	O
this	O
||	O
//	O
be	O
never	O
runs	O
if	O
a	O
is	O
a	O
(	O
)	O
b	O
(	O
)	O
is	O
actually	O
called	O
Short	O
Circuit	O
Evaluation	O
You	O
use	O
when	O
you	O
specifically	O
want	O
to	O
evaluate	O
all	O
the	O
sub-expressions	O
,	O
most	O
likely	O
because	O
they	O
have	O
side-effects	O
you	O
want	O
,	O
even	O
though	O
the	O
final	O
result	O
will	O
be	O
false	O
and	O
thus	O
not	O
execute	O
your	O
then	O
part	O
of	O
your	O
if-statement	O
.	O
Note	O
that	O
and	O
|	O
operates	O
for	O
both	O
bitwise	O
masks	O
and	O
boolean	O
values	O
and	O
is	O
not	O
just	O
for	O
bitwise	O
operations	O
.	O
They	O
're	O
called	O
bitwise	O
,	O
but	O
they	O
are	O
defined	O
for	O
both	O
integers	O
and	O
boolean	O
data	O
types	O
in	O
C	O
#	O
.	O
When	O
things	O
are	O
all	O
in-line	O
,	O
they	O
're	O
executed	O
left-to-right	O
.	O
When	O
things	O
are	O
nested	O
,	O
they	O
're	O
executed	O
inner-to-outer	O
.	O
This	O
may	O
seem	O
confusing	O
as	O
usually	O
what	O
's	O
``	O
innermost	O
''	O
is	O
on	O
the	O
right-hand	O
side	O
of	O
the	O
line	O
,	O
so	O
it	O
seems	O
like	O
it	O
's	O
going	O
backwards	O
...	O
For	O
example	O
a	B-API
=	B-API
)	B-API
(	O
5	O
,	O
GetSummary	B-API
(	I-API
``	I-API
Orion	I-API
''	I-API
,	I-API
GetAddress	B-API
(	I-API
``	I-API
Orion	I-API
''	I-API
)	I-API
Things	O
happen	O
like	O
this	O
:	O
Call	O
with	O
the	O
literal	O
Call	O
with	O
the	O
literal	O
and	O
the	O
result	O
of	O
Call	O
with	O
the	O
literal	O
and	O
the	O
result	O
of	O
Assign	O
this	O
v	O
lue	O
to	O
a	O
I	O
realise	O
this	O
question	O
has	O
already	O
been	O
answered	O
,	O
but	O
I	O
'd	O
like	O
to	O
throw	O
in	O
another	O
bit	O
of	O
information	O
which	O
is	O
related	O
to	O
the	O
topic	O
.	O
In	O
languages	O
,	O
like	O
C++	O
,	O
where	O
you	O
can	O
actually	O
overload	O
the	O
behaviour	O
of	O
the	O
and	O
||	O
operators	O
,	O
it	O
is	O
highly	O
recommended	O
that	O
you	O
do	O
not	O
do	O
this	O
.	O
This	O
is	O
because	O
when	O
you	O
overload	O
this	O
behaviour	O
,	O
you	O
end	O
up	O
forcing	O
the	O
evaluation	O
of	O
both	O
sides	O
of	O
the	O
operation	O
.	O
This	O
does	O
two	O
things	O
:	O
It	O
breaks	O
the	O
lazy	O
evaluation	O
mechanism	O
because	O
the	O
overload	O
is	O
a	O
function	O
which	O
has	O
to	O
be	O
invoked	O
,	O
and	O
hence	O
both	O
parameters	O
are	O
evaluated	O
before	O
calling	O
the	O
function	O
.	O
The	O
order	O
of	O
evaluation	O
of	O
said	O
parameters	O
is	O
n't	O
guaranteed	O
and	O
can	O
be	O
compiler	O
specific	O
.	O
Hence	O
the	O
objects	O
would	O
n't	O
behave	O
in	O
the	O
same	O
manner	O
as	O
they	O
do	O
in	O
the	O
examples	O
listed	O
in	O
the	O
question/previous	O
answers	O
.	O
For	O
more	O
info	O
,	O
have	O
a	O
read	O
of	O
Scott	O
Meyers	O
'	O
book	O
,	O
More	O
Effective	O
C++	O
.	O
Cheers	O
!	O
I	O
like	O
Orion	O
's	O
responses	O
.	O
I	O
'll	O
add	O
two	O
things	O
:	O
The	O
left-to-right	O
still	O
applies	O
first	O
The	O
inner-to-outer	O
to	O
ensure	O
that	O
all	O
arguments	O
are	O
resolved	O
before	O
calling	O
the	O
function	O
Say	O
we	O
have	O
the	O
following	O
example	O
:	O
a	O
=	O
)	O
,	O
(	O
5	O
,	O
GetSummary	B-API
(	I-API
``	I-API
Orion	I-API
''	I-API
,	I-API
GetAddress	B-API
(	I-API
``	I-API
Orion	I-API
''	I-API
)	I-API
(	O
``	O
Chris	O
''	O
,	O
GetAddress	B-API
(	I-API
``	I-API
Chris	I-API
''	I-API
)	I-API
Here	O
's	O
the	O
order	O
of	O
execution	O
:	O
GetAddress	B-API
(	I-API
``	I-API
Orion	I-API
''	I-API
)	I-API
(	O
``	O
Orion	O
''	O
,	O
...	O
)	O
GetAddress	B-API
(	I-API
``	I-API
Chris	I-API
''	I-API
)	I-API
(	O
``	O
Chris	O
''	O
,	O
...	O
)	O
Foo	O
(	O
...	O
)	O
Assigns	O
to	O
I	O
ca	O
n't	O
speak	O
about	O
C	O
#	O
's	O
legal	O
requirements	O
(	O
although	O
I	O
did	O
test	O
a	O
similar	O
example	O
using	O
Mono	O
before	O
writing	O
this	O
post	O
)	O
,	O
but	O
this	O
order	O
is	O
guaranteed	O
in	O
Java	O
.	O
And	O
just	O
for	O
completeness	O
(	O
since	O
this	O
is	O
a	O
language-agnostic	O
thread	O
as	O
well	O
)	O
,	O
there	O
are	O
languages	O
like	O
C	O
and	O
C++	O
,	O
where	O
the	O
order	O
is	O
not	O
guaranteed	O
unless	O
there	O
is	O
a	O
sequence	O
point	O
.	O
References	O
:	O
1	O
,	O
2	O
.	O
In	O
answering	O
the	O
thread	O
's	O
question	O
,	O
however	O
,	O
and	O
are	O
sequence	O
points	O
in	O
C++	O
(	O
unless	O
overloaded	O
;	O
also	O
see	O
OJ	O
's	O
excellent	O
answer	O
)	O
.	O
So	O
some	O
examples	O
:	O
foo	O
(	O
)	O
bar	O
(	O
)	O
foo	O
(	O
)	O
bar	O
(	O
)	O
In	O
the	O
case	O
,	O
foo	O
(	O
)	O
is	O
guaranteed	O
to	O
run	O
before	O
bar	O
(	O
)	O
(	O
if	O
the	O
latter	O
is	O
run	O
at	O
all	O
)	O
,	O
since	O
is	O
a	O
sequence	O
point	O
.	O
In	O
the	O
case	O
,	O
no	O
such	O
guarantee	O
is	O
made	O
(	O
in	O
C	O
and	O
C++	O
)	O
,	O
and	O
indeed	O
bar	O
(	O
)	O
can	O
run	O
before	O
foo	O
(	O
)	O
,	O
or	O
vice	O
versa	O
.	O
``	O
C	O
#	O
:	O
Left	O
to	O
right	O
,	O
and	O
processing	O
stops	O
if	O
a	O
match	O
(	O
evaluates	O
to	O
true	O
)	O
is	O
found	O
.	O
''	O
Zombie	O
sheep	O
is	O
wrong	O
,	O
not	O
enough	O
rep	O
to	O
down	O
vote	O
it	O
.	O
The	O
question	O
is	O
about	O
the	O
operator	O
,	O
not	O
the	O
||	O
operator	O
.	O
In	O
the	O
case	O
of	O
evaluation	O
will	O
stop	O
if	O
a	O
FALSE	O
is	O
found	O
.	O
In	O
the	O
case	O
of	O
||	O
evaluation	O
stops	O
if	O
a	O
TRUE	O
is	O
found	O
.	O
Do	O
you	O
need	O
to	O
open	O
the	O
locfile	O
in	O
binary	O
using	O
?	O
f	O
=	O
open	B-API
(	I-API
locfile	I-API
,	I-API
``	I-API
rb	I-API
''	I-API
)	I-API
Well	O
if	O
you	O
go	O
under	O
the	O
properties	O
of	O
your	O
file	O
in	O
Windows	O
or	O
a	O
*nix	O
environment	O
,	O
you	O
will	O
notice	O
two	O
sizes	O
.	O
One	O
is	O
the	O
sector	O
size	O
,	O
and	O
one	O
is	O
the	O
actual	O
size	O
.	O
The	O
sector	O
size	O
is	O
the	O
number	O
of	O
sectors	O
in	O
bytes	O
that	O
are	O
used	O
up	O
on	O
your	O
hard	O
disk	O
.	O
That	O
is	O
because	O
two	O
files	O
can	O
not	O
be	O
in	O
the	O
same	O
sector	O
with	O
most	O
modern	O
file	O
systems	O
,	O
so	O
if	O
your	O
file	O
fills	O
up	O
half	O
of	O
the	O
sector	O
the	O
whole	O
sector	O
is	O
marked	O
as	O
filled	O
.	O
So	O
you	O
might	O
be	O
comparing	O
the	O
sector	O
file	O
size	O
to	O
the	O
actual	O
file	O
size	O
on	O
the	O
FTP	O
server	O
or	O
vice	O
versa	O
.	O
Small	O
files	O
take	O
up	O
a	O
whole	O
node	O
on	O
the	O
filesystem	O
whatever	O
size	O
that	O
is	O
.	O
My	O
host	O
tends	O
to	O
report	O
all	O
small	O
files	O
as	O
4kb	O
in	O
ftp	O
but	O
in	O
a	O
shell	O
gives	O
an	O
accurate	O
size	O
so	O
it	O
might	O
be	O
a	O
'feature	O
'	O
common	O
to	O
ftp	O
clients	O
.	O
One	O
possibility	O
is	O
Hudson	O
.	O
It	O
's	O
written	O
in	O
Java	O
,	O
but	O
there	O
's	O
integration	O
with	O
Python	O
projects	O
:	O
Hudson	O
embraces	O
Python	O
I	O
've	O
never	O
tried	O
it	O
myself	O
,	O
however	O
.	O
(	O
Update	O
,	O
Sept.	O
2011	O
:	O
After	O
a	O
trademark	O
dispute	O
Hudson	O
has	O
been	O
renamed	O
to	O
Jenkins	O
.	O
)	O
We	O
run	O
Buildbot	O
-	O
Trac	O
at	O
work	O
,	O
I	O
have	O
n't	O
used	O
it	O
too	O
much	O
since	O
my	O
code	O
base	O
is	O
n't	O
part	O
of	O
the	O
release	O
cycle	O
yet	O
.	O
But	O
we	O
run	O
the	O
tests	O
on	O
different	O
environments	B-API
(	I-API
OSX/Linux/Win	I-API
)	I-API
and	O
it	O
sends	O
emails	O
--	O
and	O
it	O
's	O
written	O
in	O
python	O
.	O
Second	O
the	O
Buildbot	O
-	O
Trac	O
integration	O
.	O
You	O
can	O
find	O
more	O
information	O
about	O
the	O
integration	O
on	O
the	O
Buildbot	O
website	O
.	O
At	O
my	O
previous	O
job	O
,	O
we	O
wrote	O
and	O
used	O
the	O
plugin	O
they	O
mention	B-API
(	I-API
tracbb	I-API
)	I-API
.	O
What	O
the	O
plugin	O
does	O
is	O
rewriting	O
all	O
of	O
the	O
Buildbot	O
urls	O
so	O
you	O
can	O
use	O
Buildbot	O
from	O
within	O
Trac	B-API
.	I-API
(	I-API
http	I-API
:	I-API
//example.com/tracbb	I-API
)	I-API
.	O
The	O
really	O
nice	O
thing	O
about	O
Buildbot	O
is	O
that	O
the	O
configuration	O
is	O
written	O
in	O
Python	O
.	O
You	O
can	O
integrate	O
your	O
own	O
Python	O
code	O
directly	O
to	O
the	O
configuration	O
.	O
It	O
's	O
also	O
very	O
easy	O
to	O
write	O
your	O
own	O
BuildSteps	O
to	O
execute	O
specific	O
tasks	O
.	O
We	O
used	O
BuildSteps	O
to	O
get	O
the	O
source	O
from	O
SVN	O
,	O
pull	O
the	O
dependencies	O
,	O
publish	O
test	O
results	O
to	O
WebDAV	O
,	O
etcetera	O
.	O
I	O
wrote	O
an	O
X10	O
interface	O
so	O
we	O
could	O
send	O
signals	O
with	O
build	O
results	O
.	O
When	O
the	O
build	O
failed	O
,	O
we	O
switched	O
on	O
a	O
red	O
lava	O
lamp	O
.	O
When	O
the	O
build	O
succeeded	O
,	O
a	O
green	O
lava	O
lamp	O
switched	O
on	O
.	O
Good	O
times	O
:	O
-	O
)	O
I	O
'm	O
not	O
sure	O
if	O
this	O
would	O
be	O
handled	O
exactly	O
the	O
same	O
way	O
for	O
webstart	O
,	O
but	O
we	O
ran	O
into	O
this	O
situation	O
in	O
a	O
desktop	O
application	O
when	O
dealing	O
with	O
a	O
set	O
of	O
native	O
libraries	O
(	O
dlls	O
in	O
our	O
case	O
)	O
.	O
Loading	O
libA	O
before	O
libB	O
should	O
work	O
,	O
unless	O
one	O
of	O
those	O
libraries	O
has	O
a	O
dependency	O
that	O
is	O
unaccounted	O
for	O
and	O
not	O
in	O
the	O
path	O
.	O
My	O
understanding	O
is	O
that	O
once	O
it	O
gets	O
to	O
a	O
system	O
loadLibrary	O
call	O
(	O
i.e	O
.	O
Java	O
has	O
found	O
the	O
library	O
in	O
its	O
java.library.path	B-API
and	O
is	O
now	O
telling	O
the	O
OS	O
to	O
load	O
it	O
)	O
-	O
it	O
is	O
completely	O
dependent	O
on	O
the	O
operating	O
system	O
to	O
find	O
any	O
dependent	O
libraries	O
,	O
because	O
at	O
that	O
point	O
it	O
is	O
the	O
operating	O
system	O
that	O
is	O
loading	O
the	O
library	O
for	O
the	O
process	O
,	O
and	O
the	O
OS	O
only	O
knows	O
how	O
to	O
look	O
in	O
the	O
system	O
path	O
.	O
That	O
seems	O
hard	O
to	O
set	O
in	O
the	O
case	O
of	O
a	O
Webstart	O
app	O
,	O
but	O
there	O
is	O
a	O
way	O
around	O
this	O
that	O
does	O
not	O
involve	O
static	O
compiling	O
.	O
You	O
may	O
be	O
able	O
to	O
shuffle	O
where	O
your	O
libraries	O
are	O
-	O
I	O
am	O
unsure	O
If	O
you	O
use	O
a	O
custom	O
classloader	O
,	O
you	O
can	O
override	O
loadLibrary	O
and	O
findLibrary	O
so	O
that	O
it	O
can	O
locate	O
your	O
libraries	O
from	O
within	O
a	O
jar	O
in	O
your	O
classpath	O
,	O
and	O
if	O
you	O
also	O
make	O
it	O
aware	O
of	O
your	O
native	O
library	O
dependencies	O
(	O
i.e	O
.	O
libB	O
depends	O
on	O
libA	O
depends	O
on	O
libX	O
,	O
then	O
when	O
loading	O
libB	O
you	O
can	O
catch	O
yourself	O
and	O
ensure	O
you	O
load	O
libA	O
first	O
,	O
and	O
in	O
checking	O
that	O
notice	O
and	O
load	O
libX	O
first	O
.	O
Then	O
the	O
OS	O
does	O
n't	O
try	O
to	O
find	O
a	O
library	O
that	O
is	O
n't	O
in	O
your	O
path	O
.	O
It	O
's	O
klunky	O
and	O
a	O
bit	O
painful	O
,	O
but	O
ensuring	O
Java	O
finds	O
them	O
and	O
loads	O
them	O
all	O
in	O
the	O
correct	O
order	O
can	O
work	O
.	O
Hrm	O
.	O
I	O
do	O
n't	O
know	O
about	O
yahoo	O
,	O
but	O
there	O
is	O
another	O
mapping	O
website	O
that	O
provides	O
an	O
API	O
for	O
India	O
.	O
http	O
:	O
//biz.mapmyindia.com/APIs.html	O
Open	O
your	O
csproj	O
file	O
in	O
notepad	O
(	O
or	O
notepad++	O
)	O
Find	O
the	O
line	O
:	O
Import	O
Project=	O
''	O
$	O
(	O
MSBuildToolsPath	O
)	O
\Microsoft.CSharp.targets	O
''	O
/	O
and	O
change	O
it	O
to	O
Import	O
Project=	O
''	O
$	O
(	O
MSBuildBinPath	O
)	O
\Microsoft.CSharp.targets	O
''	O
/	O
if	O
its	O
.net	O
on	O
both	O
sides	O
:	O
think	O
you	O
should	O
use	O
binary	O
serialization	O
and	O
send	O
the	O
byte	O
[	O
]	O
result	O
.	O
trusting	O
your	O
struct	O
to	O
be	O
fully	O
blittable	O
can	O
be	O
trouble	O
.	O
you	O
will	O
pay	O
in	O
some	O
overhead	O
(	O
both	O
cpu	O
and	O
network	O
)	O
but	O
will	O
be	O
safe	O
.	O
If	O
you	O
need	O
to	O
populate	O
each	O
member	O
variable	O
by	O
hand	O
you	O
can	O
generalize	O
it	O
a	O
bit	O
as	O
far	O
as	O
the	O
primitives	O
are	O
concerned	O
by	O
using	O
FormatterServices	O
to	O
retrieve	O
in	O
order	O
the	O
list	O
of	O
variable	O
types	O
associated	O
with	O
an	O
object	O
.	O
I	O
've	O
had	O
to	O
do	O
this	O
in	O
a	O
project	O
where	O
I	O
had	O
a	O
lot	O
of	O
different	O
message	O
types	O
coming	O
off	O
the	O
stream	O
and	O
I	O
definitely	O
did	O
n't	O
want	O
to	O
write	O
the	O
serializer/deserializer	O
for	O
each	O
message	O
.	O
Here	O
's	O
the	O
code	O
I	O
used	O
to	O
generalize	O
the	O
deserialization	O
from	O
a	O
byte	O
[	O
]	O
.	O
public	O
virtual	O
bool	O
{	O
MemberInfo	O
[	O
]	O
members	O
=	O
)	O
;	O
object	O
[	O
]	O
values	O
=	O
;	O
int	O
j	O
=	O
0	O
;	O
for	O
(	O
int	O
i	O
=	O
0	O
;	O
i	O
members.Length	B-API
;	O
i++	O
)	O
{	O
string	O
[	O
]	O
var	O
=	O
;	O
switch	O
(	O
var	O
[	O
0	O
]	O
)	O
{	O
case	O
``	O
UInt32	O
''	O
:	O
values	B-API
[	I-API
i	I-API
]	I-API
=	I-API
+	I-API
(	I-API
message	B-API
[	I-API
j	I-API
+	I-API
1	I-API
]	I-API
16	I-API
)	I-API
+	I-API
(	I-API
message	B-API
[	I-API
j	I-API
+	I-API
2	I-API
]	I-API
8	I-API
)	I-API
+	I-API
message	B-API
[	I-API
j	I-API
+	I-API
3	I-API
]	I-API
)	I-API
;	I-API
j	I-API
+=	I-API
4	I-API
;	I-API
break	O
;	O
case	O
``	O
UInt16	O
''	O
:	O
values	B-API
[	I-API
i	I-API
]	I-API
=	I-API
+	I-API
message	B-API
[	I-API
j	I-API
+	I-API
1	I-API
]	I-API
)	I-API
;	I-API
j	I-API
+=	I-API
2	I-API
;	I-API
break	O
;	O
case	O
``	O
Byte	O
''	O
:	O
values	B-API
[	I-API
i	I-API
]	I-API
=	I-API
(	I-API
byte	I-API
)	I-API
message	B-API
[	I-API
j++	I-API
]	I-API
;	I-API
break	O
;	O
case	O
``	O
UInt32	O
[	O
]	O
''	O
:	O
if	O
(	O
values	B-API
[	I-API
i	I-API
]	I-API
!	I-API
=	I-API
null	I-API
)	I-API
{	I-API
int	I-API
len	I-API
=	I-API
values	B-API
[	I-API
i	I-API
]	I-API
)	I-API
.Length	I-API
;	O
byte	O
[	O
]	O
b	O
=	O
new	O
byte	O
[	O
len	O
*	O
4	O
]	O
;	O
;	O
,	O
(	O
UInt32	O
[	O
]	O
)	O
values	B-API
[	I-API
i	I-API
]	I-API
,	I-API
len	I-API
)	I-API
;	I-API
j	I-API
+=	I-API
len	I-API
*	I-API
4	I-API
;	I-API
}	I-API
break	I-API
;	I-API
case	I-API
``	I-API
Byte	B-API
[	I-API
]	I-API
''	O
:	O
if	O
(	O
values	B-API
[	I-API
i	I-API
]	I-API
!	I-API
=	I-API
null	I-API
)	I-API
{	O
int	O
len	O
=	O
values	B-API
[	I-API
i	I-API
]	I-API
)	I-API
.Length	I-API
;	I-API
(	I-API
values	B-API
[	I-API
i	I-API
]	I-API
)	I-API
,	I-API
0	I-API
,	I-API
len	I-API
)	I-API
;	I-API
j	I-API
+=	I-API
len	I-API
;	I-API
}	I-API
break	O
;	O
default	O
:	O
throw	O
new	O
;	O
}	O
}	O
;	O
return	O
true	O
;	O
(	O
byte	O
[	O
]	O
message	B-API
)	I-API
(	O
this.GetType	O
(	O
)	O
(	O
this	O
,	O
members	B-API
)	I-API
[	I-API
i	I-API
]	I-API
.ToString	I-API
(	I-API
)	I-API
.Split	I-API
(	I-API
new	I-API
char	I-API
[	I-API
]	I-API
{	I-API
'	I-API
'	I-API
}	I-API
)	I-API
UInt32	I-API
)	I-API
(	I-API
(	I-API
message	I-API
[	O
j	O
]	O
24	O
)	O
UInt16	O
)	O
(	O
(	O
message	O
[	O
j	O
]	O
8	O
)	O
(	B-API
(	I-API
UInt32	I-API
[	I-API
]	I-API
)	I-API
(	O
message	O
,	O
j	O
,	O
b	O
,	O
0	O
,	O
len	O
*	O
4	O
)	O
Array.Copy	B-API
(	I-API
Utilities.ByteArrayToUInt32Array	I-API
(	I-API
b	I-API
)	I-API
(	I-API
(	I-API
byte	I-API
[	I-API
]	I-API
)	I-API
(	O
message	O
,	O
j	O
,	O
(	O
byte	O
[	O
]	O
)	O
(	O
``	O
ByteExtractable	O
:	O
:SetMessageBytes	O
Unsupported	O
Type	O
:	O
``	O
+	O
var	O
[	O
1	O
]	O
+	O
``	O
is	O
of	O
type	O
``	O
+	O
var	O
[	O
0	O
]	O
)	O
(	O
this	O
,	O
members	O
,	O
values	O
)	O
Most	O
people	O
use	O
.NET	O
serialization	O
(	O
there	O
is	O
faster	O
binary	O
and	O
slower	O
XML	O
formatter	O
,	O
they	O
both	O
depend	O
on	O
reflection	O
and	O
are	O
version	O
tolerant	O
to	O
certain	O
degree	O
)	O
However	O
,	O
if	O
you	O
want	O
the	O
fastest	O
(	O
unsafe	O
)	O
way	O
-	O
why	O
not	O
:	O
Writing	O
:	O
YourStruct	O
o	O
=	O
new	O
YourStruct	O
(	O
)	O
;	O
byte	O
[	O
]	O
buffer	O
=	O
new	O
byte	O
[	O
Marshal.SizeOf	O
(	O
typeof	O
(	O
YourStruct	O
)	O
)	O
]	O
;	O
GCHandle	O
handle	O
=	O
GCHandle.Alloc	B-API
(	I-API
buffer	I-API
,	I-API
GCHandleType.Pinned	I-API
)	I-API
;	O
Marshal.StructureToPtr	B-API
(	I-API
o	I-API
,	I-API
handle.AddrOfPinnedObject	B-API
(	I-API
)	I-API
,	O
false	O
)	O
;	O
handle.Free	O
(	O
)	O
;	O
Reading	O
:	O
handle	O
=	O
GCHandle.Alloc	B-API
(	I-API
buffer	I-API
,	I-API
GCHandleType.Pinned	I-API
)	I-API
;	O
o	O
=	O
(	O
YourStruct	O
)	O
Marshal.PtrToStructure	B-API
(	I-API
handle.AddrOfPinnedObject	I-API
(	I-API
)	I-API
,	O
typeof	O
(	O
YourStruct	O
)	O
)	O
;	O
handle.Free	B-API
(	I-API
)	I-API
;	O
One	O
possibility	O
lies	O
with	O
Win32	O
ANSI/Unicode	O
``	O
name-mangling	O
''	O
,	O
which	O
turns	O
the	O
symbol	O
into	O
either	O
or	O
.	O
There	O
are	O
three	O
possibilities	O
:	O
Windows.h	O
has	O
n't	O
been	O
loaded	O
,	O
so	O
stays	O
Windows.h	O
was	O
loaded	O
with	O
symbols	O
set	O
for	O
ANSI	O
,	O
so	O
becomes	O
Windows.h	O
was	O
loaded	O
with	O
symbols	O
set	O
for	O
Unicode	O
,	O
so	O
becomes	O
If	O
you	O
've	O
compiled	O
two	O
different	O
files	O
in	O
ways	O
that	O
trigger	O
two	O
different	O
scenarios	O
,	O
you	O
'll	O
get	O
a	O
linker	O
error	O
.	O
The	O
error	O
message	O
indicates	O
that	O
the	O
class	O
was	O
an	O
instance	O
of	O
#	O
2	O
,	O
above	O
--	O
perhaps	O
it	O
's	O
used	O
somewhere	O
that	O
windows.h	O
has	O
n't	O
been	O
loaded	O
?	O
Other	O
things	O
I	O
'd	O
do	O
in	O
your	O
place	O
,	O
just	O
as	O
a	O
matter	O
of	O
routine	O
:	O
1	O
)	O
Ensure	O
that	O
my	O
include	O
and	O
library	O
paths	O
do	O
n't	O
contain	O
anything	O
that	O
I	O
'm	O
not	O
expecting	O
.	O
2	O
)	O
Do	O
a	O
``	O
build	O
clean	O
''	O
and	O
then	O
manually	O
verify	O
it	O
,	O
deleting	O
any	O
extra	O
object	O
files	O
if	O
necessary	O
.	O
3	O
)	O
Make	O
sure	O
there	O
are	O
n't	O
any	O
hardcoded	O
paths	O
in	O
include	O
statements	O
that	O
do	O
n't	O
mean	O
what	O
they	O
meant	O
when	O
the	O
project	O
was	O
originally	O
rebuilt	O
.	O
EDIT	O
:	O
Fighting	O
with	O
the	O
formatting	O
:	O
(	O
windows.h	O
is	O
declared	O
at	O
the	O
top	O
of	O
IOCompletionPort.h	O
as	O
an	O
include	O
-	O
I	O
was	O
sick	O
of	O
seeing	O
7	O
lines	O
just	O
to	O
include	O
1	O
file	O
so	O
I	O
have	O
wrapped	O
it	O
its	O
own	O
file	O
and	O
includes	O
that	O
itself	O
.	O
This	O
also	O
contains	O
some	O
additional	O
#	O
defines	O
(	O
ie	O
ULONG_PTR	O
)	O
as	O
our	O
main	O
app	O
wo	O
n't	O
compile	O
with	O
the	O
Platform	O
SDK	O
installed	O
:	O
-	O
(	O
That	O
is	O
confirmed	O
.	O
Nothing	O
is	O
out	O
of	O
place	O
.	O
I	O
've	O
done	O
that	O
-	O
deleted	O
the	O
build	O
directories	O
I	O
never	O
use	O
hard-coded	O
paths	O
.	O
Presuming	O
you	O
have	O
n't	O
futzed	O
around	O
with	O
the	O
Project	O
settings	O
deleting	O
something	O
you	O
ought	O
not	O
have	O
(	O
which	O
is	O
where	O
I	O
'd	O
expect	O
external	O
dependencies	O
like	O
User32.lib	O
to	O
be	O
)	O
:	O
Check	O
Tools	O
|	O
Options	O
|	O
Directories	O
|	O
Libraries	O
(	O
going	O
from	O
memory	O
here	O
)	O
and	O
ensure	O
that	O
you	O
're	O
not	O
missing	O
the	O
common-all-garden	O
variety	O
lib	O
directories	O
(	O
again	O
,	O
without	O
VC6	O
in	O
front	O
of	O
me	O
,	O
I	O
ca	O
n't	O
tell	O
you	O
what	O
they	O
are	O
)	O
Does	O
this	O
get	O
the	O
correct	O
answer	O
?	O
document.getElementById	B-API
(	I-API
``	I-API
newSkill	I-API
''	I-API
)	I-API
.innerHTML	I-API
.selectedIndex	B-API
]	I-API
.value	I-API
document.getElementById	B-API
(	I-API
'newSkill	I-API
'	I-API
)	I-API
.options	I-API
[	I-API
document.getElementById	I-API
(	I-API
'newSkill	I-API
'	I-API
)	I-API
Should	O
work	O
This	O
should	O
return	O
the	O
text	O
value	O
of	O
the	O
selected	O
value	O
var	O
vSkill	O
=	O
document.getElementById	B-API
(	I-API
'newSkill	I-API
'	I-API
)	I-API
;	O
var	O
vSkillText	O
=	O
vSkill.options	B-API
[	I-API
vSkill.selectedIndex	I-API
]	I-API
.innerHTML	I-API
;	O
alert	B-API
(	I-API
vSkillText	I-API
)	I-API
;	O
Props	O
:	O
@	O
Tanerax	O
for	O
reading	O
the	O
question	O
,	O
knowing	O
what	O
was	O
asked	O
and	O
answering	O
it	O
before	O
others	O
figured	O
it	O
out	O
.	O
Edit	O
:	O
DownModed	O
,	O
cause	O
I	O
actually	O
read	O
a	O
question	O
fully	O
,	O
and	O
answered	O
it	O
,	O
sad	O
world	O
it	O
is	O
.	O
Based	O
on	O
your	O
example	O
HTML	O
code	O
,	O
here	O
's	O
one	O
way	O
to	O
get	O
the	O
displayed	O
text	O
of	O
the	O
currently	O
selected	O
option	O
:	O
var	O
skillsSelect	O
=	O
document.getElementById	B-API
(	I-API
``	I-API
newSkill	I-API
''	I-API
)	I-API
;	O
var	O
selectedText	O
=	O
skillsSelect.options	B-API
[	I-API
skillsSelect.selectedIndex	I-API
]	I-API
.text	I-API
;	O
in	O
1.x	O
there	O
used	O
to	O
be	O
things	O
DataTables	O
could	O
n't	O
do	O
which	O
DataSets	O
could	O
(	O
do	O
n't	O
remember	O
exactly	O
what	O
)	O
.	O
All	O
that	O
was	O
changed	O
in	O
2.x	O
.	O
My	O
guess	O
is	O
that	O
's	O
why	O
a	O
lot	O
of	O
examples	O
still	O
use	O
DataSets	O
.	O
DataTables	O
should	O
be	O
quicker	O
as	O
they	O
are	O
more	O
lightweight	O
.	O
If	O
you	O
're	O
only	O
pulling	O
a	O
single	O
resultset	O
,	O
its	O
your	O
best	O
choice	O
between	O
the	O
two	O
.	O
It	O
really	O
depends	O
on	O
the	O
sort	O
of	O
data	O
you	O
're	O
bringing	O
back	O
.	O
Since	O
a	O
DataSet	O
is	O
(	O
in	O
effect	O
)	O
just	O
a	O
collection	O
of	O
DataTable	O
objects	O
,	O
you	O
can	O
return	O
multiple	O
distinct	O
sets	O
of	O
data	O
into	O
a	O
single	O
,	O
and	O
therefore	O
more	O
manageable	O
,	O
object	O
.	O
Performance-wise	O
,	O
you	O
're	O
more	O
likely	O
to	O
get	O
inefficiency	O
from	O
unoptimized	O
queries	O
than	O
from	O
the	O
``	O
wrong	O
''	O
choice	O
of	O
.NET	O
construct	O
.	O
At	O
least	O
,	O
that	O
's	O
been	O
my	O
experience	O
.	O
One	O
feature	O
of	O
the	O
DataSet	O
is	O
that	O
if	O
you	O
can	O
call	O
multiple	O
select	O
statements	O
in	O
your	O
stored	O
procedures	O
,	O
the	O
DataSet	O
will	O
have	O
one	O
DataTable	O
for	O
each	O
.	O
There	O
are	O
three	O
ways	O
to	O
iterate	O
over	O
a	O
result	O
set	O
.	O
The	O
best	O
way	O
in	O
terms	O
of	O
both	O
readability	O
and	O
performance	O
is	O
usually	O
to	O
use	O
the	O
built-in	O
cursor	O
iterator	O
.	O
curs.execute	B-API
(	I-API
'select	I-API
*	I-API
from	I-API
people	I-API
'	I-API
)	I-API
for	O
row	O
in	O
curs	O
:	O
print	O
row	O
You	O
can	O
fetch	O
all	O
the	O
rows	O
into	O
a	O
list	O
,	O
but	O
this	O
can	O
have	O
some	O
bad	O
side	O
effects	O
if	O
the	O
result	O
set	O
is	O
large	O
.	O
You	O
have	O
to	O
wait	O
for	O
the	O
entire	O
result	O
set	O
to	O
be	O
returned	O
to	O
your	O
client	O
process	O
.	O
You	O
may	O
eat	O
up	O
a	O
lot	O
of	O
memory	O
in	O
your	O
client	O
to	O
hold	O
the	O
built-up	O
list	O
.	O
It	O
may	O
take	O
a	O
while	O
for	O
Python	O
to	O
construct	O
and	O
deconstruct	O
the	O
list	O
which	O
you	O
are	O
going	O
to	O
immediately	O
discard	O
anyways	O
.	O
for	O
row	O
in	O
curs.fetchall	B-API
(	I-API
)	I-API
:	O
print	O
row	O
Finally	O
,	O
you	O
can	O
loop	O
over	O
the	O
result	O
set	O
fetching	O
one	O
row	O
at	O
a	O
time	O
.	O
In	O
general	O
,	O
there	O
's	O
no	O
particular	O
advantage	O
in	O
doing	O
this	O
over	O
using	O
the	O
iterator	O
.	O
If	O
there	O
is	O
something	O
in	O
your	O
programming	O
logic	O
that	O
seems	O
to	O
indicate	O
there	O
is	O
an	O
advantage	O
in	O
doing	O
this	O
,	O
perhaps	O
you	O
should	O
reconsider	O
your	O
programming	O
logic	O
.	O
row	O
=	O
curs.fetchone	B-API
(	I-API
)	I-API
while	O
row	O
:	O
print	O
row	O
row	O
=	O
curs.fetchone	B-API
(	I-API
)	I-API
Application.Run	O
method	O
displays	O
one	O
(	O
or	O
more	O
)	O
forms	O
and	O
initiates	O
the	O
standard	O
message	O
loop	O
which	O
runs	O
until	O
all	O
the	O
forms	O
are	O
closed	O
.	O
You	O
can	O
not	O
force	O
a	O
return	O
from	O
that	O
method	O
except	O
by	O
closing	O
all	O
your	O
forms	O
or	O
forcing	O
an	O
application	O
shutdown	O
.	O
You	O
can	O
,	O
however	O
,	O
pass	O
an	O
ApplicationContext	O
(	O
instad	O
of	O
a	O
new	O
Form	O
(	O
)	O
)	O
to	O
Application.Run	O
method	O
and	O
ApplicationContext	O
can	O
be	O
used	O
to	O
launch	O
several	O
forms	O
at	O
once	O
.	O
Your	O
application	O
will	O
only	O
end	O
when	O
all	O
of	O
those	O
are	O
closed	O
.	O
See	O
here	O
:	O
http	O
:	O
//msdn.microsoft.com/en-us/library/system.windows.forms.application.run.aspx	O
Also	O
,	O
any	O
forms	O
that	O
you	O
Show	O
non-modally	O
will	O
continue	O
to	O
run	O
alongside	O
your	O
main	O
form	O
,	O
which	O
will	O
enable	O
you	O
to	O
have	O
more	O
than	O
one	O
windows	O
that	O
do	O
not	O
block	O
each	O
other	O
.	O
I	O
believe	O
this	O
is	O
actually	O
what	O
you	O
are	O
trying	O
to	O
accomplish	O
.	O
I	O
'm	O
sure	O
this	O
is	O
possible	O
if	O
you	O
hack	O
at	O
it	O
hard	O
enough	O
,	O
but	O
I	O
'd	O
suggest	O
it	O
is	O
not	O
a	O
good	O
idea	O
.	O
'Windows	O
'	O
(	O
that	O
you	O
see	O
on	O
the	O
screen	O
)	O
are	O
highly	O
coupled	O
to	O
processes	O
.	O
That	O
is	O
,	O
each	O
process	O
which	O
displays	O
any	O
GUI	O
is	O
expected	O
to	O
have	O
a	O
Message	O
Loop	O
,	O
which	O
processes	O
all	O
of	O
the	O
messages	O
which	O
are	O
involved	O
with	O
creating	O
and	O
managing	O
windows	O
(	O
things	O
like	O
'clicked	O
the	O
button	O
'	O
,	O
'closed	O
the	O
app	O
'	O
,	O
'redraw	O
the	O
screen	O
'	O
and	O
so	O
on	O
.	O
Because	O
of	O
this	O
,	O
it	O
is	O
more	O
or	O
less	O
assumed	O
that	O
if	O
you	O
have	O
any	O
message	O
loop	O
,	O
it	O
must	O
be	O
available	O
for	O
the	O
lifetime	O
of	O
your	O
process	O
.	O
For	O
example	O
windows	O
might	O
send	O
you	O
a	O
'quit	O
'	O
message	O
,	O
and	O
you	O
need	O
to	O
have	O
a	O
message	O
loop	O
available	O
to	O
handle	O
that	O
,	O
even	O
if	O
you	O
've	O
got	O
nothing	O
on	O
the	O
screen	O
.	O
Your	O
best	O
bet	O
is	O
do	O
it	O
like	O
this	O
:	O
Make	O
a	O
fake	O
form	O
which	O
is	O
never	O
shown	O
which	O
is	O
your	O
'main	O
app'	O
Start	O
up	O
Call	O
Application.Run	B-API
and	O
pass	O
in	O
this	O
fake	O
form	O
.	O
Do	O
your	O
work	O
in	O
another	O
thread	O
,	O
and	O
fire	O
events	O
at	O
the	O
main	O
thread	O
when	O
you	O
need	O
to	O
do	O
Gui	O
stuff	O
.	O
I	O
do	O
n't	O
know	O
the	O
ASP.NET	O
side	O
of	O
the	O
problem	O
but	O
.NET	O
has	O
a	O
pretty	O
powerful	O
class	O
:	O
System.Globalization.CultureInfo	B-API
.	O
You	O
can	O
use	O
the	O
following	O
code	O
to	O
parse	O
a	O
string	O
containing	O
a	O
double	O
value	O
:	O
double	B-API
d	B-API
=	B-API
;	B-API
//	I-API
--	B-API
OR	B-API
--	B-API
double	I-API
d	B-API
=	B-API
(	O
``	O
100.20	O
''	O
,	O
CultureInfo.CurrentCulture	B-API
)	I-API
(	O
``	O
100.20	O
''	O
,	O
CultureInfo.CurrentUICulture	B-API
)	I-API
If	O
ASP.NET	O
somehow	O
(	O
i.e	O
.	O
using	O
HTTP	O
Request	O
headers	O
)	O
passes	O
current	O
user	O
's	O
CultureInfo	O
to	O
either	O
CultureInfo.CurrentCulture	B-API
or	O
CultureInfo.CurrentUICulture	B-API
,	O
these	O
will	O
work	O
fine	O
.	O
You	O
ca	O
n't	O
please	O
everyone	O
.	O
If	O
I	O
enter	O
ten	O
as	O
10.000	O
,	O
and	O
someone	O
enters	O
ten	O
thousand	O
as	O
10.000	O
,	O
you	O
can	O
not	O
handle	O
that	O
without	O
some	O
knowledge	O
of	O
the	O
culture	O
of	O
the	O
input	O
.	O
Detect	O
the	O
culture	O
somehow	O
(	O
browser	O
,	O
system	O
setting	O
-	O
what	O
is	O
the	O
use	O
case	O
?	O
ASP	O
?	O
Internal	O
app	O
,	O
or	O
open	O
to	O
the	O
world	O
?	O
)	O
,	O
or	O
provide	O
an	O
example	O
of	O
the	O
expected	O
formatting	O
,	O
and	O
use	O
the	O
most	O
lenient	O
parser	O
you	O
can	O
.	O
Probably	O
something	O
like	O
:	O
double	B-API
d	B-API
=	B-API
(	O
``	O
5,000.00	O
''	O
,	O
NumberStyles.Any	B-API
,	O
CultureInfo.InvariantCulture	B-API
)	O
I	O
think	O
the	O
best	O
you	O
can	O
do	O
in	O
this	O
case	O
is	O
to	O
take	O
their	O
input	O
and	O
then	O
show	O
them	O
what	O
you	O
think	O
they	O
meant	O
.	O
If	O
they	O
disagree	O
,	O
show	O
them	O
the	O
format	O
you	O
're	O
expecting	O
and	O
get	O
them	O
to	O
enter	O
it	O
again	O
.	O
The	O
difference	O
between	O
12.345	O
in	O
French	O
and	O
English	O
is	O
a	O
factor	O
of	O
1000	O
.	O
If	O
you	O
supply	O
an	O
expected	O
range	O
where	O
max	O
1000*min	O
,	O
you	O
can	O
easily	O
guess	O
.	O
Take	O
for	O
example	O
the	O
height	O
of	O
a	O
person	O
(	O
including	O
babies	O
and	O
children	O
)	O
in	O
mm	O
.	O
By	O
using	O
a	O
range	O
of	O
200-3000	O
,	O
an	O
input	O
of	O
1.800	O
or	O
1,800	O
can	O
unambiguously	O
be	O
interpreted	O
as	O
1	O
meter	O
and	O
80	O
centimeters	O
,	O
whereas	O
an	O
input	O
of	O
912.300	O
or	O
912,300	O
can	O
unambiguously	O
be	O
interpreted	O
as	O
91	O
centimeters	O
and	O
2.3	O
millimeters	O
.	O
From	O
my	O
experience	O
,	O
and	O
from	O
what	O
I	O
've	O
read	O
across	O
the	O
internet	O
,	O
the	O
answer	O
is	O
``	O
No	O
,	O
''	O
it	O
is	O
not	O
guaranteed	O
.	O
It	O
depends	O
on	O
CPU	O
speed	O
,	O
operating	O
system	O
,	O
flavor	O
of	O
Linux	O
,	O
etc	O
.	O
Maybe	O
.	O
But	O
you	O
have	O
bigger	O
problems	O
.	O
gettimeofday	B-API
(	I-API
)	I-API
can	O
result	O
in	O
incorrect	O
timings	O
if	O
there	O
are	O
processes	O
on	O
your	O
system	O
that	O
change	O
the	O
timer	O
(	O
ie	O
,	O
ntpd	O
)	O
.	O
On	O
a	O
``	O
normal	O
''	O
linux	O
,	O
though	O
,	O
I	O
believe	O
the	O
resolution	O
of	O
gettimeofday	B-API
(	I-API
)	I-API
is	O
10us	O
.	O
It	O
can	O
jump	O
forward	O
and	O
backward	O
and	O
time	O
,	O
consequently	O
,	O
based	O
on	O
the	O
processes	O
running	O
on	O
your	O
system	O
.	O
This	O
effectively	O
makes	O
the	O
answer	O
to	O
your	O
question	O
no	O
.	O
You	O
should	O
look	O
into	O
clock_gettime	B-API
(	I-API
CLOCK_MONOTONIC	I-API
)	I-API
for	O
timing	O
intervals	O
.	O
It	O
suffers	O
from	O
several	O
less	O
issues	O
due	O
to	O
things	O
like	O
multi-core	O
systems	O
and	O
external	O
clock	O
settings	O
.	O
Also	O
,	O
look	O
into	O
the	O
clock_getres	B-API
(	I-API
)	I-API
function	O
.	O
The	O
actual	O
resolution	O
of	O
gettimeofday	B-API
(	I-API
)	I-API
depends	O
on	O
the	O
hardware	O
architecture	O
.	O
Intel	O
processors	O
as	O
well	O
as	O
SPARC	O
machines	O
offer	O
high	O
resolution	O
timers	O
that	O
measure	O
microseconds	O
.	O
Other	O
hardware	O
architectures	O
fall	O
back	O
to	O
the	O
systems	O
timer	O
,	O
which	O
is	O
typically	O
set	O
to	O
100	O
Hz	O
.	O
In	O
such	O
cases	O
,	O
the	O
time	O
resolution	O
will	O
be	O
less	O
accurate	O
.	O
I	O
obtained	O
this	O
answer	O
from	O
High	O
Resolution	O
Time	O
Measurement	O
and	O
Timers	O
,	O
Part	O
I	O
High	O
Resolution	O
,	O
Low	O
Overhead	O
Timing	O
for	O
Intel	O
Processors	O
If	O
you	O
're	O
on	O
Intel	O
hardware	O
,	O
here	O
's	O
how	O
to	O
read	O
the	O
CPU	O
real-time	O
instruction	O
counter	O
.	O
It	O
will	O
tell	O
you	O
the	O
number	O
of	O
CPU	O
cycles	O
executed	O
since	O
the	O
processor	O
was	O
booted	O
.	O
This	O
is	O
probably	O
the	O
finest-grained	O
counter	O
you	O
can	O
get	O
for	O
performance	O
measurement	O
.	O
Note	O
that	O
this	O
is	O
the	O
number	O
of	O
CPU	O
cycles	O
.	O
On	O
linux	O
you	O
can	O
get	O
the	O
CPU	O
speed	O
from	O
/proc/cpuinfo	O
and	O
divide	O
to	O
get	O
the	O
number	O
of	O
seconds	O
.	O
Converting	O
this	O
to	O
a	O
double	O
is	O
quite	O
handy	O
.	O
When	O
I	O
run	O
this	O
on	O
my	O
box	O
,	O
I	O
get	O
11867927879484732	O
11867927879692217	O
it	O
took	O
this	O
long	O
to	O
call	O
printf	O
:	O
207485	O
Here	O
's	O
the	O
Intel	O
developer	O
's	O
guide	O
that	O
gives	O
tons	O
of	O
detail	O
.	O
#	O
include	O
stdio.h	O
#	O
include	O
stdint.h	O
inline	O
uint64_t	O
rdtsc	O
(	O
)	O
{	O
uint32_t	O
lo	O
,	O
hi	O
;	O
__asm__	O
__volatile__	O
(	O
``	O
xorl	O
%	O
%	O
eax	O
,	O
%	O
%	O
eax\n	O
''	O
``	O
cpuid\n	O
''	O
``	O
rdtsc\n	O
''	O
:	O
``	O
=a	O
''	O
(	O
lo	O
)	O
,	O
``	O
=d	O
''	O
(	O
hi	O
)	O
:	O
:	O
``	O
%	O
ebx	O
''	O
,	O
``	O
%	O
ecx	O
''	O
)	O
;	O
return	O
(	O
uint64_t	O
)	O
hi	O
32	O
|	O
lo	O
;	O
}	O
main	O
(	O
)	O
{	O
unsigned	O
long	O
long	O
x	O
;	O
unsigned	O
long	O
long	O
y	O
;	O
x	O
=	O
rdtsc	B-API
(	I-API
)	I-API
;	O
printf	B-API
(	I-API
``	I-API
%	I-API
lld\n	I-API
''	I-API
,	I-API
x	I-API
)	I-API
;	O
y	O
=	O
rdtsc	B-API
(	I-API
)	I-API
;	O
printf	N-API
(	I-API
``	I-API
%	I-API
lld\n	I-API
''	I-API
,	I-API
y	I-API
)	I-API
;	O
printf	B-API
(	I-API
``	I-API
it	I-API
took	I-API
this	I-API
long	I-API
to	I-API
call	I-API
printf	I-API
:	I-API
%	I-API
lld\n	I-API
''	I-API
,	I-API
y-x	I-API
)	I-API
;	O
}	O
So	O
it	O
says	O
microseconds	O
explicitly	O
,	O
but	O
says	O
the	O
resolution	O
of	O
the	O
system	O
clock	O
is	O
unspecified	O
.	O
I	O
suppose	O
resolution	O
in	O
this	O
context	O
means	O
how	O
the	O
smallest	O
amount	O
it	O
will	O
ever	O
be	O
incremented	O
?	O
The	O
data	O
structure	O
is	O
defined	O
as	O
having	O
microseconds	O
as	O
a	O
unit	O
of	O
measurement	O
,	O
but	O
that	O
does	O
n't	O
mean	O
that	O
the	O
clock	O
or	O
operating	O
system	O
is	O
actually	O
capable	O
of	O
measuring	O
that	O
finely	O
.	O
Like	O
other	O
people	O
have	O
suggested	O
,	O
gettimeofday	B-API
(	I-API
)	I-API
is	O
bad	O
because	O
setting	O
the	O
time	O
can	O
cause	O
clock	O
skew	O
and	O
throw	O
off	O
your	O
calculation	O
.	O
clock_gettime	B-API
(	I-API
CLOCK_MONOTONIC	I-API
)	I-API
is	O
what	O
you	O
want	O
,	O
and	O
clock_getres	B-API
(	I-API
)	I-API
will	O
tell	O
you	O
the	O
precision	O
of	O
your	O
clock	O
.	O
@	O
Bernard	O
:	O
I	O
have	O
to	O
admit	O
,	O
most	O
of	O
your	O
example	O
went	O
straight	O
over	O
my	O
head	O
.	O
It	O
does	O
compile	O
,	O
and	O
seems	O
to	O
work	O
,	O
though	O
.	O
Is	O
this	O
safe	O
for	O
SMP	O
systems	O
or	O
SpeedStep	O
?	O
That	O
's	O
a	O
good	O
question	O
...	O
I	O
think	O
the	O
code	O
's	O
ok.	O
From	O
a	O
practical	O
standpoint	O
,	O
we	O
use	O
it	O
in	O
my	O
company	O
every	O
day	O
,	O
and	O
we	O
run	O
on	O
a	O
pretty	O
wide	O
array	O
of	O
boxes	O
,	O
everything	O
from	O
2-8	O
cores	O
.	O
Of	O
course	O
,	O
YMMV	O
,	O
etc	O
,	O
but	O
it	O
seems	O
to	O
be	O
a	O
reliable	O
and	O
low-overhead	O
(	O
because	O
it	O
does	O
n't	O
make	O
a	O
context	O
switch	O
into	O
system-space	O
)	O
method	O
of	O
timing	O
.	O
Generally	O
how	O
it	O
works	O
is	O
:	O
declare	O
the	O
block	O
of	O
code	O
to	O
be	O
assembler	O
(	O
and	O
volatile	O
,	O
so	O
the	O
optimizer	O
will	O
leave	O
it	O
alone	O
)	O
.	O
execute	O
the	O
CPUID	O
instruction	O
.	O
In	O
addition	O
to	O
getting	O
some	O
CPU	O
information	O
(	O
which	O
we	O
do	O
n't	O
do	O
anything	O
with	O
)	O
it	O
synchronizes	O
the	O
CPU	O
's	O
execution	O
buffer	O
so	O
that	O
the	O
timings	O
are	O
n't	O
affected	O
by	O
out-of-order	O
execution	O
.	O
execute	O
the	O
rdtsc	B-API
(	I-API
read	I-API
timestamp	I-API
)	I-API
execution	O
.	O
This	O
fetches	O
the	O
number	O
of	O
machine	O
cycles	O
executed	O
since	O
the	O
processor	O
was	O
reset	O
.	O
This	O
is	O
a	O
64-bit	O
value	O
,	O
so	O
with	O
current	O
CPU	O
speeds	O
it	O
will	O
wrap	O
around	O
every	O
194	O
years	O
or	O
so	O
.	O
Interestingly	O
,	O
in	O
the	O
original	O
Pentium	O
reference	O
,	O
they	O
note	O
it	O
wraps	O
around	O
every	O
5800	O
years	O
or	O
so	O
.	O
the	O
last	O
couple	O
of	O
lines	O
store	O
the	O
values	O
from	O
the	O
registers	O
into	O
the	O
variables	O
hi	O
and	O
lo	O
,	O
and	O
put	O
that	O
into	O
the	O
64-bit	O
return	O
value	O
.	O
Specific	O
notes	O
:	O
out-of-order	O
execution	O
can	O
cause	O
incorrect	O
results	O
,	O
so	O
we	O
execute	O
the	O
''	O
cpuid	O
''	O
instruction	O
which	O
in	O
addition	O
to	O
giving	O
you	O
some	O
information	O
about	O
the	O
cpu	O
also	O
synchronizes	O
any	O
out-of-order	O
instruction	O
execution	O
.	O
Most	O
OS	O
's	O
synchronize	O
the	O
counters	O
on	O
the	O
CPUs	O
when	O
they	O
start	O
,	O
so	O
the	O
answer	O
is	O
good	O
to	O
within	O
a	O
couple	O
of	O
nano-seconds	O
.	O
The	O
hibernating	O
comment	O
is	O
probably	O
true	O
,	O
but	O
in	O
practice	O
you	O
probably	O
do	O
n't	O
care	O
about	O
timings	O
across	O
hibernation	O
boundaries	O
.	O
regarding	O
speedstep	O
:	O
Newer	O
Intel	O
CPUs	O
compensate	O
for	O
the	O
speed	O
changes	O
and	O
returns	O
an	O
adjusted	O
count	O
.	O
I	O
did	O
a	O
quick	O
scan	O
over	O
some	O
of	O
the	O
boxes	O
on	O
our	O
network	O
and	O
found	O
only	O
one	O
box	O
that	O
did	O
n't	O
have	O
it	O
:	O
a	O
Pentium	O
3	O
running	O
some	O
old	O
database	O
server	O
.	O
(	O
these	O
are	O
linux	O
boxes	O
,	O
so	O
I	O
checked	O
with	O
:	O
grep	O
constant_tsc	O
/proc/cpuinfo	O
)	O
I	O
'm	O
not	O
sure	O
about	O
the	O
AMD	O
CPUs	O
,	O
we	O
're	O
primarily	O
an	O
Intel	O
shop	O
,	O
although	O
I	O
know	O
some	O
of	O
our	O
low-level	O
systems	O
gurus	O
did	O
an	O
AMD	O
evaluation	O
.	O
Hope	O
this	O
satisfies	O
your	O
curiosity	O
,	O
it	O
's	O
an	O
interesting	O
and	O
(	O
IMHO	O
)	O
under-studied	O
area	O
of	O
programming	O
.	O
You	O
know	O
when	O
Jeff	O
and	O
Joel	O
were	O
talking	O
about	O
whether	O
or	O
not	O
a	O
programmer	O
should	O
know	O
C	O
?	O
I	O
was	O
shouting	O
at	O
them	O
,	O
``	O
hey	O
forget	O
that	O
high-level	O
C	O
stuff	O
...	O
assembler	O
is	O
what	O
you	O
should	O
learn	O
if	O
you	O
want	O
to	O
know	O
what	O
the	O
computer	O
is	O
doing	O
!	O
''	O
Wine	O
is	O
actually	O
using	O
gettimeofday	B-API
(	I-API
)	I-API
to	O
implement	O
QueryPerformanceCounter	B-API
(	I-API
)	I-API
and	O
it	O
is	O
known	O
to	O
make	O
many	O
Windows	O
games	O
work	O
on	O
Linux	O
and	O
Mac	O
.	O
Starts	O
http	O
:	O
//source.winehq.org/source/dlls/kernel32/cpu.c	O
#	O
L312	O
leads	O
to	O
http	O
:	O
//source.winehq.org/source/dlls/ntdll/time.c	O
#	O
L448	O
No	O
,	O
it	O
ca	O
n't	O
do	O
that	O
since	O
there	O
is	O
no	O
way	O
to	O
express	O
constant	O
over	O
time	O
for	O
a	O
value	O
.	O
If	O
the	O
compiler	O
should	O
be	O
able	O
to	O
do	O
that	O
,	O
there	O
would	O
have	O
to	O
be	O
a	O
guarantee	O
from	O
the	O
code	O
returning	O
the	O
value	O
that	O
the	O
value	O
is	O
constant	O
,	O
and	O
for	O
the	O
duration	O
of	O
the	O
loop	O
wo	O
n't	O
change	O
.	O
But	O
,	O
in	O
this	O
case	O
,	O
you	O
're	O
free	O
to	O
add	O
new	O
rows	O
to	O
the	O
data	O
table	O
as	O
part	O
of	O
your	O
loop	O
,	O
and	O
thus	O
it	O
's	O
up	O
to	O
you	O
to	O
make	O
that	O
guarantee	O
,	O
in	O
the	O
way	O
you	O
have	O
done	O
it	O
.	O
So	O
in	O
short	O
,	O
the	O
compiler	O
will	O
not	O
do	O
that	O
optimization	O
if	O
the	O
end-index	O
is	O
anything	O
other	O
than	O
a	O
variable	O
.	O
In	O
the	O
case	O
of	O
a	O
variable	O
,	O
where	O
the	O
compiler	O
can	O
just	O
look	O
at	O
the	O
loop-code	O
and	O
see	O
that	O
this	O
particular	O
variable	O
is	O
not	O
changed	O
,	O
it	O
might	O
do	O
that	O
and	O
load	O
the	O
value	O
into	O
a	O
register	O
before	O
starting	O
the	O
loop	O
,	O
but	O
any	O
performance	O
gain	O
from	O
this	O
would	O
most	O
likely	O
be	O
negligible	O
,	O
unless	O
your	O
loop	O
body	O
is	O
empty	O
.	O
Conclusion	O
:	O
If	O
you	O
know	O
,	O
or	O
is	O
willing	O
to	O
accept	O
,	O
that	O
the	O
end	O
loop	O
index	O
is	O
constant	O
for	O
the	O
duration	O
of	O
the	O
loop	O
,	O
place	O
it	O
into	O
a	O
variable	O
.	O
Edit	O
:	O
Re-read	O
your	O
post	O
,	O
and	O
yes	O
,	O
you	O
might	O
see	O
negligible	O
performance	O
gains	O
for	O
your	O
two	O
cases	O
as	O
well	O
,	O
because	O
the	O
JITter	O
optimizes	O
the	O
code	O
.	O
The	O
JITter	O
might	O
optimize	O
your	O
end-index	O
read	O
into	O
a	O
direct	O
access	O
to	O
the	O
variable	O
inside	O
the	O
data	O
table	O
that	O
contains	O
the	O
row	O
count	O
,	O
and	O
a	O
memory	O
read	O
is	O
n't	O
all	O
that	O
expensive	O
anyway	O
.	O
If	O
,	O
on	O
the	O
other	O
hand	O
,	O
reading	O
that	O
property	O
was	O
a	O
very	O
expensive	O
operation	O
,	O
you	O
'd	O
see	O
a	O
more	O
noticable	O
difference	O
.	O
At	O
least	O
in	O
VS	O
2008	O
,	O
its	O
very	O
easy	O
.	O
It	O
took	O
me	O
about	O
a	O
couple	O
of	O
minutes	O
to	O
code	O
the	O
answer	O
after	O
reading	O
your	O
question	O
.	O
Here	O
's	O
where	O
I	O
borrowed	O
it	O
from	O
:	O
http	O
:	O
//msdn.microsoft.com/en-us/library/6he9hz8c.aspx	O
I	O
tested	O
this	O
,	O
and	O
it	O
works	O
.	O
A	O
solution	O
,	O
albeit	O
one	O
that	O
defers	O
handling	O
of	O
the	O
null	O
value	O
to	O
the	O
code	O
,	O
could	O
be	O
:	O
DateTime	O
yesterday	O
=	O
DateTime.Now.Date.AddDays	B-API
(	I-API
-1	I-API
)	I-API
;	O
var	O
collection=	O
from	O
u	O
in	O
db.Universe	B-API
select	O
new	O
{	O
u.id	O
,	O
u.name	O
,	O
MaxDate	B-API
=	O
(	O
DateTime	O
?	O
)	O
(	O
from	O
h	O
in	O
db.History	O
where	O
u.Id	O
==	O
h.Id	O
h.dateCol	O
yesterday	O
select	O
h.dateCol	O
)	O
.Max	O
(	O
)	O
}	O
;	O
This	O
does	O
not	O
produce	O
exactly	O
the	O
same	O
SQL	O
,	O
but	O
does	O
provide	O
the	O
same	O
logical	O
result	O
.	O
Translating	O
``	O
complex	O
''	O
SQL	O
queries	O
to	O
LINQ	O
is	O
not	O
always	O
straightforward	O
.	O
You	O
'll	O
want	O
the	O
struct	O
package	O
.	O
My	O
Environment	O
:	O
Fedora	O
8	O
;	O
WAS	O
6.1	O
(	O
as	O
installed	O
with	O
Rational	O
Application	O
Developer	O
7	O
)	O
The	O
documentation	O
is	O
very	O
poor	O
in	O
this	O
area	O
and	O
there	O
is	O
a	O
dearth	O
of	O
practical	O
examples	O
.	O
Using	O
the	O
WebSphere	O
Application	O
Server	O
(	O
WAS	O
)	O
Ant	O
tasks	O
To	O
run	O
as	O
described	O
here	O
,	O
you	O
need	O
to	O
run	O
them	O
from	O
your	O
server	O
profile	O
bin	O
directory	O
using	O
the	O
ws_ant.sh	O
or	O
ws_ant.bat	O
commands	O
.	O
?	O
xml	O
version=	O
''	O
1.0	O
''	O
?	O
project	O
name=	O
''	O
project	O
''	O
default=	O
''	O
wasListApps	O
''	O
basedir=	O
''	O
.	O
''	O
description	O
Script	O
for	O
listing	O
installed	O
apps	O
.	O
Example	O
run	O
from	O
:	O
/opt/IBM/SDP70/runtimes/base_v61/profiles/AppSrv01/bin	O
/description	O
property	O
name=	O
''	O
was_home	O
''	O
value=	O
''	O
/opt/IBM/SDP70/runtimes/base_v61/	O
''	O
/property	O
path	O
id=	O
''	O
was.runtime	O
''	O
fileset	O
dir=	O
''	O
$	O
{	O
was_home	O
}	O
/lib	O
''	O
include	O
name=	O
''	O
**/*.jar	O
''	O
/	O
/fileset	O
fileset	O
dir=	O
''	O
$	O
{	O
was_home	O
}	O
/plugins	O
''	O
include	O
name=	O
''	O
**/*.jar	O
''	O
/	O
/fileset	O
/path	O
property	O
name=	O
''	O
was_cp	O
''	O
value=	O
''	O
$	O
{	O
toString	O
:	O
was.runtime	O
}	O
''	O
/property	O
property	O
environment=	O
''	O
env	O
''	O
/property	O
target	O
name=	O
''	O
wasListApps	O
''	O
taskdef	O
name=	O
''	O
wsListApp	O
''	O
classname=	O
''	O
com.ibm.websphere.ant.tasks.ListApplications	O
''	O
classpath=	O
''	O
$	O
{	O
was_cp	O
}	O
''	O
/taskdef	O
wsListApp	O
wasHome=	O
''	O
$	O
{	O
was_home	O
}	O
''	O
/	O
/target	O
/project	O
Command	O
:	O
./ws_ant.sh	O
-buildfile	O
~/IBM/rationalsdp7.0/workspace/mywebappDeploy/applist.xml	O
A	O
Deployment	O
Script	O
?	O
xml	O
version=	O
''	O
1.0	O
''	O
?	O
project	O
name=	O
''	O
project	O
''	O
default=	O
''	O
default	O
''	O
basedir=	O
''	O
.	O
''	O
description	O
Build/Deploy	O
an	O
EAR	O
to	O
WebSphere	O
Application	O
Server	O
6.1	O
/description	O
property	O
name=	O
''	O
was_home	O
''	O
value=	O
''	O
/opt/IBM/SDP70/runtimes/base_v61/	O
''	O
/	O
path	O
id=	O
''	O
was.runtime	O
''	O
fileset	O
dir=	O
''	O
$	O
{	O
was_home	O
}	O
/lib	O
''	O
include	O
name=	O
''	O
**/*.jar	O
''	O
/	O
/fileset	O
fileset	O
dir=	O
''	O
$	O
{	O
was_home	O
}	O
/plugins	O
''	O
include	O
name=	O
''	O
**/*.jar	O
''	O
/	O
/fileset	O
/path	O
property	O
name=	O
''	O
was_cp	O
''	O
value=	O
''	O
$	O
{	O
toString	O
:	O
was.runtime	O
}	O
''	O
/	O
property	O
environment=	O
''	O
env	O
''	O
/	O
property	O
name=	O
''	O
ear	O
''	O
value=	O
''	O
$	O
{	O
env.HOME	O
}	O
/IBM/rationalsdp7.0/workspace/mywebappDeploy/mywebappEAR.ear	O
''	O
/	O
target	O
name=	O
''	O
default	O
''	O
depends=	O
''	O
deployEar	O
''	O
/target	O
target	O
name=	O
''	O
generateWar	O
''	O
depends=	O
''	O
compileWarClasses	O
''	O
jar	O
destfile=	O
''	O
mywebapp.war	O
''	O
fileset	O
dir=	O
''	O
../mywebapp/WebContent	O
''	O
/fileset	O
/jar	O
/target	O
target	O
name=	O
''	O
compileWarClasses	O
''	O
echo	O
message=	O
''	O
was_cp=	O
$	O
{	O
was_cp	O
}	O
''	O
/	O
javac	O
srcdir=	O
''	O
../mywebapp/src	O
''	O
destdir=	O
''	O
../mywebapp/WebContent/WEB-INF/classes	O
''	O
classpath=	O
''	O
$	O
{	O
was_cp	O
}	O
''	O
/javac	O
/target	O
target	O
name=	O
''	O
generateEar	O
''	O
depends=	O
''	O
generateWar	O
''	O
mkdir	O
dir=	O
''	O
./earbin/META-INF	O
''	O
/	O
move	O
file=	O
''	O
mywebapp.war	O
''	O
todir=	O
''	O
./earbin	O
''	O
/	O
copy	O
file=	O
''	O
../mywebappEAR/META-INF/application.xml	O
''	O
todir=	O
''	O
./earbin/META-INF	O
''	O
/	O
jar	O
destfile=	O
''	O
$	O
{	O
ear	O
}	O
''	O
fileset	O
dir=	O
''	O
./earbin	O
''	O
/	O
/jar	O
/target	O
!	O
--	O
http	O
:	O
//publib.boulder.ibm.com/infocenter/wasinfo/v6r1/index.jsp	O
?	O
topic=/com.ibm.websphere.javadoc.doc/public_html/api/com/ibm/websphere/ant/tasks/package-summary.html	O
--	O
target	O
name=	O
''	O
deployEar	O
''	O
depends=	O
''	O
generateEar	O
''	O
taskdef	O
name=	O
''	O
wsInstallApp	O
''	O
classname=	O
''	O
com.ibm.websphere.ant.tasks.InstallApplication	O
''	O
classpath=	O
''	O
$	O
{	O
was_cp	O
}	O
''	O
/	O
wsInstallApp	O
ear=	O
''	O
$	O
{	O
ear	O
}	O
''	O
failonerror=	O
''	O
true	O
''	O
debug=	O
''	O
true	O
''	O
taskname=	O
''	O
''	O
washome=	O
''	O
$	O
{	O
was_home	O
}	O
''	O
/	O
/target	O
/project	O
Notes	O
:	O
You	O
can	O
only	O
run	O
this	O
once	O
!	O
You	O
can	O
not	O
install	O
if	O
the	O
app	O
name	O
is	O
in	O
use	O
-	O
see	O
other	O
tasks	O
like	O
wsUninstallApp	O
It	O
probably	O
wo	O
n't	O
start	O
the	O
app	O
either	O
You	O
need	O
to	O
run	O
this	O
on	O
the	O
server	O
and	O
the	O
script	O
is	O
quite	O
fragile	O
Alternatives	O
I	O
would	O
probably	O
use	O
Java	O
Management	O
Extensions	O
(	O
JMX	O
)	O
.	O
You	O
could	O
write	O
a	O
file-upload	O
servlet	O
that	O
accepts	O
an	O
EAR	O
and	O
uses	O
the	O
deployment	O
MBeans	O
to	O
deploy	O
the	O
EAR	O
on	O
the	O
server	O
.	O
You	O
would	O
just	O
POST	O
the	O
file	O
over	O
HTTP	O
.	O
This	O
would	O
avoid	O
any	O
WAS	O
API	O
dependencies	O
on	O
your	O
dev/build	O
machine	O
and	O
could	O
be	O
independent	O
of	O
any	O
one	O
project	O
.	O
The	O
quick	O
and	O
simple	O
answer	O
is	O
No	O
.	O
Javascript	O
is	O
quite	O
a	O
high	O
level	O
language	O
and	O
does	O
not	O
have	O
access	O
to	O
this	O
sort	O
of	O
information	O
.	O
If	O
this	O
is	O
for	O
an	O
intranet	O
application	O
and	O
all	O
of	O
the	O
clients	O
use	O
DHCP	O
,	O
you	O
can	O
query	O
the	O
DHCP	O
server	O
for	O
the	O
MAC	O
address	O
for	O
a	O
given	O
IP	O
address	O
.	O
Nope	O
.	O
The	O
reason	O
ActiveX	O
can	O
do	O
it	O
is	O
because	O
ActiveX	O
is	O
a	O
little	O
application	O
that	O
runs	O
on	O
the	O
client	O
's	O
machine	O
.	O
I	O
would	O
imagine	O
access	O
to	O
such	O
information	O
via	O
JavaScript	O
would	O
be	O
a	O
security	O
vulnerability	O
.	O
A	O
dictionary	O
may	O
also	O
contain	O
overhead	O
,	O
depending	O
on	O
the	O
actual	O
implementation	O
.	O
A	O
hashtable	O
usually	O
contain	O
some	O
prime	O
number	O
of	O
available	O
nodes	O
to	O
begin	O
with	O
,	O
even	O
though	O
you	O
might	O
only	O
use	O
a	O
couple	O
of	O
the	O
nodes	O
.	O
Judging	O
by	O
your	O
example	O
,	O
``	O
Property	O
''	O
,	O
would	O
you	O
be	O
better	O
of	O
with	O
a	O
class	O
approach	O
for	O
the	O
final	O
level	O
and	O
real	O
properties	O
?	O
Or	O
is	O
the	O
names	O
of	O
the	O
properties	O
changing	O
a	O
lot	O
from	O
node	O
to	O
node	O
?	O
I	O
'd	O
say	O
that	O
what	O
``	O
efficient	O
''	O
means	O
depends	O
on	O
a	O
lot	O
of	O
things	O
,	O
like	O
:	O
speed	O
of	O
updates	O
(	O
insert	O
,	O
update	O
,	O
delete	O
)	O
speed	O
of	O
random	O
access	O
retrieval	O
speed	O
of	O
sequential	O
retrieval	O
memory	O
used	O
I	O
think	O
that	O
you	O
'll	O
find	O
that	O
a	O
data	O
structure	O
that	O
is	O
speedy	O
will	O
generally	O
consume	O
more	O
memory	O
than	O
one	O
that	O
is	O
slow	O
.	O
This	O
is	O
n't	O
always	O
the	O
case	O
,	O
but	O
most	O
data	O
structures	O
seems	O
to	O
follow	O
this	O
.	O
A	O
dictionary	O
might	O
be	O
easy	O
to	O
use	O
,	O
and	O
give	O
you	O
relatively	O
uniformly	O
fast	O
access	O
,	O
it	O
will	O
most	O
likely	O
use	O
more	O
memory	O
than	O
,	O
as	O
you	O
suggest	O
,	O
lists	O
.	O
Lists	O
,	O
however	O
,	O
generally	O
tend	O
to	O
contain	O
more	O
overhead	O
when	O
you	O
insert	O
data	O
into	O
it	O
,	O
unless	O
they	O
preallocate	O
X	O
nodes	O
,	O
in	O
which	O
they	O
will	O
again	O
use	O
more	O
memory	O
.	O
My	O
suggestion	O
,	O
in	O
general	O
,	O
would	O
be	O
to	O
just	O
use	O
the	O
method	O
that	O
seems	O
the	O
most	O
natural	O
to	O
you	O
,	O
and	O
then	O
do	O
a	O
``	O
stress	O
test	O
''	O
of	O
the	O
system	O
,	O
adding	O
a	O
substantial	O
amount	O
of	O
data	O
to	O
it	O
and	O
see	O
if	O
it	O
becomes	O
a	O
problem	O
.	O
You	O
might	O
also	O
consider	O
adding	O
a	O
layer	O
of	O
abstraction	O
to	O
your	O
system	O
,	O
so	O
that	O
you	O
do	O
n't	O
have	O
to	O
change	O
the	O
programming	O
interface	O
if	O
you	O
later	O
on	O
need	O
to	O
change	O
the	O
internal	O
data	O
structure	O
.	O
Making	O
a	O
class-based	O
structure	O
would	O
probably	O
have	O
more	O
overhead	O
than	O
the	O
dict-based	O
structure	O
,	O
since	O
in	O
python	O
classes	O
actually	O
use	O
dicts	O
when	O
they	O
are	O
implemented	O
.	O
As	O
I	O
understand	O
it	O
,	O
random	O
access	O
is	O
in	O
constant	O
time	O
for	O
both	O
Python	O
's	O
dicts	O
and	O
lists	O
,	O
the	O
difference	O
is	O
that	O
you	O
can	O
only	O
do	O
random	O
access	O
of	O
integer	O
indexes	O
with	O
lists	O
.	O
I	O
'm	O
assuming	O
that	O
you	O
need	O
to	O
lookup	O
a	O
node	O
by	O
its	O
label	O
,	O
so	O
you	O
want	O
a	O
dict	O
of	O
dicts	O
.	O
However	O
,	O
on	O
the	O
performance	O
front	O
,	O
loading	O
it	O
into	O
memory	O
may	O
not	O
be	O
a	O
problem	O
,	O
but	O
if	O
you	O
use	O
too	O
much	O
you	O
'll	O
end	O
up	O
swapping	O
to	O
disk	O
,	O
which	O
will	O
kill	O
the	O
performance	O
of	O
even	O
Python	O
's	O
highly	O
efficient	O
dicts	O
.	O
Try	O
to	O
keep	O
memory	O
usage	O
down	O
as	O
much	O
as	O
possible	O
.	O
Also	O
,	O
RAM	O
is	O
amazingly	O
cheap	O
right	O
now	O
;	O
if	O
you	O
do	O
this	O
kind	O
of	O
thing	O
a	O
lot	O
,	O
there	O
's	O
no	O
reason	O
not	O
to	O
have	O
at	O
least	O
4GB	O
.	O
If	O
you	O
'd	O
like	O
advice	O
on	O
keeping	O
memory	O
usage	O
down	O
,	O
give	O
some	O
more	O
information	O
about	O
the	O
kind	O
of	O
information	O
you	O
're	O
tracking	O
for	O
each	O
node	O
.	O
erm..	O
HTML	O
?	O
(	O
trying	O
to	O
be	O
funny	O
here	O
...	O
while	O
we	O
wait	O
for	O
real	O
answers..	O
)	O
The	O
wxWidgets	O
(	O
formerly	O
known	O
as	O
wxWindows	O
)	O
library	O
might	O
be	O
what	O
you	O
're	O
looking	O
for	O
.	O
There	O
's	O
a	O
particularly	O
good	O
port	O
for	O
Python	O
,	O
wxPython	O
,	O
as	O
well	O
as	O
versions	O
for	O
different	O
languages	O
--	O
C	O
#	O
,	O
C++	O
,	O
Perl	O
and	O
Ruby	O
come	O
to	O
mind	O
--	O
and	O
for	O
various	O
GUIs	O
:	O
Win32	O
,	O
Mac	O
OS	O
X	O
,	O
GTK+	O
,	O
X11	O
,	O
Motif	O
,	O
WinCE	O
.	O
The	O
library	O
's	O
been	O
around	O
for	O
a	O
while	O
and	O
is	O
pretty	O
solid	O
.	O
Not	O
sure	O
if	O
this	O
is	O
what	O
you	O
're	O
looking	O
for	O
,	O
but	O
there	O
's	O
Glade	O
(	O
or	O
Windows	O
download	O
)	O
which	O
is	O
a	O
designer	O
for	O
GTK+	O
.	O
It	O
generates	O
an	O
XML	O
file	O
which	O
can	O
then	O
be	O
used	O
to	O
build	O
the	O
GUI	O
in	O
a	O
number	O
of	O
different	O
languages	O
.	O
Qt	O
(	O
pronounced	O
``	O
cute	O
''	O
by	O
its	O
creators	O
[	O
1	O
]	O
)	O
is	O
a	O
cross-platform	O
application	O
development	O
framework	O
,	O
widely	O
used	O
for	O
the	O
development	O
of	O
GUI	O
programs	O
.	O
Qt	O
uses	O
C++	O
with	O
several	O
non-standard	O
extensions	O
implemented	O
by	O
an	O
additional	O
pre-processor	O
that	O
generates	O
standard	O
C++	O
code	O
before	O
compilation	O
.	O
Qt	O
can	O
also	O
be	O
used	O
in	O
several	O
other	O
programming	O
languages	O
;	O
bindings	O
exist	O
for	O
Ada	O
(	O
QtAda	O
)	O
[	O
4	O
]	O
,	O
C	O
#	O
(	O
Qyoto/Kimono	O
)	O
[	O
5	O
]	O
,	O
Java	O
(	O
Qt	O
Jambi	O
)	O
[	O
6	O
]	O
,	O
Pascal	O
,	O
Perl	O
,	O
PHP	O
(	O
PHP-Qt	O
)	O
,	O
Ruby	O
(	O
RubyQt	O
)	O
,	O
and	O
Python	O
(	O
PyQt	O
)	O
.	O
It	O
runs	O
on	O
all	O
major	O
platforms	O
,	O
and	O
has	O
extensive	O
internationalization	O
support	O
.	O
Non-GUI	O
features	O
include	O
SQL	O
database	O
access	O
,	O
XML	O
parsing	O
,	O
thread	O
management	O
,	O
network	O
support	O
and	O
a	O
unified	O
cross-platform	O
API	O
for	O
file	O
handling	O
.	O
import	O
os	O
print	O
os.name	O
posix	O
import	O
platform	O
platform.system	B-API
(	I-API
)	I-API
'Linux'	O
platform.release	B-API
(	I-API
)	I-API
'2.6.22-15-generic'	O
See	O
:	O
platform	O
Access	O
to	O
underlying	O
platforms	O
identifying	O
data	O
Dang	O
--	O
lbrandy	O
beat	O
me	O
to	O
the	O
punch	O
,	O
but	O
that	O
does	O
n't	O
mean	O
I	O
ca	O
n't	O
provide	O
you	O
with	O
the	O
system	O
results	O
for	O
Vista	O
!	O
import	O
os	O
os.name	O
'nt'	O
import	O
platform	O
platform.system	B-API
(	I-API
)	I-API
'Windows'	O
platform.release	B-API
(	I-API
)	I-API
'Vista'	O
For	O
the	O
record	O
here	O
's	O
the	O
results	O
on	O
Mac	O
:	O
import	O
os	O
os.name	O
'posix'	O
import	O
platform	O
platform.system	B-API
(	I-API
)	I-API
'Darwin'	O
platform.release	B-API
(	I-API
)	I-API
'8.11.1'	O
Take	O
a	O
look	O
at	O
the	O
open	O
street	O
map	O
project	O
to	O
see	O
how	O
this	O
sort	O
of	O
thing	O
is	O
being	O
tackled	O
in	O
a	O
truely	O
free	O
software	O
project	O
using	O
only	O
user	O
supplied	O
and	O
licensed	O
data	O
and	O
have	O
a	O
wiki	O
containing	O
stuff	O
you	O
might	O
find	O
interesting	O
.	O
A	O
few	O
years	O
back	O
the	O
guys	O
involved	O
where	O
pretty	O
easy	O
going	O
and	O
answered	O
lots	O
of	O
questions	O
I	O
had	O
so	O
I	O
see	O
no	O
reason	O
why	O
they	O
still	O
are	O
n't	O
a	O
nice	O
bunch	O
.	O
Instead	O
of	O
learning	O
APIs	O
to	O
each	O
map	O
service	O
provider	O
(	O
like	O
Gmaps	O
,	O
Ymaps	O
api	O
)	O
Its	O
good	O
to	O
learn	O
Mapstraction	O
''	O
Mapstraction	O
is	O
a	O
library	O
that	O
provides	O
a	O
common	O
API	O
for	O
various	O
javascript	O
mapping	O
APIs	O
''	O
I	O
would	O
suggest	O
you	O
go	O
to	O
the	O
URL	O
and	O
learn	O
a	O
general	O
API	O
.	O
There	O
is	O
good	O
amount	O
of	O
How-Tos	O
too	O
.	O
Try	O
this	O
:	O
using	O
(	O
FileStream	B-API
stream	O
=	O
new	O
)	O
{	O
BinaryFormatter	B-API
formatter	O
=	O
new	O
;	O
StructType	B-API
aStruct	O
=	O
(	O
fileName	O
,	O
FileMode.Open	B-API
)	O
BinaryFormatter	B-API
(	I-API
)	I-API
(	O
StructType	O
)	O
formatter.Deserialize	B-API
(	I-API
filestream	I-API
)	I-API
I	O
do	O
n't	O
see	O
any	O
problem	O
with	O
your	O
code	O
.	O
just	O
out	O
of	O
my	O
head	O
,	O
what	O
if	O
you	O
try	O
to	O
do	O
it	O
manually	O
?	O
does	O
it	O
work	O
?	O
BinaryReader	B-API
reader	O
=	O
new	O
;	O
StructType	B-API
o	O
=	O
new	O
;	O
o.FileDate	B-API
=	O
)	O
;	O
o.FileTime	B-API
=	O
BinaryReader	B-API
(	I-API
stream	I-API
)	I-API
StructType	B-API
(	I-API
)	I-API
Encoding.ASCII.GetString	B-API
(	I-API
reader.ReadBytes	I-API
(	I-API
8	I-API
)	I-API
Encoding.ASCII.GetString	B-API
(	I-API
reader.ReadBytes	I-API
(	I-API
8	I-API
)	I-API
also	O
try	O
StructType	B-API
o	O
=	O
new	O
;	O
byte	O
[	O
]	O
buffer	O
=	O
new	O
)	O
]	O
;	O
GCHandle	B-API
handle	O
=	O
,	O
StructType	B-API
(	I-API
)	I-API
byte	O
[	O
Marshal.SizeOf	B-API
(	I-API
typeof	I-API
(	I-API
StructType	I-API
)	I-API
(	O
buffer	O
,	O
GCHandleType.Pinned	B-API
)	O
Marshal.StructureToPtr	B-API
(	I-API
o	I-API
,	I-API
handle.AddrOfPinnedObject	B-API
(	I-API
)	I-API
false	O
)	O
;	O
handle.Free	B-API
(	I-API
)	I-API
then	O
use	O
buffer	O
[	O
]	O
in	O
your	O
BinaryReader	O
instead	O
of	O
reading	O
data	O
from	O
FileStream	O
to	O
see	O
whether	O
you	O
still	O
get	O
AccessViolation	O
exception	O
.	O
I	O
had	O
no	O
luck	O
using	O
the	O
BinaryFormatter	O
,	O
I	O
guess	O
I	O
have	O
to	O
have	O
a	O
complete	O
struct	O
that	O
matches	O
the	O
content	O
of	O
the	O
file	O
exactly	O
.	O
That	O
makes	O
sense	O
,	O
BinaryFormatter	O
has	O
its	O
own	O
data	O
format	O
,	O
completely	O
incompatible	O
with	O
yours	O
.	O
I	O
had	O
no	O
luck	O
using	O
the	O
BinaryFormatter	O
,	O
I	O
guess	O
I	O
have	O
to	O
have	O
a	O
complete	O
struct	O
that	O
matches	O
the	O
content	O
of	O
the	O
file	O
exactly	O
.	O
I	O
realised	O
that	O
in	O
the	O
end	O
I	O
was	O
n't	O
interested	O
in	O
very	O
much	O
of	O
the	O
file	O
content	O
anyway	O
so	O
I	O
went	O
with	O
the	O
solution	O
of	O
reading	O
part	O
of	O
stream	O
into	O
a	O
bytebuffer	O
and	O
then	O
converting	O
it	O
using	O
Encoding.ASCII.GetString	B-API
(	I-API
)	I-API
for	O
strings	O
and	O
BitConverter.ToInt32	B-API
(	I-API
)	I-API
for	O
the	O
integers	O
.	O
I	O
will	O
need	O
to	O
be	O
able	O
to	O
parse	O
more	O
of	O
the	O
file	O
later	O
on	O
but	O
for	O
this	O
version	O
I	O
got	O
away	O
with	O
just	O
a	O
couple	O
of	O
lines	O
of	O
code	O
.	O
Check	O
out	O
Google	O
Charts	O
Flot	O
can	O
create	O
some	O
really	O
nice	O
looking	O
charts	O
.	O
It	O
's	O
a	O
JavaScript	O
library	O
rather	O
than	O
a	O
service	O
like	O
Google	O
Charts	O
.	O
It	O
does	O
require	O
jQuery	O
though	O
.	O
If	O
you	O
use	O
jquery	O
:	O
http	O
:	O
//code.google.com/p/flot/	O
For	O
the	O
YUI	O
users	O
:	O
http	O
:	O
//developer.yahoo.com/yui/charts/	O
10	O
JavaScript	O
Graphing/Charting	O
Libraries	O
I	O
noticed	O
that	O
a	O
few	O
people	O
mentioned	O
Flot	O
but	O
nobody	O
mentioned	O
Flotr	O
!	O
Also	O
on	O
Google	O
Code	O
http	O
:	O
//code.google.com/p/flotr/	O
.	O
Check	O
a	O
JSON	O
example	O
,	O
complete	O
with	O
the	O
code	O
to	O
do	O
it	O
,	O
right	O
here	O
.	O
It	O
requires	O
the	O
Prototype.js	O
Javascript	O
library	O
and	O
works	O
in	O
all	O
modern	O
browsers	O
!	O
When	O
you	O
're	O
using	O
.Net	O
2.0	O
and	O
Ajax	O
-	O
you	O
should	O
use	O
:	O
ScriptManager.RegisterClientScriptBlock	B-API
It	O
will	O
work	O
better	O
in	O
Ajax	O
environments	O
then	O
the	O
old	O
Page.ClientScript	B-API
version	O
Try	O
changing	O
the	O
argument	O
names	O
to	O
``	O
sender	O
''	O
and	O
``	O
args	O
''	O
.	O
And	O
,	O
after	O
you	O
have	O
it	O
working	O
,	O
switch	O
the	O
call	O
over	O
to	O
ScriptManager.RegisterClientScriptBlock	B-API
,	O
regardless	O
of	O
AJAX	O
use	O
.	O
While	O
I	O
would	O
still	O
like	O
an	O
answer	O
to	O
why	O
my	O
JS	O
was	O
n't	O
being	O
recognized	O
,	O
the	O
solution	O
I	O
found	O
in	O
the	O
meantime	O
(	O
and	O
should	O
have	O
done	O
in	O
the	O
first	O
place	O
)	O
is	O
to	O
use	O
an	O
Asp	O
:	O
CompareValidator	B-API
instead	O
of	O
an	O
Asp	O
:	O
CustomValidator	B-API
.	O
While	O
you	O
can	O
not	O
prevent	O
usage	O
of	O
those	O
inherited	O
members	O
to	O
my	O
knowledge	O
,	O
you	O
should	O
be	O
able	O
to	O
hide	O
them	O
from	O
IntelliSense	B-API
using	O
the	O
EditorBrowsableAttribute	B-API
:	O
Using	O
System.ComponentModel	B-API
;	O
[	O
EditorBrowsable	B-API
(	I-API
EditorBrowsableState.Never	I-API
)	I-API
]	O
private	O
string	O
MyHiddenString	O
=	O
``	O
Muahahahahahahahaha	O
''	O
;	O
Edit	O
:	O
Just	O
saw	O
this	O
in	O
the	O
documentation	O
comments	O
,	O
which	O
makes	O
it	O
kinda	O
useless	O
for	O
this	O
purpose	O
:	O
There	O
is	O
a	O
prominent	O
note	O
that	O
states	O
that	O
this	O
attribute	O
``	O
does	O
not	O
suppress	O
members	O
from	O
a	O
class	O
in	O
the	O
same	O
assembly	O
''	O
.	O
That	O
is	O
true	O
but	O
not	O
complete	O
.	O
Actually	O
,	O
the	O
attribute	O
does	O
not	O
suppress	O
members	O
from	O
a	O
class	O
in	O
the	O
same	O
solution	O
.	O
I	O
think	O
you	O
're	O
best	O
least	O
hackish	O
way	O
is	O
to	O
consider	O
composition	O
as	O
opposed	O
to	O
inheritance	O
.	O
Or	O
,	O
you	O
could	O
create	O
an	O
interface	O
that	O
has	O
the	O
members	O
you	O
want	O
,	O
have	O
your	O
derived	O
class	O
implement	O
that	O
interface	O
,	O
and	O
program	O
against	O
the	O
interface	O
.	O
One	O
potential	O
thing	O
you	O
can	O
do	O
is	O
contain	O
the	O
object	O
rather	O
than	O
extend	O
from	O
the	O
other	O
class	O
.	O
This	O
will	O
give	O
you	O
the	O
most	O
flexibility	O
in	O
terms	O
of	O
exposing	O
what	O
you	O
want	O
to	O
expose	O
,	O
but	O
if	O
you	O
absolutely	O
need	O
the	O
object	O
to	O
be	O
of	O
that	O
type	O
it	O
is	O
not	O
the	O
ideal	O
solution	O
(	O
however	O
you	O
could	O
expose	O
the	O
object	O
from	O
a	O
getter	B-API
)	O
.	O
Thus	O
:	O
public	O
class	O
MyClass	O
:	O
BaseClass	O
{	O
//	O
Your	O
stuff	O
Becomes	O
:	O
public	O
class	O
MyClass	O
{	O
private	O
BaseClass	O
baseClass	O
;	O
public	O
void	O
{	O
;	O
ExposeThisMethod	B-API
(	I-API
)	I-API
baseClass.ExposeThisMethod	B-API
(	I-API
)	I-API
Or	O
:	O
public	O
class	O
MyClass	O
{	O
private	O
BaseClass	O
baseClass	O
;	O
public	O
BaseClass	O
BaseClass	O
{	O
get	O
{	O
return	O
baseClass	O
;	O
}	O
Override	O
them	O
like	O
Michael	O
Suggests	O
above	O
and	O
to	O
prevent	O
folks	O
from	O
using	O
the	O
overridden	B-API
(	I-API
sp	I-API
?	I-API
)	I-API
methods	O
,	O
mark	O
them	O
as	O
obsolete	O
:	O
]	O
public	O
override	B-API
Obsolete	B-API
(	I-API
``	I-API
These	I-API
are	I-API
not	I-API
supported	I-API
in	I-API
this	I-API
class	I-API
.	I-API
``	I-API
,	I-API
true	I-API
)	I-API
dontcallmeanymore	I-API
(	I-API
)	I-API
If	O
the	O
second	O
parm	O
is	O
set	O
to	O
true	O
,	O
a	O
compiler	O
error	O
will	O
be	O
generated	O
if	O
anyone	O
tries	O
to	O
call	O
that	O
method	O
and	O
the	O
string	O
in	O
the	O
first	O
parm	O
is	O
the	O
message	O
.	O
If	O
parm2	O
is	O
false	O
only	O
a	O
compiler	O
warning	O
will	O
be	O
generated	O
.	O
I	O
am	O
thinking	O
off	O
the	O
top	O
of	O
my	O
head	O
here	O
.	O
If	O
you	O
load	O
both	O
as	O
Data	O
Tables	O
in	O
the	O
same	O
Data	O
Sets	O
,	O
and	O
define	O
a	O
relation	O
between	O
the	O
two	O
over	O
SKU	O
,	O
and	O
then	O
run	O
a	O
query	O
on	O
the	O
Data	O
Set	O
which	O
produces	O
the	O
desired	O
result	O
.	O
As	O
long	O
as	O
the	O
two	O
databases	O
are	O
on	O
the	O
same	O
physical	O
server	O
(	O
assuming	O
MSSQL	O
)	O
and	O
the	O
username/password	O
being	O
used	O
in	O
the	O
connection	O
string	O
has	O
rights	O
to	O
both	O
DBs	O
,	O
then	O
you	O
should	O
be	O
able	O
to	O
perform	O
a	O
join	O
across	O
the	O
two	O
databases	O
.	O
Example	O
:	O
select	O
p.Date	B-API
,	O
p.Amount	O
,	O
d.SoftwareName	O
,	O
d.DownloadLinkfrom	O
PurchaseDB.dbo.Purchases	B-API
as	O
pjoin	O
ProductDB.dbo.Products	B-API
as	O
d	O
on	O
d.sku	O
=	O
p.skuwhere	O
p.UserID	O
=	O
12345	O
