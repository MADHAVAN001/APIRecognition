Here	O
's	O
I	O
solved	O
this	O
problem	O
today	O
.	O
I	O
started	O
from	O
this	O
article	O
on	O
C	O
#	O
Corner	O
,	O
but	O
found	O
the	O
example	O
-	O
while	O
technically	O
sound	O
-	O
a	O
little	O
incomplete	O
.	O
Everything	O
he	O
said	O
was	O
right	O
,	O
but	O
I	O
needed	O
to	O
hit	O
a	O
few	O
external	O
sites	O
to	O
piece	O
this	O
together	O
to	O
work	O
exactly	O
as	O
I	O
wanted	O
.	O
It	O
did	O
n't	O
help	O
that	O
the	O
user	O
was	O
not	O
technically	O
submitting	O
a	O
form	O
at	O
all	O
;	O
they	O
were	O
clicking	O
a	O
link	O
to	O
go	O
to	O
our	O
support	O
center	O
,	O
but	O
to	O
log	O
them	O
in	O
an	O
http	O
post	O
had	O
to	O
be	O
made	O
to	O
the	O
support	O
center	O
's	O
site	O
.	O
This	O
solution	O
involves	O
using	O
HttpContext.Current.Response.Write	B-API
(	I-API
)	I-API
to	O
write	O
the	O
data	O
for	O
the	O
form	O
,	O
then	O
using	O
a	O
bit	O
of	O
Javascript	O
on	O
the	O
body	B-API
onload=	B-API
''	I-API
''	I-API
method	O
to	O
submit	O
the	O
form	O
to	O
the	O
proper	O
URL	O
.	O
When	O
the	O
user	O
clicks	O
on	O
the	O
Support	O
Center	O
link	O
,	O
the	O
following	O
method	O
is	O
called	O
to	O
write	O
the	O
response	O
and	O
redirect	O
the	O
user	O
:	O
public	B-API
static	B-API
void	B-API
{	B-API
;	B-API
window.location=\	I-API
''	I-API
Home.aspx\	I-API
''	I-API
;	I-API
''	I-API
)	I-API
;	I-API
;	B-API
)	B-API
;	I-API
;	B-API
PassthroughAuthentication	B-API
(	I-API
)	I-API
(	O
``	O
body	O
onload=document.forms	B-API
[	I-API
0	I-API
]	I-API
.submit	I-API
(	I-API
)	I-API
(	O
``	O
form	O
name=\	O
''	O
Form\	O
''	O
target=_blank	O
method=post	O
action=\	O
''	O
https	O
:	O
//external-url.com/security.asp\	O
''	O
''	O
)	O
(	O
string.Format	B-API
(	I-API
``	I-API
input	I-API
type=hidden	I-API
name=\	I-API
''	I-API
cFName\	I-API
''	I-API
value=\	I-API
''	I-API
{	I-API
0	I-API
}	I-API
\	I-API
''	I-API
''	I-API
,	I-API
``	I-API
Username	I-API
''	I-API
)	I-API
System.Web.HttpContext.Current.Response.Write	B-API
(	I-API
``	I-API
/form	I-API
''	I-API
)	I-API
System.Web.HttpContext.Current.Response.Write	B-API
(	I-API
``	I-API
/body	I-API
''	I-API
)	I-API
The	O
key	O
to	O
this	O
method	O
is	O
in	O
that	O
onload	O
bit	O
of	O
Javascript	O
,	O
which	O
,	O
when	O
the	O
body	O
of	O
the	O
page	O
loads	O
,	O
submits	O
the	O
form	O
and	O
then	O
redirects	O
the	O
user	O
back	O
to	O
my	O
own	O
Home	O
page	O
.	O
The	O
reason	O
for	O
that	O
bit	O
of	O
hoodoo	O
is	O
that	O
I	O
'm	O
launching	O
the	O
external	O
site	O
in	O
a	O
new	O
window	O
,	O
but	O
do	O
n't	O
want	O
the	O
user	O
to	O
resubmit	O
the	O
hidden	O
form	O
if	O
they	O
refresh	O
the	O
page	O
.	O
Plus	O
that	O
hidden	O
form	O
pushed	O
the	O
page	O
down	O
a	O
few	O
pixels	O
which	O
got	O
on	O
my	O
nerves	O
.	O
I	O
'd	O
be	O
very	O
interested	O
in	O
any	O
cleaner	O
ideas	O
anyone	O
has	O
on	O
this	O
one	O
.	O
Eric	O
Sipple	O
I	O
would	O
do	O
the	O
form	O
post	O
in	O
your	O
code	O
behind	O
using	O
HttpWebRequest	O
class	O
.	O
Here	O
is	O
a	O
good	O
helper	O
class	O
to	O
get	O
your	O
started	O
:	O
http	O
:	O
//geekswithblogs.net/rakker/archive/2006/04/21/76044.aspx	O
From	O
there	O
,	O
you	O
can	O
just	O
do	O
a	O
Response.Redirect	B-API
,	O
or	O
perhaps	O
you	O
need	O
to	O
vary	O
your	O
action	O
based	O
on	O
the	O
outcome	O
of	O
the	O
post	O
(	O
if	O
there	O
was	O
an	O
error	O
,	O
display	O
it	O
to	O
the	O
user	O
or	O
whatever	O
)	O
.	O
I	O
think	O
you	O
already	O
had	O
the	O
answer	O
in	O
your	O
question	O
to	O
be	O
honest	O
-	O
sounds	O
like	O
you	O
think	O
it	O
is	O
a	O
post	O
OR	O
redirect	O
when	O
in	O
reality	O
you	O
can	O
do	O
them	O
both	O
from	O
your	O
code	O
behind	O
.	O
Well	O
,	O
IE	O
has	O
a	O
somewhat	O
non-standard	O
object	O
model	O
;	O
what	O
you	O
're	O
doing	O
should	O
n't	O
work	O
but	O
you	O
're	O
getting	O
away	O
with	O
it	O
because	O
IE	O
is	O
being	O
nice	O
to	O
you	O
.	O
In	O
Firefox	O
and	O
Safari	O
,	O
document.frm	O
in	O
your	O
code	O
evaluates	O
to	O
undefined	O
.	O
You	O
need	O
to	O
be	O
using	O
id	O
values	O
on	O
your	O
form	O
elements	O
and	O
use	O
document.getElementById	B-API
(	I-API
'whatever	I-API
'	I-API
)	I-API
to	O
return	O
a	O
reference	O
to	O
them	O
instead	O
of	O
referring	O
to	O
non-existent	O
properties	O
of	O
the	O
document	O
object	O
.	O
So	O
this	O
works	O
a	O
bit	O
better	O
and	O
may	O
do	O
what	O
you	O
're	O
after	O
:	O
Line	O
27	O
:	O
form	O
name=	O
''	O
frm	O
''	O
id=	O
''	O
f	O
''	O
...	O
Line	O
6	O
:	O
var	O
frmTemp	O
=	O
document.getElementById	B-API
(	I-API
'f	I-API
'	I-API
)	I-API
;	O
But	O
you	O
might	O
want	O
to	O
check	O
out	O
this	O
excellent	O
book	O
if	O
you	O
want	O
to	O
learn	O
more	O
about	O
the	O
right	O
way	O
of	O
going	O
about	O
things	O
:	O
DOM	O
Scripting	O
by	O
Jeremy	O
Keith	O
Also	O
while	O
we	O
're	O
on	O
the	O
subject	O
,	O
Bulletproof	O
Ajax	O
by	O
the	O
same	O
author	O
is	O
also	O
deserving	O
of	O
a	O
place	O
on	O
your	O
bookshelf	O
as	O
is	O
JavaScript	O
:	O
The	O
Good	O
Parts	O
by	O
Doug	O
Crockford	O
Why	O
not	O
grab	O
one	O
of	O
the	O
AJAX	O
scripting	O
libraries	O
,	O
they	O
abstract	O
away	O
a	O
lot	O
of	O
the	O
cross	O
browser	O
DOM	O
scripting	O
black	O
magic	O
and	O
make	O
life	O
a	O
hell	O
of	O
a	O
lot	O
easier	O
.	O
I	O
do	O
n't	O
have	O
any	O
experience	O
with	O
http	O
:	O
//www.SiteGround.com	O
as	O
a	O
web	O
host	O
personally	O
.	O
This	O
is	O
just	O
a	O
guess	O
,	O
but	O
it	O
's	O
common	O
for	O
a	O
shared	O
host	O
to	O
support	O
Python	O
and	O
MySQL	O
with	O
the	O
MySQLdb	O
module	O
(	O
e.g.	O
,	O
GoDaddy	O
does	O
this	O
)	O
.	O
Try	O
the	O
following	O
CGI	O
script	O
to	O
see	O
if	O
MySQLdb	O
is	O
installed	O
.	O
#	O
!	O
/usr/bin/pythonmodule_name	O
=	O
'MySQLdb'head	O
=	O
'	O
''	O
Content-Type	O
:	O
text/html	O
%	O
s	O
is	O
'	O
''	O
%	O
module_nametry	O
:	O
print	O
head	O
+	O
'installed'except	O
ImportError	O
:	O
print	O
head	O
+	O
'not	O
__import__	B-API
(	I-API
module_name	I-API
)	I-API
I	O
uploaded	O
it	O
and	O
got	O
an	O
internal	O
error	O
Premature	O
end	O
of	O
script	O
After	O
much	O
playing	O
around	O
,	O
I	O
found	O
that	O
if	O
I	O
had	O
import	O
cgiimport	O
cgitb	O
;	O
import	O
cgitb.enable	B-API
(	I-API
)	I-API
It	O
would	O
give	O
me	O
a	O
much	O
more	O
useful	O
answer	O
and	O
say	O
that	O
it	O
was	O
not	O
installed	O
,	O
you	O
can	O
see	O
it	O
yourself	O
-	O
>	O
http	O
:	O
//woarl.com/db.py	O
Oddly	O
enough	O
,	O
this	O
would	O
produce	O
an	O
error	O
import	O
MySQLdbimport	O
cgiimport	O
cgitb	O
;	O
cgitb.enable	B-API
(	I-API
)	I-API
I	O
looked	O
at	O
some	O
of	O
the	O
other	O
files	O
I	O
had	O
up	O
there	O
and	O
it	O
seems	O
that	O
library	O
was	O
one	O
of	O
the	O
ones	O
I	O
had	O
already	O
tried	O
.	O
MySQLdb	O
is	O
what	O
I	O
have	O
used	O
before	O
.	O
If	O
you	O
host	O
is	O
using	O
Python	O
version	O
2.5	O
or	O
higher	O
,	O
support	O
for	O
sqlite3	O
databases	O
is	O
built	O
in	O
(	O
sqlite	O
allows	O
you	O
to	O
have	O
a	O
relational	O
database	O
that	O
is	O
simply	O
a	O
file	O
in	O
your	O
filesystem	O
)	O
.	O
But	O
buyer	O
beware	O
,	O
sqlite	O
is	O
not	O
suited	O
for	O
production	O
,	O
so	O
it	O
may	O
depend	O
what	O
you	O
are	O
trying	O
to	O
do	O
with	O
it	O
.	O
Another	O
option	O
may	O
be	O
to	O
call	O
your	O
host	O
and	O
complain	O
,	O
or	O
change	O
hosts	O
.	O
Honestly	O
these	O
days	O
,	O
any	O
self	O
respecting	O
web	O
host	O
that	O
supports	O
python	O
and	O
mysql	O
ought	O
to	O
have	O
MySQLdb	O
pre	O
installed	O
.	O
I	O
really	O
like	O
regular	O
expressions	O
.	O
As	O
long	O
as	O
the	O
command	O
strings	O
are	O
fairly	O
simple	O
,	O
you	O
can	O
write	O
a	O
few	O
regexes	O
that	O
could	O
take	O
a	O
few	O
pages	O
of	O
code	O
to	O
manually	O
parse	O
.	O
I	O
would	O
suggest	O
you	O
check	O
out	O
http	O
:	O
//www.regular-expressions.info	O
for	O
a	O
good	O
intro	O
to	O
regexes	O
,	O
as	O
well	O
as	O
specific	O
examples	O
for	O
Java	O
.	O
A	O
simple	O
string	O
tokenizer	O
on	O
spaces	O
should	O
work	O
,	O
but	O
there	O
are	O
really	O
many	O
ways	O
you	O
could	O
do	O
this	O
.	O
Here	O
is	O
an	O
example	O
using	O
a	O
tokenizer	O
:	O
String	O
command	O
=	O
``	O
kick	O
''	O
;	O
StringTokenizer	O
tokens	O
=	O
new	O
String	O
action	O
=	O
null	O
;	O
if	O
)	O
{	O
action	O
=	O
;	O
}	O
if	O
(	O
action	O
!	O
=	O
null	O
)	O
{	O
StringTokenizer	B-API
(	I-API
command	I-API
)	I-API
(	O
tokens.hasMoreTokens	B-API
(	I-API
)	I-API
tokens.nextToken	B-API
(	I-API
)	I-API
(	O
action	O
,	O
tokens	O
)	O
Then	O
tokens	O
can	O
be	O
further	O
used	O
for	O
the	O
arguments	O
.	O
This	O
all	O
assumes	O
no	O
spaces	O
are	O
used	O
in	O
the	O
arguments	O
...	O
so	O
you	O
might	O
want	O
to	O
roll	O
your	O
own	O
simple	O
parsing	O
mechanism	O
(	O
like	O
getting	O
the	O
first	O
whitespace	O
and	O
using	O
text	O
before	O
as	O
the	O
action	O
,	O
or	O
using	O
a	O
regular	O
expression	O
if	O
you	O
do	O
n't	O
mind	O
the	O
speed	O
hit	O
)	O
,	O
just	O
abstract	O
it	O
out	O
so	O
it	O
can	O
be	O
used	O
anywhere	O
.	O
I	O
would	O
look	O
at	O
Java	O
migrations	O
of	O
Zork	O
,	O
and	O
lean	O
towards	O
a	O
simple	O
Natural	O
Language	O
Processor	O
(	O
driven	O
either	O
by	O
tokenizing	O
or	O
regex	O
)	O
such	O
as	O
the	O
following	O
(	O
from	O
this	O
link	O
)	O
:	O
public	O
static	O
boolean	O
simpleNLP	O
(	O
String	O
inputline	O
,	O
String	O
keywords	O
[	O
]	O
)	O
{	O
int	O
i	O
;	O
int	O
maxToken	O
=	O
keywords.length	B-API
;	O
int	O
to	O
,	O
from	O
;	O
if	O
(	O
inputline.length	B-API
(	I-API
)	I-API
1	O
)	O
return	O
false	O
;	O
Vector	O
lexed	O
=	O
new	O
Vector	O
(	O
)	O
;	O
//	O
stores	O
the	O
words	O
//	O
first	O
extract	O
every	O
substring	O
in	O
inputline	O
that	O
has	O
a	O
blank	O
on	O
either	O
side	O
.	O
from	O
=	O
0	O
;	O
to	O
=	O
0	O
;	O
while	O
(	O
inputline.charAt	B-API
(	I-API
from	I-API
)	I-API
==	O
'	O
'	O
from	O
inputline.length	B-API
(	I-API
)	I-API
)	O
from	O
++	O
;	O
//	O
skip	O
'	O
'	O
if	O
(	O
from	O
=	O
inputline.length	B-API
(	I-API
)	I-API
)	O
return	O
false	O
;	O
//	O
check	O
for	O
blank	O
and	O
empty	O
lines	O
while	O
(	O
to	O
=0	O
)	O
{	O
to	O
=	O
inputline.indexOf	B-API
(	I-API
'	I-API
'	I-API
,	I-API
from	I-API
)	I-API
;	O
if	O
(	O
to	O
0	O
)	O
{	O
lexed.addElement	B-API
(	I-API
inputline.substring	I-API
(	I-API
from	I-API
,	I-API
to	I-API
)	I-API
)	I-API
;	O
from	O
=	O
to	O
;	O
while	O
(	O
inputline.charAt	B-API
(	I-API
from	I-API
)	I-API
==	O
'	O
'	O
from	O
inputline.length	B-API
(	I-API
)	I-API
-1	O
)	O
from	O
++	O
;	O
}	O
else	O
{	O
lexed.addElement	B-API
(	I-API
inputline.substring	I-API
(	I-API
from	I-API
)	I-API
)	I-API
;	O
}	O
}	O
//	O
//	O
if	O
we	O
get	O
here	O
we	O
have	O
a	O
vector	O
of	O
strings	O
that	O
correspond	O
to	O
the	O
words	O
in	O
the	O
input	O
.	O
//	O
//	O
so	O
now	O
we	O
look	O
for	O
matches	O
in	O
order	O
boolean	O
status	O
=false	O
;	O
to	O
=	O
0	O
;	O
for	O
(	O
i=0	O
;	O
i	O
lexed.size	B-API
(	I-API
)	I-API
;	O
i++	O
)	O
{	O
String	O
s	O
=	O
(	O
String	O
)	O
lexed.elementAt	B-API
(	I-API
i	I-API
)	I-API
;	O
if	O
(	O
s.equalsIgnoreCase	B-API
(	I-API
keywords	I-API
[	I-API
to	I-API
]	I-API
)	I-API
)	O
{	O
to++	O
;	O
if	O
(	O
to	O
=	O
keywords.length	B-API
)	O
{	O
status	O
=	O
true	O
;	O
break	O
;	O
}	O
}	O
}	O
return	O
status	O
;	O
}	O
...	O
Anything	O
which	O
gives	O
a	O
programmer	O
a	O
reason	O
to	O
look	O
at	O
Zork	O
again	O
is	O
good	O
in	O
my	O
book	O
,	O
just	O
watch	O
out	O
for	O
Grues	O
.	O
...	O
I	O
assume	O
you	O
're	O
trying	O
to	O
make	O
the	O
command	O
interface	O
as	O
forgiving	O
as	O
possible	O
.	O
If	O
this	O
is	O
the	O
case	O
,	O
I	O
suggest	O
you	O
use	O
an	O
algorithm	O
similar	O
to	O
this	O
:	O
Read	O
in	O
the	O
string	O
Split	O
the	O
string	O
into	O
tokens	O
Use	O
a	O
dictionary	O
to	O
convert	O
synonyms	O
to	O
a	O
common	O
form	O
For	O
example	O
,	O
convert	O
``	O
hit	O
''	O
,	O
``	O
punch	O
''	O
,	O
``	O
strike	O
''	O
,	O
and	O
``	O
kick	O
''	O
all	O
to	O
``	O
hit	O
''	O
Perform	O
actions	O
on	O
an	O
unordered	O
,	O
inclusive	O
base	O
Unordered	O
-	O
``	O
punch	O
the	O
monkey	O
in	O
the	O
face	O
''	O
is	O
the	O
same	O
thing	O
as	O
``	O
the	O
face	O
in	O
the	O
monkey	O
punch	O
''	O
Inclusive	O
-	O
If	O
the	O
command	O
is	O
supposed	O
to	O
be	O
``	O
punch	O
the	O
monkey	O
in	O
the	O
face	O
''	O
and	O
they	O
supply	O
``	O
punch	O
monkey	O
''	O
,	O
you	O
should	O
check	O
how	O
many	O
commands	O
this	O
matches	O
.	O
If	O
only	O
one	O
command	O
,	O
do	O
this	O
action	O
.	O
It	O
might	O
even	O
be	O
a	O
good	O
idea	O
to	O
have	O
command	O
priorities	O
,	O
and	O
even	O
if	O
there	O
were	O
even	O
matches	O
,	O
it	O
would	O
perform	O
the	O
top	O
action	O
.	O
@	O
CodingTheWheel	O
Heres	O
your	O
code	O
,	O
a	O
bit	O
clean	O
up	O
and	O
through	O
eclipse	O
(	O
ctrl+shift+f	O
)	O
and	O
the	O
inserted	O
back	O
here	O
:	O
)	O
Including	O
the	O
four	O
spaces	O
in	O
front	O
each	O
line	O
.	O
public	O
static	O
boolean	O
simpleNLP	O
(	O
String	O
inputline	O
,	O
String	O
keywords	O
[	O
]	O
)	O
{	O
if	O
(	O
inputline.length	B-API
(	I-API
)	I-API
1	O
)	O
return	O
false	O
;	O
ListString	O
lexed	O
=	O
new	O
ArrayListString	B-API
(	I-API
)	I-API
;	O
for	O
(	O
String	O
ele	O
:	O
inputline.split	B-API
(	I-API
``	I-API
``	I-API
)	I-API
)	O
{	O
lexed.add	B-API
(	I-API
ele	I-API
)	I-API
;	O
}	O
boolean	O
status	O
=	O
false	O
;	O
to	O
=	O
0	O
;	O
for	O
(	O
i	O
=	O
0	O
;	O
i	O
lexed.size	O
(	O
)	O
;	O
i++	O
)	O
{	O
String	O
s	O
=	O
(	O
String	O
)	O
lexed.get	B-API
(	I-API
i	I-API
)	I-API
;	O
if	O
(	O
s.equalsIgnoreCase	B-API
(	I-API
keywords	I-API
[	I-API
to	I-API
]	I-API
)	I-API
)	O
{	O
to++	O
;	O
if	O
(	O
to	O
=	O
keywords.length	B-API
)	O
{	O
status	O
=	O
true	O
;	O
break	O
;	O
}	O
}	O
}	O
return	O
status	O
;	O
}	O
When	O
the	O
separator	O
String	O
for	O
the	O
command	O
is	O
allways	O
the	O
same	O
String	O
or	O
char	O
(	O
like	O
the	O
``	O
;	O
''	O
)	O
y	O
recomend	O
you	O
use	O
the	O
StrinkTokenizer	O
class	O
:	O
StringTokenizer	O
but	O
when	O
the	O
separator	O
varies	O
or	O
is	O
complex	O
y	O
recomend	O
you	O
to	O
use	O
the	O
regular	O
expresions	O
,	O
wich	O
can	O
be	O
used	O
by	O
the	O
String	O
class	O
itself	O
,	O
method	O
split	O
,	O
since	O
1.4	O
.	O
It	O
uses	O
the	O
Pattern	O
class	O
from	O
the	O
java.util.regex	O
package	O
Pattern	O
Sun	O
itself	O
recommends	O
staying	O
away	O
from	O
StringTokenizer	O
and	O
using	O
the	O
String.spilt	B-API
method	O
instead	O
.	O
You	O
'll	O
also	O
want	O
to	O
look	O
at	O
the	O
Pattern	O
class	O
.	O
Note	O
:	O
This	O
answer	O
is	O
sort	O
of	O
outdated	O
(	O
from	O
2008	O
)	O
.	O
Please	O
use	O
the	O
solution	O
below	O
with	O
care	O
!	O
!	O
Here	O
is	O
a	O
page	O
that	O
details	O
the	O
problem	O
and	O
a	O
solution	O
(	O
search	O
the	O
page	O
for	O
the	O
text	O
Wrapping	O
sys.stdout	O
into	O
an	O
instance	O
)	O
:	O
PrintFails	O
-	O
Python	O
Wiki	O
Here	O
's	O
a	O
code	O
excerpt	O
from	O
that	O
page	O
:	O
$	O
python	O
-c	O
'import	O
sys	O
,	O
codecs	O
,	O
locale	O
;	O
print	O
sys.stdout.encoding	B-API
;	O
\	O
sys.stdout	O
=	O
codecs.getwriter	B-API
(	I-API
locale.getpreferredencoding	I-API
(	I-API
)	I-API
)	I-API
(	O
sys.stdout	B-API
)	O
;	O
\	O
line	O
=	O
u	O
''	O
\u0411\n	O
''	O
;	O
print	O
type	B-API
(	I-API
line	I-API
)	O
,	O
len	B-API
(	I-API
line	I-API
)	I-API
;	O
\	O
sys.stdout.write	B-API
(	I-API
line	I-API
)	I-API
;	O
print	O
line'	O
UTF-8	O
type	O
'unicode	O
'	O
2	O
$	O
python	O
-c	O
'import	O
sys	O
,	O
codecs	O
,	O
locale	O
;	O
print	O
sys.stdout.encoding	B-API
;	O
\	O
sys.stdout	O
=	O
codecs.getwriter	B-API
(	O
locale.getpreferredencoding	B-API
(	I-API
)	I-API
)	O
(	O
sys.stdout	B-API
)	O
;	O
\	O
line	O
=	O
u	O
''	O
\u0411\n	O
''	O
;	O
print	O
type	B-API
(	I-API
line	I-API
)	I-API
,	O
len	B-API
(	I-API
line	I-API
)	I-API
;	O
\	O
sys.stdout.write	B-API
(	I-API
line	I-API
)	I-API
;	O
print	O
line	O
'	O
|	O
cat	O
None	O
type	O
'unicode	O
'	O
2	O
There	O
's	O
some	O
more	O
information	O
on	O
that	O
page	O
,	O
well	O
worth	O
a	O
read	O
.	O
Build	O
a	O
time	O
machine	O
and	O
go	O
back	O
to	O
1987	O
?	O
Ho	O
ho	O
.	O
Ok	O
,	O
no	O
more	O
snarky	O
comments	O
.	O
How	O
do	O
I	O
figure	O
out	O
what	O
the	O
configuration	O
settings	O
(	O
e.g	O
.	O
baud	O
rate	O
)	O
should	O
be	O
...	O
Read	O
the	O
datasheet	O
?	O
Ok	O
,	O
ok	O
.	O
Seriously	O
,	O
last	O
one	O
.	O
If	O
you	O
do	O
n't	O
know	O
the	O
baud	O
rate	O
of	O
the	O
device	O
you	O
are	O
trying	O
to	O
communicate	O
with	O
,	O
you	O
have	O
two	O
choices	O
.	O
Start	O
guessing	O
,	O
or	O
possibly	O
bust	O
out	O
an	O
o-scope	O
.	O
If	O
you	O
need	O
a	O
good	O
starting	O
point	O
,	O
let	O
me	O
suggest	O
9600-8-N-1	O
.	O
My	O
suspicion	O
is	O
you	O
can	O
get	O
there	O
with	O
brute	O
force	O
relatively	O
quickly	O
.	O
There	O
's	O
a	O
third	O
option	O
of	O
having	O
an	O
old-school	O
ninja	O
who	O
can	O
tell	O
just	O
by	O
the	O
LOOK	O
of	O
the	O
garbled	O
characters	O
at	O
some	O
standard	O
baud	O
rate	O
what	O
actual	O
baud	O
rate	O
is	O
.	O
An	O
impressive	O
party	O
trick	O
to	O
be	O
sure	O
.	O
Hopefully	O
though	O
you	O
have	O
access	O
to	O
this	O
information	O
.	O
In	O
unix/linux	O
,	O
you	O
can	O
get	O
ahold	O
of	O
minicom	O
to	O
play	O
with	O
the	O
serial	O
port	O
directly	O
.	O
This	O
should	O
make	O
it	O
fairly	O
quick	O
to	O
get	O
the	O
configuration	O
figured	O
out	O
.	O
one	O
of	O
the	O
major	O
Unix	O
shells	O
In	O
Unix	O
the	O
serial	O
port	O
(	O
s	O
)	O
is/are	O
file-mapped	O
into	O
the	O
/dev/	O
subdir	O
.	O
ttyS0	O
,	O
for	O
example	O
.	O
If	O
you	O
setup	O
the	O
correct	O
baud	O
rate	O
and	O
whatnot	O
using	O
minicom	O
,	O
you	O
can	O
even	O
cat	O
stuff	O
to	O
that	O
file	O
to	O
send	O
stuff	O
out	O
there	O
.	O
On	O
to	O
the	O
meat	O
of	O
the	O
question	O
,	O
you	O
can	O
access	O
it	O
programmatically	O
through	O
the	O
POSIX	O
headers	O
.	O
termios.h	O
is	O
the	O
big	O
one	O
.	O
See	O
:	O
http	O
:	O
//www.easysw.com/~mike/serial/serial.html	O
#	O
3_1	O
(	O
NOT	O
AVAILABLE	O
ANYMORE	O
)	O
but	O
I	O
also	O
have	O
some	O
interest	O
in	O
serial	O
programming	O
using	O
Windows/Hyperterminal	O
.	O
Hyperterminal	O
and	O
minicom	O
are	O
basically	O
the	O
same	O
program	O
.	O
As	O
for	O
how	O
Windows	O
let	O
's	O
you	O
get	O
access	O
to	O
the	O
serial	O
port	O
,	O
I	O
'll	O
leave	O
that	O
question	O
for	O
someone	O
else	O
.	O
I	O
have	O
n't	O
done	O
that	O
in	O
Windows	O
since	O
the	O
Win95	O
days	O
.	O
From	O
the	O
other	O
side	O
,	O
if	O
you	O
want	O
to	O
do	O
it	O
using	O
C	O
#	O
,	O
which	O
will	O
run	O
on	O
both	O
Windows	O
and	O
Linux	O
--	O
with	O
some	O
limitations	O
(	O
EDIT	O
:	O
which	O
may	O
be	O
out	O
of	O
date	O
.	O
I	O
have	O
no	O
way	O
to	O
test	O
it.	O
)	O
.	O
Just	O
create	O
a	O
SerialPort	O
object	O
,	O
set	O
its	O
baudrate	O
,	O
port	O
and	O
any	O
other	O
odd	O
settings	O
,	O
call	O
open	O
on	O
it	O
,	O
and	O
write	O
out	O
your	O
byte	O
[	O
]	O
s.	O
After	O
all	O
the	O
setup	O
,	O
the	O
SerialPort	O
object	O
acts	O
very	O
similar	O
to	O
any	O
networked	O
stream	O
,	O
so	O
it	O
should	O
be	O
easy	O
enough	O
to	O
figure	O
out	O
.	O
And	O
as	O
ibrandy	O
states	O
,	O
you	O
need	O
to	O
know	O
all	O
these	O
settings	O
,	O
like	O
baud	O
rate	O
,	O
before	O
you	O
even	O
start	O
attempting	O
to	O
communicate	O
to	O
any	O
serial	O
device	O
.	O
At	O
work	O
we	O
use	O
teraterm	O
and	O
realterm	O
for	O
checking	O
serial	O
data	O
is	O
correctly	O
formatted	O
.	O
Also	O
we	O
have	O
a	O
hardware	O
splitter	O
with	O
a	O
switch	O
so	O
we	O
can	O
monitor	O
traffic	O
to	O
our	O
application	O
via	O
a	O
cable	O
back	O
to	O
another	O
port	O
.	O
Windows	O
allows	O
you	O
access	O
to	O
the	O
serial	O
port	O
via	O
CreateFile	O
.	O
That	O
gives	O
you	O
a	O
handle	O
and	O
from	O
there	O
you	O
can	O
configure	O
access	O
.	O
From	O
Java	O
the	O
rxtx	O
(	O
NOT	O
AVAILABLE	O
ANYMORE	O
)	O
library	O
is	O
quite	O
good	O
.	O
It	O
picks	O
up	O
where	O
Sun	O
's	O
serial	O
IO	O
framework	O
left	O
off	O
.	O
There	O
are	O
two	O
main	O
ways	O
of	O
running	O
Python	O
on	O
Apache	O
.	O
The	O
simplest	O
would	O
be	O
to	O
use	O
CGI	O
and	O
write	O
normal	O
Python	O
scripts	O
while	O
the	O
second	O
is	O
using	O
a	O
web	O
framework	O
like	O
Django	O
or	O
Pylons	O
.	O
Using	O
CGI	O
is	O
straightforward	O
.	O
Make	O
sure	O
your	O
Apache	O
config	O
file	O
has	O
a	O
cgi-bin	O
set	O
up	O
.	O
If	O
not	O
,	O
follow	O
their	O
documentation	O
(	O
http	O
:	O
//httpd.apache.org/docs/2.0/howto/cgi.html	O
)	O
.	O
At	O
that	O
point	O
all	O
you	O
need	O
to	O
do	O
is	O
place	O
your	O
Python	O
scripts	O
in	O
the	O
cgi-bin	O
directory	O
and	O
the	O
standard	O
output	O
will	O
become	O
the	O
HTTP	O
response	O
.	O
Refer	O
to	O
Python	O
's	O
documentation	O
for	O
further	O
info	O
(	O
https	O
:	O
//docs.python.org/library/cgi.html	O
)	O
.	O
If	O
you	O
want	O
to	O
use	O
a	O
web	O
framework	O
you	O
'll	O
need	O
to	O
setup	O
mod_python	O
or	O
FastCGI	O
.	O
These	O
steps	O
are	O
dependent	O
on	O
which	O
framework	O
you	O
want	O
to	O
use	O
.	O
Django	O
provides	O
clear	O
instructions	O
on	O
how	O
to	O
setup	O
mod_python	O
and	O
Django	O
with	O
Apache	O
(	O
http	O
:	O
//www.djangoproject.com/documentation/modpython/	O
)	O
Yes	O
,	O
mod_python	O
is	O
pretty	O
confusing	O
to	O
set	O
up	O
.	O
Here	O
's	O
how	O
I	O
did	O
it	O
.	O
In	O
httpd.conf	O
:	O
LoadModule	O
python_module	O
modules/mod_python.soDirectory	O
``	O
/serverbase/htdocs/myapp	O
''	O
AddHandler	O
mod_python	O
.py	O
PythonHandler	O
myapp	O
PythonDebug	O
and	O
in	O
your	O
application	O
directory	O
:	O
$	O
/serverbase/htdocs/myapp	O
$	O
ls	O
-ltotal	O
16-r-xr-xr-x	O
1	O
root	O
sys	O
6484	O
May	O
21	O
15:54	O
Repeat	O
the	O
configuration	O
for	O
each	O
python	O
program	O
you	O
wish	O
to	O
have	O
running	O
under	O
mod_python	O
.	O
Are	O
you	O
running	O
Python	O
on	O
UNIX	O
or	O
Windows	O
?	O
An	O
alternative	O
to	O
mod_python	O
and	O
FastCGI	O
is	O
mod_wsgi	O
.	O
You	O
can	O
find	O
out	O
more	O
at	O
modwsgi	O
I	O
have	O
built	O
and	O
installed	O
this	O
on	O
Solaris	O
without	O
problems	O
.	O
I	O
had	O
previously	O
tried	O
mod_python	O
but	O
ran	O
into	O
problems	O
with	O
shared	O
libraries	O
as	O
part	O
of	O
the	O
build	O
.	O
There	O
are	O
good	O
install	O
docs	O
available	O
.	O
Thxm	O
,	O
Mc	O
!	O
http	O
:	O
//asm.objectweb.org/	O
is	O
another	O
one	O
.	O
Excellent	O
documentation	O
on	O
byte	O
code	O
instrumentation	O
,	O
but	O
nothing	O
``	O
directly	O
''	O
aimed	O
at	O
writing	O
a	O
coverage	O
tool	O
-	O
just	O
some	O
hints	O
or	O
ideas	O
.	O
Absolutely	O
.	O
When	O
nobody	O
knows	O
the	O
low	O
level	O
,	O
who	O
will	O
update	O
and	O
write	O
the	O
high	O
level	O
languages	O
?	O
Also	O
,	O
when	O
you	O
understand	O
the	O
low	O
level	O
stuff	O
,	O
you	O
can	O
write	O
more	O
efficient	O
code	O
in	O
a	O
higher	O
level	O
language	O
,	O
and	O
also	O
debug	O
more	O
efficiently	O
.	O
Learning	O
C	O
or	O
a	O
lower	O
level	O
language	O
can	O
definitely	O
be	O
useful	O
.	O
However	O
,	O
I	O
do	O
n't	O
see	O
any	O
obvious	O
advantage	O
in	O
using	O
the	O
unmanaged	O
WinAPI	B-API
.	O
I	O
've	O
seen	O
low	O
level	O
Windows	B-API
API	I-API
code	O
...	O
it	O
ai	O
n't	O
pretty	O
...	O
I	O
wish	O
I	O
could	O
unlearn	O
it	O
.	O
I	O
think	O
it	O
benefits	O
to	O
learn	O
low	O
level	O
as	O
in	O
C	O
,	O
as	O
you	O
gain	O
a	O
better	O
understanding	O
of	O
the	O
hardware	O
architecture	O
and	O
how	O
all	O
that	O
stuff	O
works	O
.	O
Learning	O
old	O
Windows	O
API	O
...	O
I	O
think	O
that	O
stuff	O
can	O
be	O
left	O
to	O
the	O
people	O
at	O
Microsoft	O
who	O
may	O
need	O
to	O
learn	O
it	O
to	O
build	O
higher	O
level	O
languages	O
and	O
API	O
...	O
they	O
built	O
it	O
,	O
let	O
them	O
suffer	O
with	O
it	O
;	O
-	O
)	O
However	O
,	O
if	O
you	O
happen	O
to	O
find	O
a	O
situation	O
where	O
you	O
feel	O
you	O
just	O
ca	O
n't	O
do	O
what	O
you	O
need	O
to	O
do	O
in	O
a	O
higher	O
level	O
language	O
(	O
few	O
and	O
far	O
between	O
)	O
,	O
then	O
perhaps	O
start	O
the	O
dangerous	O
dive	O
into	O
that	O
world	O
.	O
The	O
native	O
APIs	O
are	O
the	O
``	O
real	O
''	O
operating	O
system	O
APIs	O
.	O
The	O
.NET	O
library	O
is	O
(	O
with	O
few	O
exceptions	O
)	O
nothing	O
more	O
than	O
a	O
fancy	O
wrapper	O
around	O
them	O
.	O
So	O
yes	O
,	O
I	O
'd	O
say	O
that	O
anybody	O
who	O
can	O
understand	O
.NET	O
with	O
all	O
its	O
complexity	O
,	O
can	O
understand	O
relatively	O
mundane	O
things	O
like	O
talking	O
to	O
the	O
API	O
without	O
the	O
benefit	O
of	O
a	O
middle-man	O
.	O
Just	O
try	O
to	O
do	O
DLL	O
Injection	O
from	O
managed	O
code	O
.	O
It	O
ca	O
n't	O
be	O
done	O
.	O
You	O
will	O
be	O
forced	O
to	O
write	O
native	O
code	O
for	O
this	O
,	O
for	O
windowing	O
tweaks	O
,	O
for	O
real	O
subclassing	O
,	O
and	O
a	O
dozen	O
other	O
things	O
.	O
So	O
yes	O
:	O
you	O
should	O
(	O
must	O
)	O
know	O
both	O
.	O
Edit	O
:	O
even	O
if	O
you	O
plan	O
to	O
use	O
P/Invoke	O
.	O
This	O
question	O
is	O
bordering	O
on	O
religious	O
:	O
)	O
But	O
I	O
'll	O
give	O
my	O
thoughts	O
anyway	O
.	O
I	O
do	O
see	O
value	O
in	O
learing	O
the	O
Win32	B-API
API	I-API
.	O
Most	O
,	O
if	O
not	O
all	O
,	O
GUI	O
libraries	O
(	O
managed	O
or	O
unmanaged	O
)	O
result	O
in	O
calls	O
to	O
the	O
Win32	B-API
API	I-API
.	O
Even	O
the	O
most	O
thorough	O
libraries	O
do	O
n't	O
cover	O
100	O
%	O
of	O
the	O
API	O
,	O
and	O
hence	O
there	O
are	O
always	O
gaps	O
which	O
need	O
to	O
be	O
plugged	O
by	O
direct	O
API	O
calls	O
or	O
P/invoking	O
.	O
Some	O
of	O
the	O
names	O
of	O
the	O
wrappers	O
around	O
the	O
API	O
calls	O
have	O
similar	O
names	O
to	O
the	O
underlying	O
API	O
calls	O
,	O
but	O
those	O
names	O
are	O
n't	O
exactly	O
self-documenting	O
.	O
So	O
understanding	O
the	O
underlying	O
API	O
,	O
and	O
the	O
terminology	O
used	O
therein	O
,	O
will	O
aid	O
in	O
understanding	O
the	O
wrapper	O
APIs	O
and	O
what	O
they	O
actually	O
do	O
.	O
Plus	O
,	O
if	O
you	O
understand	O
the	O
nature	O
of	O
the	O
underlying	O
APIs	O
that	O
are	O
used	O
by	O
frameworks	O
,	O
then	O
you	O
will	O
make	O
better	O
choices	O
with	O
regards	O
to	O
which	O
library	O
functionality	O
you	O
should	O
use	O
in	O
a	O
given	O
scenario	O
.	O
Cheers	O
!	O
Analogy	O
:	O
If	O
you	O
build	O
cars	O
for	O
a	O
living	O
(	O
programming	O
)	O
,	O
then	O
its	O
very	O
pertinent	O
to	O
know	O
how	O
the	O
engine	O
works	O
(	O
Win32	O
)	O
.	O
Simple	O
answer	O
,	O
YES	O
.	O
Learning	O
a	O
new	O
programming	O
language	O
or	O
technology	O
is	O
for	O
one	O
of	O
three	O
reasons	O
:	O
1	O
.	O
Need	O
:	O
you	O
're	O
starting	O
a	O
project	O
for	O
building	O
a	O
web	O
application	O
and	O
you	O
do	O
n't	O
know	O
anything	O
about	O
ASP.NET	O
2	O
.	O
Enthusiasm	O
:	O
you	O
're	O
very	O
excited	O
about	O
ASP.NET	O
MVC	O
.	O
why	O
not	O
try	O
that	O
?	O
3	O
.	O
Free	O
time	O
:	O
but	O
who	O
has	O
that	O
anyway	O
.	O
The	O
best	O
reason	O
to	O
learn	O
something	O
new	O
is	O
Need	O
.	O
If	O
you	O
need	O
to	O
do	O
something	O
that	O
the	O
.NET	O
framework	O
ca	O
n't	O
do	O
(	O
like	O
performance	O
for	O
example	O
)	O
then	O
WinAPI	B-API
is	O
your	O
solution	O
.	O
Until	O
then	O
we	O
keep	O
ourself	O
busy	O
with	O
learning	O
about	O
.NET	O
It	O
's	O
important	O
to	O
know	O
what	O
is	O
available	O
with	O
the	O
Windows	O
API	O
.	O
I	O
do	O
n't	O
think	O
you	O
need	O
to	O
crank	O
out	O
code	O
with	O
it	O
,	O
but	O
you	O
should	O
know	O
how	O
it	O
works	O
.	O
The	O
.NET	O
Framework	O
contains	O
a	O
lot	O
of	O
functionality	O
,	O
but	O
it	O
does	O
n't	O
provide	O
managed	O
code	O
equivalents	O
for	O
the	O
entire	O
Windows	B-API
API	I-API
.	O
Sometimes	O
you	O
have	O
to	O
get	O
a	O
bit	O
closer	O
to	O
the	O
metal	O
,	O
and	O
knowing	O
what	O
's	O
down	O
there	O
and	O
how	O
it	O
behaves	O
will	O
give	O
you	O
a	O
better	O
understanding	O
of	O
how	O
to	O
use	O
it	O
.	O
For	O
most	O
needs	O
on	O
the	O
desktop	O
you	O
wont	O
need	O
to	O
know	O
the	O
Win32	O
,	O
however	O
there	O
is	O
a	O
LOT	O
of	O
Win32	O
not	O
in	O
.NET	O
,	O
but	O
it	O
is	O
in	O
the	O
outlaying	O
stuff	O
that	O
may	O
end	O
up	O
being	O
less	O
than	O
1	O
%	O
of	O
your	O
application	O
.	O
USB	O
support	O
,	O
HID	O
support	O
,	O
Windows	O
Media	O
Foundation	O
just	O
off	O
the	O
top	O
of	O
my	O
head	O
.	O
There	O
are	O
many	O
cool	O
Vista	B-API
API	I-API
's	O
only	O
available	O
from	O
Win32	O
.	O
You	O
will	O
do	O
yourself	O
a	O
large	O
favor	O
by	O
learning	O
how	O
to	O
do	O
interop	O
with	O
a	O
Win32	B-API
API	I-API
,	O
if	O
you	O
do	O
desktop	O
programing	O
,	O
because	O
when	O
you	O
do	O
need	O
to	O
call	O
Win32	O
,	O
and	O
you	O
will	O
,	O
you	O
wo	O
n't	O
spend	O
weeks	O
scratching	O
your	O
head	O
.	O
You	O
could	O
always	O
do	O
this	O
:	O
string	O
[	O
]	O
temp	O
=	O
new	O
int	O
LastCount	O
=	O
mydict	O
[	O
temp	O
[	O
mydict.count	B-API
-	O
[	O
mydict.count	B-API
]	O
;	O
mydict.Keys.CopyTo	B-API
(	I-API
temp	I-API
,	I-API
0	I-API
)	I-API
But	O
I	O
would	O
n't	O
recommend	O
it	O
.	O
There	O
's	O
no	O
guarantee	O
that	O
the	O
last	O
inserted	O
key	O
will	O
be	O
at	O
the	O
end	O
of	O
the	O
array	O
.	O
The	O
ordering	O
for	O
Keys	O
on	O
MSDN	O
is	O
unspecified	O
,	O
and	O
subject	O
to	O
change	O
.	O
In	O
my	O
very	O
brief	O
test	O
,	O
it	O
does	O
seem	O
to	O
be	O
in	O
order	O
of	O
insertion	O
,	O
but	O
you	O
'd	O
be	O
better	O
off	O
building	O
in	O
proper	O
bookkeeping	O
like	O
a	O
stack	O
--	O
as	O
you	O
suggest	O
(	O
though	O
I	O
do	O
n't	O
see	O
the	O
need	O
of	O
a	O
struct	O
based	O
on	O
your	O
other	O
statements	O
)	O
--	O
or	O
single	O
variable	O
cache	O
if	O
you	O
just	O
need	O
to	O
know	O
the	O
latest	O
key	O
.	O
I	O
do	O
n't	O
know	O
if	O
this	O
would	O
work	O
because	O
I	O
'm	O
pretty	O
sure	O
that	O
the	O
keys	O
are	O
n't	O
stored	O
in	O
the	O
order	O
they	O
are	O
added	O
,	O
but	O
you	O
could	O
cast	O
the	O
KeysCollection	O
to	O
a	O
List	O
and	O
then	O
get	O
the	O
last	O
key	O
in	O
the	O
list	O
...	O
but	O
it	O
would	O
be	O
worth	O
having	O
a	O
look	O
.	O
The	O
only	O
other	O
thing	O
I	O
can	O
think	O
of	O
is	O
to	O
store	O
the	O
keys	O
in	O
a	O
lookup	O
list	O
and	O
add	O
the	O
keys	O
to	O
the	O
list	O
before	O
you	O
add	O
them	O
to	O
the	O
dictionary	O
...	O
it	O
's	O
not	O
pretty	O
tho	O
.	O
I	O
think	O
you	O
can	O
do	O
something	O
like	O
this	O
,	O
the	O
syntax	O
might	O
be	O
wrong	O
,	O
havent	O
used	O
C	O
#	O
in	O
a	O
while	O
To	O
get	O
the	O
last	O
item	O
Dictionarystring	O
,	O
int.KeyCollection	O
keys	O
=	O
mydict.keys	B-API
;	O
string	O
lastKey	O
=	O
keys.Last	B-API
(	I-API
)	I-API
;	O
or	O
use	O
Max	O
instead	O
of	O
Last	O
to	O
get	O
the	O
max	O
value	O
,	O
I	O
dont	O
know	O
which	O
one	O
fits	O
your	O
code	O
better	O
.	O
I	O
agree	O
with	O
the	O
second	O
part	O
of	O
Patrick	O
's	O
answer	O
.	O
Even	O
if	O
in	O
some	O
tests	O
it	O
seems	O
to	O
keep	O
insertion	O
order	O
,	O
the	O
documentation	O
(	O
and	O
normal	O
behavior	O
for	O
dictionaries	O
and	O
hashes	O
)	O
explicitly	O
states	O
the	O
ordering	O
is	O
unspecified	O
.	O
You	O
're	O
just	O
asking	O
for	O
trouble	O
depending	O
on	O
the	O
ordering	O
of	O
the	O
keys	O
.	O
Add	O
your	O
own	O
bookkeeping	O
(	O
as	O
Patrick	O
said	O
,	O
just	O
a	O
single	O
variable	O
for	O
the	O
last	O
added	O
key	O
)	O
to	O
be	O
sure	O
.	O
Also	O
,	O
do	O
n't	O
be	O
tempted	O
by	O
all	O
the	O
methods	O
such	O
as	O
Last	O
and	O
Max	O
on	O
the	O
dictionary	O
as	O
those	O
are	O
probably	O
in	O
relation	O
to	O
the	O
key	O
comparator	O
(	O
I	O
'm	O
not	O
sure	O
about	O
that	O
)	O
.	O
The	O
way	O
you	O
worded	O
the	O
question	O
leads	O
me	O
to	O
believe	O
that	O
the	O
int	O
in	O
the	O
Dictionary	O
contains	O
the	O
item	O
's	O
``	O
position	O
''	O
on	O
the	O
Dictionary	O
.	O
Judging	O
from	O
the	O
assertion	O
that	O
the	O
keys	O
are	O
n't	O
stored	O
in	O
the	O
order	O
that	O
they	O
're	O
added	O
,	O
if	O
this	O
is	O
correct	O
,	O
that	O
would	O
mean	O
that	O
keys.Count	B-API
(	O
or	O
.Count	O
-	O
1	O
,	O
if	O
you	O
're	O
using	O
zero-based	O
)	O
should	O
still	O
always	O
be	O
the	O
number	O
of	O
the	O
last-entered	O
key	O
?	O
If	O
that	O
's	O
correct	O
,	O
is	O
there	O
any	O
reason	O
you	O
ca	O
n't	O
instead	O
use	O
Dictionaryint	O
,	O
string	O
so	O
that	O
you	O
can	O
use	O
mydict	O
[	O
mydict.Keys.Count	B-API
]	O
?	O
Why	O
do	O
n't	O
you	O
just	O
extend	O
the	O
dictionary	O
class	O
to	O
add	O
in	O
a	O
last	O
key	O
inserted	O
property	O
.	O
Something	O
like	O
the	O
following	O
maybe	O
?	O
public	O
class	O
ExtendedDictionary	O
:	O
Dictionarystring	O
,	O
int	O
{	O
private	O
int	O
lastKeyInserted	O
=	O
-1	O
;	O
public	O
int	O
LastKeyInserted	O
{	O
get	O
{	O
return	O
lastKeyInserted	O
;	O
}	O
set	O
{	O
lastKeyInserted	O
=	O
value	O
;	O
}	O
}	O
public	O
void	O
AddNew	O
(	O
string	O
s	O
,	O
int	O
i	O
)	O
{	O
lastKeyInserted	O
=	O
i	O
;	O
base.Add	O
(	O
s	O
,	O
i	O
)	O
;	O
}	O
}	O
You	O
can	O
use	O
an	O
OrderedDictionary	O
.	O
Represents	O
a	O
collection	O
of	O
key/value	O
pairs	O
that	O
are	O
accessible	O
by	O
the	O
key	O
or	O
index	O
.	O
I	O
know	O
that	O
if	O
you	O
use	O
a	O
paging	O
repeater	O
or	O
gridview	O
with	O
the	O
linqdatasource	O
it	O
will	O
automatically	O
optimize	O
the	O
number	O
of	O
results	O
returned	O
,	O
but	O
I	O
'm	O
also	O
pretty	O
sure	O
in	O
the	O
datasource	O
wizard	O
you	O
can	O
go	O
to	O
advanced	O
options	O
and	O
limit	O
it	O
to	O
SELECT	O
TOP	O
3	O
FROM	O
which	O
should	O
allow	O
you	O
to	O
do	O
what	O
you	O
need	O
For	O
C++	O
,	O
a	O
map	O
works	O
well	O
.	O
Several	O
million	O
objects	O
wo	O
n't	O
be	O
a	O
problem	O
.	O
10	O
million	O
items	O
took	O
about	O
4.4	O
seconds	O
and	O
about	O
57	O
meg	O
on	O
my	O
computer	O
.	O
#	O
include	O
stdio.h	O
#	O
include	O
stdlib.h	O
#	O
include	O
map	O
class	O
triple	O
{	O
public	O
:	O
int	O
x	O
;	O
int	O
y	O
;	O
int	O
z	O
;	O
bool	O
operator	O
(	O
const	O
triple	O
other	O
)	O
const	O
{	O
if	O
(	O
x	O
other.x	O
)	O
return	O
true	O
;	O
if	O
(	O
other.x	O
x	O
)	O
return	O
false	O
;	O
if	O
(	O
y	O
other.y	O
)	O
return	O
true	O
;	O
if	O
(	O
other.y	O
y	O
)	O
return	O
false	O
;	O
return	O
z	O
other.z	O
;	O
}	O
}	O
;	O
int	O
main	O
(	O
int	O
,	O
char**	O
)	O
{	O
std	O
:	O
:maptriple	O
,	O
int	O
data	O
;	O
triple	O
point	O
;	O
int	O
i	O
;	O
for	O
(	O
i	O
=	O
0	O
;	O
i	O
10000000	O
;	O
++i	O
)	O
{	O
point.x	O
=	O
rand	O
(	O
)	O
;	O
point.y	O
=	O
rand	O
(	O
)	O
;	O
point.z	O
=	O
rand	B-API
(	I-API
)	I-API
;	O
//printf	O
(	O
``	O
%	O
d	O
%	O
d	O
%	O
d	O
%	O
d\n	O
''	O
,	O
i	O
,	O
point.x	O
,	O
point.y	O
,	O
point.z	O
)	O
;	O
data	O
[	O
point	O
]	O
=	O
i	O
;	O
}	O
return	O
0	O
;	O
}	O
For	O
multiple	O
variables	O
:	O
The	O
easiest	O
way	O
is	O
to	O
make	O
the	O
index	O
a	O
string	O
,	O
and	O
then	O
make	O
the	O
index	O
strings	O
look	O
like	O
``	O
23,55	O
''	O
(	O
2	O
vars	O
)	O
or	O
``	O
34,45,56	O
''	O
(	O
3	O
vars	O
)	O
:	O
std	O
:	O
:map	O
datastring	O
,	O
int	O
data	O
;	O
char	O
ix	O
[	O
100	O
]	O
;	O
sprintf	B-API
(	I-API
ix	I-API
,	I-API
``	I-API
%	I-API
d	I-API
,	I-API
%	I-API
d	I-API
''	I-API
,	I-API
x	I-API
,	I-API
y	I-API
)	I-API
;	O
//	O
2	O
vars	O
data	O
[	O
ix	O
]	O
=	O
i	O
;	O
sprintf	B-API
(	I-API
ix	I-API
,	I-API
``	I-API
%	I-API
d	I-API
,	I-API
%	I-API
d	I-API
,	I-API
%	I-API
d	I-API
''	I-API
,	I-API
x	I-API
,	I-API
y	I-API
,	I-API
z	I-API
)	I-API
;	O
//	O
3	O
vars	O
data	O
[	O
ix	O
]	O
=	O
i	O
;	O
Hash	O
tables	O
have	O
a	O
fast	O
insertion	O
and	O
look	O
up	O
.	O
You	O
could	O
write	O
a	O
simple	O
hash	O
function	O
since	O
you	O
know	O
you	O
'd	O
be	O
dealing	O
with	O
only	O
integer	O
pairs	O
as	O
the	O
keys	O
.	O
For	O
multiple	O
variables	O
:	O
The	O
easiest	O
way	O
is	O
to	O
make	O
the	O
index	O
a	O
string	O
,	O
and	O
then	O
make	O
the	O
index	O
strings	O
look	O
like	O
``	O
23,55	O
''	O
(	O
2	O
vars	O
)	O
or	O
``	O
34,45,56	O
''	O
(	O
3	O
vars	O
)	O
:	O
std	O
:	O
:map	O
datastring	O
,	O
int	O
data	O
;	O
char	O
ix	O
[	O
100	O
]	O
;	O
sprintf	B-API
(	I-API
ix	I-API
,	I-API
``	I-API
%	I-API
d	I-API
,	I-API
%	I-API
d	I-API
''	I-API
,	I-API
x	I-API
,	I-API
y	I-API
)	I-API
;	O
//	O
2	O
vars	O
data	O
[	O
ix	O
]	O
=	O
i	O
;	O
sprintf	B-API
(	I-API
ix	I-API
,	I-API
``	I-API
%	I-API
d	I-API
,	I-API
%	I-API
d	I-API
,	I-API
%	I-API
d	I-API
''	I-API
,	I-API
x	I-API
,	I-API
y	I-API
,	I-API
z	I-API
)	I-API
;	O
//	O
3	O
vars	O
data	O
[	O
ix	O
]	O
=	O
i	O
;	O
The	O
best	O
way	O
to	O
implement	O
sparse	O
matrices	O
is	O
to	O
not	O
to	O
implement	O
them	O
-	O
atleast	O
not	O
on	O
your	O
own	O
.	O
I	O
would	O
suggest	O
to	O
BLAS	B-API
(	O
which	O
I	O
think	O
is	O
a	O
part	O
of	O
LAPACK	B-API
)	O
which	O
can	O
handle	O
really	O
huge	O
matrices	O
.	O
I	O
've	O
had	O
no	O
trouble	O
using	O
the	O
BSD	O
sockets	O
API	O
in	O
C++	O
,	O
in	O
GNU/Linux	O
.	O
Here	O
's	O
the	O
sample	O
program	O
I	O
used	O
:	O
#	B-API
include	I-API
{	B-API
return	B-API
sys/socket.hintmain	B-API
(	I-API
)	I-API
So	O
my	O
take	O
on	O
this	O
is	O
that	O
z/OS	O
is	O
probably	O
the	O
complicating	O
factor	O
here	O
,	O
however	O
,	O
because	O
I	O
've	O
never	O
used	O
z/OS	O
before	O
,	O
much	O
less	O
programmed	O
in	O
it	O
,	O
I	O
ca	O
n't	O
say	O
this	O
definitively	O
.	O
:	O
-P	O
Sure	O
I	O
can	O
post	O
a	O
test	O
app	O
.	O
#	B-API
include	I-API
sys/socket.hint	B-API
{	B-API
return	B-API
main	B-API
(	I-API
)	I-API
Compile/Link	O
Output	O
:	O
cxx	O
-Wc	O
,	O
xplink	O
-Wl	O
,	O
xplink	O
-o	O
inet_test	O
inet.C	O
''	O
./inet.C	O
''	O
,	O
line	O
5.16	O
:	O
CCN5274	O
(	O
S	O
)	O
The	O
name	O
lookup	O
for	O
``	O
AF_INET	O
''	O
did	O
not	O
find	O
a	O
declaration	O
.	O
CCN0797	O
(	O
I	O
)	O
Compilation	O
failed	O
for	O
file	O
./inet.C	O
.	O
Object	O
file	O
not	O
created	O
.	O
A	O
check	O
of	O
sys/sockets.h	O
does	O
include	O
the	O
definition	O
I	O
need	O
,	O
and	O
as	O
far	O
as	O
I	O
can	O
tell	O
,	O
it	O
is	O
not	O
being	O
blocked	O
by	O
any	O
#	O
ifdef	O
statements	O
.	O
I	O
have	O
however	O
noticed	O
it	O
contains	O
a	O
the	O
following	O
:	O
#	)-API
ifdef	O
__cplusplus	O
extern	O
``	O
C	O
''	O
which	O
encapsulates	O
basically	O
the	O
whole	O
file	O
.	O
Not	O
sure	O
if	O
it	O
matters	O
.	O
@	O
Jax	O
:	O
The	O
extern	B-API
thing	O
matters	O
,	O
very	O
very	O
much	O
.	O
If	O
a	O
header	O
file	O
does	O
n't	O
have	O
one	O
,	O
then	O
(	O
unless	O
it	O
's	O
a	O
C++-only	O
header	O
file	O
)	O
,	O
you	O
would	O
have	O
to	O
enclose	O
your	O
with	O
it	O
:	O
extern	B-API
``	B-API
C	I-API
''	I-API
{	B-API
#	I-API
include	I-API
sys/socket.h//	B-API
include	B-API
other	B-API
similarly	B-API
non-compliant	B-API
header	B-API
Basically	O
,	O
anytime	O
where	O
a	O
C++	O
program	O
wants	O
to	O
link	O
to	O
C-based	O
facilities	O
,	O
the	O
extern	B-API
is	O
vital	O
.	O
In	O
practical	O
terms	O
,	O
it	O
means	O
that	O
the	O
names	O
used	O
in	O
external	O
references	O
will	O
not	O
be	O
mangled	O
,	O
like	O
normal	O
C++	O
names	O
would	O
.	O
Reference	O
.	O
You	O
can	O
add	O
a	O
mouse	O
click	O
event	O
to	O
the	O
TreeView	B-API
,	O
then	O
select	O
the	O
correct	O
node	O
using	O
GetNodeAt	O
given	O
the	O
mouse	O
coordinates	O
provided	O
by	O
the	O
MouseEventArgs	O
.	O
void	O
treeView1MouseUp	B-API
(	I-API
object	I-API
sender	I-API
,	I-API
MouseEventArgs	I-API
e	I-API
)	I-API
{	O
if	O
(	O
e.Button	O
==	O
MouseButtons.Right	B-API
)	O
{	O
//	O
Select	O
the	O
clicked	O
node	O
treeView1.SelectedNode	O
=	O
treeView1.GetNodeAt	O
(	O
e.X	O
,	O
e.Y	O
)	O
;	O
if	O
(	O
treeView1.SelectedNode	O
!	O
=	O
null	O
)	O
{	O
myContextMenuStrip.Show	B-API
(	I-API
treeView1	I-API
,	I-API
e.Location	I-API
)	I-API
;	O
}	O
}	O
}	O
If	O
you	O
want	O
the	O
context	O
menu	O
to	O
be	O
dependent	O
on	O
the	O
selected	O
item	O
you	O
're	O
best	O
move	O
I	O
think	O
is	O
to	O
use	O
Jonesinator	O
's	O
code	O
to	O
select	O
the	O
clicked	O
item	O
.	O
Your	O
context	O
menu	O
content	O
can	O
then	O
be	O
dependent	O
on	O
the	O
selected	O
item	O
.	O
Selecting	O
the	O
item	O
first	O
as	O
opposed	O
to	O
just	O
using	O
it	O
for	O
the	O
context	O
menu	O
gives	O
a	O
few	O
advantages	O
.	O
The	O
first	O
is	O
that	O
the	O
user	O
has	O
a	O
visual	O
indication	O
as	O
to	O
which	O
he	O
clicked	O
and	O
thus	O
which	O
item	O
the	O
menu	O
is	O
associated	O
with	O
.	O
The	O
second	O
is	O
that	O
this	O
way	O
it	O
's	O
a	O
hell	O
of	O
a	O
lot	O
easier	O
to	O
keep	O
compatible	O
with	O
other	O
methods	O
of	O
invoking	O
the	O
context	O
menu	O
(	O
e.g	O
.	O
keyboard	O
shortcuts	O
)	O
.	O
for	O
C	O
#	O
3.5	O
without	O
notifyicon	O
therefore	O
you	O
will	O
need	O
to	O
terminate	O
this	O
application	O
in	O
task	O
manager	O
manually	O
using	O
System	B-API
;	O
using	O
System.Drawing	B-API
;	O
using	O
;	O
static	O
class	O
Program	O
{	O
static	O
void	O
{	O
Timer	B-API
timer	O
=	O
new	O
;	O
//	O
timer.Interval	B-API
=	O
4	O
minutes	O
timer.Interval	B-API
=	O
;	O
timer.Tick	B-API
+=	O
(	O
sender	O
,	O
args	O
)	O
=	O
{	O
Cursor.Position	B-API
=	O
new	O
;	O
}	O
;	O
;	O
;	O
Main	O
(	O
)	O
Timer	B-API
(	I-API
)	I-API
int	O
)	O
(	O
TimeSpan.TicksPerMinute	B-API
*	O
4	O
/	O
TimeSpan.TicksPerMillisecond	B-API
)	O
(	O
Cursor.Position.X	B-API
+	O
1	O
,	O
Cursor.Position.Y	B-API
+	O
1	O
)	O
timer.Start	B-API
(	I-API
)	I-API
Application.Run	B-API
(	I-API
)	I-API
Something	O
like	O
this	O
should	O
work	O
(	O
though	O
,	O
you	O
will	O
want	O
to	O
change	O
the	O
interval	O
)	O
.	O
public	O
Form1	O
(	O
)	O
{	O
InitializeComponent	B-API
(	I-API
)	I-API
;	O
Timer	B-API
Every4Minutes	O
=	O
new	O
Timer	O
(	O
)	O
;	O
Every4Minutes.Interval	B-API
=	O
10	O
;	O
Every4Minutes.Tick	B-API
+=	O
new	O
EventHandler	O
(	O
MoveNow	O
)	O
;	O
Every4Minutes.Start	B-API
(	I-API
)	I-API
;	O
}	O
void	O
MoveNow	O
(	O
object	O
sender	O
,	O
EventArgs	O
e	O
)	O
{	O
Cursor.Position	B-API
=	O
new	O
Point	O
(	O
Cursor.Position.X	B-API
-	O
1	O
,	O
Cursor.Position.Y	B-API
-	O
1	O
)	O
;	O
}	O
Boy	O
,	O
that	O
's	O
a	O
pretty	O
general	O
question	O
.	O
I	O
'll	O
do	O
my	O
best	O
,	O
but	O
be	O
prepared	O
to	O
see	O
me	O
miss	O
by	O
a	O
mile	O
.	O
Assumptions	O
You	O
are	O
using	O
ASP.NET	O
,	O
not	O
plain	O
ASP	O
You	O
do	O
n't	O
really	O
want	O
to	O
test	O
your	O
web	O
pages	O
,	O
but	O
the	O
logic	O
behind	O
them	O
.	O
Unit	O
testing	O
the	O
actual	O
.ASPX	O
pages	O
is	O
rather	O
painful	O
,	O
but	O
there	O
are	O
frameworks	O
out	O
there	O
to	O
do	O
it	O
.	O
NUnitAsp	O
is	O
one	O
.	O
The	O
first	O
thing	O
to	O
do	O
is	O
to	O
organize	O
(	O
or	O
plan	O
)	O
your	O
code	O
so	O
that	O
it	O
can	O
be	O
tested	O
.	O
The	O
two	O
most	O
popular	O
design	O
patterns	O
for	O
this	O
at	O
the	O
time	O
seem	O
to	O
be	O
MVP	O
and	O
MVC	O
.	O
Both	O
separate	O
the	O
logic	O
of	O
the	O
application	O
away	O
from	O
the	O
view	O
so	O
that	O
you	O
can	O
test	O
the	O
logic	O
without	O
the	O
view	O
(	O
web	O
pages	O
)	O
getting	O
in	O
your	O
way	O
.	O
Either	O
MVP	O
or	O
MVC	O
will	O
be	O
effective	O
.	O
MVC	O
has	O
the	O
advantage	O
of	O
having	O
a	O
Microsoft	O
framework	O
almost	O
ready	O
to	O
go	O
.	O
Once	O
you	O
've	O
selected	O
a	O
framework	O
pattern	O
that	O
encourages	O
testability	O
,	O
you	O
need	O
to	O
use	O
a	O
unit	O
testing	O
tool	O
.	O
NUnit	O
is	O
a	O
good	O
starting	O
point	O
.	O
Visual	O
Studio	O
Professional	O
has	O
a	O
testing	O
suite	O
built	O
it	O
,	O
but	O
NUnit	B-API
+	O
TestDrive.NET	B-API
also	O
works	O
in	O
the	O
IDE	O
.	O
That	O
's	O
sort	O
of	O
a	O
shotgun	O
blast	O
of	O
information	O
.	O
I	O
hope	O
some	O
if	O
it	O
hits	O
.	O
The	O
Pragmatic	O
Bookshelf	O
has	O
a	O
good	O
book	O
covering	O
the	O
topic	O
.	O
There	O
was	O
a	O
screencast	O
series	O
a	O
year	O
or	O
so	O
ago	O
on	O
Polymorphic	O
Podcast	O
that	O
did	O
a	O
pretty	O
good	O
intro	O
walkthrough	O
of	O
an	O
MVP	O
implementation	O
in	O
ASP.NET	B-API
.	O
Implemented	O
this	O
way	O
,	O
unit	O
tests	O
fall	O
into	O
place	O
much	O
more	O
naturally	O
.	O
http	O
:	O
//polymorphicpodcast.com/shows/mv-patterns/	O
The	O
former	O
will	O
throw	O
an	O
exception	O
if	O
the	O
source	O
type	O
ca	O
n't	O
be	O
cast	O
to	O
the	O
target	O
type	O
.	O
The	O
latter	O
will	O
result	O
in	O
sc2	O
being	O
a	O
null	O
reference	O
,	O
but	O
no	O
exception	O
.	O
[	O
Edit	O
]	O
My	O
original	O
answer	O
is	O
certainly	O
the	O
most	O
pronounced	O
difference	O
,	O
but	O
as	O
Eric	O
Lippert	O
points	O
out	O
,	O
it	O
's	O
not	O
the	O
only	O
one	O
.	O
Other	O
differences	O
include	O
:	O
You	O
ca	O
n't	O
use	O
the	O
'as	O
'	O
operator	O
to	O
cast	O
to	O
a	O
type	O
that	O
does	O
n't	O
accept	O
'null	O
'	O
as	O
a	O
value	O
You	O
ca	O
n't	O
use	O
'as	O
'	O
to	O
convert	O
things	O
,	O
like	O
numbers	O
to	O
a	O
different	O
representation	O
(	O
float	O
to	O
int	O
,	O
for	O
example	O
)	O
.	O
And	O
finally	O
,	O
using	O
'as	O
'	O
vs.	O
the	O
cast	O
operator	O
,	O
you	O
're	O
also	O
saying	O
``	O
I	O
'm	O
not	O
sure	O
if	O
this	O
will	O
succeed	O
.	O
''	O
The	O
parenthetical	O
cast	O
throws	O
an	O
exception	O
if	O
the	O
cast	O
attempt	O
fails	O
.	O
The	O
``	O
as	O
''	O
cast	O
returns	O
null	O
if	O
the	O
cast	O
attempt	O
fails	O
.	O
They	O
'll	O
throw	O
different	O
exceptions	O
.	O
(	O
)	O
:	O
NullReferenceException	B-API
as	O
:	O
InvalidCastException	B-API
Which	O
could	O
help	O
for	O
debugging	O
.	O
The	O
``	O
as	O
''	O
keyword	O
attempts	O
to	O
cast	O
the	O
object	O
and	O
if	O
the	O
cast	O
fails	O
,	O
null	O
is	O
returned	O
silently	O
.	O
The	O
(	O
)	O
cast	O
operator	O
will	O
throw	O
an	O
exception	O
immediately	O
if	O
the	O
cast	O
fails	O
.	O
``	O
Only	O
use	O
the	O
C	O
#	O
``	O
as	O
''	O
keyword	O
where	O
you	O
are	O
expecting	O
the	O
cast	O
to	O
fail	O
in	O
a	O
non-exceptional	O
case	O
.	O
If	O
you	O
are	O
counting	O
on	O
a	O
cast	O
to	O
succeed	O
and	O
are	O
unprepared	O
to	O
receive	O
any	O
object	O
that	O
would	O
fail	O
,	O
you	O
should	O
use	O
the	O
(	O
)	O
cast	O
operator	O
so	O
that	O
an	O
appropriate	O
and	O
helpful	O
exception	O
is	O
thrown	O
.	O
''	O
For	O
code	O
examples	O
and	O
a	O
further	O
explanation	O
:	O
http	O
:	O
//blog.nerdbank.net/2008/06/when-not-to-use-c-keyword.html	O
Also	O
note	O
that	O
you	O
can	O
only	O
use	O
the	O
as	O
keyword	O
with	O
a	O
reference	O
type	O
or	O
a	O
nullable	O
type	O
ie	O
:	O
double	B-API
d	B-API
=	B-API
;	O
int	O
i	B-API
=	B-API
d	B-API
as	B-API
will	O
not	O
compile	O
double	B-API
d	B-API
=	B-API
;	O
int	O
i	B-API
=	B-API
will	O
compile	O
.	O
Here	O
is	O
a	O
good	O
way	O
to	O
remember	O
the	O
process	O
that	O
each	O
of	O
them	O
follow	O
that	O
I	O
use	O
when	O
trying	O
to	O
decide	O
which	O
is	O
better	O
for	O
my	O
circumstance	O
.	O
DateTime	O
i	O
=	O
(	O
DateTime	O
)	O
value	O
;	O
//	O
is	O
like	O
doing	O
DateTime	O
i	O
=	O
value	O
is	O
DateTime	O
?	O
value	O
as	O
DateTime	O
:	O
throw	O
new	O
Exception	O
(	O
...	O
)	O
;	O
and	O
the	O
next	O
should	O
be	O
easy	O
to	O
guess	O
what	O
it	O
does	O
DateTime	O
i	O
=	O
value	O
as	O
DateTime	O
;	O
in	O
the	O
first	O
case	O
if	O
the	O
value	O
can	O
not	O
be	O
cast	O
than	O
an	O
exception	O
is	O
thrown	O
in	O
the	O
second	O
case	O
if	O
the	O
value	O
can	O
not	O
be	O
cast	O
,	O
i	O
is	O
set	O
to	O
null	O
.	O
So	O
in	O
the	O
first	O
case	O
a	O
hard	O
stop	O
is	O
made	O
if	O
the	O
cast	O
fails	O
in	O
the	O
second	O
cast	O
a	O
soft	O
stop	O
is	O
made	O
and	O
you	O
might	O
encounter	O
a	O
NullReferenceException	B-API
later	O
on	O
.	O
It	O
's	O
like	O
the	O
difference	O
between	O
Parse	O
and	O
TryParse	O
.	O
You	O
use	O
TryParse	O
when	O
you	O
expect	O
it	O
might	O
fail	O
,	O
but	O
when	O
you	O
have	O
strong	O
assurance	O
it	O
wo	O
n't	O
fail	O
you	O
use	O
Parse	O
.	O
Looking	O
around	O
,	O
and	O
using	O
some	O
C	O
#	O
3.0	O
features	O
we	O
can	O
do	O
this	O
:	O
foreach	O
(	O
KeyValuePairstring	O
,	O
int	O
item	O
in	O
keywordCounts.OrderBy	B-API
(	I-API
key=	I-API
key.Value	I-API
)	I-API
)	O
{	O
//	O
do	O
something	O
with	O
item.Key	O
and	O
item.Value	O
}	O
This	O
is	O
the	O
cleanest	O
way	O
I	O
've	O
seen	O
and	O
is	O
similar	O
to	O
the	O
Ruby	O
way	O
of	O
handling	O
hashes	O
.	O
On	O
a	O
high	O
level	O
,	O
you	O
have	O
no	O
other	O
choice	O
then	O
to	O
walk	O
through	O
the	O
whole	O
Dictionary	O
and	O
look	O
at	O
each	O
value	O
.	O
Maybe	O
this	O
helps	O
:	O
http	O
:	O
//bytes.com/forum/thread563638.html	O
Copy/Pasting	O
from	O
John	O
Timney	O
:	O
Dictionarystring	O
,	O
string	O
s	O
=	O
new	O
Dictionarystring	O
,	O
string	O
(	O
)	O
;	O
s.Add	O
(	O
``	O
1	O
''	O
,	O
``	O
a	O
Item	O
''	O
)	O
;	O
s.Add	O
(	O
``	O
2	O
''	O
,	O
``	O
c	O
Item	O
''	O
)	O
;	O
s.Add	O
(	O
``	O
3	O
''	O
,	O
``	O
b	O
Item	O
''	O
)	O
;	O
ListKeyValuePairstring	O
,	O
string	O
myList	O
=	O
new	O
ListKeyValuePairstring	O
,	O
string	O
(	O
s	O
)	O
;	O
myList.Sort	O
(	O
delegate	O
(	O
KeyValuePairstring	O
,	O
string	O
firstPair	O
,	O
KeyValuePairstring	O
,	O
string	O
nextPair	O
)	O
{	O
return	O
firstPair.Value.CompareTo	O
(	O
nextPair.Value	O
)	O
;	O
}	O
)	O
;	O
using	O
System.Linq.Enumerable	B-API
;	O
...	O
ListKeyValuePairstring	O
,	O
string	O
myList	O
=	O
aDictionary.ToList	B-API
(	I-API
)	I-API
;	O
myList.Sort	B-API
(	I-API
delegate	I-API
(	O
KeyValuePairstring	I-API
,	I-API
string	I-API
pair1	I-API
,	I-API
KeyValuePairstring	I-API
,	I-API
string	I-API
pair2	I-API
)	I-API
{	O
return	O
pair1.Value.CompareTo	B-API
(	I-API
pair2.Value	I-API
)	I-API
;	O
}	O
)	O
;	O
Since	O
you	O
're	O
targeting	O
.net	O
2.0	O
or	O
above	O
,	O
you	O
can	O
simplify	O
this	O
into	O
lambda	O
syntax	O
--	O
it	O
's	O
equivalent	O
but	O
shorter	O
.	O
If	O
you	O
're	O
targeting	O
.net	O
2.0	O
you	O
can	O
only	O
use	O
this	O
syntax	O
if	O
you	O
're	O
using	O
the	O
compiler	O
from	O
vs2008	O
(	O
or	O
above	O
)	O
.	O
var	O
myList	O
=	O
aDictionary.ToList	B-API
(	I-API
)	I-API
;	O
myList.Sort	B-API
(	I-API
(	I-API
pair1	I-API
,	I-API
pair2	I-API
)	I-API
=	O
pair1.Value.CompareTo	B-API
(	I-API
pair2.Value	I-API
)	I-API
)	O
;	O
Why	O
not	O
use	O
LINQ	O
:	O
Dictionarystring	O
,	O
int	O
myDict	O
=	O
new	O
Dictionarystring	O
,	O
int	O
(	O
)	O
;	O
myDict.Add	B-API
(	I-API
``	I-API
one	I-API
''	I-API
,	I-API
1	I-API
)	I-API
;	O
myDict.Add	B-API
(	I-API
``	I-API
four	I-API
''	I-API
,	I-API
4	I-API
)	I-API
;	O
myDict.Add	B-API
(	I-API
``	I-API
two	I-API
''	I-API
,	I-API
2	I-API
)	I-API
;	O
myDict.Add	B-API
(	I-API
``	I-API
three	I-API
''	I-API
,	I-API
3	I-API
)	I-API
;	O
var	O
sortedDict	O
=	O
from	O
entry	O
in	O
myDict	O
orderby	O
entry.Value	B-API
ascending	O
select	O
entry	O
;	O
This	O
would	O
also	O
allow	O
for	O
great	O
flexibility	O
in	O
that	O
you	O
can	O
select	O
the	O
top	O
10	O
,	O
20	O
10	O
%	O
etc	O
.	O
Or	O
if	O
you	O
are	O
using	O
your	O
word	O
frequency	O
index	O
for	O
,	O
you	O
could	O
also	O
include	O
clause	O
as	O
well	O
.	O
Not	O
all	O
languages	O
have	O
the	O
concept	O
of	O
unsigned	O
ints	O
.	O
For	O
example	O
VB	O
6	O
had	O
no	O
concept	O
of	O
unsigned	O
ints	O
which	O
I	O
suspect	O
drove	O
the	O
decision	O
of	O
the	O
designers	O
of	O
VB7/7.1	O
not	O
to	O
implement	O
as	O
well	O
(	O
it	O
's	O
implemented	O
now	O
in	O
VB8	O
)	O
.	O
To	O
quote	O
:	O
http	O
:	O
//msdn.microsoft.com/en-us/library/12a7a7h3.aspx	O
The	O
CLS	O
was	O
designed	O
to	O
be	O
large	O
enough	O
to	O
include	O
the	O
language	O
constructs	O
that	O
are	O
commonly	O
needed	O
by	O
developers	O
,	O
yet	O
small	O
enough	O
that	O
most	O
languages	O
are	O
able	O
to	O
support	O
it	O
.	O
In	O
addition	O
,	O
any	O
language	O
construct	O
that	O
makes	O
it	O
impossible	O
to	O
rapidly	O
verify	O
the	O
type	O
safety	O
of	O
code	O
was	O
excluded	O
from	O
the	O
CLS	O
so	O
that	O
all	O
CLS-compliant	O
languages	O
can	O
produce	O
verifiable	O
code	O
if	O
they	O
choose	O
to	O
do	O
so	O
.	O
Update	O
:	O
I	O
did	O
wonder	O
about	O
this	O
some	O
years	O
back	O
,	O
and	O
whilst	O
I	O
ca	O
n't	O
see	O
why	O
a	O
UInt	O
would	O
n't	O
be	O
type	O
safety	O
verifiable	O
,	O
I	O
guess	O
the	O
CLS	O
guys	O
had	O
to	O
have	O
a	O
cut	O
off	O
point	O
somewhere	O
as	O
to	O
what	O
would	O
be	O
the	O
baseline	O
minimum	O
number	O
of	O
value	O
types	O
supported	O
.	O
Also	O
when	O
you	O
think	O
about	O
the	O
longer	O
term	O
where	O
more	O
and	O
more	O
languages	O
are	O
being	O
ported	O
to	O
the	O
CLR	O
why	O
force	O
them	O
to	O
implement	O
unsigned	O
ints	O
to	O
gain	O
CLS	O
compliance	O
if	O
there	O
is	O
absolutely	O
no	O
concept	O
,	O
ever	O
?	O
Unsigned	O
integers	O
are	O
not	O
CLS	O
compliant	O
because	O
they	O
're	O
not	O
interoperable	O
between	O
certain	O
languages	O
.	O
An	O
explicit	O
cast	O
to	O
double	O
is	O
n't	O
necessary	O
.	O
double	O
trans	O
=	O
(	O
double	O
)	O
trackBar1.Value	B-API
/	O
;	O
Identifying	O
the	O
constant	O
as	O
5000.0	O
(	O
or	O
as	O
)	O
is	O
sufficient	O
:	O
double	O
trans	O
=	O
trackBar1.Value	B-API
/	O
5000.0	O
;	O
double	O
trans	O
=	O
trackBar1.Value	B-API
/	O
5000d	O
;	O
It	O
sounds	O
like	O
is	O
a	O
double	O
value	O
,	O
and	O
the	O
compiler	O
does	O
n't	O
like	O
you	O
trying	O
to	O
cram	O
a	O
decimal	O
value	O
into	O
it	O
.	O
A	O
more	O
generic	O
answer	O
for	O
the	O
generic	O
question	O
``	O
Decimal	O
vs	O
Double	O
?	O
``	O
:	O
Decimal	O
for	O
monetary	O
calculations	O
to	O
preserve	O
the	O
precision	O
,	O
Double	O
for	O
scientific	O
calculations	O
that	O
do	O
not	O
get	O
affected	O
by	O
small	O
differences	O
.	O
Since	O
Double	O
is	O
a	O
type	O
which	O
is	O
native	O
to	O
the	O
CPU	O
(	O
internal	O
representation	O
is	O
stored	O
in	O
base	O
2	O
)	O
,	O
calculations	O
made	O
with	O
Double	O
perform	O
better	O
then	O
Decimal	O
(	O
which	O
is	O
represented	O
in	O
base	O
10	O
internally	O
)	O
.	O
In	O
my	O
opinion	O
,	O
it	O
is	O
desirable	O
to	O
be	O
as	O
explicit	O
as	O
possible	O
.	O
This	O
adds	O
clarity	O
to	O
the	O
code	O
and	O
aids	O
your	O
fellow	O
programmers	O
who	O
may	O
eventually	O
read	O
it	O
.	O
In	O
addition	O
to	O
(	O
or	O
instead	O
of	O
)	O
appending	O
a	O
to	O
the	O
number	O
,	O
you	O
can	O
use	O
decimal.ToDouble	B-API
(	I-API
)	I-API
.	O
Here	O
are	O
some	O
examples	O
:	O
//	O
Example	O
1	O
double	O
transperancy	O
=	O
trackBar1.Value/5000	B-API
;	O
this.Opacity	B-API
=	O
decimal.ToDouble	B-API
(	I-API
transperancy	I-API
)	I-API
;	O
//	O
Example	O
2	O
-	O
with	O
inline	O
temp	O
this.Opacity	O
=	O
decimal.ToDouble	B-API
(	I-API
trackBar1.Value/5000	I-API
)	I-API
;	O
Very	O
roughly	O
and	O
from	O
memory	O
since	O
I	O
do	O
n't	O
have	O
code	O
on	O
this	O
laptop	O
:	O
using	O
(	O
OleDBConnection	B-API
conn	O
=	O
new	O
OleDbConnection	B-API
(	O
)	O
)	O
{	O
conn.ConnectionString	B-API
=	O
``	O
Whatever	O
connection	O
string	O
''	O
;	O
using	O
(	O
OleDbCommand	B-API
cmd	O
=	O
new	O
OleDbCommand	B-API
(	I-API
)	I-API
)	O
{	O
cmd.Connection	B-API
=	O
conn	O
;	O
cmd.CommandText	B-API
=	O
``	O
Select	O
*	O
from	O
CoolTable	O
''	O
;	O
using	O
(	O
OleDbDataReader	B-API
dr	O
=	O
cmd.ExecuteReader	B-API
(	I-API
)	I-API
)	O
{	O
while	O
(	O
dr.Read	B-API
(	I-API
)	I-API
)	O
{	O
//	O
do	O
something	O
like	O
Console.WriteLine	B-API
(	I-API
dr	I-API
[	I-API
``	I-API
column	I-API
name	I-API
''	I-API
]	I-API
as	I-API
String	I-API
)	I-API
;	O
}	O
}	O
}	O
}	O
@	O
Goyuix	O
--	O
that	O
's	O
excellent	O
for	O
something	O
written	O
from	O
memory	O
.	O
tested	O
it	O
here	O
--	O
found	O
the	O
connection	O
was	O
n't	O
opened	O
.	O
Otherwise	O
very	O
nice	O
.	O
using	O
System.Data.OleDb	B-API
;	O
...	O
using	O
(	O
OleDbConnection	B-API
conn	O
=	O
new	O
OleDbConnection	B-API
(	O
)	O
)	O
{	O
conn.ConnectionString	B-API
=	O
``	O
Provider=sqloledb	O
;	O
Data	O
Source=yourServername\\yourInstance	O
;	O
Initial	O
Catalog=databaseName	O
;	O
Integrated	O
Security=SSPI	O
;	O
''	O
;	O
using	O
(	O
OleDbCommand	B-API
cmd	O
=	O
new	O
OleDbCommand	B-API
(	I-API
)	I-API
)	O
{	O
conn.Open	B-API
(	I-API
)	I-API
;	O
cmd.Connection	B-API
=	O
conn	O
;	O
cmd.CommandText	B-API
=	O
``	O
Select	O
*	O
from	O
yourTable	O
''	O
;	O
using	O
(	O
OleDbDataReader	B-API
dr	O
=	O
cmd.ExecuteReader	B-API
(	I-API
)	I-API
)	O
{	O
while	O
(	O
dr.Read	B-API
(	I-API
)	I-API
)	O
{	O
Console.WriteLine	B-API
(	I-API
dr	I-API
[	I-API
``	I-API
columnName	I-API
''	I-API
]	I-API
)	I-API
;	O
}	O
}	O
}	O
}	O
That	O
's	O
definitely	O
a	O
good	O
way	O
to	O
do	O
it	O
.	O
But	O
you	O
if	O
you	O
happen	O
to	O
be	O
using	O
a	O
database	O
that	O
supports	O
LINQ	O
to	O
SQL	O
,	O
it	O
can	O
be	O
a	O
lot	O
more	O
fun	O
.	O
It	O
can	O
look	O
something	O
like	O
this	O
:	O
MyDB	O
db	O
=	O
new	O
;	O
var	O
q	O
=	O
from	O
db.MyTable	O
select	O
c	O
;	O
foreach	O
(	O
var	O
c	O
in	O
q	O
)	O
(	O
``	O
Data	O
Source=	O
...	O
''	O
)	O
(	O
c.MyField.ToString	O
(	O
)	O
This	O
is	O
an	O
alternative	O
way	O
(	O
DataReader	O
is	O
faster	O
than	O
this	O
one	O
)	O
:	O
string	O
s	O
=	O
``	O
;	O
SqlConnection	B-API
conn	O
=	O
new	O
;	O
SqlDataAdapter	B-API
da	O
=	O
new	O
DataTable	O
dt	O
=	O
new	O
;	O
for	O
(	O
int	O
i	O
=	O
0	O
;	O
i	O
dt.Rows.Count	B-API
;	O
i++	O
)	O
{	O
s	O
+=	O
+	O
``	O
--	O
``	O
+	O
+	O
(	O
``	O
Server=192.168.1.1	O
;	O
Database=master	O
;	O
Connect	O
Timeout=30	O
;	O
User	O
ID=foobar	O
;	O
Password=raboof	O
;	O
''	O
)	O
(	O
``	O
SELECT	O
TOP	O
5	O
name	O
,	O
dbid	O
FROM	O
sysdatabases	O
''	O
,	O
conn	O
)	O
DataTable	O
(	O
)	O
;	O
da.Fill	B-API
(	I-API
dt	I-API
)	I-API
dt.Rows	O
[	O
i	O
]	O
[	O
``	O
name	O
''	O
]	O
.ToString	B-API
(	I-API
)	I-API
dt.Rows	O
[	O
i	O
]	O
[	O
``	O
dbid	O
''	O
]	O
.ToString	B-API
(	I-API
)	I-API
``	O
\n	O
''	O
;	O
}	O
MessageBox.Show	B-API
(	I-API
s	I-API
)	I-API
I	O
have	O
n't	O
done	O
SWING	O
development	O
since	O
my	O
early	O
CS	O
classes	O
but	O
if	O
it	O
was	O
n't	O
built	O
in	O
you	O
could	O
just	O
inherit	O
javax.swing.AbstractButton	B-API
and	O
create	O
your	O
own	O
.	O
Should	O
be	O
pretty	O
simple	O
to	O
wire	O
something	O
together	O
with	O
their	O
existing	O
framework	O
.	O
You	O
could	O
always	O
try	O
the	O
Synth	O
look	O
feel	O
.	O
You	O
provide	O
an	O
xml	O
file	O
that	O
acts	O
as	O
a	O
sort	O
of	O
stylesheet	O
,	O
along	O
with	O
any	O
images	O
you	O
want	O
to	O
use	O
.	O
The	O
code	O
might	O
look	O
like	O
this	O
:	O
try	O
{	O
SynthLookAndFeel	O
synth	O
=	O
new	O
SynthLookAndFeel	O
(	O
)	O
;	O
Class	O
aClass	O
=	O
MainFrame.class	B-API
;	O
InputStream	O
stream	O
=	O
aClass.getResourceAsStream	B-API
(	I-API
``	I-API
\\default.xml	I-API
''	I-API
)	I-API
;	O
if	O
(	O
stream	O
==	O
null	O
)	O
{	O
System.err.println	B-API
(	I-API
``	I-API
Missing	I-API
configuration	I-API
file	I-API
''	I-API
)	I-API
;	O
System.exit	B-API
(	I-API
-1	I-API
)	I-API
;	O
}	O
synth.load	B-API
(	I-API
stream	I-API
,	I-API
aClass	I-API
)	I-API
;	O
UIManager.setLookAndFeel	B-API
(	I-API
synth	I-API
)	I-API
;	O
}	O
catch	B-API
(	I-API
ParseException	I-API
pe	I-API
)	I-API
{	O
System.err.println	B-API
(	I-API
``	I-API
Bad	I-API
configuration	I-API
file	I-API
''	I-API
)	I-API
;	O
pe.printStackTrace	B-API
(	I-API
)	I-API
;	O
System.exit	B-API
(	I-API
-2	I-API
)	I-API
;	O
}	O
catch	B-API
(	I-API
UnsupportedLookAndFeelException	I-API
ulfe	I-API
)	I-API
{	O
System.err.println	B-API
(	I-API
``	I-API
Old	I-API
JRE	I-API
in	I-API
use	I-API
.	I-API
Get	I-API
a	I-API
new	I-API
one	I-API
''	I-API
)	I-API
;	O
System.exit	B-API
(	I-API
-3	I-API
)	I-API
;	O
}	O
From	O
there	O
,	O
go	O
on	O
and	O
add	O
your	O
JButton	O
like	O
you	O
normally	O
would	O
.	O
The	O
only	O
change	O
is	O
that	O
you	O
use	O
the	O
setName	B-API
(	I-API
string	I-API
)	I-API
method	O
to	O
identify	O
what	O
the	O
button	O
should	O
map	O
to	O
in	O
the	O
xml	O
file	O
.	O
The	O
xml	O
file	O
might	O
look	O
like	O
this	O
:	O
synth	O
style	O
id=	O
''	O
button	O
''	O
font	O
name=	O
''	O
DIALOG	O
''	O
size=	O
''	O
12	O
''	O
style=	O
''	O
BOLD	O
''	O
/	O
state	O
value=	O
''	O
MOUSE_OVER	O
''	O
imagePainter	O
method=	O
''	O
buttonBackground	O
''	O
path=	O
''	O
dirt.png	O
''	O
sourceInsets=	O
''	O
2	O
2	O
2	O
2	O
''	O
/	O
insets	O
top=	O
''	O
2	O
''	O
botton=	O
''	O
2	O
''	O
right=	O
''	O
2	O
''	O
left=	O
''	O
2	O
''	O
/	O
/state	O
state	O
value=	O
''	O
ENABLED	O
''	O
imagePainter	O
method=	O
''	O
buttonBackground	O
''	O
path=	O
''	O
dirt.png	O
''	O
sourceInsets=	O
''	O
2	O
2	O
2	O
2	O
''	O
/	O
insets	O
top=	O
''	O
2	O
''	O
botton=	O
''	O
2	O
''	O
right=	O
''	O
2	O
''	O
left=	O
''	O
2	O
''	O
/	O
/state	O
/style	O
bind	O
style=	O
''	O
button	O
''	O
type=	O
''	O
name	O
''	O
key=	O
''	O
dirt	O
''	O
/	O
/synth	O
The	O
bind	O
element	O
there	O
specifies	O
what	O
to	O
map	O
to	O
(	O
in	O
this	O
example	O
,	O
it	O
will	O
apply	O
that	O
styling	O
to	O
any	O
buttons	O
whose	O
name	O
property	O
has	O
been	O
set	O
to	O
``	O
dirt	O
''	O
)	O
.	O
And	O
a	O
couple	O
of	O
useful	O
links	O
:	O
http	O
:	O
//javadesktop.org/articles/synth/	O
http	O
:	O
//docs.oracle.com/javase/tutorial/uiswing/lookandfeel/synth.html	O
Yes	O
,	O
this	O
is	O
possible	O
.	O
One	O
of	O
the	O
main	O
pros	O
for	O
using	O
Swing	O
is	O
the	O
ease	O
with	O
which	O
the	O
abstract	O
controls	O
can	O
be	O
created	O
and	O
manipulates	O
.	O
Here	O
is	O
a	O
quick	O
and	O
dirty	O
way	O
to	O
extend	O
the	O
existing	O
JButton	O
class	O
to	O
draw	O
a	O
circle	O
to	O
the	O
right	O
of	O
the	O
text	O
.	O
package	O
test	O
;	O
import	O
java.awt.Color	B-API
;	O
import	O
java.awt.Container	B-API
;	O
import	O
java.awt.Dimension	B-API
;	O
import	O
java.awt.FlowLayout	B-API
;	O
import	O
java.awt.Graphics	B-API
;	O
import	O
javax.swing.JButton	B-API
;	O
import	O
javax.swing.JFrame	B-API
;	O
public	O
class	O
MyButton	O
extends	O
JButton	O
{	O
private	O
static	O
final	O
long	O
serialVersionUID	O
=	O
1L	O
;	O
private	O
Color	O
circleColor	O
=	O
Color.BLACK	B-API
;	O
public	O
MyButton	O
(	O
String	O
label	O
)	O
{	O
super	O
(	O
label	O
)	O
;	O
}	O
@	O
Override	O
protected	O
void	O
paintComponent	O
(	O
Graphics	O
g	O
)	O
{	O
super.paintComponent	B-API
(	I-API
g	I-API
)	I-API
;	O
Dimension	O
originalSize	O
=	O
super.getPreferredSize	B-API
(	I-API
)	I-API
;	O
int	O
gap	O
=	O
(	O
int	O
)	O
(	O
originalSize.height	B-API
*	O
0.2	O
)	O
;	O
int	O
x	O
=	O
originalSize.width	B-API
+	O
gap	O
;	O
int	O
y	O
=	O
gap	O
;	O
int	O
diameter	O
=	O
originalSize.height	B-API
-	O
(	O
gap	O
*	O
2	O
)	O
;	O
g.setColor	B-API
(	I-API
circleColor	I-API
)	I-API
;	O
g.fillOval	B-API
(	I-API
x	I-API
,	I-API
y	I-API
,	I-API
diameter	I-API
,	I-API
diameter	I-API
)	I-API
;	O
}	O
@	O
Override	O
public	O
Dimension	O
getPreferredSize	O
(	O
)	O
{	O
Dimension	O
size	O
=	O
super.getPreferredSize	B-API
(	I-API
)	I-API
;	O
size.width	O
+=	O
size.height	O
;	O
return	O
size	O
;	O
}	O
/*Test	O
the	O
button*/	O
public	O
static	O
void	O
main	O
(	O
String	O
[	O
]	O
args	O
)	O
{	O
MyButton	O
button	O
=	O
new	O
MyButton	O
(	O
``	O
Hello	O
,	O
World	O
!	O
``	O
)	O
;	O
JFrame	O
frame	O
=	O
new	O
JFrame	O
(	O
)	O
;	O
frame.setDefaultCloseOperation	B-API
(	I-API
JFrame.EXIT_ON_CLOSE	I-API
)	I-API
;	O
frame.setSize	B-API
(	I-API
400	I-API
,	I-API
400	I-API
)	I-API
;	O
Container	O
contentPane	O
=	O
frame.getContentPane	B-API
(	I-API
)	I-API
;	O
contentPane.setLayout	B-API
(	I-API
new	I-API
FlowLayout	I-API
(	I-API
)	I-API
)	I-API
;	O
contentPane.add	B-API
(	I-API
button	I-API
)	I-API
;	O
frame.setVisible	B-API
(	I-API
true	I-API
)	I-API
;	O
}	O
}	O
Note	O
that	O
by	O
overriding	O
paintComponent	O
that	O
the	O
contents	O
of	O
the	O
button	O
can	O
be	O
changed	O
,	O
but	O
that	O
the	O
border	O
is	O
painted	O
by	O
the	O
paintBorder	O
method	O
.	O
The	O
getPreferredSize	O
method	O
also	O
needs	O
to	O
be	O
managed	O
in	O
order	O
to	O
dynamically	O
support	O
changes	O
to	O
the	O
content	O
.	O
Care	O
needs	O
to	O
be	O
taken	O
when	O
measuring	O
font	O
metrics	O
and	O
image	O
dimensions	O
.	O
For	O
creating	O
a	O
control	O
that	O
you	O
can	O
rely	O
on	O
,	O
the	O
above	O
code	O
is	O
not	O
the	O
correct	O
approach	O
.	O
Dimensions	O
and	O
colours	O
are	O
dynamic	O
in	O
Swing	O
and	O
are	O
dependent	O
on	O
the	O
look	O
and	O
feel	O
being	O
used	O
.	O
Even	O
the	O
default	O
Metal	O
look	O
has	O
changed	O
across	O
JRE	O
versions	O
.	O
It	O
would	O
be	O
better	O
to	O
implement	O
AbstractButton	O
and	O
conform	O
to	O
the	O
guidelines	O
set	O
out	O
by	O
the	O
Swing	O
API	O
.	O
A	O
good	O
starting	O
point	O
is	O
to	O
look	O
at	O
the	O
javax.swing.LookAndFeel	B-API
and	O
javax.swing.UIManager	B-API
classes	O
.	O
http	O
:	O
//docs.oracle.com/javase/8/docs/api/javax/swing/LookAndFeel.html	O
http	O
:	O
//docs.oracle.com/javase/8/docs/api/javax/swing/UIManager.html	O
Understanding	O
the	O
anatomy	O
of	O
LookAndFeel	O
is	O
useful	O
for	O
writing	O
controls	O
:	O
Creating	O
a	O
Custom	O
Look	O
and	O
Feel	O
When	O
I	O
was	O
first	O
learning	O
Java	O
we	O
had	O
to	O
make	O
Yahtzee	O
and	O
I	O
thought	O
it	O
would	O
be	O
cool	O
to	O
create	O
custom	O
Swing	O
components	O
and	O
containers	O
instead	O
of	O
just	O
drawing	O
everything	O
on	O
one	O
JPanel	O
.	O
The	O
benefit	O
of	O
extending	O
Swing	O
components	O
,	O
of	O
course	O
,	O
is	O
to	O
have	O
the	O
ability	O
to	O
add	O
support	O
for	O
keyboard	O
shortcuts	O
and	O
other	O
accessibility	O
features	O
that	O
you	O
ca	O
n't	O
do	O
just	O
by	O
having	O
a	O
paint	O
(	O
)	O
method	O
print	O
a	O
pretty	O
picture	O
.	O
It	O
may	O
not	O
be	O
done	O
the	O
best	O
way	O
however	O
,	O
but	O
it	O
may	O
be	O
a	O
good	O
starting	O
point	O
for	O
you	O
.	O
Edit	O
8/6	O
-	O
If	O
it	O
was	O
n't	O
apparent	O
from	O
the	O
images	O
,	O
each	O
Die	O
is	O
a	O
button	O
you	O
can	O
click	O
.	O
This	O
will	O
move	O
it	O
to	O
the	O
DiceContainer	O
below	O
.	O
Looking	O
at	O
the	O
source	O
code	O
you	O
can	O
see	O
that	O
each	O
Die	O
button	O
is	O
drawn	O
dynamically	O
,	O
based	O
on	O
its	O
value	O
.	O
Here	O
are	O
the	O
basic	O
steps	O
:	O
Create	O
a	O
class	O
that	O
extends	O
JComponent	O
Call	O
parent	O
constructor	O
super	O
(	O
)	O
in	O
your	O
constructors	O
Make	O
sure	O
you	O
class	O
implements	O
MouseListener	O
Put	O
this	O
in	O
the	O
constructor	O
:	O
enableInputMethods	B-API
(	I-API
true	I-API
)	I-API
;	O
addMouseListener	B-API
(	I-API
this	I-API
)	I-API
;	O
Override	O
these	O
methods	O
:	O
public	O
Dimension	O
getPreferredSize	B-API
(	I-API
)	I-API
public	O
Dimension	O
getMinimumSize	B-API
(	I-API
)	I-API
public	O
Dimension	O
getMaximumSize	B-API
(	I-API
)	I-API
Override	O
this	O
method	O
:	O
public	O
void	O
paintComponent	B-API
(	I-API
Graphics	I-API
g	I-API
)	I-API
The	O
amount	O
of	O
space	O
you	O
have	O
to	O
work	O
with	O
when	O
drawing	O
your	O
button	O
is	O
defined	O
by	O
getPreferredSize	B-API
(	I-API
)	I-API
,	O
assuming	O
getMinimumSize	B-API
(	I-API
)	I-API
and	O
getMaximumSize	B-API
(	I-API
)	I-API
return	O
the	O
same	O
value	O
.	O
I	O
have	O
n't	O
experimented	O
too	O
much	O
with	O
this	O
but	O
,	O
depending	O
on	O
the	O
layout	O
you	O
use	O
for	O
your	O
GUI	O
your	O
button	O
could	O
look	O
completely	O
different	O
.	O
And	O
finally	O
,	O
the	O
source	O
code	O
.	O
In	O
case	O
I	O
missed	O
anything	O
.	O
Does	O
doubling	O
the	O
\	O
work	O
?	O
insert	O
into	O
EscapeTest	O
(	O
text	O
)	O
values	O
(	O
'This	O
will	O
be	O
inserted	O
\\n	O
This	O
will	O
not	O
Partially	O
.	O
The	O
text	O
is	O
inserted	O
,	O
but	O
the	O
warning	O
is	O
still	O
generated	O
.	O
I	O
found	O
a	O
discussion	O
that	O
indicated	O
the	O
text	O
needed	O
to	O
be	O
preceded	O
with	O
'E	O
'	O
,	O
as	O
such	O
:	O
insert	O
into	O
EscapeTest	O
(	O
text	O
)	O
values	O
(	O
E'This	O
is	O
the	O
first	O
part	O
\n	O
And	O
this	O
is	O
the	O
second	O
'	O
)	O
;	O
This	O
suppressed	O
the	O
warning	O
,	O
but	O
the	O
text	O
was	O
still	O
not	O
being	O
returned	O
correctly	O
.	O
When	O
I	O
added	O
the	O
additional	O
slash	O
as	O
Michael	O
suggested	O
,	O
it	O
worked	O
.	O
As	O
such	O
:	O
insert	O
into	O
EscapeTest	O
(	O
text	O
)	O
values	O
(	O
E'This	O
is	O
the	O
first	O
part	O
\\n	O
And	O
this	O
is	O
the	O
second	O
'	O
)	O
;	O
Cool	O
.	O
I	O
also	O
found	O
the	O
documentation	O
regarding	O
the	O
E	O
:	O
http	O
:	O
//www.postgresql.org/docs/8.3/interactive/sql-syntax-lexical.html	O
#	O
SQL-SYNTAX-STRINGS	O
PostgreSQL	O
also	O
accepts	O
``	O
escape	O
''	O
string	O
constants	O
,	O
which	O
are	O
an	O
extension	O
to	O
the	O
SQL	O
standard	O
.	O
An	O
escape	O
string	O
constant	O
is	O
specified	O
by	O
writing	O
the	O
letter	O
E	O
(	O
upper	O
or	O
lower	O
case	O
)	O
just	O
before	O
the	O
opening	O
single	O
quote	O
,	O
e.g	O
.	O
E'foo	O
'	O
.	O
(	O
When	O
continuing	O
an	O
escape	O
string	O
constant	O
across	O
lines	O
,	O
write	O
E	O
only	O
before	O
the	O
first	O
opening	O
quote	O
.	O
)	O
Within	O
an	O
escape	O
string	O
,	O
a	O
backslash	O
character	O
(	O
\	O
)	O
begins	O
a	O
C-like	O
backslash	O
escape	O
sequence	O
,	O
in	O
which	O
the	O
combination	O
of	O
backslash	O
and	O
following	O
character	O
(	O
s	O
)	O
represents	O
a	O
special	O
byte	O
value	O
.	O
\b	O
is	O
a	O
backspace	O
,	O
\f	O
is	O
a	O
form	O
feed	O
,	O
\n	O
is	O
a	O
newline	O
,	O
\r	O
is	O
a	O
carriage	O
return	O
,	O
\t	O
is	O
a	O
tab	O
.	O
Also	O
supported	O
are	O
\digits	O
,	O
where	O
digits	O
represents	O
an	O
octal	O
byte	O
value	O
,	O
and	O
\xhexdigits	O
,	O
where	O
hexdigits	O
represents	O
a	O
hexadecimal	O
byte	O
value	O
.	O
(	O
It	O
is	O
your	O
responsibility	O
that	O
the	O
byte	O
sequences	O
you	O
create	O
are	O
valid	O
characters	O
in	O
the	O
server	O
character	O
set	O
encoding	O
.	O
)	O
Any	O
other	O
character	O
following	O
a	O
backslash	O
is	O
taken	O
literally	O
.	O
Thus	O
,	O
to	O
include	O
a	O
backslash	O
character	O
,	O
write	O
two	O
backslashes	O
(	O
\\	O
)	O
.	O
Also	O
,	O
a	O
single	O
quote	O
can	O
be	O
included	O
in	O
an	O
escape	O
string	O
by	O
writing	O
\	O
'	O
,	O
in	O
addition	O
to	O
the	O
normal	O
way	O
of	O
''	O
.	O
Without	O
trying	O
to	O
sound	O
too	O
vague	O
but	O
I	O
think	O
Windows	O
Network	O
Load	O
Balancing	O
(	O
NLB	O
)	O
should	O
handle	O
this	O
for	O
you	O
.	O
Off	O
the	O
top	O
of	O
my	O
head	O
,	O
I	O
would	O
think	O
that	O
you	O
'd	O
need	O
to	O
maintain	O
some	O
form	O
of	O
a	O
data	O
structure	O
in	O
the	O
JavaScript	O
that	O
reflects	O
the	O
items	O
in	O
the	O
current	O
dropdown	O
list	O
.	O
You	O
'd	O
also	O
need	O
a	O
reference	O
to	O
the	O
currently	O
active/selected	O
item	O
.	O
Each	O
time	O
or	O
is	O
fired	O
,	O
update	O
the	O
reference	O
to	O
the	O
active/selected	O
item	O
in	O
the	O
data	O
structure	O
.	O
To	O
provide	O
highlighting	O
information	O
on	O
the	O
UI	O
,	O
add	O
or	O
remove	O
a	O
class	O
name	O
that	O
is	O
styled	O
via	O
CSS	O
based	O
on	O
if	O
the	O
item	O
is	O
active/selected	O
or	O
not	O
.	O
Also	O
,	O
this	O
is	O
n't	O
a	O
biggy	O
,	O
but	O
is	O
not	O
really	O
standard	O
(	O
look	O
into	O
createTextNode	B-API
(	I-API
)	I-API
,	O
createElement	B-API
(	I-API
)	I-API
,	O
and	O
appendChild	B-API
(	I-API
)	I-API
for	O
standard	O
ways	O
of	O
creating	O
data	O
)	O
.	O
You	O
may	O
also	O
want	O
to	O
see	O
about	O
attaching	O
event	O
handlers	O
in	O
the	O
JavaScript	O
rather	O
than	O
doing	O
so	O
in	O
an	O
HTML	O
attribute	O
.	O
A	O
few	O
things	O
:	O
You	O
are	O
creating	O
(	O
and	O
not	O
using	O
)	O
an	O
unnecessary	O
toplevel	O
,	O
named	O
window	O
.	O
You	O
can	O
just	O
delete	O
these	O
lines	O
:	O
window	O
=	O
,	O
``	O
delete_event	O
''	O
,	O
,	O
,	O
``	O
destroy	O
''	O
,	O
,	O
gtk_window_new	B-API
(	I-API
GTK_WINDOW_TOPLEVEL	I-API
)	I-API
;	O
g_signal_connect	B-API
(	I-API
G_OBJECT	B-API
(	I-API
window	I-API
)	I-API
G_CALLBACK	B-API
(	I-API
delete_event	I-API
)	I-API
NULL	I-API
)	I-API
;	O
g_signal_connect	B-API
(	I-API
G_OBJECT	I-API
(	I-API
window	I-API
)	I-API
G_CALLBACK	B-API
(	I-API
destroy	I-API
)	I-API
Also	O
,	O
the	O
flow	O
does	O
n't	O
seem	O
quite	O
right	O
.	O
gtk_main	B-API
(	I-API
)	I-API
starts	O
the	O
GTK	O
main	O
loop	O
,	O
which	O
blocks	O
until	O
something	O
exits	O
it	O
.	O
gtk_dialog_run	B-API
(	I-API
)	I-API
also	O
starts	O
a	O
main	O
loop	O
,	O
but	O
it	O
exits	O
as	O
soon	O
as	O
one	O
of	O
the	O
buttons	O
is	O
clicked	O
.	O
I	O
think	O
it	O
might	O
be	O
enough	O
for	O
you	O
to	O
remove	O
the	O
gtk_init_add	B-API
(	I-API
)	I-API
and	O
gtk_main	B-API
(	I-API
)	I-API
calls	O
,	O
and	O
simply	O
deal	O
with	O
the	O
return	O
value	O
.	O
Also	O
the	O
gtk_widget_destroy	B-API
(	I-API
)	I-API
call	O
is	O
unnecessary	O
,	O
as	O
the	O
dialog	O
window	O
is	O
automatically	O
destroyed	O
when	O
gtk_dialog_run	B-API
(	I-API
)	I-API
returns	O
.	O
Hmm	O
,	O
ok	O
.	O
I	O
'd	O
suggest	O
code	O
like	O
this	O
,	O
then	O
:	O
typedef	O
struct	O
{	O
int	O
type	O
;	O
int	O
result	O
;	O
}	O
DialogData	O
;	O
static	O
{	O
DialogData	O
*dialog_data	O
=	O
user_data	O
;	O
GtkWidget	O
*dialog	O
;	O
if	O
(	O
dialog_data-type	O
MB_YESNO	O
)	O
dialog	O
=	O
;	O
else	O
dialog	O
=	O
;	O
//	O
Set	O
title	O
,	O
etc	O
.	O
dialog_data-result	O
=	O
;	O
;	O
//	O
Quits	O
the	O
main	O
loop	O
run	O
in	O
return	O
FALSE	O
;	O
}	O
int	O
{	O
DialogData	O
dialog_data	O
;	O
dialog_data.type	O
=	O
type	O
;	O
;	O
;	O
//	O
Do	O
stuff	O
based	O
on	O
(	O
gpointer	O
user_data	O
)	O
gtk_message_dialog_new	B-API
(	I-API
...	I-API
)	I-API
gtk_message_dialog_new	B-API
(	I-API
...	I-API
)	I-API
gtk_dialog_run	B-API
(	I-API
...	I-API
)	I-API
gtk_main_quit	B-API
(	I-API
)	I-API
MessageBox	B-API
(	I-API
)	I-API
MessageBox	B-API
(	I-API
...	I-API
)	I-API
(	O
display_dialog	O
,	O
dialog_data	O
)	O
gtk_main	B-API
(	I-API
)	I-API
The	O
struct	O
is	O
because	O
you	O
need	O
to	O
pass	O
around	O
a	O
couple	O
pieces	O
of	O
data	O
.	O
The	O
gtk_idle_add	B-API
(	I-API
)	I-API
call	O
adds	O
a	O
method	O
to	O
be	O
run	O
when	O
the	O
main	O
loop	O
is	O
running	O
and	O
idle	O
,	O
and	O
the	O
return	O
value	O
from	O
the	O
display_dialog	B-API
(	I-API
)	I-API
call	O
means	O
that	O
it	O
's	O
only	O
run	O
once	O
.	O
After	O
we	O
get	O
the	O
result	O
from	O
the	O
dialog	O
,	O
we	O
quit	O
the	O
main	O
loop	O
.	O
That	O
'll	O
cause	O
the	O
gtk_main	B-API
(	I-API
)	I-API
in	O
your	O
main	O
MessageBox	B-API
(	I-API
)	I-API
method	O
to	O
return	O
,	O
and	O
you	O
'll	O
be	O
able	O
to	O
access	O
the	O
result	O
from	O
there	O
.	O
Hope	O
this	O
helps	O
!	O
This	O
may	O
be	O
too	O
basic	O
or	O
limited	O
of	O
a	O
solution	O
,	O
but	O
could	O
n't	O
you	O
do	O
a	O
String.split	B-API
(	I-API
)	I-API
on	O
each	O
line	O
of	O
the	O
file	O
,	O
remembering	O
the	O
result	O
array	O
of	O
the	O
first	O
line	O
to	O
generate	O
the	O
XML	O
,	O
and	O
just	O
spit	O
each	O
line	O
's	O
array	O
data	O
out	O
with	O
the	O
proper	O
XML	O
elements	O
padding	O
each	O
iteration	O
of	O
a	O
loop	O
?	O
Maybe	O
this	O
might	O
help	O
:	O
JSefa	B-API
You	O
can	O
read	O
CSV	O
file	O
with	O
this	O
tool	O
and	O
serialize	O
it	O
to	O
XML	O
.	O
I	O
do	O
n't	O
understand	O
why	O
you	O
would	O
want	O
to	O
do	O
this	O
.	O
It	O
sounds	O
almost	O
like	O
cargo	O
cult	O
coding	O
.	O
Converting	O
a	O
CSV	O
file	O
to	O
XML	O
does	O
n't	O
add	O
any	O
value	O
.	O
Your	O
program	O
is	O
already	O
reading	O
the	O
CSV	O
file	O
,	O
so	O
arguing	O
that	O
you	O
need	O
XML	O
does	O
n't	O
work	O
.	O
On	O
the	O
other	O
hand	O
,	O
reading	O
the	O
CSV	O
file	O
,	O
doing	O
something	O
with	O
the	O
values	O
,	O
and	O
then	O
serializing	O
to	O
XML	O
does	O
make	O
sense	O
(	O
well	O
,	O
as	O
much	O
as	O
using	O
XML	O
can	O
make	O
sense	O
...	O
;	O
)	O
)	O
but	O
you	O
would	O
supposedly	O
already	O
have	O
a	O
means	O
of	O
serializing	O
to	O
XML	O
.	O
As	O
far	O
as	O
I	O
know	O
,	O
there	O
's	O
no	O
ready-made	O
library	O
to	O
do	O
this	O
for	O
you	O
,	O
but	O
producing	O
a	O
tool	O
capable	O
of	O
translating	O
from	O
CSV	O
to	O
XML	O
should	O
only	O
require	O
you	O
to	O
write	O
a	O
crude	O
CSV	O
parser	O
and	O
hook	O
up	O
JDOM	B-API
(	O
or	O
your	O
XML	O
Java	O
library	O
of	O
choice	O
)	O
with	O
some	O
glue	O
code	O
.	O
There	O
is	O
nothing	O
I	O
know	O
of	O
that	O
can	O
do	O
this	O
without	O
you	O
at	O
least	O
writing	O
a	O
little	O
bit	O
of	O
code	O
...	O
You	O
will	O
need	O
2	O
separate	O
library	O
:	O
A	O
CSV	O
Parser	O
Framework	O
An	O
XML	O
Serialization	O
Framework	O
The	O
CSV	O
parser	O
I	O
would	O
recommend	O
(	O
unless	O
you	O
want	O
to	O
have	O
a	O
little	O
bit	O
of	O
fun	O
to	O
write	O
your	O
own	O
CSV	O
Parser	O
)	O
is	O
OpenCSV	O
(	O
A	O
SourceForge	O
Project	O
for	O
parsing	O
CSV	O
Data	O
)	O
The	O
XML	O
Serialization	O
Framework	O
should	O
be	O
something	O
that	O
can	O
scale	O
in	O
case	O
you	O
want	O
to	O
transform	O
large	O
(	O
or	O
huge	O
)	O
CSV	O
file	O
to	O
XML	O
:	O
My	O
recommendation	O
is	O
the	O
Sun	O
Java	O
Streaming	O
XML	O
Parser	O
Framework	O
(	O
See	O
here	O
)	O
which	O
allows	O
pull-parsing	O
AND	O
serialization	O
.	O
IE	O
8	O
is	O
supposed	O
to	O
have	O
better	O
tools	O
,	O
but	O
the	O
IE	O
Developer	O
Toolbar	O
is	O
pretty	O
good	O
.	O
You	O
might	O
find	O
Firebug	O
Lite	O
useful	O
for	O
that	O
.	O
Its	O
bookmarklet	O
should	O
be	O
especially	O
useful	O
when	O
debugging	O
on	O
a	O
user	O
's	O
machine	O
.	O
This	O
has	O
religious	O
war	O
potential	O
,	O
but	O
it	O
seems	O
to	O
me	O
that	O
if	O
you	O
're	O
using	O
a	O
getter/setter	O
,	O
you	O
should	O
use	O
it	O
internally	O
as	O
well	O
-	O
using	O
both	O
will	O
lead	O
to	O
maintenance	O
problems	O
down	O
the	O
road	O
(	O
e.g	O
.	O
somebody	O
adds	O
code	O
to	O
a	O
setter	O
that	O
needs	O
to	O
run	O
every	O
time	O
that	O
property	O
is	O
set	O
,	O
and	O
the	O
property	O
is	O
being	O
set	O
internally	O
w/o	O
that	O
setter	O
being	O
called	O
)	O
.	O
It	O
depends	O
on	O
how	O
the	O
property	O
is	O
used	O
.	O
For	O
example	O
,	O
say	O
you	O
have	O
a	O
student	O
object	O
that	O
has	O
a	O
name	O
property	O
.	O
You	O
could	O
use	O
your	O
Get	O
method	O
to	O
pull	O
the	O
name	O
from	O
the	O
database	O
,	O
if	O
it	O
has	O
n't	O
been	O
retrieved	O
already	O
.	O
This	O
way	O
you	O
are	O
reducing	O
unnecessary	O
calls	O
to	O
the	O
database	O
.	O
Now	O
let	O
's	O
say	O
you	O
have	O
a	O
private	O
integer	O
counter	O
in	O
your	O
object	O
that	O
counts	O
the	O
number	O
of	O
times	O
the	O
name	O
has	O
been	O
called	O
.	O
You	O
may	O
want	O
to	O
not	O
use	O
the	O
Get	O
method	O
from	O
inside	O
the	O
object	O
because	O
it	O
would	O
produce	O
an	O
invalid	O
count	O
.	O
Am	O
I	O
just	O
going	O
overboard	O
here	O
?	O
Perhaps	O
;	O
)	O
Another	O
approach	O
would	O
be	O
to	O
utilize	O
a	O
private/protected	O
method	O
to	O
actually	O
do	O
the	O
getting	O
(	O
caching/db/etc	O
)	O
,	O
and	O
a	O
public	O
wrapper	O
for	O
it	O
that	O
increments	O
the	O
count	O
:	O
PHP	O
:	O
public	O
function	O
{	O
;	O
return	O
;	O
}	O
protected	O
function	O
{	O
return	O
getName	B-API
(	I-API
)	I-API
$	O
this-incrementNameCalled	B-API
(	I-API
)	I-API
$	O
this-_getName	B-API
(	I-API
)	I-API
_getName	B-API
(	I-API
)	I-API
and	O
then	O
from	O
within	O
the	O
object	O
itself	O
:	O
PHP	O
:	O
$	O
name	O
=	O
$	O
this-_getName	B-API
(	I-API
)	I-API
This	O
way	O
you	O
can	O
still	O
use	O
that	O
first	O
argument	O
for	O
something	O
else	O
(	O
like	O
sending	O
a	O
flag	O
for	O
whether	O
or	O
not	O
to	O
used	O
cached	O
data	O
here	O
perhaps	O
)	O
.	O
Well	O
,	O
it	O
seems	O
with	O
C	O
#	O
3.0	O
properties	O
'	O
default	O
implementation	O
,	O
the	O
decision	O
is	O
taken	O
for	O
you	O
;	O
you	O
HAVE	O
to	O
set	O
the	O
property	O
using	O
the	O
(	O
possibly	O
private	O
)	O
property	O
setter	O
.	O
I	O
personally	O
only	O
use	O
the	O
private	O
member-behind	O
when	O
not	O
doing	O
so	O
would	O
cause	O
the	O
object	O
to	O
fall	O
in	O
an	O
less	O
than	O
desirable	O
state	O
,	O
such	O
as	O
when	O
initializing	O
or	O
when	O
caching/lazy	O
loading	O
is	O
involved	O
.	O
As	O
stated	O
in	O
some	O
of	O
the	O
comments	O
:	O
Sometimes	O
you	O
should	O
,	O
sometimes	O
you	O
should	O
n't	O
.	O
The	O
great	O
part	O
about	O
private	O
variables	O
is	O
that	O
you	O
are	O
able	O
to	O
see	O
all	O
the	O
places	O
they	O
are	O
used	O
when	O
you	O
change	O
something	O
.	O
If	O
your	O
getter/setter	O
does	O
something	O
you	O
need	O
,	O
use	O
it	O
.	O
If	O
it	O
does	O
n't	O
matter	O
you	O
decide	O
.	O
The	O
opposite	O
case	O
could	O
be	O
made	O
that	O
if	O
you	O
use	O
the	O
getter/setter	O
and	O
somebody	O
changes	O
the	O
getter/setter	O
they	O
have	O
to	O
analyze	O
all	O
the	O
places	O
the	O
getter	O
and	O
setter	O
is	O
used	O
internally	O
to	O
see	O
if	O
it	O
messes	O
something	O
up	O
.	O
Personally	O
,	O
I	O
feel	O
like	O
it	O
's	O
important	O
to	O
remain	O
consistent	O
.	O
If	O
you	O
have	O
getters	O
and	O
setters	O
,	O
use	O
them	O
.	O
The	O
only	O
time	O
I	O
would	O
access	O
a	O
field	O
directly	O
is	O
when	O
the	O
accessor	O
has	O
a	O
lot	O
of	O
overhead	O
.	O
It	O
may	O
feel	O
like	O
you	O
're	O
bloating	O
your	O
code	O
unnecessarily	O
,	O
but	O
it	O
can	O
certainly	O
save	O
a	O
whole	O
lot	O
of	O
headache	O
in	O
the	O
future	O
.	O
The	O
classic	O
example	O
:	O
Later	O
on	O
,	O
you	O
may	O
desire	O
to	O
change	O
the	O
way	O
that	O
field	O
works	O
.	O
Maybe	O
it	O
should	O
be	O
calculated	O
on-the-fly	O
or	O
maybe	O
you	O
would	O
like	O
to	O
use	O
a	O
different	O
type	O
for	O
the	O
backing	O
store	O
.	O
If	O
you	O
are	O
accessing	O
properties	O
directly	O
,	O
a	O
change	O
like	O
that	O
can	O
break	O
an	O
awful	O
lot	O
of	O
code	O
in	O
one	O
swell	O
foop	O
.	O
i	O
can	O
be	O
wrong	O
because	O
i	O
'm	O
autodidact	O
,	O
but	O
i	O
NEVER	O
user	O
public	O
properties	O
in	O
my	O
Java	O
clases	O
,	O
they	O
are	O
allways	O
private	O
or	O
protected	O
,	O
so	O
that	O
outside	O
code	O
must	O
access	O
by	O
getters/setters	O
.	O
it	O
's	O
better	O
for	O
mainteance	O
/	O
modification	O
purposes	O
.	O
And	O
for	O
inside	O
class	O
code	O
...	O
if	O
getter	O
method	O
is	O
trivial	O
i	O
use	O
the	O
property	O
directly	O
,	O
but	O
i	O
allways	O
use	O
the	O
setter	O
methods	O
because	O
i	O
could	O
easily	O
add	O
code	O
to	O
fire	O
events	O
if	O
i	O
wish	O
Does	O
n't	O
this	O
depend	O
on	O
the	O
hardware	O
as	O
well	O
as	O
number	O
of	O
threads	O
and	O
stuff	O
?	O
I	O
would	O
make	O
a	O
simple	O
test	O
and	O
run	O
it	O
with	O
increasing	O
amounts	O
of	O
threads	O
hammering	O
and	O
see	O
what	O
seems	O
best	O
.	O
It	O
depends	O
on	O
what	O
kind	O
of	O
application	O
you	O
are	O
building	O
.	O
Create	O
a	O
representative	O
test	O
scenario	O
,	O
and	O
start	O
hammering	O
away	O
.	O
Then	O
you	O
will	O
know	O
the	O
definitive	O
answer	O
.	O
Besides	O
your	O
use	O
case	O
,	O
it	O
also	O
depends	O
on	O
CPU	O
,	O
memory	O
,	O
front-side	O
bus	O
,	O
operating	O
system	O
,	O
cache	O
settings	O
,	O
etcetera	O
.	O
Seriously	O
,	O
just	O
test	O
your	O
own	O
scenario	O
.	O
If	O
you	O
need	O
some	O
numbers	O
(	O
that	O
actually	O
may	O
mean	O
nothing	O
in	O
your	O
scenario	O
)	O
:	O
Oracle	O
Berkeley	O
DB	O
:	O
Performance	O
Metrics	O
and	O
Benchmarks	O
Performance	O
Metrics	O
Benchmarks	O
:	O
Berkeley	O
DB	O
What	O
I	O
did	O
when	O
working	O
against	O
a	O
database	O
of	O
unknown	O
performance	O
was	O
to	O
measure	O
turnaround	O
time	O
on	O
my	O
queries	O
.	O
I	O
kept	O
upping	O
the	O
thread	O
count	O
until	O
turn-around	O
time	O
dropped	O
,	O
and	O
dropping	O
the	O
thread	O
count	O
until	O
turn-around	O
time	O
improved	O
(	O
well	O
,	O
it	O
was	O
processes	O
in	O
my	O
environment	O
,	O
but	O
whatever	O
)	O
.	O
There	O
were	O
moving	O
averages	O
and	O
all	O
sorts	O
of	O
metrics	O
involved	O
,	O
but	O
the	O
take-away	O
lesson	O
was	O
:	O
just	O
adapt	O
to	O
how	O
things	O
are	O
working	O
at	O
the	O
moment	O
.	O
You	O
never	O
know	O
when	O
the	O
DBAs	O
will	O
improve	O
performance	O
or	O
hardware	O
will	O
be	O
upgraded	O
,	O
or	O
perhaps	O
another	O
process	O
will	O
come	O
along	O
to	O
load	O
down	O
the	O
system	O
while	O
you	O
're	O
running	O
.	O
So	O
adapt	O
.	O
Oh	O
,	O
and	O
another	O
thing	O
:	O
avoid	O
process	O
switches	O
if	O
you	O
can	O
-	O
batch	O
things	O
up	O
.	O
Oh	O
,	O
I	O
should	O
make	O
this	O
clear	O
:	O
this	O
all	O
happened	O
at	O
run	O
time	O
,	O
not	O
during	O
development	O
.	O
The	O
problem	O
is	O
that	O
the	O
Distinct	O
operator	O
does	O
not	O
grant	O
that	O
it	O
will	O
maintain	O
the	O
original	O
order	O
of	O
values	O
.	O
So	O
your	O
query	O
will	O
need	O
to	O
work	O
like	O
this	O
var	O
names	O
=	O
(	O
from	O
DataRow	O
dr	O
in	O
dataTable.Rows	B-API
select	I-API
(	I-API
string	I-API
)	I-API
dr	I-API
[	I-API
``	I-API
Name	I-API
''	I-API
]	I-API
)	I-API
.Distinct	B-API
(	I-API
)	I-API
.OrderBy	B-API
(	I-API
name	I-API
=	I-API
name	I-API
)	I-API
;	O
Try	O
the	O
following	O
var	O
names	O
=	O
(	O
from	O
dr	O
in	O
dataTable.Rows	B-API
select	I-API
(	I-API
string	I-API
)	I-API
dr	I-API
[	I-API
``	I-API
Name	I-API
''	I-API
]	I-API
)	I-API
.Distinct	B-API
(	I-API
)	I-API
.OrderBy	B-API
(	I-API
name	I-API
=	I-API
name	I-API
)	I-API
;	O
this	O
should	O
work	O
for	O
what	O
you	O
need	O
.	O
ActiveMQ	O
works	O
well	O
with	O
C	O
#	O
using	O
the	O
Spring.NET	O
integrations	O
and	O
NMS	O
.	O
A	O
post	O
with	O
some	O
links	O
to	O
get	O
you	O
started	O
in	O
that	O
direction	O
is	O
here	O
.	O
Also	O
consider	O
using	O
MSMQ	O
(	O
The	O
System.Messaging	O
namespace	O
)	O
or	O
a	O
.NET	O
based	O
asynchronous	O
messaging	O
solution	O
,	O
with	O
some	O
options	O
here	O
.	O
Sorry	O
if	O
this	O
is	O
n't	O
what	O
you	O
are	O
asking	O
for	O
...	O
Have	O
you	O
considered	O
some	O
sort	O
of	O
cache	O
behind	O
the	O
scenes	O
that	O
acts	O
a	O
bit	O
like	O
the	O
``	O
bucket	O
system	O
''	O
when	O
using	O
asynchronous	O
sockets	O
in	O
c/c++	O
using	O
winsock	O
?	O
Basicly	O
,	O
it	O
works	O
by	O
accepting	O
requests	O
,	O
and	O
sends	O
an	O
immediate	O
response	O
back	O
to	O
the	O
web	O
app	O
,	O
and	O
when	O
it	O
finally	O
gets	O
around	O
to	O
finding	O
your	O
record	O
,	O
it	O
updates	O
it	O
on	O
the	O
app	O
via	O
AJAX	O
or	O
any	O
other	O
technology	O
of	O
your	O
choice	O
.	O
Since	O
I	O
'm	O
not	O
a	O
C	O
#	O
programmer	O
I	O
ca	O
n't	O
provide	O
any	O
specific	O
example	O
.	O
Hope	O
this	O
helps	O
!	O
You	O
tried	O
old	O
builds	O
,	O
but	O
is	O
there	O
a	O
reason	O
you	O
ca	O
n't	O
keep	O
going	O
further	O
back	O
in	O
the	O
repository	O
history	O
and	O
seeing	O
exactly	O
when	O
the	O
bug	O
was	O
introduced	O
?	O
Otherwise	O
,	O
I	O
would	O
suggest	O
adding	O
simple	O
logging	O
of	O
some	O
kind	O
to	O
help	O
track	O
down	O
the	O
problem	O
,	O
though	O
I	O
am	O
at	O
a	O
loss	O
of	O
what	O
specifically	O
you	O
might	O
want	O
to	O
log	O
.	O
If	O
you	O
can	O
find	O
out	O
what	O
exactly	O
CAN	O
cause	O
this	O
problem	O
,	O
via	O
google	O
and	O
documentation	O
of	O
the	O
exceptions	O
you	O
are	O
getting	O
,	O
maybe	O
that	O
will	O
give	O
further	O
insight	O
on	O
what	O
to	O
look	O
for	O
in	O
the	O
code	O
.	O
