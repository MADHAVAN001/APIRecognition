hmmm	O
...	O
I	O
'm	O
pretty	O
sure	O
that	O
there	O
's	O
a	O
shown	O
event	O
for	O
the	O
MPE	B-API
...	O
this	O
is	O
off	O
the	O
top	O
of	O
my	O
head	O
,	O
but	O
I	O
think	O
you	O
can	O
add	O
an	O
event	O
handler	O
to	O
the	O
shown	O
event	O
on	O
page_load	O
function	O
{	O
var	B-API
popup	O
=	O
;	O
;	O
}	O
function	O
{	O
pageLoad	B-API
(	I-API
)	I-API
$	O
find	B-API
(	I-API
'ModalPopupClientID	I-API
'	I-API
)	I-API
popup.add_shown	B-API
(	I-API
SetFocus	I-API
)	I-API
SetFocus	B-API
(	I-API
)	I-API
$	O
get	B-API
(	I-API
'TriggerClientId	I-API
'	I-API
)	I-API
.focus	I-API
(	I-API
)	I-API
i	O
'm	O
not	O
sure	O
tho	O
if	O
this	O
will	O
help	O
you	O
with	O
calling	O
it	O
from	O
the	O
server	O
side	O
tho	O
I	O
have	O
n't	O
thought	O
too	O
hard	O
about	O
this	O
,	O
but	O
I	O
reckon	O
you	O
could	O
get	O
a	O
Custom	B-API
Treeview	I-API
in	O
WPF	O
to	O
do	O
what	O
you	O
want	O
.	O
I	O
was	O
reading	O
an	O
article	O
on	O
code	O
project	O
a	O
while	O
back	O
that	O
implemented	O
an	O
org	O
chart	O
this	O
way	O
...	O
I	O
'm	O
all	O
for	O
writing	O
your	O
own	O
software	O
when	O
something	O
does	O
n't	O
suit	O
your	O
needs	O
and	O
a	O
frequent	O
re-inventer	O
of	O
the	O
wheel	O
.	O
But	O
this	O
honestly	O
seems	O
like	O
one	O
of	O
those	O
things	O
were	O
the	O
solution	O
is	O
readily	O
available	O
,	O
in	O
this	O
case	O
in	O
the	O
form	O
of	O
Family	O
Tree	O
Maker	O
And	O
at	O
a	O
mere	O
$	O
40	O
I	O
would	O
venture	O
to	O
guess	O
that	O
you	O
'd	O
come	O
out	O
ahead	O
compared	O
to	O
the	O
hours	O
you	O
would	O
spend	O
trying	O
to	O
get	O
your	O
own	O
program	O
doing	O
exactly	O
what	O
you	O
need	O
.	O
I	O
currently	O
use	O
the	O
software	O
and	O
it	O
works	O
great	O
.	O
Now	O
,	O
if	O
your	O
interest	O
in	O
writing	O
it	O
partly	O
for	O
the	O
purpose	O
of	O
just	O
doing	O
it	O
because	O
you	O
can	O
and	O
to	O
learn	O
something	O
...	O
then	O
by	O
all	O
means	O
I	O
salute	O
your	O
will	O
to	O
learn	O
and	O
hope	O
you	O
find	O
the	O
control	O
you	O
are	O
looking	O
for	O
.	O
Geni	B-API
is	O
probably	O
what	O
your	O
looking	O
for	O
.	O
If	O
you	O
're	O
really	O
looking	O
for	O
an	O
application	O
that	O
you	O
can	O
modify	O
try	O
out	O
Family.Show	B-API
on	O
CodePlex	B-API
.	O
Take	O
a	O
look	O
at	O
Creating	O
and	O
Using	O
URL	B-API
Monikers	I-API
,	O
About	O
Asynchronous	O
Pluggable	O
Protocols	O
and	O
Registering	O
an	O
Application	O
to	O
a	O
URL	O
Protocol	O
from	O
MSDN	O
Here	O
's	O
some	O
old	O
Delphi	B-API
code	O
we	O
used	O
as	O
a	O
way	O
to	O
get	O
shortcuts	O
in	O
a	O
web	O
application	O
to	O
start	O
a	O
windows	O
program	O
locally	O
for	O
the	O
user	O
.	O
procedure	B-API
InstallIntoRegistry	I-API
;	O
var	B-API
Reg	O
:	O
TRegistry	B-API
;	O
begin	O
Reg	O
:	O
=	O
TRegistry.Create	B-API
;	O
try	O
Reg.RootKey	B-API
:	O
=	O
HKEY_CLASSES_ROOT	B-API
;	O
if	B-API
then	I-API
begin	O
;	O
;	O
;	O
;	O
if	B-API
then	I-API
begin	O
+	O
'	O
''	O
``	O
%	O
1	O
''	O
'	O
)	O
;	O
end	O
;	O
end	O
else	B-API
begin	O
+	O
'Please	O
make	O
sure	O
you	O
are	O
logged	O
in	O
with	O
a	O
user	O
account	O
with	O
administrative	O
rights	O
!	O
'	O
,	O
'Access	O
denied	O
'	O
,	O
0	O
)	O
;	O
Exit	B-API
;	O
end	O
;	O
finally	O
;	O
end	O
;	O
(	O
'moniker	O
'	O
,	O
True	B-API
)	I-API
(	I-API
''	O
,	O
'URL	O
:	O
Name	O
of	O
moniker	O
'	O
)	O
(	O
'URL	O
Protocol	O
'	O
,	O
''	O
)	O
(	O
'Source	O
Filter	O
'	O
,	O
'	O
{	O
E436EBB6-524F-11CE-9F53-0020AF0BA770	O
}	O
'	O
)	O
(	O
'EditFlags	O
'	O
,	O
2	O
)	O
(	O
'shell\open\command	O
'	O
,	O
True	B-API
)	I-API
(	I-API
''	O
,	O
'	O
''	O
'	O
+	O
ParamStr	B-API
(	I-API
0	I-API
)	I-API
(	O
0	O
,	O
'You	O
do	O
not	O
have	O
the	O
necessary	O
access	O
rights	O
to	O
complete	O
this	O
installation	O
!	O
'	O
+	O
Chr	B-API
(	I-API
13	I-API
)	I-API
FreeAndNil	B-API
(	I-API
Reg	I-API
)	I-API
(	O
0	O
,	O
'Application	O
WebStart	O
has	O
been	O
installed	O
successfully	O
!	O
'	O
,	O
'Installed	O
'	O
,	O
0	O
)	O
A	O
tidier	O
way	O
is	O
to	O
create	O
separate	O
forms	O
for	O
each	O
'pane	O
'	O
and	O
,	O
in	O
each	O
form	O
constructor	O
,	O
set	B-API
this.TopLevel	I-API
=	O
false	O
;	O
this.FormBorderStyle	O
=	O
FormBorderStyle.None	B-API
;	O
this.Dock	O
=	O
DockStyle.Fill	B-API
;	O
That	O
way	O
,	O
each	O
of	O
these	O
forms	O
can	O
be	O
laid	O
out	O
in	O
its	O
own	O
designer	O
,	O
instantiated	O
one	O
or	O
more	O
times	O
at	O
runtime	O
,	O
and	O
added	O
to	O
the	O
empty	O
area	O
like	O
a	O
normal	O
control	O
.	O
Perhaps	O
the	O
main	O
form	O
could	O
use	O
a	O
with	O
a	O
static	O
in	O
one	O
panel	O
,	O
and	O
space	O
to	O
add	O
these	O
forms	O
in	O
the	O
other	O
.	O
Once	O
they	O
are	O
added	O
,	O
they	O
could	O
be	O
flipped	O
through	O
using	O
or	O
methods	O
.	O
SeparateForm	O
f	O
=	O
new	O
SeparateForm	B-API
(	I-API
)	I-API
;	O
MainFormSplitContainer.Panel2.Controls.Add	B-API
(	I-API
f	I-API
)	I-API
;	O
f.Show	B-API
(	I-API
)	I-API
;	O
Greg	O
Hurlman	O
wrote	O
:	O
Why	O
not	O
just	O
show/hide	O
the	O
proper	O
container	O
when	O
a	O
node	O
is	O
selected	O
in	O
the	O
grid	O
?	O
Have	O
the	O
containers	O
all	O
sized	O
appropriately	O
in	O
the	O
same	O
spot	O
,	O
and	O
hide	O
all	O
but	O
the	O
default	O
,	O
which	O
would	O
be	O
preselected	O
in	O
the	O
grid	O
on	O
load	O
.	O
Unfortunately	O
,	O
that	O
's	O
what	O
I	O
'm	O
trying	O
to	O
avoid	O
.	O
I	O
'm	O
looking	O
for	O
an	O
easy	O
way	O
to	O
handle	O
the	O
interface	O
during	O
design	O
time	O
,	O
with	O
minimal	O
reformatting	O
code	O
needed	O
to	O
get	O
it	O
working	O
during	O
run	O
time	O
.	O
I	O
like	O
Duncan	O
's	O
answer	O
because	O
it	O
means	O
the	O
design	O
of	O
each	O
node	O
's	O
interface	O
can	O
be	O
kept	O
completely	O
separate	O
.	O
This	O
means	O
I	O
do	O
n't	O
get	O
overlap	O
on	O
the	O
snapping	O
guidelines	O
and	O
other	O
design	O
time	O
advantages	O
.	O
Static	B-API
methods	O
can	O
not	O
be	O
inherited	O
or	O
overridden	O
,	O
and	O
that	O
is	O
why	O
they	O
ca	O
n't	O
be	O
abstract	O
.	O
Since	O
static	B-API
methods	O
are	O
defined	O
on	O
the	O
type	O
,	O
not	O
the	O
instance	O
,	O
of	O
a	O
class	O
,	O
they	O
must	O
be	O
called	O
explicitly	O
on	O
that	O
type	O
.	O
So	O
when	O
you	O
want	O
to	O
call	O
a	O
method	O
on	O
a	O
child	O
class	O
,	O
you	O
need	O
to	O
use	O
its	O
name	O
to	O
call	O
it	O
.	O
This	O
makes	O
inheritance	O
irrelevant	O
.	O
Assume	O
you	O
could	O
,	O
for	O
a	O
moment	O
,	O
inherit	O
static	B-API
methods	O
.	O
Imagine	O
this	O
scenario	O
:	O
public	O
static	B-API
class	O
Base	O
{	O
public	O
static	B-API
virtual	I-API
int	I-API
{	I-API
return	I-API
5	I-API
;	I-API
}	I-API
}	O
public	O
static	B-API
class	I-API
Child1	I-API
:	I-API
Base	I-API
{	O
public	O
static	B-API
override	I-API
int	I-API
{	O
return	O
1	O
;	O
}	O
}	O
public	O
static	B-API
class	I-API
Child2	I-API
:	I-API
Base	I-API
{	O
public	O
static	B-API
override	I-API
int	I-API
{	O
return	O
2	O
;	O
GetNumber	B-API
(	I-API
)	I-API
GetNumber	B-API
(	I-API
)	I-API
GetNumber	B-API
(	I-API
)	I-API
If	O
you	O
call	O
Base.GetNumber	B-API
(	I-API
)	I-API
,	O
which	O
method	O
would	O
be	O
called	O
?	O
Which	O
value	O
returned	O
?	O
Its	O
pretty	O
easy	O
to	O
see	O
that	O
without	O
creating	O
instances	O
of	O
objects	O
,	O
inheritance	O
is	O
rather	O
hard	O
.	O
Abstract	O
methods	O
without	O
inheritance	O
are	O
just	O
methods	O
that	O
do	O
n't	O
have	O
a	O
body	O
,	O
so	O
ca	O
n't	O
be	O
called	O
.	O
To	O
add	O
to	O
the	O
previous	O
explanations	O
,	O
static	B-API
method	O
calls	O
are	O
bound	O
to	O
a	O
specific	O
method	O
at	O
compile-time	O
,	O
which	O
rather	O
rules	O
out	O
polymorphic	O
behavior	O
.	O
Static	B-API
methods	O
are	O
not	O
instantiated	O
as	O
such	O
,	O
they	O
're	O
just	O
available	O
without	O
an	O
object	O
reference	O
.	O
A	O
call	O
to	O
a	O
static	B-API
method	O
is	O
done	O
through	O
the	O
class	O
name	O
,	O
not	O
through	O
an	O
object	O
reference	O
,	O
and	O
the	O
IL	O
code	O
to	O
call	O
it	O
will	O
call	O
the	O
abstract	O
method	O
through	O
the	O
name	O
of	O
the	O
class	O
that	O
defined	O
it	O
,	O
not	O
necessarily	O
the	O
name	O
of	O
the	O
class	O
you	O
used	O
.	O
Let	O
me	O
show	O
an	O
example	O
.	O
With	O
the	O
following	O
code	O
:	O
public	O
class	O
A	O
{	O
public	O
static	B-API
void	I-API
{	I-API
}	I-API
}	O
public	O
class	B-API
B	I-API
:	I-API
Test	I-API
(	I-API
)	I-API
If	O
you	O
call	O
B.Test	B-API
,	O
like	O
this	O
:	O
class	O
Program	O
{	O
static	B-API
void	I-API
{	I-API
;	I-API
(	I-API
string	B-API
[	I-API
]	I-API
args	O
)	O
B.Test	B-API
(	I-API
)	I-API
Then	O
the	O
actual	O
code	O
inside	O
the	O
Main	O
method	O
is	O
as	O
follows	O
:	O
.entrypoint.maxstack	B-API
8L0000	O
:	O
nop	O
L0001	O
:	O
call	O
void	O
L0006	O
:	O
nop	O
L0007	O
:	O
ret	O
ConsoleApplication1.A	B-API
:	I-API
:Test	I-API
(	I-API
)	I-API
As	O
you	O
can	O
see	O
,	O
the	O
call	O
is	O
made	O
to	O
A.Test	B-API
,	O
because	O
it	O
was	O
the	O
A	O
class	O
that	O
defined	O
it	O
,	O
and	O
not	O
to	O
B.Test	B-API
,	O
even	O
though	O
you	O
can	O
write	O
the	O
code	O
that	O
way	O
.	O
If	O
you	O
had	O
class	O
types	O
,	O
like	O
in	O
Delphi	O
,	O
where	O
you	O
can	O
make	O
a	O
variable	O
referring	O
to	O
a	O
type	O
and	O
not	O
an	O
object	O
,	O
you	O
would	O
have	O
more	O
use	O
for	O
virtual	O
and	O
thus	O
abstract	O
static	B-API
methods	O
(	O
and	O
also	O
constructors	O
)	O
,	O
but	O
they	O
are	O
n't	O
available	O
and	O
thus	O
static	O
calls	O
are	O
non-virtual	O
in	O
.NET	B-API
.	O
I	O
realize	O
that	O
the	O
IL	O
designers	O
could	O
allow	O
the	O
code	O
to	O
be	O
compiled	O
to	O
call	O
B.Test	B-API
,	O
and	O
resolve	O
the	O
call	O
at	O
runtime	O
,	O
but	O
it	O
still	O
would	O
n't	O
be	O
virtual	O
,	O
as	O
you	O
would	O
still	O
have	O
to	O
write	O
some	O
kind	O
of	O
class	O
name	O
there	O
.	O
Virtual	O
methods	O
,	O
and	O
thus	O
abstract	O
ones	O
,	O
are	O
only	O
useful	O
when	O
you	O
're	O
using	O
a	O
variable	O
which	O
,	O
at	O
runtime	O
,	O
can	O
contain	O
many	O
different	O
types	O
of	O
objects	O
,	O
and	O
you	O
thus	O
want	O
to	O
call	O
the	O
right	O
method	O
for	O
the	O
current	O
object	O
you	O
have	O
in	O
the	O
variable	O
.	O
With	O
static	O
methods	O
you	O
need	O
to	O
go	O
through	O
a	O
class	O
name	O
anyway	O
,	O
so	O
the	O
exact	O
method	O
to	O
call	O
is	O
known	O
at	O
compile	O
time	O
because	O
it	O
ca	O
n't	O
and	O
wo	O
n't	O
change	O
.	O
Thus	O
,	O
virtual/abstract	O
static	O
methods	O
are	O
not	O
available	O
in	O
.NET	B-API
.	O
using	O
System.Net	B-API
;	O
foreach	B-API
(	O
IPAddress	B-API
address	O
in	O
Dns.GetHostAddresses	B-API
(	I-API
``	I-API
www.google.com	I-API
''	I-API
)	I-API
)	O
{	O
Console.WriteLine	B-API
(	O
address.ToString	B-API
(	I-API
)	I-API
)	O
;	O
}	O
Try	O
using	O
the	O
System.Net.Dns	B-API
class	O
Well	O
,	O
here	O
's	O
how	O
we	O
do	O
it	O
on	O
Stack	O
Overflow	O
.	O
var	B-API
ts	O
=	O
new	O
TimeSpan	B-API
(	O
DateTime.UtcNow.Ticks	B-API
-	O
dt.Ticks	B-API
)	O
;	O
double	O
delta	O
=	O
Math.Abs	B-API
(	I-API
ts.TotalSeconds	I-API
)	I-API
;	O
if	B-API
(	I-API
delta	I-API
60	I-API
)	I-API
{	O
return	O
ts.Seconds	B-API
==	O
1	O
?	O
``	O
one	O
second	O
ago	O
''	O
:	O
ts.Seconds	B-API
+	O
``	O
seconds	O
ago	O
''	O
;	O
}	O
if	B-API
(	I-API
delta	I-API
120	I-API
)	I-API
{	O
return	O
``	O
a	O
minute	O
ago	O
''	O
;	O
}	O
if	B-API
(	I-API
delta	I-API
2700	I-API
)	I-API
//	O
45	O
*	O
60	O
{	O
return	O
ts.Minutes	B-API
+	O
``	O
minutes	O
ago	O
''	O
;	O
}	O
if	B-API
(	I-API
delta	I-API
5400	I-API
)	I-API
//	O
90	O
*	O
60	O
{	O
return	O
``	O
an	O
hour	O
ago	O
''	O
;	O
}	O
if	B-API
(	I-API
delta	I-API
86400	I-API
)	I-API
//	O
24	O
*	O
60	O
*	O
60	O
{	O
return	O
ts.Hours	B-API
+	O
``	O
hours	O
ago	O
''	O
;	O
}	O
if	B-API
(	I-API
delta	I-API
172800	I-API
)	I-API
//	O
48	O
*	O
60	O
*	O
60	O
{	O
return	O
``	O
yesterday	O
''	O
;	O
}	O
if	B-API
(	I-API
delta	I-API
2592000	I-API
)	I-API
//	O
30	O
*	O
24	O
*	O
60	O
*	O
60	O
{	O
return	O
ts.Days	B-API
+	O
``	O
days	O
ago	O
''	O
;	O
}	O
if	B-API
(	I-API
delta	I-API
31104000	I-API
)	I-API
//	O
12	O
*	O
30	O
*	O
24	O
*	O
60	O
*	O
60	O
{	O
int	O
months	O
=	O
Convert.ToInt32	B-API
(	O
Math.Floor	B-API
(	O
(	O
double	O
)	O
ts.Days	O
/	O
30	O
)	O
)	O
;	O
return	O
months	O
=	O
1	O
?	O
``	O
one	O
month	O
ago	O
''	O
:	O
months	O
+	O
``	O
months	O
ago	O
''	O
;	O
}	O
int	O
years	O
=	O
Convert.ToInt32	B-API
(	O
Math.Floor	B-API
(	O
(	O
double	O
)	O
ts.Days	O
/	O
365	O
)	O
)	O
;	O
return	O
years	O
=	O
1	O
?	O
``	O
one	O
year	O
ago	O
''	O
:	O
years	O
+	O
``	O
years	O
ago	O
''	O
;	O
Suggestions	O
?	O
Comments	O
?	O
Ways	O
to	O
improve	O
this	O
algorithm	O
?	O
@	O
jeff	O
IMHO	O
yours	O
seems	O
a	O
little	O
long	O
.	O
However	O
it	O
does	O
seem	O
a	O
little	O
more	O
robust	O
with	O
support	O
for	O
``	O
yesterday	O
''	O
and	O
``	O
years	O
''	O
.	O
But	O
in	O
my	O
experience	O
when	O
this	O
is	O
used	O
the	O
person	O
is	O
most	O
likely	O
to	O
view	O
the	O
content	O
in	O
the	O
first	O
30	O
days	O
.	O
It	O
is	O
only	O
the	O
really	O
hardcore	O
people	O
that	O
come	O
after	O
that	O
.	O
So	O
that	O
is	O
why	O
I	O
usually	O
elect	O
to	O
keep	O
this	O
short	O
and	O
simple	O
.	O
This	O
is	O
the	O
method	O
I	O
am	O
currently	O
using	O
on	O
one	O
of	O
my	O
websites	O
.	O
This	O
only	O
returns	O
a	O
relative	O
day	O
,	O
hour	O
,	O
time	O
.	O
And	O
then	O
the	O
user	O
has	O
to	O
slap	O
on	O
``	O
ago	O
''	O
in	O
the	O
output	O
.	O
public	B-API
static	I-API
string	I-API
{	0-API
string	O
output	O
=	O
String.Empty	B-API
;	O
if	B-API
(	I-API
time.Days	I-API
0	I-API
)	I-API
output	O
+=	O
time.Days	O
+	O
``	O
days	O
``	O
;	O
if	B-API
time.Hours	I-API
0	I-API
)	I-API
output	O
+=	O
time.Hours	O
+	O
``	O
hr	O
``	O
;	O
if	B-API
(	I-API
time.Days	I-API
==	I-API
0	I-API
time.Minutes	I-API
0	I-API
)	I-API
output	O
+=	O
time.Minutes	B-API
+	O
``	O
min	O
``	O
;	O
if	B-API
(	I-API
output.Length	I-API
==	I-API
0	I-API
)	I-API
output	O
+=	O
time.Seconds	B-API
+	O
``	O
sec	O
''	O
;	O
return	O
(	O
this	O
TimeSpan	O
time	O
)	O
(	O
time.Days	B-API
==	O
0	O
||	O
time.Days	B-API
==	O
1	O
)	O
output.Trim	B-API
(	I-API
)	I-API
Jeff	O
,	O
your	O
code	O
is	O
nice	O
but	O
could	O
be	O
clearer	O
with	O
constants	O
(	O
as	O
suggested	O
in	O
Code	O
Complete	O
)	O
.	O
const	B-API
int	I-API
SECOND	I-API
=	I-API
1	I-API
;	O
const	B-API
int	I-API
MINUTE	I-API
=	I-API
60	I-API
*	I-API
SECOND	I-API
;	O
const	B-API
int	I-API
HOUR	I-API
=	I-API
60	I-API
*	I-API
MINUTE	I-API
;	O
const	B-API
int	I-API
DAY	I-API
=	I-API
24	I-API
*	I-API
HOUR	I-API
;	O
const	B-API
int	I-API
MONTH	I-API
=	I-API
30	I-API
*	I-API
DAY	I-API
;	O
var	O
ts	O
=	O
new	O
TimeSpan	B-API
(	O
DateTime.UtcNow.Ticks	B-API
-	O
yourDate.Ticks	B-API
)	O
;	O
double	O
delta	O
=	O
Math.Abs	B-API
(	I-API
ts.TotalSeconds	I-API
)	I-API
;	O
if	B-API
(	I-API
delta	I-API
1	I-API
*	I-API
MINUTE	I-API
)	I-API
return	O
ts.Seconds	O
==	O
1	O
?	O
``	O
one	O
second	O
ago	O
''	O
:	O
ts.Seconds	O
+	O
``	O
seconds	O
ago	O
''	O
;	O
if	B-API
(	I-API
delta	I-API
2	I-API
*	I-API
MINUTE	I-API
)	I-API
return	O
``	O
a	O
minute	O
ago	O
''	O
;	O
if	B-API
(	I-API
delta	I-API
45	I-API
*	I-API
MINUTE	I-API
)	I-API
return	O
ts.Minutes	O
+	O
``	O
minutes	O
ago	O
''	O
;	O
if	B-API
(	I-API
delta	I-API
90	I-API
*	I-API
MINUTE	I-API
)	I-API
return	O
``	O
an	O
hour	O
ago	O
''	O
;	O
if	B-API
(	I-API
delta	I-API
24	I-API
*	I-API
HOUR	I-API
)	I-API
return	O
ts.Hours	O
+	O
``	O
hours	O
ago	O
''	O
;	O
if	B-API
(	I-API
delta	I-API
48	I-API
*	I-API
HOUR	I-API
)	I-API
return	O
``	O
yesterday	O
''	O
;	O
if	B-API
(	I-API
delta	I-API
30	I-API
*	I-API
DAY	I-API
)	I-API
return	O
ts.Days	O
+	O
``	O
days	O
ago	O
''	O
;	O
if	B-API
(	I-API
delta	I-API
12	I-API
*	I-API
MONTH	I-API
)	I-API
{	O
int	O
months	O
=	O
Convert.ToInt32	B-API
(	O
Math.Floor	B-API
(	O
(	O
double	O
)	O
ts.Days	O
/	O
30	O
)	O
)	O
;	O
return	O
months	O
=	O
1	O
?	O
``	O
one	O
month	O
ago	O
''	O
:	O
months	O
+	O
``	O
months	O
ago	O
''	O
;	O
}	O
else	O
{	O
int	O
years	O
=	O
Convert.ToInt32	B-API
(	O
Math.Floor	B-API
(	O
(	O
double	O
)	O
ts.Days	O
/	O
365	O
)	O
)	O
;	O
return	O
years	O
=	O
1	O
?	O
``	O
one	O
year	O
ago	O
''	O
:	O
years	O
+	O
``	O
years	O
ago	O
''	O
;	O
}	O
I	O
thought	O
I	O
'd	O
give	O
this	O
a	O
shot	O
using	O
classes	O
and	O
polymorphism	O
.	O
I	O
had	O
a	O
previous	O
iteration	O
which	O
used	O
sub-classing	O
which	O
ended	O
up	O
having	O
way	O
too	O
much	O
overhead	O
.	O
I	O
've	O
switched	O
to	O
a	O
more	O
flexible	O
delegate	O
/	O
public	O
property	O
object	O
model	O
which	O
is	O
significantly	O
better	O
.	O
My	O
code	O
is	O
very	O
slightly	O
more	O
accurate	O
,	O
I	O
wish	O
I	O
could	O
come	O
up	O
with	O
a	O
better	O
way	O
to	O
generate	O
``	O
months	O
ago	O
''	O
that	O
did	O
n't	O
seem	O
too	O
over-engineered	O
.	O
I	O
think	O
I	O
'd	O
still	O
stick	O
with	O
Jeff	O
's	O
if-then	O
cascade	O
because	O
it	O
's	O
less	O
code	O
and	O
it	O
's	O
simpler	O
(	O
it	O
's	O
definitely	O
easier	O
to	O
ensure	O
it	O
'll	O
work	O
as	O
expected	O
)	O
.	O
For	O
the	O
below	O
code	O
PrintRelativeTime.GetRelativeTimeMessage	B-API
(	I-API
TimeSpan	I-API
ago	I-API
)	I-API
returns	O
the	O
relative	O
time	O
message	O
(	O
e.g	O
.	O
``	O
yesterday	O
''	O
)	O
.	O
public	B-API
class	I-API
RelativeTimeRange	I-API
:	I-API
IComparable	I-API
{	O
public	O
TimeSpan	O
UpperBound	O
{	O
get	O
;	O
set	O
;	O
}	O
public	O
delegate	B-API
string	I-API
;	O
public	O
RelativeTimeTextDelegate	B-API
MessageCreator	I-API
{	O
get	O
;	O
set	O
;	O
}	O
public	O
int	O
{	O
if	O
)	O
{	O
return	O
1	O
;	O
}	O
//	O
note	O
that	O
this	O
sorts	O
in	O
reverse	O
order	O
to	O
the	O
way	O
you	O
'd	O
expect	O
,	O
//	O
this	O
saves	O
having	O
to	O
reverse	O
a	O
list	O
later	O
return	O
(	O
obj	O
as	O
;	O
}	O
}	O
public	O
class	B-API
PrintRelativeTime	I-API
{	O
private	O
static	B-API
ListRelativeTimeRange	I-API
timeRanges	I-API
;	O
static	O
{	O
timeRanges	O
=	O
new	O
ListRelativeTimeRange	B-API
{	O
new	O
RelativeTimeRange	B-API
{	O
UpperBound	B-API
=	O
,	O
MessageCreator	B-API
=	O
(	O
delta	O
)	O
=	O
{	O
return	O
``	O
one	O
second	O
ago	O
''	O
;	O
}	O
}	O
,	O
new	O
RelativeTimeRange	B-API
{	O
UpperBound	B-API
=	O
,	O
MessageCreator	B-API
=	O
(	O
delta	O
)	O
=	O
{	O
return	O
delta.Seconds	B-API
+	O
``	O
seconds	O
ago	O
''	O
;	O
}	O
}	O
,	O
new	O
RelativeTimeRange	B-API
{	O
UpperBound	B-API
=	O
,	O
MessageCreator	B-API
=	O
(	O
delta	O
)	O
=	O
{	O
return	O
``	O
one	O
minute	O
ago	O
''	O
;	O
}	O
}	O
,	O
new	O
RelativeTimeRange	B-API
{	O
UpperBound	B-API
=	O
,	O
MessageCreator	B-API
=	O
(	O
delta	O
)	O
=	O
{	O
return	O
delta.Minutes	O
+	O
``	O
minutes	O
ago	O
''	O
;	O
}	O
}	O
,	O
new	O
RelativeTimeRange	B-API
{	O
UpperBound	B-API
=	O
,	O
MessageCreator	B-API
=	O
(	O
delta	O
)	O
=	O
{	O
return	O
``	O
one	O
hour	O
ago	O
''	O
;	O
}	O
}	O
,	O
new	O
RelativeTimeRange	B-API
{	O
UpperBound	B-API
=	O
,	O
MessageCreator	B-API
=	O
(	O
delta	O
)	O
=	O
{	O
return	O
delta.Hours	O
+	O
``	O
hours	O
ago	O
''	O
;	O
}	O
}	O
,	O
new	O
RelativeTimeRange	B-API
{	O
UpperBound	B-API
=	O
,	O
MessageCreator	B-API
=	O
(	O
delta	O
)	O
=	O
{	O
return	O
``	O
yesterday	O
''	O
;	O
}	O
}	O
,	O
new	O
RelativeTimeRange	B-API
{	O
UpperBound	B-API
=	O
)	O
,	O
MessageCreator	B-API
=	O
(	O
delta	O
)	O
=	O
{	O
return	O
delta.Days	O
+	O
``	O
days	O
ago	O
''	O
;	O
}	O
}	O
,	I-API
new	O
RelativeTimeRange	B-API
{	O
UpperBound	B-API
=	O
)	O
,	O
MessageCreator	B-API
=	O
(	O
delta	O
)	O
=	O
{	O
return	O
``	O
one	O
month	O
ago	O
''	O
;	O
}	O
}	O
,	O
new	O
RelativeTimeRange	B-API
{	O
UpperBound	B-API
=	O
)	O
,	O
MessageCreator	B-API
=	O
(	O
delta	O
)	O
=	O
{	O
return	O
+	O
``	O
months	O
ago	O
''	O
;	O
}	O
}	O
,	O
new	O
RelativeTimeRange	B-API
{	O
UpperBound	B-API
=	O
)	O
,	O
MessageCreator	B-API
=	O
(	O
delta	O
)	O
=	O
{	O
return	O
``	O
one	O
year	O
ago	O
''	O
;	O
}	O
}	O
,	O
new	O
RelativeTimeRange	B-API
{	O
UpperBound	B-API
=	O
TimeSpan.MaxValue	B-API
,	O
MessageCreator	B-API
=	O
(	O
delta	O
)	O
=	O
{	O
return	O
+	O
``	O
years	O
ago	O
''	O
;	O
}	O
}	O
}	O
;	O
;	O
}	O
public	O
static	B-API
string	I-API
{	O
RelativeTimeRange	B-API
postRelativeDateRange	O
=	O
timeRanges	B-API
[	I-API
0	I-API
]	I-API
;	O
foreach	B-API
(	I-API
var	I-API
timeRange	I-API
in	I-API
timeRanges	I-API
)	I-API
{	O
if	O
=	O
0	O
)	O
{	O
postRelativeDateRange	O
=	O
timeRange	O
;	O
}	O
}	O
return	O
;	O
(	O
TimeSpan	O
timeDelta	B-API
)	I-API
(	I-API
object	O
obj	O
)	O
!	O
(	O
obj	O
is	O
RelativeTimeRange	B-API
)	O
RelativeTimeRange	B-API
)	O
.UpperBound.CompareTo	B-API
(	I-API
UpperBound	I-API
)	I-API
PrintRelativeTime	B-API
(	I-API
)	I-API
TimeSpan.FromSeconds	B-API
(	I-API
1	I-API
)	I-API
TimeSpan.FromSeconds	B-API
(	I-API
60	I-API
)	I-API
TimeSpan.FromMinutes	B-API
(	I-API
2	I-API
)	I-API
TimeSpan.FromMinutes	B-API
(	I-API
60	I-API
)	I-API
TimeSpan.FromHours	B-API
(	I-API
2	I-API
)	I-API
TimeSpan.FromHours	B-API
(	I-API
24	I-API
)	I-API
TimeSpan.FromDays	B-API
(	I-API
2	I-API
)	I-API
DateTime.Now.Subtract	B-API
(	O
DateTime.Now.AddMonths	I-API
(	I-API
-1	I-API
)	I-API
DateTime.Now.Subtract	B-API
(	O
DateTime.Now.AddMonths	I-API
(	I-API
-2	I-API
)	I-API
DateTime.Now.Subtract	B-API
(	O
DateTime.Now.AddYears	I-API
(	I-API
-1	I-API
)	I-API
int	O
)	O
Math.Floor	B-API
(	I-API
delta.TotalDays	I-API
/	I-API
30	I-API
)	I-API
DateTime.Now.Subtract	B-API
(	O
DateTime.Now.AddYears	I-API
(	I-API
-2	I-API
)	I-API
int	O
)	O
Math.Floor	B-API
(	I-API
delta.TotalDays	I-API
/	I-API
365.24D	I-API
)	I-API
timeRanges.Sort	B-API
(	I-API
)	I-API
(	O
TimeSpan	O
ago	O
)	O
(	O
ago.CompareTo	B-API
(	I-API
timeRange.UpperBound	I-API
)	I-API
postRelativeDateRange.MessageCreator	B-API
(	I-API
ago	I-API
)	I-API
The	O
size	O
of	O
the	O
file	O
is	O
sent	O
as	O
the	O
Content-Length	O
header	O
.	O
Here	O
is	O
how	O
to	O
get	O
it	O
with	O
urllib	B-API
:	O
site	O
=	O
meta	O
=	O
print	B-API
urllib.urlopen	B-API
(	I-API
``	I-API
http	I-API
:	I-API
//python.org	I-API
''	I-API
)	I-API
site.info	B-API
(	I-API
)	I-API
meta.getheaders	B-API
(	I-API
``	I-API
Content-Length	I-API
''	I-API
)	I-API
Using	O
the	O
returned-urllib-object	B-API
method	O
info	B-API
(	I-API
)	I-API
,	O
you	O
can	O
get	O
various	O
information	O
on	O
the	O
retrived	O
document	O
.	O
Example	O
of	O
grabbing	O
the	O
current	O
Google	O
logo	O
:	O
import	B-API
urllib	I-API
d	O
=	O
print	B-API
Content-Type	O
:	O
image/gifLast-Modified	O
:	O
Thu	O
,	O
07	O
Aug	O
2008	O
16:20:19	O
GMT	O
Expires	O
:	O
Sun	O
,	O
17	O
Jan	O
2038	O
19:14:07	O
GMT	O
Cache-Control	O
:	O
public	O
Date	B-API
:	O
Fri	O
,	O
08	O
Aug	O
2008	O
13:40:41	O
GMT	O
Server	O
:	O
gws	O
Content-Length	O
:	O
20172	O
Connection	O
:	O
urllib.urlopen	B-API
(	I-API
``	I-API
http	I-API
:	I-API
//www.google.co.uk/logos/olympics08_opening.gif	I-API
''	I-API
)	I-API
d.info	B-API
(	I-API
)	I-API
It	O
's	O
a	O
dict	O
,	O
so	O
to	O
get	O
the	O
size	O
of	O
the	O
file	O
,	O
you	O
do	O
urllibobject.info	B-API
(	I-API
)	I-API
print	B-API
f.info	B-API
(	I-API
)	I-API
And	O
to	O
get	O
the	O
size	O
of	O
the	O
local	O
file	O
(	O
for	O
comparison	O
)	O
,	O
you	O
can	O
use	O
the	O
os.stat	B-API
(	I-API
)	I-API
command	O
:	O
os.stat	B-API
(	I-API
``	I-API
/the/local/file.zip	I-API
''	I-API
)	I-API
Also	O
if	O
the	O
server	O
you	O
are	O
connecting	O
to	O
supports	O
it	O
,	O
look	O
at	O
Etags	O
and	O
the	O
If-Modified-Since	O
and	O
If-None-Match	O
headers	O
.	O
Using	O
these	O
will	O
take	O
advantage	O
of	O
the	O
webserver	O
's	O
caching	O
rules	O
and	O
will	O
return	O
a	O
304	O
Not	O
Modified	O
status	O
code	O
if	O
the	O
content	O
has	O
n't	O
changed	O
.	O
I	O
have	O
reproduced	O
what	O
you	O
are	O
seeing	O
:	O
import	B-API
urllib	B-API
,	O
oslink	O
=	O
``	O
http	O
:	O
//python.org	O
''	O
print	I-API
``	O
opening	O
url	O
:	O
''	O
,	O
linksite	O
=	O
meta	O
=	O
print	B-API
``	O
Content-Length	O
:	O
''	O
,	O
[	O
0	O
]	O
f	O
=	O
print	B-API
``	O
File	B-API
on	O
f	O
=	O
f	O
=	O
print	B-API
``	O
File	B-API
on	O
disk	O
after	O
print	O
.st_size	O
returns	O
:	O
''	O
,	O
urllib.urlopen	B-API
(	I-API
link	I-API
)	I-API
site.info	B-API
(	I-API
)	I-API
meta.getheaders	B-API
(	I-API
``	I-API
Content-Length	I-API
''	I-API
)	I-API
(	O
``	O
out.txt	O
''	O
,	O
``	O
r	O
''	O
)	O
disk	O
:	O
''	O
,	O
len	O
(	O
f.read	B-API
(	I-API
)	I-API
)	O
f.close	B-API
(	I-API
)	I-API
(	O
``	O
out.txt	O
''	O
,	O
``	O
w	O
''	O
)	O
f.write	B-API
(	O
site.read	B-API
(	I-API
)	I-API
)	O
site.close	B-API
(	I-API
)	I-API
f.close	B-API
(	I-API
)	I-API
(	O
``	O
out.txt	O
''	O
,	O
``	O
r	O
''	O
)	O
download	O
:	O
''	O
,	O
len	O
(	O
f.read	B-API
(	I-API
)	I-API
)	O
f.close	B-API
(	I-API
)	I-API
``	O
os.stat	B-API
(	I-API
)	I-API
os.stat	B-API
(	I-API
``	I-API
out.txt	I-API
''	I-API
)	I-API
Outputs	O
this	O
:	O
opening	O
url	O
:	O
http	O
:	O
//python.orgContent-Length	O
:	O
16535File	O
on	O
disk	O
:	O
16535File	O
on	O
disk	O
after	O
download	O
:	O
.st_size	O
returns	O
:	O
16535os.stat	B-API
(	I-API
)	I-API
What	O
am	O
I	O
doing	O
wrong	O
here	O
?	O
Is	O
os.stat	B-API
(	I-API
)	I-API
.st_size	I-API
not	O
returning	O
the	O
correct	O
size	O
?	O
Edit	O
:	O
OK	O
,	O
I	O
figured	O
out	O
what	O
the	O
problem	O
was	O
:	O
import	B-API
urllib	B-API
,	O
oslink	O
=	O
``	O
http	O
:	O
//python.org	O
''	O
print	B-API
``	O
opening	O
url	O
:	O
''	O
,	O
linksite	O
=	O
meta	O
=	O
print	B-API
``	O
Content-Length	O
:	O
''	O
,	O
[	O
0	O
]	O
f	O
=	O
print	B-API
``	O
File	B-API
on	O
f	O
=	O
f	O
=	O
print	O
``	O
File	B-API
on	O
disk	O
after	O
print	B-API
.st_size	O
returns	O
:	O
''	O
,	O
urllib.urlopen	B-API
(	I-API
link	I-API
)	I-API
site.info	B-API
(	I-API
)	I-API
meta.getheaders	B-API
(	O
``	O
Content-Length	O
''	O
)	O
(	O
``	O
out.txt	O
''	O
,	O
``	O
rb	O
''	O
)	O
disk	B-API
:	O
''	O
,	O
len	O
(	O
f.read	B-API
(	I-API
)	I-API
)	O
f.close	B-API
(	I-API
)	I-API
(	O
``	O
out.txt	O
''	O
,	O
``	O
wb	O
''	O
)	O
f.write	B-API
(	O
site.read	B-API
(	I-API
)	I-API
)	O
site.close	B-API
(	I-API
)	I-API
f.close	B-API
(	I-API
)	I-API
(	O
``	O
out.txt	O
''	O
,	O
``	O
rb	O
''	O
)	O
download	O
:	O
''	O
,	O
len	O
(	O
f.read	B-API
(	I-API
)	I-API
)	O
f.close	B-API
(	I-API
)	I-API
``	O
os.stat	B-API
(	I-API
)	I-API
os.stat	B-API
(	I-API
``	I-API
out.txt	I-API
''	I-API
)	I-API
this	O
outputs	O
:	O
$	O
python	O
test.pyopening	O
url	O
:	O
http	O
:	O
//python.orgContent-Length	O
:	O
16535File	O
on	O
disk	O
:	O
16535File	O
on	O
disk	O
after	O
download	O
:	O
.st_size	O
returns	O
:	O
16535os.stat	B-API
(	I-API
)	I-API
Make	O
sure	O
you	O
are	O
opening	O
both	O
files	O
for	O
binary	O
read/write	O
.	O
//	O
open	O
for	O
binary	O
//	O
open	O
for	O
binary	O
(	O
filename	O
,	O
``	O
wb	O
''	O
)	O
(	O
filename	O
,	O
``	O
rb	O
''	O
)	O
Would	O
use	O
double.TryParse	B-API
,	O
it	O
has	O
performance	O
benefits	O
.	O
I	O
'd	O
personally	O
use	O
int.tryparse	B-API
,	O
then	O
double.tryparse	B-API
.	O
Performance	O
on	O
those	O
methods	O
is	O
quite	O
fast	O
.	O
They	O
both	O
return	O
a	O
Boolean	B-API
.	O
If	O
both	O
fail	O
then	O
you	O
have	O
a	O
string	O
,	O
per	O
how	O
you	O
defined	O
your	O
data	O
.	O
I	O
would	O
say	O
,	O
do	O
n't	O
worry	O
so	O
much	O
about	O
such	O
micro	O
performance	O
.	O
It	O
is	O
much	O
better	O
to	O
just	O
get	O
something	O
to	O
work	O
,	O
and	O
then	O
make	O
it	O
as	O
clear	O
and	O
concise	O
and	O
easy	O
to	O
read	O
as	O
possible	O
.	O
The	O
worst	O
thing	O
you	O
can	O
do	O
is	O
sacrifice	O
readability	O
for	O
an	O
insignificant	O
amount	O
of	O
performance	O
.	O
In	O
the	O
end	O
,	O
the	O
best	O
way	O
to	O
deal	O
with	O
performance	O
issues	O
is	O
to	O
save	O
them	O
for	O
when	O
you	O
have	O
data	O
that	O
indicates	O
there	O
is	O
an	O
actual	O
performance	O
problem	O
...	O
otherwise	O
you	O
will	O
spend	O
a	O
lot	O
of	O
time	O
micro-optimizing	O
and	O
actually	O
cause	O
higher	O
maintenance	O
costs	O
for	O
later	O
on	O
.	O
If	O
you	O
find	O
this	O
parsing	O
situation	O
is	O
really	O
the	O
bottleneck	O
in	O
your	O
application	O
,	O
THEN	O
is	O
the	O
time	O
to	O
try	O
and	O
figure	O
out	O
what	O
the	O
fastest	O
way	O
to	O
solve	O
the	O
problem	O
is	O
.	O
I	O
think	O
Jeff	O
(	O
and	O
many	O
others	O
)	O
have	O
blogged	O
about	O
this	O
sort	O
of	O
thing	O
a	O
lot	O
.	O
If	O
the	O
data	O
modification	O
is	O
not	O
too	O
time	O
consuming	O
(	O
meaning	O
,	O
if	O
the	O
main	O
purpose	O
of	O
the	O
background	O
thread	O
is	O
not	O
the	O
actual	O
data	O
modification	O
)	O
,	O
try	O
moving	O
the	O
section	O
that	O
modifies	O
the	O
data	O
to	O
a	O
delegate	O
and	O
Invoke'ing	O
that	O
delegate	O
.	O
If	O
the	O
actual	O
heavy	O
work	O
is	O
on	O
the	O
data	O
,	O
you	O
'll	O
probably	O
have	O
to	O
create	O
a	O
deep	O
copy	O
of	O
this	O
data	O
to	O
pass	O
to	O
the	O
background	O
thread	O
,	O
which	O
will	O
send	O
the	O
processed	O
data	O
back	O
to	O
the	O
UI	O
thread	O
via	O
Invoke	O
again	O
.	O
You	O
should	O
be	O
able	O
to	O
do	O
something	O
like	O
:	O
if	B-API
(	I-API
control.InvokeRequired	I-API
)	I-API
{	O
;	O
}	O
else	O
{	O
control.Invoke	B-API
(	I-API
delegateWithMyCode	I-API
)	I-API
delegateWithMyCode	B-API
(	I-API
)	I-API
InvokeRequired	O
is	O
a	O
property	O
on	O
Controls	O
to	O
see	O
if	O
you	O
are	O
on	O
the	O
correct	O
thread	O
,	O
then	O
Invoke	O
will	O
invoke	O
the	O
delegate	O
on	O
the	O
correct	O
thread	O
.	O
UPDATE	O
:	O
Actually	O
,	O
at	O
my	O
last	O
job	O
we	O
did	O
something	O
like	O
this	O
:	O
private	O
void	O
{	O
if	B-API
(	I-API
this.InvokeRequired	I-API
)	I-API
{	O
,	O
someParam	O
)	O
;	O
}	O
//	O
Regular	O
handling	O
(	O
Object	O
someParam	O
)	O
(	O
new	O
SomeEventHandlerDelegate	O
(	O
SomeEventHandler	O
)	O
which	O
removes	O
the	O
need	O
for	O
the	O
else	O
block	O
and	O
kind	O
of	O
tightens	O
up	O
the	O
code	O
.	O
As	O
I	O
do	O
n't	O
have	O
a	O
test	O
case	O
to	O
go	O
from	O
I	O
ca	O
n't	O
guarantee	O
this	O
solution	O
,	O
but	O
it	O
seems	O
to	O
me	O
that	O
a	O
scenario	O
similar	O
to	O
the	O
one	O
used	O
to	O
update	O
progress	O
bars	O
in	O
different	O
threads	O
(	O
use	O
a	O
delegate	O
)	O
would	O
be	O
suitable	O
here	O
.	O
public	O
delegate	B-API
void	I-API
;	O
public	O
DataBindDelegate	B-API
BindData	O
=	O
new	O
;	O
public	O
void	O
{	O
DataBindDelegate	B-API
(	I-API
)	I-API
DataBindDelegate	B-API
(	I-API
DoDataBind	I-API
)	I-API
DoDataBind	B-API
(	I-API
)	I-API
DataBind	B-API
(	I-API
)	I-API
If	O
the	O
data	O
binding	O
needs	O
to	O
be	O
done	O
by	O
a	O
particular	O
thread	O
,	O
then	O
let	O
that	O
thread	O
do	O
the	O
work	O
!	O
Re	O
:	O
2004	O
No	O
,	O
you	O
will	O
only	O
move	O
the	O
code	O
that	O
changes	O
the	O
data	O
into	O
the	O
delegate	O
function	O
(	O
because	O
the	O
data	O
change	O
is	O
what	O
triggers	O
the	O
control	O
update	O
)	O
.	O
Other	O
than	O
that	O
,	O
you	O
should	O
not	O
have	O
to	O
write	O
anything	O
extra	O
.	O
If	O
the	O
thread	O
call	O
is	O
``	O
illegal	O
''	O
(	O
i.e	O
.	O
the	O
DataBind	O
call	O
affects	O
controls	O
that	O
were	O
not	O
created	O
in	O
the	O
thread	O
it	O
is	O
being	O
called	O
from	O
)	O
then	O
you	O
need	O
to	O
create	O
a	O
delegate	O
so	O
that	O
even	O
if	O
the	O
decision	O
/	O
preparation	O
for	O
the	O
DataBind	O
is	O
not	O
done	O
in	O
the	O
control-creating	O
thread	O
,	O
any	O
resultant	O
modification	O
of	O
them	O
(	O
i.e	O
.	O
DataBind	O
(	O
)	O
)	O
will	O
be	O
.	O
You	O
would	O
call	O
my	O
code	O
from	O
the	O
worker	O
thread	O
like	O
so	O
:	O
this.BindData.Invoke	B-API
(	I-API
)	I-API
This	O
would	O
then	O
cause	O
the	O
original	O
thread	O
to	O
do	O
the	O
binding	O
,	O
which	O
(	O
presuming	O
it	O
is	O
the	O
thread	O
that	O
created	O
the	O
controls	O
)	O
should	O
work	O
.	O
In	O
WPF	B-API
and	O
Silverlight	B-API
the	O
binding	O
infrastructure	O
takes	O
care	O
of	O
the	O
switching	O
to	O
the	O
UI	O
thread	O
.	O
NUnit	B-API
is	O
always	O
a	O
favorite	O
of	O
mine	O
.	O
However	O
if	O
you	O
are	O
using	O
TFS	B-API
as	O
your	O
source	O
control	O
I	O
suggest	O
you	O
stick	O
with	O
the	O
Microsoft	B-API
Stack	I-API
.	O
For	O
a	O
Mock	B-API
Object	I-API
library	O
,	O
I	O
've	O
found	O
the	O
BSD-licensed	B-API
Rhino.Mocks	I-API
to	O
be	O
rather	O
pleasing	O
.	O
NUnit	B-API
is	O
available	O
at	O
http	O
:	O
//www.nunit.org	O
I	O
would	O
suggest	O
this	O
even	O
when	O
working	O
on	O
the	O
MS	B-API
stack	I-API
-	O
the	O
support	O
for	O
non-MS	O
frameworks	O
is	O
happening	O
in	O
the	O
MVC	O
previews	O
which	O
shows	O
a	O
definite	O
movement	O
in	O
the	O
right	O
direction	O
to	O
allow	O
us	O
all	O
to	O
customise	O
our	O
stacks	O
to	O
fit	O
.	O
I	O
've	O
had	O
great	O
success	O
using	O
NUnit	B-API
as	O
well	O
.	O
I	O
've	O
also	O
used	O
NMock	B-API
when	O
the	O
need	O
arose	O
for	O
mock	O
objects	O
.	O
As	O
an	O
added	O
bonus	O
,	O
the	O
factory	O
for	O
creating	O
your	O
mock	O
objects	O
is	O
called	O
the	O
Mockery	O
.	O
To	O
facilitate	O
the	O
running	O
of	O
unit	O
tests	O
,	O
I	O
've	O
used	O
TestDriven.NET	B-API
to	O
run	O
unit	O
tests	O
as	O
I	O
coded	O
.	O
Also	O
,	O
I	O
've	O
used	O
Cruise	B-API
Control	I-API
.NET	I-API
to	O
watch	O
SVN	O
and	O
check	O
that	O
every	O
new	O
commit	O
builds	O
and	O
passes	O
all	O
unit	O
tests	O
.	O
We	O
use	O
MbUnit	B-API
and	O
Rihno	B-API
Mocks	I-API
and	O
they	O
prove	O
to	O
work	O
very	O
well	O
together	O
.	O
When	O
doing	O
TDD	O
you	O
will	O
almost	O
certainly	O
need	O
to	O
do	O
some	O
form	O
of	O
dependency	O
injection	O
,	O
while	O
this	O
can	O
be	O
done	O
manually	O
,	O
its	O
worth	O
looking	O
at	O
an	O
IoC	O
container	O
such	O
as	O
Castle	B-API
Windsor	I-API
.	O
It	O
well	O
worth	O
looking	O
at	O
John	O
Paul	O
Bodhood	O
's	O
screen	O
casts	O
to	O
get	O
you	O
started	O
.	O
JPB	O
's	O
Blog	O
I	O
'm	O
not	O
a	O
javascript	O
expert	O
but	O
it	O
looks	O
like	O
you	O
would	O
have	O
to	O
loop	O
through	O
the	O
elements	O
and	O
count	O
them	O
since	O
Object	O
does	O
n't	O
have	O
a	O
length	O
method	O
:	O
var	O
element_count	O
=	O
0	O
;	O
for	O
(	O
e	O
in	O
myArray	O
)	O
{	O
if	O
(	O
myArray.hasOwnProperty	O
(	O
e	O
)	O
)	O
element_count++	O
;	O
}	O
@	O
palmsey	O
:	O
In	O
fairness	O
to	O
the	O
OP	O
,	O
the	O
javascript	O
docs	O
actually	O
explicitly	O
refer	O
to	O
using	O
variables	O
of	O
type	O
Object	O
in	O
this	O
manner	O
as	O
``	O
associative	O
arrays	O
''	O
.	O
Here	O
's	O
how	O
and	O
do	O
n't	O
forget	O
to	O
check	O
that	O
the	O
property	O
is	O
not	O
on	O
the	O
prototype	O
chain	O
:	O
var	O
element_count	O
=	O
0	O
;	O
for	O
(	O
var	O
e	O
in	O
myArray	O
)	O
if	O
(	O
myArray.hasOwnProperty	O
(	O
e	O
)	O
)	O
element_count++	O
;	O
@	O
palmsey	O
:	O
In	O
fairness	O
to	O
the	O
OP	O
,	O
the	O
javascript	O
docs	O
actually	O
explicitly	O
refer	O
to	O
using	O
variables	O
of	O
type	O
Object	O
in	O
this	O
manner	O
as	O
``	O
associative	O
arrays	O
''	O
.	O
And	O
in	O
fairness	O
to	O
@	O
palmsey	O
he	O
was	O
quite	O
correct	O
,	O
they	O
are	O
n't	O
associative	O
arrays	O
,	O
they	O
're	O
definitely	O
objects	O
:	O
)	O
-	O
doing	O
the	O
job	O
of	O
an	O
associative	O
array	O
.	O
But	O
as	O
regards	O
the	O
wider	O
point	O
you	O
definitely	O
seem	O
to	O
have	O
the	O
right	O
of	O
it	O
according	O
to	O
this	O
rather	O
fine	O
article	O
I	O
found	O
:	O
JavaScript	O
Associative	O
Arrays	O
Considered	O
Harmful	O
But	O
according	O
to	O
all	O
this	O
,	O
is	O
n't	O
the	O
accepted	O
answer	O
itself	O
bad	O
practice	O
?	O
Specify	O
a	O
prototype	O
size	B-API
(	I-API
)	I-API
function	O
for	O
Object	O
If	O
anything	O
else	O
has	O
been	O
added	O
to	O
Object	O
.prototype	O
,	O
then	O
the	O
suggested	O
code	O
will	O
fail	O
:	O
script	O
type=	O
''	O
text/javascript	O
''	O
Object.prototype.size	B-API
=	O
function	O
(	O
)	O
{	O
var	O
len	O
=	O
this.length	B-API
?	O
--	O
this.length	B-API
:	O
-1	O
;	O
for	O
(	O
var	O
k	O
in	O
this	O
)	O
len++	O
;	O
return	O
len	O
;	O
}	O
Object.prototype.size2	O
=	O
function	O
(	O
)	O
{	O
var	O
len	O
=	O
this.length	B-API
?	O
--	O
this.length	B-API
:	O
-1	O
;	O
for	O
(	O
var	O
k	O
in	O
this	O
)	O
len++	O
;	O
return	O
len	O
;	O
}	O
var	O
myArray	O
=	O
new	O
Object	B-API
(	I-API
)	I-API
;	O
myArray	O
[	O
``	O
firstname	O
''	O
]	O
=	O
``	O
Gareth	O
''	O
;	O
myArray	O
[	O
``	O
lastname	O
''	O
]	O
=	O
``	O
Simpson	O
''	O
;	O
myArray	O
[	O
``	O
age	O
''	O
]	O
=	O
21	O
;	O
alert	B-API
(	I-API
``	O
age	O
is	O
``	O
+	O
myArray	O
[	O
``	O
age	O
''	O
]	O
)	O
;	O
alert	B-API
(	I-API
``	I-API
length	I-API
is	I-API
``	I-API
+	I-API
myArray.size	I-API
(	I-API
)	I-API
)	I-API
;	O
/script	O
I	O
do	O
n't	O
think	O
that	O
answer	O
should	O
be	O
the	O
accepted	O
one	O
as	O
it	O
ca	O
n't	O
be	O
trusted	O
to	O
work	O
if	O
you	O
have	O
any	O
other	O
code	O
running	O
in	O
the	O
same	O
execution	O
context	O
.	O
To	O
do	O
it	O
in	O
a	O
robust	O
fashion	O
surely	O
you	O
would	O
need	O
to	O
define	O
the	O
size	B-API
method	O
within	O
myArray	O
and	O
check	O
for	O
the	O
type	O
of	O
the	O
members	O
as	O
you	O
iterate	O
through	O
them	O
.	O
Your	O
object	O
has	O
a	O
(	O
String	B-API
paramName	O
)	O
method	O
that	O
can	O
be	O
used	O
to	O
get	O
parameter	O
values	O
.	O
http	O
:	O
//java.sun.com/javaee/5/docs/api/javax/servlet/ServletRequest.html	O
#	O
getParameter	B-API
(	I-API
java.lang.String	I-API
)	I-API
POST	O
variables	O
should	O
be	O
accessible	O
via	O
the	O
request	O
object	O
:	O
HttpRequest.getParameterMap	B-API
(	I-API
)	I-API
.	O
The	O
exception	O
is	O
if	O
the	O
form	O
is	O
sending	O
multipart	O
MIME	O
data	O
(	O
the	O
FORM	O
has	O
enctype=	O
''	O
multipart/form-data	O
''	O
)	O
.	O
In	O
that	O
case	O
,	O
you	O
need	O
to	O
parse	O
the	O
byte	O
stream	O
with	O
a	O
MIME	O
parser	O
.	O
You	O
can	O
write	O
your	O
own	O
or	O
use	O
an	O
existing	O
one	O
like	O
the	O
Apache	B-API
Commons	I-API
File	I-API
Upload	I-API
API	I-API
.	O
Well	O
,	O
I	O
do	O
n't	O
really	O
have	O
an	O
expert	O
opinion	O
on	O
this	O
.	O
I	O
usually	O
end	O
up	O
using	O
closures	O
based	O
approach	O
just	O
because	O
it	O
keeps	O
the	O
code	O
simpler	O
to	O
manager	O
.	O
But	O
,	O
I	O
have	O
found	O
myself	O
using	O
prototypes	O
for	O
methods	O
that	O
have	O
loads	O
of	O
lines	O
of	O
code	O
.	O
You	O
also	O
have	O
the	O
choice	O
of	O
:	O
function	O
{	O
function	O
{	O
return	O
;	O
(	O
x	O
,	O
y	O
,	O
z	O
)	O
length	B-API
(	I-API
)	I-API
(	O
x	O
*	O
x	O
+	O
...	O
)	O
Which	O
is	O
probably	O
just	O
as	O
slow	O
as	O
example	O
two	O
,	O
but	O
it	O
looks	O
more	O
like	O
Java/C	O
#	O
and	O
is	O
a	O
bit	O
more	O
explicit	O
.	O
Assigning	O
functions	O
to	O
the	O
prototype	O
is	O
better	O
(	O
for	O
public	O
methods	O
)	O
because	O
all	O
instances	O
of	O
the	O
class	O
will	O
share	O
the	O
same	O
copy	O
of	O
the	O
method	O
.	O
If	O
you	O
assign	O
the	O
function	O
inside	O
the	O
constructor	O
as	O
in	O
the	O
second	O
example	O
,	O
every	O
time	O
you	O
create	O
a	O
new	O
instance	O
,	O
the	O
constructor	O
creates	O
a	O
new	O
copy	O
of	O
the	O
length	O
function	O
and	O
assigns	O
it	O
to	O
just	O
that	O
one	O
instance	O
.	O
However	O
this	O
latter	O
technique	O
is	O
useful	O
if	O
you	O
want	O
each	O
copy	O
to	O
have	O
it	O
's	O
own	O
copy	O
,	O
the	O
main	O
use	O
of	O
that	O
being	O
to	O
do	O
private/privileges	O
methods	O
which	O
have	O
access	O
to	O
private	O
variables	O
declared	O
inside	O
the	O
constructor	O
and	O
inherited	O
via	O
the	O
closure	O
mechanism	O
.	O
Douglas	O
Crockford	O
has	O
a	O
good	O
summary	O
.	O
Fortunately	O
I	O
get	O
to	O
use	O
,	O
which	O
provides	O
some	O
nice	O
wrappers	O
.	O
So	O
you	O
can	O
do	O
this	O
:	O
var	O
Person	O
=	O
Class.create	B-API
(	O
{	O
initialize	O
:	O
function	O
(	O
name	O
)	O
{	O
this.name	O
=	O
name	O
;	O
}	O
,	O
say	O
:	O
function	O
(	O
message	O
)	O
{	O
return	O
this.name	O
+	O
'	O
:	O
'	O
+	O
message	O
;	O
}	O
}	O
)	O
;	O
Documentation	O
:	O
Defining	O
classes	O
and	O
inheritance	O
I	O
'm	O
not	O
certain	O
,	O
but	O
I	O
believe	O
you	O
can	O
put	O
it	O
in	O
a	O
config	O
file	O
and	O
encrypt	O
the	O
config	O
file	O
.	O
Update	O
:	O
See	O
Jon	O
Galloway	O
's	O
post	O
here	O
.	O
If	O
the	O
app	O
is	O
an	O
ASP.NET	O
app	O
then	O
just	O
encrypt	O
the	O
connection	O
strings	O
section	O
of	O
your	O
.	O
If	O
the	O
app	O
is	O
a	O
client	O
application	O
running	O
on	O
multiple	O
machines	O
,	O
instead	O
of	O
storing	O
the	O
connection	O
string	O
locally	O
,	O
consider	O
using	O
a	O
web	O
service	O
or	O
some	O
other	O
kind	O
of	O
secure	O
mechanism	O
to	O
store	O
it	O
centrally	O
.	O
This	O
would	O
facilitate	O
easier	O
updates	O
in	O
the	O
future	O
and	O
you	O
're	O
not	O
storing	O
the	O
connection	O
string	O
locally	O
.	O
Just	O
some	O
thoughts	O
.	O
Updated	O
:	O
@	O
lassevk	O
''	O
Storing	O
the	O
connection	O
string	O
on	O
a	O
server	O
,	O
and	O
obtaining	O
it	O
through	O
a	O
web	O
connection	O
sounds	O
good	O
,	O
until	O
you	O
realize	O
that	O
you	O
need	O
security	O
on	O
that	O
web	O
connection	O
as	O
well	O
,	O
otherwise	O
an	O
attacker	O
could	O
just	O
as	O
well	O
impersonate	O
your	O
program	O
and	O
talk	O
to	O
the	O
web	O
connection	O
.	O
''	O
Security	O
on	O
the	O
web	O
service	O
was	O
implicit	O
.	O
Depending	O
on	O
the	O
type	O
of	O
deployment	O
there	O
are	O
a	O
numerous	O
options	O
...	O
for	O
example	O
client	O
side	O
certificates	O
.	O
I	O
hate	O
to	O
say	O
this	O
but	O
as	O
soon	O
as	O
you	O
put	O
something	O
on	O
a	O
client	O
machine	O
,	O
security	O
for	O
that	O
data	O
goes	O
out	O
the	O
window	O
.	O
If	O
your	O
program	O
is	O
going	O
to	O
decrypt	O
that	O
string	O
,	O
you	O
need	O
to	O
assume	O
that	O
an	O
attacker	O
can	O
do	O
the	O
same	O
.	O
Attaching	O
a	O
debugger	O
to	O
your	O
program	O
would	O
be	O
one	O
way	O
.	O
Storing	O
the	O
connection	O
string	O
on	O
a	O
server	O
,	O
and	O
obtaining	O
it	O
through	O
a	O
web	O
connection	O
sounds	O
good	O
,	O
until	O
you	O
realize	O
that	O
you	O
need	O
security	O
on	O
that	O
web	O
connection	O
as	O
well	O
,	O
otherwise	O
an	O
attacker	O
could	O
just	O
as	O
well	O
impersonate	O
your	O
program	O
and	O
talk	O
to	O
the	O
web	O
connection	O
.	O
Let	O
me	O
ask	O
a	O
question	O
.	O
Who	O
are	O
you	O
hiding	O
the	O
connection	O
string	O
from	O
?	O
The	O
user	O
or	O
an	O
attacker	O
?	O
And	O
if	O
the	O
user	O
,	O
why	O
?	O
There	O
are	O
some	O
other	O
idea	O
's	O
also	O
.	O
You	O
can	O
always	O
use	O
impersonation	O
.	O
Also	O
,	O
you	O
can	O
use	O
the	O
Enterprise	O
Library	O
's	O
(	O
Common	O
Library	O
)	O
.	O
section	O
name=	O
''	O
enterpriseLibrary.ConfigurationSource	B-API
''	O
type=	O
''	O
Microsoft.Practices.EnterpriseLibrary.Common.Configuration.ConfigurationSourceSection	B-API
,	O
Microsoft.Practices.EnterpriseLibrary.Common	B-API
,	O
Version=3.1.0.0	B-API
,	O
Culture=neutral	B-API
,	O
PublicKeyToken=b03f5f7f11d50a3a	B-API
''	O
/enterpriseLibrary.ConfigurationSource	B-API
selectedSource=	O
''	O
Common	O
''	O
sources	O
add	O
name=	O
''	O
Common	O
''	O
type=	O
''	O
Microsoft.Practices.EnterpriseLibrary.Common.Configuration.FileConfigurationSource	B-API
,	O
Microsoft.Practices.EnterpriseLibrary.Common	B-API
,	O
Version=3.1.0.0	B-API
,	O
Culture=neutral	O
,	O
PublicKeyToken=b03f5f7f11d50a3a	B-API
''	O
filePath=	O
''	O
Config\Exception.config	B-API
''	I-API
.NET	O
supports	O
encryption	O
on	O
config	O
values	O
like	O
this	O
.	O
You	O
could	O
leave	O
it	O
in	O
a	O
config	O
file	O
,	O
but	O
encrypted	O
.	O
You	O
want	O
to	O
be	O
able	O
to	O
distribute	O
the	O
DLL	O
with	O
all	O
of	O
the	O
setup	O
information	O
being	O
in	O
a	O
configurable	O
place	O
,	O
but	O
the	O
fact	O
is	O
you	O
ca	O
n't	O
have	O
one	O
of	O
the	O
handy-dandy	O
.NET	O
config	O
files	O
for	O
a	O
DLL	O
unless	O
you	O
do	O
something	O
custom	O
.	O
Maybe	O
you	O
need	O
to	O
rethink	O
what	O
responsibility	O
your	O
DLL	O
should	O
have	O
.	O
Would	O
it	O
be	O
possible	O
,	O
or	O
make	O
sense	O
to	O
require	O
that	O
the	O
connection	O
string	O
be	O
passed	O
in	O
by	O
the	O
user	O
of	O
your	O
library	O
?	O
Does	O
it	O
really	O
make	O
sense	O
that	O
your	O
DLL	O
reads	O
a	O
config	O
file	O
?	O
gedit	B-API
Syntax	O
highlighting	O
Fast	O
,	O
lightweight	O
Tabs	O
GUI	O
emacs	O
has	O
been	O
used	O
by	O
linux	O
programmers	O
for	O
decades	O
.	O
It	O
features	O
syntax	O
highlighting	O
,	O
it	O
's	O
fast	O
,	O
and	O
there	O
are	O
a	O
million	O
tutorials	O
out	O
there	O
you	O
can	O
find	O
.	O
any	O
of	O
the	O
popular	O
editors	O
can	O
be	O
turned	O
into	O
an	O
ide	O
.	O
I	O
use	O
Vi	O
on	O
the	O
console	O
and	O
have	O
used	O
various	O
gui	O
editors	O
over	O
the	O
years	O
.	O
This	O
does	O
n't	O
just	O
go	O
for	O
linux	O
I	O
use	O
Crimson	O
Editor	O
on	O
windows	O
as	O
a	O
C/python/z80asm	O
ide	O
.	O
I	O
bounce	O
about	O
between	O
Mac	O
,	O
Windows	O
and	O
Ubuntu	O
and	O
while	O
Emacs	O
used	O
to	O
be	O
my	O
editor	O
of	O
choice	O
,	O
I	O
'm	O
finding	O
that	O
in	O
my	O
old	O
age	O
I	O
prefer	O
to	O
something	O
GUI-based	O
(	O
using	O
command-line	O
for	O
the	O
shell	O
is	O
still	O
fine	O
by	O
me	O
)	O
.	O
My	O
preferred	O
editor	O
is	O
Komodo	O
Edit	O
,	O
which	O
the	O
advantages	O
of	O
:	O
Being	O
free	O
(	O
as	O
in	O
beer	O
)	O
Available	O
for	O
Mac	O
,	O
Windows	O
and	O
Linux	O
Syntax	O
highlighting	O
for	O
a	O
boatload	O
of	O
languages	O
,	O
including	O
C++	O
and	O
PHP	O
(	O
I	O
'm	O
using	O
it	O
for	O
Ruby	O
,	O
Python	O
and	O
PHP	O
myself	O
)	O
Code	O
completion	O
,	O
even	O
for	O
classes	O
I	O
defined	O
myself	O
Ability	O
to	O
``	O
remote	O
save	O
''	O
via	O
FTP	O
,	O
SFTP	O
or	O
SCP	O
Support	O
for	O
organizing	O
your	O
files	O
into	O
projects	O
Tabs	O
and	O
other	O
interface	O
niceties	O
I	O
'm	O
not	O
sure	O
how	O
lightweight	O
it	O
is	O
,	O
but	O
it	O
certainly	O
feels	O
snappier	O
than	O
Eclipse	O
!	O
Joey	O
,	O
I	O
believe	O
anything	O
is	O
lighter	O
than	O
Eclipse	O
!	O
:	O
o	O
)	O
Vim	O
(	O
or	O
Emacs	O
varying	O
on	O
religion	O
)	O
will	O
always	O
be	O
my	O
first	O
answer	O
to	O
this	O
question	O
,	O
over	O
any	O
point-and-click	O
IDE	O
.	O
As	O
they	O
write	O
in	O
The	O
Pragmatic	O
Programmer	O
Choose	O
an	O
editor	O
,	O
know	O
it	O
thoroughly	O
,	O
and	O
use	O
it	O
for	O
all	O
editing	O
tasks	O
.	O
[	O
...	O
]	O
The	O
editor	O
will	O
be	O
an	O
extension	O
of	O
your	O
hand	O
;	O
the	O
keys	O
will	O
sing	O
as	O
they	O
slice	O
their	O
way	O
through	O
text	O
and	O
thought	O
.	O
That	O
's	O
our	O
goal	O
.	O
Make	O
sure	O
that	O
the	O
editor	O
you	O
choose	O
is	O
available	O
on	O
all	O
platforms	O
you	O
use	O
.	O
Vim	O
is	O
configurable	O
,	O
extensible	O
,	O
programmable	O
and	O
can	O
be	O
turned	O
into	O
an	O
IDE	O
with	O
all	O
the	O
regular	O
features	O
.	O
Lately	O
I	O
've	O
been	O
using	O
Eclim	O
to	O
``	O
bring	O
Eclipse	O
functionality	O
to	O
the	O
Vim	O
editor	O
''	O
(	O
projects	O
,	O
better	O
java	O
support	O
etc	O
.	O
)	O
making	O
it	O
a	O
complete	O
platform	O
with	O
advanced	O
IDE	O
features	O
.	O
If	O
you	O
are	O
taking	O
your	O
time	O
switching	O
to	O
linux	O
,	O
I	O
'd	O
switch	O
to	O
emacs	O
or	O
vim	O
at	O
some	O
point	O
as	O
well	O
.	O
There	O
will	O
always	O
be	O
a	O
resource	O
or	O
a	O
document	O
describing	O
exactly	O
the	O
problem	O
you	O
are	O
having	O
with	O
either	O
of	O
them	O
,	O
and	O
generally	O
a	O
solution	O
is	O
just	O
a	O
few	O
more	O
clicks	O
down	O
the	O
road	O
.	O
Emacs	O
may	O
be	O
easier	O
at	O
the	O
beginning	O
because	O
of	O
modeless	O
editing	O
...	O
but	O
do	O
n't	O
let	O
modal	O
editing	O
scare	O
you	O
away	O
from	O
Vim	O
.	O
The	O
key	O
with	O
either	O
Vim	O
or	O
Emacs	O
is	O
knowing	O
it	O
could	O
probably	O
take	O
you	O
the	O
better	O
part	O
of	O
the	O
day	O
just	O
to	O
figure	O
out	O
what	O
you	O
want	O
them	O
to	O
do	O
,	O
let	O
alone	O
how	O
to	O
get	O
them	O
to	O
do	O
that	O
.	O
Once	O
they	O
work	O
for	O
you	O
though	O
,	O
you	O
'll	O
see	O
why	O
mostly	O
everyone	O
is	O
in	O
one	O
of	O
two	O
camps	O
.	O
General	O
hints	O
:	O
Setting	O
up	O
a	O
Makefile	O
for	O
your	O
project	O
is	O
almost	O
always	O
worth	O
it	O
.	O
Using	O
cscope	O
and	O
or	O
ctags	O
will	O
make	O
your	O
life	O
easier	O
.	O
Vim	O
hints	O
:	O
:	O
make	O
:	O
cn	O
,	O
:	O
cp	O
OmniCompletion	B-API
using	O
BufRead	O
autoloads	O
to	O
set	O
what	O
:	O
make	O
should	O
do	O
depending	O
on	O
file	O
type	O
Emacs	O
hints	O
:	O
ecb	O
is	O
fun	O
M-x	O
dired	O
M-	O
.	O
M-	O
,	O
M-*	O
M-x	O
complete-tag	O
for	O
etags	O
M-x	O
compile	B-API
(	I-API
add-hook	I-API
'mylanguage-mode-hook	I-API
'	I-API
(	I-API
lambda	I-API
(	I-API
)	I-API
(	I-API
setq	I-API
my-customizations	I-API
t	I-API
)	I-API
)	I-API
)	I-API
And	O
check	O
out	O
other	O
people	O
's	O
customizations	O
for	O
examples	O
of	O
what	O
other	O
people	O
do	O
.	O
No	O
.	O
See	O
A	O
Pragmatic	O
Look	O
at	O
Exception	O
Specifications	O
for	O
reasons	O
why	O
not	O
.	O
The	O
only	O
way	O
you	O
can	O
``	O
help	O
''	O
this	O
is	O
to	O
document	O
the	O
exceptions	O
your	O
function	O
can	O
throw	O
,	O
say	O
as	O
a	O
comment	O
in	O
the	O
header	O
file	O
declaring	O
it	O
.	O
This	O
is	O
not	O
enforced	O
by	O
the	O
compiler	O
or	O
anything	O
.	O
Use	O
code	O
reviews	O
for	O
that	O
purpose	O
.	O
Or	O
you	O
could	O
start	O
throwing	O
critical	O
exceptions	O
.	O
Surely	O
,	O
an	O
access	O
violation	O
exception	O
will	O
catch	O
your	O
users	O
'	O
attention	O
.	O
Outside	O
the	O
scope	O
of	O
your	O
question	O
so	O
I	O
debated	O
not	O
posting	O
this	O
but	O
in	O
Java	O
there	O
are	O
actually	O
2	O
types	O
of	O
exceptions	O
,	O
checked	O
and	O
unchecked	O
.	O
The	O
basic	O
difference	O
is	O
that	O
,	O
much	O
like	O
in	O
,	O
you	O
dont	O
have	O
to	O
catch	O
an	O
unchecked	O
exception	O
.	O
For	O
a	O
good	O
reference	O
try	O
this	O
Is	O
there	O
a	O
way	O
one	O
can	O
ensure	O
that	O
the	O
exceptions	O
thrown	O
are	O
always	O
caught	O
using	O
try/catch	O
by	O
the	O
calling	O
function	O
?	O
I	O
find	O
it	O
rather	O
funny	O
,	O
that	O
the	O
Java	O
crowd	O
-	O
including	O
myself	O
-	O
is	O
trying	O
to	O
avoid	O
checked	O
Exceptions	O
.	O
They	O
are	O
trying	O
to	O
work	O
their	O
way	O
around	O
being	O
forced	O
to	O
catch	O
Exceptions	O
by	O
using	O
RuntimeExceptions	O
.	O
Chris	O
'	O
probably	O
has	O
the	O
best	O
pure	O
answer	O
to	O
the	O
question	O
:	O
However	O
,	O
I	O
'm	O
curious	O
about	O
the	O
root	O
of	O
the	O
question	O
.	O
If	O
the	O
user	O
should	O
always	O
wrap	O
the	O
call	O
in	O
a	O
try/catch	O
block	O
,	O
should	O
the	O
user-called	O
function	O
really	O
be	O
throwing	O
exceptions	O
in	O
the	O
first	O
place	O
?	O
This	O
is	O
a	O
difficult	O
question	O
to	O
answer	O
without	O
more	O
context	O
regarding	O
the	O
code-base	O
in	O
question	O
.	O
Shooting	O
from	O
the	O
hip	O
,	O
I	O
think	O
the	O
best	O
answer	O
here	O
is	O
to	O
wrap	O
the	O
function	O
up	O
such	O
that	O
the	O
recommended	O
(	O
if	O
not	O
only	O
,	O
depending	O
on	O
the	O
overall	O
exception	O
style	O
of	O
the	O
code	O
)	O
public	O
interface	O
does	O
the	O
try/catch	O
for	O
the	O
user	O
.	O
If	O
you	O
're	O
just	O
trying	O
to	O
ensure	O
that	O
there	O
are	O
no	O
unhandled	O
exceptions	O
in	O
your	O
code	O
,	O
unit	O
tests	O
and	O
code	O
review	O
are	O
probably	O
the	O
best	O
solution	O
.	O
Firebug	B-API
is	O
pretty	O
well	O
unbeatable	O
for	O
JavaScript	O
development	O
in	O
a	O
browser	O
.	O
'alert	B-API
(	I-API
x	I-API
)	I-API
;	O
'	O
was	O
the	O
primary	O
technique	O
for	O
too	O
long	O
.	O
FireBug	O
,	O
as	O
others	O
have	O
said	O
,	O
is	O
the	O
way	O
to	O
go	O
in	O
FireFox	O
debugging	O
.	O
the	O
Aptana	O
IDE	O
(	O
based	O
on	O
eclipse	O
)	O
made	O
a	O
bit	O
of	O
a	O
splash	O
in	O
the	O
javascript	O
IDE	O
region	O
recently	O
.	O
Visual	O
Studio	O
2008	O
contains	O
much	O
improved	O
javascript	O
debugging	O
capabilities	O
over	O
the	O
previous	O
versions	O
.	O
Try	O
a	O
combination	O
of	O
Script	B-API
#	I-API
(	I-API
http	I-API
:	I-API
//www.nikhilk.net/ScriptSharpIntro.aspx	I-API
)	I-API
and	O
Firebug	O
Cheers	O
The	O
nightly	O
builds	O
of	O
WebKit	O
have	O
some	O
great	O
new	O
debugging	O
tools	O
:	O
http	O
:	O
//nightly.webkit.org/	O
We	O
use	O
FindBugs	B-API
and	O
JDepend	B-API
integrated	O
with	O
Ant	O
.	O
We	O
use	O
JUnit	B-API
but	O
we	O
're	O
not	O
using	O
any	O
coverage	O
tool	O
.	O
I	O
'm	O
not	O
using	O
it	O
integrated	O
to	O
Rational	O
Application	O
Developer	O
(	O
the	O
IDE	O
I	O
'm	O
using	O
to	O
develop	O
J2EE	O
applications	O
)	O
because	O
I	O
like	O
how	O
neat	O
it	O
looks	O
when	O
you	O
run	O
javac	O
in	O
the	O
Windows	O
console	O
.	O
:	O
P	O
Checkstyle	O
is	O
another	O
one	O
I	O
've	O
used	O
at	O
a	O
previous	O
company	O
...	O
it	O
's	O
mainly	O
for	O
style	O
checking	O
,	O
but	O
it	O
can	O
do	O
some	O
static	O
analysis	O
too	O
.	O
Also	O
,	O
Clover	O
for	O
code	O
coverage	O
,	O
though	O
be	O
aware	O
it	O
is	O
not	O
a	O
free	O
tool	O
.	O
We	O
are	O
using	O
FindBugs	O
and	O
Checkstyle	O
as	O
well	O
as	O
Clover	O
for	O
Code	O
Coverage	O
.	O
I	O
think	O
it	O
's	O
important	O
to	O
have	O
some	O
kind	O
of	O
static	O
analysis	O
,	O
supporting	O
your	O
development	O
.	O
Unfortunately	O
it	O
's	O
still	O
not	O
widely	O
spread	O
that	O
these	O
tools	O
are	O
important	O
.	O
I	O
am	O
looking	O
for	O
many	O
answers	O
to	O
learn	O
about	O
new	O
tools	O
and	O
consolidate	O
this	O
knowledge	O
in	O
a	O
one	O
question/thread	O
,	O
so	O
I	O
doubt	O
there	O
will	O
be	O
1	O
true	O
answer	O
to	O
this	O
question	O
.	O
My	O
answer	O
to	O
my	O
own	O
question	O
is	O
that	O
we	O
use	O
:	O
Findbugs	O
to	O
look	O
for	O
common	O
errors	O
bad/coding	O
-	O
run	O
from	O
maven	O
,	O
and	O
also	O
integrates	O
easily	O
into	O
Eclipse	O
Cobertura	O
for	O
our	O
coverage	O
reports	O
-	O
run	O
from	O
maven	O
Hudson	O
also	O
has	O
a	O
task-scanner	O
plugin	O
that	O
will	O
display	O
a	O
count	O
of	O
your	O
TODO	O
and	O
FIXMEs	O
,	O
as	O
well	O
as	O
show	O
where	O
they	O
are	O
in	O
the	O
source	O
files	O
.	O
All	O
are	O
integrated	O
with	O
Maven	O
1.x	O
in	O
our	O
case	O
and	O
tied	O
into	O
Hudson	O
,	O
which	O
runs	O
our	O
builds	O
on	O
check-in	O
as	O
well	O
as	O
extra	O
things	O
nightly	O
and	O
weekly	O
.	O
Hudson	O
trend	O
graphs	O
our	O
JUnit	B-API
tests	O
,	O
coverage	O
,	O
findbugs	O
,	O
as	O
well	O
as	O
open	O
tasks	O
.	O
There	O
is	O
also	O
a	O
Hudson	O
plugin	O
that	O
reports	O
and	O
graphs	O
our	O
compile	O
warnings	O
.	O
We	O
also	O
have	O
several	O
performance	O
tests	O
with	O
their	O
own	O
graphs	O
of	O
performance	O
and	O
memory	O
use	O
over	O
time	O
using	O
the	O
Hudson	O
plots	O
plugin	O
as	O
well	O
.	O
I	O
would	O
first	O
find	O
out	O
if	O
the	O
site	B-API
(	I-API
s	I-API
)	I-API
in	O
question	O
provide	O
an	O
API	O
server	O
or	O
RSS	O
Feeds	O
for	O
access	O
the	O
data	O
you	O
require	O
.	O
The	O
Ruby	O
world	O
's	O
equivalent	O
to	O
Beautiful	O
Soup	O
is	O
why_the_lucky_stiff	O
's	O
Hpricot	O
.	O
Regular	O
expressions	O
work	O
pretty	O
well	O
for	O
HTML	O
scraping	O
as	O
well	O
;	O
-	O
)	O
Though	O
after	O
looking	O
at	O
Beautiful	O
Soup	O
,	O
I	O
can	O
see	O
why	O
this	O
would	O
be	O
a	O
valuable	O
tool	O
.	O
You	O
probably	O
have	O
as	O
much	O
already	O
,	O
but	O
I	O
think	O
this	O
is	O
what	O
you	O
are	O
trying	O
to	O
do	O
:	O
from	O
__future__	B-API
import	I-API
with_statementimport	I-API
re	I-API
,	I-API
osprofile	I-API
=	I-API
``	I-API
http	I-API
:	I-API
//stackoverflow.com/users/30/myProfile.html	I-API
'	I-API
)	I-API
with	O
as	O
f	O
:	O
for	O
line	O
in	O
f	O
:	O
profile	O
=	O
profile	O
+	O
p	O
=	O
/div	O
'	O
)	O
#	O
Rep	O
is	O
found	O
hereprin	O
pm	O
=	O
print	O
mprint	O
+	O
``	O
``	O
os.system	B-API
(	I-API
'wget	I-API
--	I-API
no-cookies	I-API
--	I-API
header	I-API
``	I-API
Cookie	I-API
:	I-API
soba=	B-API
(	I-API
SeCreTCODe	I-API
)	I-API
open	B-API
(	I-API
``	I-API
myProfile.html	I-API
''	I-API
)	I-API
linef.close	B-API
(	I-API
)	I-API
re.compile	B-API
(	I-API
'summarycount	I-API
''	I-API
(	I-API
\d+	I-API
)	I-API
p.search	B-API
(	I-API
profile	I-API
)	I-API
(	O
1	O
)	O
os.system	B-API
(	I-API
``	I-API
espeak	B-API
\	O
''	O
Rep	O
is	O
at	O
``	O
+	O
m.group	O
(	O
1	O
)	O
points\	B-API
''	I-API
''	I-API
os.remove	B-API
(	I-API
``	I-API
myProfile.html	I-API
''	I-API
)	I-API
For	O
Perl	O
,	O
there	O
's	O
WWW	O
:	O
:Mechanize	O
.	O
I	O
use	O
Hpricot	O
on	O
Ruby	O
.	O
As	O
an	O
example	O
this	O
is	O
a	O
snippet	O
of	O
code	O
that	O
I	O
use	O
to	O
retrieve	O
all	O
book	O
titles	O
from	O
the	O
six	O
pages	O
of	O
my	O
HireThings	O
account	O
(	O
as	O
they	O
do	O
n't	O
seem	O
to	O
provide	O
a	O
single	O
page	O
with	O
this	O
information	O
)	O
:	O
pagerange	O
=	O
1..6	O
proxy	O
=	O
Net	O
:	O
:HTTP	O
:	O
:Proxy	B-API
(	I-API
proxy	I-API
,	I-API
port	I-API
,	I-API
user	I-API
,	I-API
pwd	I-API
)	I-API
proxy.start	B-API
(	I-API
'www.hirethings.co.nz	I-API
'	I-API
)	I-API
do	O
|http|	O
pagerange.each	B-API
do	O
|page|	O
resp	O
,	O
data	O
=	O
http.get	B-API
``	I-API
/perth_dotnet	I-API
?	I-API
page=	O
#	O
{	O
page	O
}	O
''	O
if	O
resp.class	O
==	O
Net	O
:	O
:HTTPOK	B-API
(	I-API
Hpricot	B-API
(	I-API
data	I-API
)	I-API
/	I-API
''	I-API
h3	I-API
a	I-API
''	I-API
)	I-API
.each	O
{	O
|a|	O
puts	O
a.innerText	B-API
}	O
end	O
end	O
end	O
It	O
's	O
pretty	O
much	O
complete	O
.	O
All	O
that	O
comes	O
before	O
this	O
are	O
library	O
imports	O
and	O
the	O
settings	O
for	O
my	O
proxy	O
.	O
BeautifulSoup	O
is	O
a	O
great	O
way	O
to	O
go	O
for	O
HTML	O
scraping	O
.	O
My	O
previous	O
job	O
had	O
me	O
doing	O
a	O
lot	O
of	O
scraping	O
and	O
I	O
wish	O
I	O
knew	O
about	O
BeautifulSoup	B-API
when	O
I	O
started	O
.	O
It	O
's	O
like	O
the	O
DOM	O
with	O
a	O
lot	O
more	O
useful	O
options	O
and	O
is	O
a	O
lot	O
more	O
pythonic	O
.	O
If	O
you	O
want	O
to	O
try	O
Ruby	O
they	O
ported	O
BeautifulSoup	B-API
calling	O
it	O
RubyfulSoup	B-API
but	O
it	O
has	O
n't	O
been	O
updated	O
in	O
a	O
while	O
.	O
Other	O
useful	O
tools	O
are	O
HTMLParser	B-API
or	O
sgmllib.SGMLParser	B-API
which	O
are	O
part	O
of	O
the	O
standard	O
Python	O
library	O
.	O
These	O
work	O
by	O
calling	O
methods	O
every	O
time	O
you	O
enter/exit	O
a	O
tag	O
and	O
encounter	O
html	O
text	O
.	O
They	O
're	O
like	O
Expat	O
if	O
you	O
're	O
familiar	O
with	O
that	O
.	O
These	O
libraries	O
are	O
especially	O
useful	O
if	O
you	O
are	O
going	O
to	O
parse	O
very	O
large	O
files	O
and	O
creating	O
a	O
DOM	O
tree	O
would	O
be	O
long	O
and	O
expensive	O
.	O
Regular	O
expressions	O
are	O
n't	O
very	O
necessary	O
.	O
BeautifulSoup	B-API
handles	O
regular	O
expressions	O
so	O
if	O
you	O
need	O
their	O
power	O
you	O
can	O
utilize	O
it	O
there	O
.	O
I	O
say	O
go	O
with	O
BeautifulSoup	B-API
unless	O
you	O
need	O
speed	O
and	O
a	O
smaller	O
memory	O
footprint	O
.	O
If	O
you	O
find	O
a	O
better	O
HTML	O
parser	O
on	O
Python	O
,	O
let	O
me	O
know	O
.	O
I	O
found	O
HTMLSQL	O
to	O
be	O
a	O
ridiculously	O
simple	O
way	O
to	O
screenscrape	O
.	O
It	O
takes	O
literally	O
minutes	O
to	O
get	O
results	O
with	O
it	O
.	O
The	O
queries	O
are	O
super-intuitive	O
-	O
like	O
:	O
SELECT	B-API
title	I-API
from	I-API
img	I-API
WHERE	I-API
$	I-API
class	I-API
==	I-API
There	O
are	O
now	O
some	O
other	O
alternatives	O
that	O
take	O
the	O
same	O
approach	O
.	O
In	O
the	O
.NET	O
world	O
,	O
I	O
recommend	O
the	O
HTML	B-API
Agility	I-API
Pack	I-API
.	O
Not	O
near	O
as	O
simple	O
as	O
some	O
of	O
the	O
above	O
options	O
(	O
like	O
HTMLSQL	O
)	O
,	O
but	O
it	O
's	O
very	O
flexible	O
.	O
It	O
lets	O
you	O
maniuplate	O
poorly	O
formed	O
HTML	O
as	O
if	O
it	O
were	O
well	O
formed	O
XML	O
,	O
so	O
you	O
can	O
use	O
XPATH	B-API
or	O
just	O
itereate	O
over	O
nodes	O
.	O
http	O
:	O
//www.codeplex.com/htmlagilitypack	O
Sounds	O
to	O
me	O
like	O
you	O
're	O
trying	O
to	O
combine	O
things	O
that	O
should	O
n't	O
be	O
combined	O
.	O
If	O
you	O
need	O
to	O
do	O
different	O
processing	O
in	O
your	O
view	O
depending	O
on	O
if	O
it	O
's	O
a	O
User	O
or	O
Group	O
object	O
you	O
're	O
trying	O
to	O
look	O
at	O
then	O
you	O
should	O
use	O
two	O
different	O
view	O
functions	O
.	O
On	O
the	O
other	O
hand	O
there	O
can	O
be	O
common	O
idioms	O
you	O
'd	O
want	O
to	O
extract	O
out	O
of	O
your	O
object_detail	O
type	O
views	O
...	O
perhaps	O
you	O
could	O
use	O
a	O
decorator	O
or	O
just	O
helper	O
functions	O
?	O
-Dan	O
If	O
you	O
're	O
simply	O
displaying	O
data	O
from	O
models	O
,	O
why	O
not	O
use	O
the	O
Django	O
Generic	O
Views	O
?	O
They	O
're	O
designed	O
to	O
let	O
you	O
easy	O
show	O
data	O
from	O
a	O
model	O
without	O
having	O
to	O
write	O
your	O
own	O
view	O
and	O
stuff	O
about	O
mapping	O
URL	O
paramaters	O
to	O
views	O
,	O
fetching	O
data	O
,	O
handling	O
edge	O
cases	O
,	O
rendering	O
output	O
,	O
etc	O
.	O
Try	O
this	O
:	O
var	O
request	O
=	O
new	B-API
;	I-API
request.onreadystatechange	B-API
=	I-API
process	I-API
;	I-API
request.open	B-API
(	I-API
'GET	I-API
'	I-API
,	I-API
url	I-API
;	I-API
function	O
{	O
if	O
(	O
request.readyState	B-API
==	I-API
4	I-API
request.status	B-API
==	I-API
200	I-API
)	O
var	O
xml	O
=	O
;	O
(	O
)	O
;	O
request.overrideMimeType	B-API
(	I-API
'text/xml	I-API
'	I-API
)	I-API
;	O
request.send	B-API
(	I-API
null	I-API
)	I-API
process	B-API
(	I-API
)	I-API
Notice	O
the	O
overrideMimeType	O
and	O
responseXML	O
.	O
The	O
readyState	O
==	O
4	O
is	O
'completed	O
'	O
.	O
Try	O
creating	O
a	O
div	B-API
(	I-API
'div	I-API
'	I-API
)	I-API
And	O
then	O
set	O
the	O
tag	O
soup	O
HTML	O
to	O
the	O
innerHTML	O
of	O
the	O
div	O
.	O
The	O
browser	O
should	O
process	O
that	O
into	O
XML	O
,	O
which	O
then	O
you	O
can	O
parse	O
.	O
The	O
innerHTML	O
property	O
takes	O
a	O
string	O
that	O
specifies	O
a	O
valid	O
combination	O
of	O
text	O
and	O
elements	O
.	O
When	O
the	O
innerHTML	O
property	O
is	O
set	O
,	O
the	O
given	O
string	O
completely	O
replaces	O
the	O
existing	O
content	O
of	O
the	O
object	O
.	O
If	O
the	O
string	O
contains	O
HTML	O
tags	O
,	O
the	O
string	O
is	O
parsed	O
and	O
formatted	O
as	O
it	O
is	O
placed	O
into	O
the	O
document	O
.	O
So	O
you	O
want	O
to	O
download	O
a	O
webpage	O
as	O
an	O
XML	O
object	O
using	O
javascript	O
,	O
but	O
you	O
do	O
n't	O
want	O
to	O
use	O
a	O
webpage	O
?	O
Since	O
you	O
have	O
no	O
control	O
over	O
what	O
the	O
user	O
will	O
do	O
(	O
closing	O
tabs	O
or	O
windows	O
or	O
whatnot	O
)	O
you	O
would	O
need	O
to	O
do	O
this	O
in	O
like	O
a	O
OSX	O
Dashboard	O
widget	O
or	O
some	O
separate	O
application	O
.	O
A	O
Firefox	O
extension	O
would	O
also	O
work	O
,	O
unless	O
you	O
have	O
to	O
worry	O
about	O
the	O
user	O
closing	O
the	O
browser	O
.	O
Ajaxian	O
actually	O
had	O
a	O
post	O
on	O
inserting	O
/	O
retrieving	O
html	O
from	O
an	O
iframe	O
today	O
.	O
You	O
can	O
probably	O
use	O
the	O
js	O
snippet	O
they	O
have	O
posted	O
there	O
.	O
As	O
for	O
handling	O
closing	O
of	O
a	O
browser	O
/	O
tab	O
,	O
you	O
can	O
attach	O
to	O
the	O
onbeforeunload	B-API
(	I-API
http	I-API
:	I-API
//msdn.microsoft.com/en-us/library/ms536907	I-API
(	I-API
VS.85	I-API
)	I-API
.aspx	I-API
)	I-API
event	O
and	O
do	O
whatever	O
you	O
need	O
to	O
do	O
.	O
For	O
C++	O
,	O
Boost.Random	B-API
is	O
probably	O
what	O
you	O
're	O
looking	O
for	O
.	O
It	O
has	O
support	O
for	O
MT	O
(	O
among	O
many	O
other	O
algorithms	O
)	O
,	O
and	O
can	O
collect	O
entropy	O
via	O
the	O
class	O
.	O
Check	O
it	O
out	O
!	O
:	O
-	O
)	O
The	O
Gnu	O
Scientific	O
Library	O
(	O
GSL	B-API
)	O
has	O
a	O
pretty	O
extensive	O
set	O
of	O
RN	O
generators	O
,	O
test	O
harness	O
,	O
etc	O
.	O
If	O
you	O
're	O
on	O
linux	O
,	O
it	O
's	O
probably	O
already	O
available	O
on	O
your	O
system	O
.	O
Here	O
is	O
a	O
simple	O
static	O
method	O
to	O
do	O
this	O
in	O
C	O
#	O
:	O
public	B-API
static	O
string	O
{	O
return	O
(	O
string	B-API
targetString	I-API
)	O
System.Threading.Thread.CurrentThread.CurrentCulture.TextInfo.ToTitleCase	B-API
(	I-API
targetString	I-API
)	I-API
In	O
what	O
language	O
?	O
In	O
PHP	O
it	O
is	O
:	O
ucwords	B-API
(	I-API
)	I-API
example	O
:	O
$	O
HelloWorld	O
=	O
ucwords	B-API
(	I-API
'hello	I-API
world	I-API
'	I-API
)	I-API
;	O
Without	O
using	O
a	O
ready-made	O
function	O
,	O
a	O
super-simple	O
low-level	O
algorithm	O
to	O
convert	O
a	O
string	O
to	O
title	O
case	O
:	O
convert	B-API
first	B-API
character	B-API
to	B-API
uppercase.for	B-API
each	B-API
character	B-API
in	B-API
,	O
if	B-API
the	B-API
previous	B-API
character	B-API
is	B-API
,	O
convert	B-API
character	B-API
to	B-API
This	O
asssumes	O
the	O
``	O
convert	O
character	O
to	O
uppercase	O
''	O
will	O
do	O
that	O
correctly	O
regardless	O
of	O
whether	O
or	O
not	O
the	O
character	O
is	O
case-sensitive	O
(	O
e.g.	O
,	O
'+	O
'	O
)	O
.	O
If	O
the	O
language	O
you	O
are	O
using	O
has	O
a	O
supported	O
method/function	O
then	O
just	O
use	O
that	O
(	O
as	O
in	O
the	O
C	O
#	O
method	O
)	O
If	O
it	O
does	O
not	O
,	O
then	O
you	O
will	O
want	O
to	O
do	O
something	O
like	O
the	O
following	O
:	O
Read	O
in	O
the	O
string	O
Take	O
the	O
first	O
word	O
Capitalize	O
the	O
first	O
letter	O
of	O
that	O
word	O
1	O
Go	O
forward	O
and	O
find	O
the	O
next	O
word	O
Go	O
to	O
3	O
if	O
not	O
at	O
the	O
end	O
of	O
the	O
string	O
,	O
otherwise	O
exit	O
1	O
To	O
capitalize	O
it	O
in	O
,	O
say	O
,	O
C	O
-	O
use	O
the	O
ascii	O
codes	O
to	O
find	O
the	O
integer	O
value	O
of	O
the	O
char	O
and	O
subtract	O
32	O
from	O
it	O
.	O
There	O
would	O
need	O
to	O
be	O
much	O
more	O
error	O
checking	O
in	O
the	O
code	O
(	O
ensuring	O
valid	O
letters	O
etc	O
.	O
)	O
,	O
and	O
the	O
``	O
Capitalize	B-API
''	O
function	O
will	O
need	O
to	O
impose	O
some	O
sort	O
of	O
``	O
title-case	O
scheme	O
''	O
on	O
the	O
letters	O
to	O
check	O
for	O
words	O
that	O
do	O
not	O
need	O
to	O
be	O
capatilised	O
(	O
'and	O
'	O
,	O
'but	O
'	O
etc	O
.	O
Here	O
is	O
a	O
good	O
scheme	O
)	O
Here	O
's	O
a	O
Perl	O
solution	O
http	O
:	O
//daringfireball.net/2008/05/title_case	O
Here	O
's	O
a	O
Ruby	O
solution	O
http	O
:	O
//frankschmitt.org/projects/title-case	O
Here	O
's	O
a	O
Ruby	O
one-liner	O
solution	O
:	O
http	O
:	O
//snippets.dzone.com/posts/show/4702	O
'some	O
string	O
here'.gsub	O
(	O
/\b\w/	O
)	O
{	O
$	O
.upcase	O
}	O
What	O
the	O
one-liner	O
is	O
doing	O
is	O
using	O
a	O
regular	O
expression	O
substitution	O
of	O
the	O
first	O
character	O
of	O
each	O
word	O
with	O
the	O
uppercase	O
version	O
of	O
it	O
.	O
I	O
would	O
be	O
wary	O
of	O
automatically	O
upcasing	O
all	O
whitespace-preceded-words	O
in	O
scenarios	O
where	O
I	O
would	O
run	O
the	O
risk	O
of	O
attracting	O
the	O
fury	O
of	O
nitpickers	O
.	O
I	O
would	O
at	O
least	O
consider	O
implementing	O
a	O
dictionary	O
for	O
exception	O
cases	O
like	O
articles	O
and	O
conjunctions	O
.	O
Behold	O
:	O
``	O
Beauty	O
and	O
the	O
Beast	O
''	O
And	O
when	O
it	O
comes	O
to	O
proper	O
nouns	O
,	O
the	O
thing	O
gets	O
much	O
uglier	O
.	O
To	O
capatilise	O
it	O
in	O
,	O
say	O
,	O
C	O
-	O
use	O
the	O
ascii	O
codes	O
(	O
http	O
:	O
//www.asciitable.com/	O
)	O
to	O
find	O
the	O
integer	O
value	O
of	O
the	O
char	O
and	O
subtract	O
32	O
from	O
it	O
.	O
This	O
is	O
a	O
poor	O
solution	O
if	O
you	O
ever	O
plan	O
to	O
accept	O
characters	O
beyond	O
a-z	O
and	O
A-Z	O
.	O
For	O
instance	O
:	O
ASCII	O
134	O
:	O
,	O
ASCII	O
143	O
:	O
.	O
Using	O
arithmetic	O
gets	O
you	O
:	O
ASCII	O
102	O
:	O
f	O
Use	O
library	O
calls	O
,	O
do	O
n't	O
assume	O
you	O
can	O
use	O
integer	O
arithmetic	O
on	O
your	O
characters	O
to	O
get	O
back	O
something	O
useful	O
.	O
Unicode	O
is	O
tricky	O
.	O
Looking	O
into	O
the	O
registry	O
is	O
perfectly	O
valid	O
,	O
so	O
long	O
as	O
you	O
can	O
be	O
sure	O
that	O
the	O
user	O
of	O
the	O
application	O
will	O
always	O
have	O
access	O
to	O
what	O
you	O
need	O
.	O
Take	O
a	O
look	O
at	O
Raymond	O
Chens	O
solution	O
:	O
How	O
to	O
detect	O
programmatically	O
whether	O
you	O
are	O
running	O
on	O
64-bit	O
Windows	O
and	O
here	O
's	O
the	O
PINVOKE	O
for	O
.NET	O
:	O
IsWow64Process	B-API
(	I-API
kernel32	I-API
)	I-API
Update	O
:	O
I	O
'd	O
take	O
issue	O
with	O
checking	O
for	O
'x86	O
'	O
.	O
Who	O
's	O
to	O
say	O
what	O
intel	O
's	O
or	O
AMD	O
's	O
next	O
32	O
bit	O
processor	O
may	O
be	O
designated	O
as	O
.	O
The	O
probability	O
is	O
low	O
but	O
it	O
is	O
a	O
risk	O
.	O
You	O
should	O
ask	O
the	O
OS	O
to	O
determine	O
this	O
via	O
the	O
correct	O
API	O
's	O
,	O
not	O
by	O
querying	O
what	O
could	O
be	O
a	O
OS	O
version/platform	O
specific	O
value	O
that	O
may	O
be	O
considered	O
opaque	O
to	O
the	O
outside	O
world	O
.	O
Ask	O
yourself	O
the	O
questions	O
,	O
1	O
-	O
is	O
the	O
registry	O
entry	O
concerned	O
properly	O
documented	O
by	O
MS	O
,	O
2	O
-	O
If	O
it	O
is	O
do	O
they	O
provide	O
a	O
definitive	O
list	O
of	O
possible	O
values	O
that	O
is	O
guaranteed	O
to	O
permit	O
you	O
as	O
a	O
developer	O
to	O
make	O
the	O
informed	O
decision	O
between	O
whether	O
you	O
are	O
running	O
32	O
bit	O
or	O
64	O
bit	O
.	O
If	O
the	O
answer	O
is	O
no	O
,	O
then	O
call	O
the	O
API	O
's	O
,	O
yeah	O
it	O
's	O
a	O
but	O
more	O
long	O
winded	O
but	O
it	O
is	O
documented	O
and	O
definitive	O
.	O
The	O
easiest	O
way	O
to	O
test	O
for	O
64-bit	O
under	O
.NET	O
is	O
to	O
check	O
the	O
value	O
of	O
IntPtr.Size	B-API
.	I-API
EDIT	I-API
:	O
Doh	O
!	O
This	O
will	O
tell	O
you	O
whether	O
or	O
not	O
the	O
current	O
process	O
is	O
64-bit	O
,	O
not	O
the	O
OS	O
as	O
a	O
whole	O
.	O
Sorry	O
!	O
The	O
easiest	O
way	O
to	O
test	O
for	O
64-bit	O
under	O
.NET	O
is	O
to	O
check	O
the	O
value	O
of	O
IntPtr.Size	B-API
.	O
I	O
believe	O
the	O
value	O
of	O
IntPtr.Size	B-API
is	O
4	O
for	O
a	O
32bit	O
app	O
that	O
's	O
running	O
under	O
WOW	O
,	O
is	O
n't	O
it	O
?	O
Edit	O
:	O
@	O
Edit	O
:	O
Yeah	O
.	O
:	O
)	O
You	O
can	O
use	O
reflection	O
to	O
get	O
the	O
property	O
and	O
invoke	O
it	O
.	O
Something	O
like	O
this	O
:	O
object	O
result	O
=	O
(	O
)	O
.GetProperty	B-API
(	I-API
``	I-API
Property	I-API
''	I-API
+	I-API
i	I-API
)	I-API
(	O
theObject	O
,	O
null	O
)	O
That	O
is	O
,	O
assuming	O
the	O
object	O
that	O
has	O
the	O
property	O
is	O
called	O
``	O
theObject	O
''	O
:	O
)	O
You	O
could	O
do	O
it	O
with	O
a	O
prototype	O
function	O
:	O
void	O
something	O
(	O
int	O
i	O
,	O
string	O
P1	O
)	O
{	O
something	O
(	O
i	O
,	O
P1	O
,	O
String.Empty	B-API
)	O
;	O
}	O
void	O
something	O
(	O
int	O
i	O
,	O
string	O
P1	O
,	O
string	O
P2	O
)	O
{	O
something	O
(	O
i	O
,	O
P1	O
,	O
P2	O
,	O
String.Empty	B-API
)	O
;	O
}	O
void	O
something	O
(	O
int	O
i	O
,	O
string	O
P1	O
,	O
string	O
P2	O
,	O
string	O
P3	O
)	O
{	O
something	O
(	O
i	O
,	O
P1	O
,	O
P2	O
,	O
P3	O
,	O
String.Empty	B-API
)	O
;	O
}	O
and	O
so	O
on	O
...	O
Not	O
really	O
.	O
You	O
can	O
use	O
reflection	O
to	O
achieve	O
what	O
you	O
want	O
,	O
but	O
it	O
wo	O
n't	O
be	O
nearly	O
as	O
simple	O
as	O
in	O
Javascript	O
.	O
For	O
example	O
,	O
if	O
you	O
wanted	O
to	O
set	O
the	O
private	O
field	O
of	O
an	O
object	O
to	O
something	O
,	O
you	O
could	O
use	O
this	O
function	O
:	O
protected	O
static	O
void	O
SetField	O
(	O
object	O
o	O
,	O
string	O
fieldName	O
,	O
object	O
value	O
)	O
{	O
FieldInfo	O
field	O
=	O
o.GetType	O
(	O
)	O
.GetField	O
(	O
fieldName	O
,	O
BindingFlags.Instance	B-API
|	O
BindingFlags.NonPublic	B-API
)	O
;	O
field.SetValue	O
(	O
o	O
,	O
value	O
)	O
;	O
}	O
Unfortunately	O
,	O
C	O
#	O
is	O
n't	O
a	O
dynamic	O
language	O
like	O
that	O
.	O
What	O
you	O
can	O
do	O
,	O
however	O
,	O
is	O
to	O
create	O
a	O
C	O
#	O
source	O
code	O
file	O
,	O
full	O
with	O
class	O
and	O
everything	O
,	O
and	O
run	O
it	O
through	O
the	O
CodeDom	O
provider	O
for	O
C	O
#	O
and	O
compile	O
it	O
into	O
an	O
assembly	O
,	O
and	O
then	O
execute	O
it	O
.	O
This	O
forum	O
post	O
on	O
MSDN	O
contains	O
an	O
answer	O
with	O
some	O
example	O
code	O
down	O
the	O
page	O
somewhat	O
:	O
create	O
a	O
anonymous	O
method	O
from	O
a	O
string	O
?	O
I	O
would	O
hardly	O
say	O
this	O
is	O
a	O
very	O
good	O
solution	O
,	O
but	O
it	O
is	O
possible	O
anyway	O
.	O
What	O
kind	O
of	O
code	O
are	O
you	O
going	O
to	O
expect	O
in	O
that	O
string	O
?	O
If	O
it	O
is	O
a	O
minor	O
subset	O
of	O
valid	O
code	O
,	O
for	O
instance	O
just	O
math	O
expressions	O
,	O
it	O
might	O
be	O
that	O
other	O
alternatives	O
exists	O
.	O
Edit	O
:	O
Well	O
,	O
that	O
teaches	O
me	O
to	O
read	O
the	O
questions	O
thoroughly	O
first	O
.	O
Yes	O
,	O
reflection	O
would	O
be	O
able	O
to	O
give	O
you	O
some	O
help	O
here	O
.	O
If	O
you	O
split	O
the	O
string	O
by	O
the	O
;	O
first	O
,	O
to	O
get	O
individual	O
properties	O
,	O
you	O
can	O
use	O
the	O
following	O
code	O
to	O
get	O
a	O
PropertyInfo	O
object	O
for	O
a	O
particular	O
property	O
for	O
a	O
class	O
,	O
and	O
then	O
use	O
that	O
object	O
to	O
manipulate	O
a	O
particular	O
object	O
.	O
String	B-API
propName	I-API
=	I-API
``	I-API
Text	O
''	O
;	O
PropertyInfo	O
pi	O
=	O
someObject.GetType	O
(	O
)	O
.GetProperty	B-API
(	I-API
propName	I-API
)	I-API
;	O
pi.SetValue	O
(	O
someObject	O
,	O
``	O
New	O
Value	O
''	O
,	O
new	O
Object	O
[	O
0	O
]	O
)	O
;	O
Link	O
:	O
PropertyInfo.SetValue	O
Method	O
All	O
of	O
that	O
would	O
definitely	O
work	O
.	O
Personally	O
,	O
for	O
that	O
particular	O
problem	O
,	O
I	O
would	O
probably	O
take	O
a	O
little	O
different	O
approach	O
.	O
Maybe	O
something	O
like	O
this	O
:	O
class	B-API
MyClass	B-API
{	B-API
public	B-API
Point	B-API
point1	B-API
,	I-API
point2	B-API
,	I-API
point3	B-API
;	I-API
private	B-API
Point	B-API
[	I-API
]	I-API
points	B-API
;	I-API
public	B-API
{	B-API
//	B-API
...	I-API
this.points	B-API
=	B-API
new	B-API
Point	B-API
[	I-API
]	I-API
{	B-API
point1	I-API
,	I-API
point2	B-API
,	I-API
point3	B-API
}	I-API
;	I-API
}	B-API
public	B-API
void	B-API
{	B-API
Point	B-API
target	B-API
=	B-API
this.points	B-API
[	I-API
i+1	I-API
]	I-API
;	I-API
//	B-API
do	B-API
stuff	B-API
to	B-API
target	B-API
MyClass	B-API
(	I-API
)	I-API
(	O
int	O
i	O
)	O
When	O
using	O
patterns	O
like	O
this	O
,	O
you	O
have	O
to	O
be	O
careful	O
that	O
your	O
data	O
is	O
stored	O
by	O
reference	O
and	O
not	O
by	O
value	O
.	O
In	O
other	O
words	O
,	O
do	O
n't	O
do	O
this	O
with	O
primitives	O
.	O
You	O
have	O
to	O
use	O
their	O
big	O
bloated	O
class	O
counterparts	O
.	O
I	O
realized	O
that	O
's	O
not	O
exactly	O
the	O
question	O
,	O
but	O
the	O
question	O
has	O
been	O
pretty	O
well	O
answered	O
and	O
I	O
thought	O
maybe	O
an	O
alternative	O
approach	O
might	O
help	O
.	O
J	O
#	O
is	O
no	O
longer	O
included	O
in	O
VS2008	O
.	O
Unless	O
you	O
already	O
have	O
J	O
#	O
code	O
,	O
you	O
should	O
probably	O
stay	O
away	O
.	O
From	O
j	O
#	O
product	O
page	O
:	O
Since	O
customers	O
have	O
told	O
us	O
that	O
the	O
existing	O
J	O
#	O
feature	O
set	O
largely	O
meets	O
their	O
needs	O
and	O
usage	O
of	O
J	O
#	O
is	O
declining	O
,	O
Microsoft	O
is	O
retiring	O
the	O
Visual	O
J	O
#	O
product	O
and	O
Java	O
Language	O
Conversion	O
Assistant	O
tool	O
to	O
better	O
allocate	O
resources	O
for	O
other	O
customer	O
requirements	O
.	O
The	O
J	O
#	O
language	O
and	O
JLCA	O
tool	O
will	O
not	O
be	O
available	O
in	O
future	O
versions	O
of	O
Visual	O
Studio	O
.	O
To	O
preserve	O
existing	O
customer	O
investments	O
in	O
J	O
#	O
,	O
Microsoft	O
will	O
continue	O
to	O
support	O
the	O
J	O
#	O
and	O
JLCA	O
technology	O
that	O
shipped	O
with	O
Visual	O
Studio	O
2005	O
through	O
to	O
2015	O
as	O
per	O
our	O
product	O
life-cycle	O
strategy	O
.	O
For	O
more	O
information	O
,	O
see	O
Expanded	O
Microsoft	O
Support	O
Lifecycle	O
Policy	O
for	O
Business	O
Development	O
Products	O
.	O
The	O
whole	O
purpose	O
of	O
J	O
#	O
is	O
to	O
ease	O
the	O
transition	O
of	O
Java	O
developers	O
to	O
the	O
.NET	O
environment	O
which	O
did	O
n't	O
work	O
so	O
well	O
(	O
I	O
guessing	O
here	O
)	O
so	O
Microsoft	O
dropped	O
J	O
#	O
from	O
Visual	O
Studio	O
2008	O
.	O
For	O
your	O
question	O
,	O
``	O
Is	O
there	O
a	O
real	O
benefit	O
of	O
using	O
J	O
#	O
?	O
''	O
..	O
in	O
a	O
nutshell	O
...	O
No..	O
One	O
of	O
the	O
killers	O
I	O
've	O
found	O
with	O
J	O
#	O
in	O
the	O
past	O
is	O
that	O
there	O
is	O
no	O
built	O
in	O
support	O
for	O
referencing	O
web	O
services	O
.	O
That	O
alone	O
has	O
been	O
enough	O
to	O
deter	O
me	O
from	O
it	O
ever	O
since	O
.	O
C	O
#	O
syntax	O
is	O
so	O
close	O
to	O
Java	O
(	O
and	O
better	O
in	O
some	O
ways	O
)	O
that	O
you	O
might	O
as	O
well	O
learn	O
C	O
#	O
instead	O
of	O
J	O
#	O
.	O
And	O
since	O
C	O
#	O
is	O
more	O
widely	O
used	O
,	O
you	O
can	O
easily	O
find	O
Java	O
--	O
C	O
#	O
tutorials	O
on	O
google	O
or	O
check	O
out	O
http	O
:	O
//www.asp.net/learn	O
and	O
watch	O
some	O
videos	O
.	O
No	O
,	O
there	O
are	O
many	O
applications	O
built	O
with	O
VS2005	O
that	O
have	O
to	O
support	O
Windows	O
XP	O
,	O
2000	O
,	O
NT	O
,	O
the	O
whole	O
stack	O
.	O
The	O
issue	O
is	O
that	O
(	O
by	O
default	O
)	O
VS2005	O
wants	O
to	O
use	O
libraries/exports	O
not	O
present	O
on	O
NT	O
.	O
See	O
this	O
thread	O
for	O
some	O
background	O
.	O
Then	O
start	O
limiting	O
your	O
dependencies	O
via	O
preprocessor	O
macros	O
,	O
and	O
avoiding	O
APIs	O
which	O
are	O
n't	O
supported	O
on	O
NT	O
.	O
I	O
would	O
suggest	O
storing	O
the	O
stylesheet	O
selection	O
in	O
the	O
session	O
so	O
you	O
do	O
n't	O
have	O
to	O
rely	O
on	O
the	O
querystring	O
key	O
being	O
present	O
all	O
the	O
time	O
.	O
You	O
can	O
check	O
the	O
session	O
in	O
Page_Load	O
and	O
add	O
the	O
appropriate	O
stylesheet	O
reference	O
.	O
It	O
sounds	O
like	O
this	O
is	O
a	O
temporary/development	O
situation	O
,	O
so	O
go	O
with	O
whatever	O
is	O
easy	O
and	O
works	O
.	O
if	O
)	O
(	O
!	O
String.IsNullOrEmpty	B-API
(	O
Request.QueryString	B-API
[	O
``	O
css	O
''	O
]	O
)	O
Session.Add	B-API
(	I-API
``	I-API
CSS	I-API
''	I-API
,	I-API
Request.QueryString	B-API
[	O
``	O
css	O
''	O
]	O
)	O
In	O
Asp.net	O
3.5	O
,	O
you	O
should	O
be	O
able	O
to	O
set	O
up	O
the	O
Link	O
tag	O
in	O
the	O
header	O
as	O
a	O
server	O
tag	O
.	O
Then	O
in	O
the	O
codebehind	O
you	O
can	O
set	O
the	O
href	O
property	O
for	O
the	O
link	O
element	O
,	O
based	O
on	O
a	O
cookie	O
value	O
,	O
querystring	O
,	O
date	O
,	O
etc	O
.	O
In	O
your	O
aspx	O
file	O
:	O
head	O
link	O
id=	O
''	O
linkStyles	O
''	O
rel=	O
''	O
stylesheet	O
''	O
type=	O
''	O
text/css	O
''	O
runat=	O
''	O
server	O
''	O
/	O
/head	O
And	O
in	O
the	O
Code	O
behind	O
:	O
protected	O
void	O
Page_Load	O
(	O
object	O
sender	O
,	O
EventArgs	O
e	O
)	O
{	O
string	O
stylesheetAddress	O
=	O
//	O
logic	O
to	O
determine	O
stylesheet	O
linkStyles.Href	B-API
=	O
stylesheetAddress	O
;	O
}	O
You	O
should	O
look	O
into	O
ASP.NET	O
themes	O
,	O
that	O
's	O
exactly	O
what	O
they	O
're	O
used	O
for	O
.	O
They	O
also	O
allow	O
you	O
to	O
skin	O
controls	O
,	O
which	O
means	O
give	O
them	O
a	O
set	O
of	O
default	O
attributes	O
.	O
I	O
would	O
do	O
the	O
following	O
:	O
www.website.com/	O
?	O
stylesheet=new.css	O
Then	O
in	O
your	O
ASP.NET	O
code	O
:	O
if	O
(	O
Request.Querystring	B-API
[	O
``	O
stylesheet	O
''	O
]	O
!	O
=	O
null	O
)	O
{	O
Response.Cookies	B-API
[	I-API
``	I-API
stylesheet	I-API
''	I-API
]	I-API
.Value	O
=	O
Request.QueryString	B-API
[	I-API
``	I-API
stylesheet	I-API
''	I-API
]	I-API
;	O
(	O
Current	O
Page	O
)	O
Then	O
where	O
you	O
define	O
your	O
stylesheets	O
:	O
if	O
(	O
Request.Cookies	B-API
[	I-API
``	I-API
stylesheet	I-API
''	I-API
]	I-API
!	O
=	O
null	O
)	O
{	O
//	O
New	O
Stylesheet	O
}	O
else	O
{	O
//	O
Assuming	O
module	O
with	O
method	O
:	O
import	O
foo	B-API
methodToCall	I-API
=	I-API
(	I-API
foo	I-API
,	I-API
'bar	I-API
'	I-API
)	I-API
result	O
=	O
methodToCall	O
(	O
)	O
As	O
far	O
as	O
that	O
goes	O
,	O
lines	O
2	O
and	O
3	O
can	O
be	O
compressed	O
to	O
:	O
result	O
=	O
getattr	B-API
(	I-API
foo	I-API
,	I-API
'bar	I-API
'	I-API
)	I-API
(	O
)	O
if	O
that	O
makes	O
more	O
sense	O
for	O
your	O
use	O
case	O
.	O
You	O
can	O
use	O
getattr	O
in	O
this	O
fashion	O
on	O
class	O
instance	O
bound	O
methods	O
,	O
module-level	O
methods	O
,	O
class	O
methods	O
...	O
the	O
list	O
goes	O
on	O
.	O
Patrick	O
's	O
solution	O
is	O
probably	O
the	O
cleanest	O
.	O
If	O
you	O
need	O
to	O
dynamically	O
pick	O
up	O
the	O
module	O
as	O
well	O
,	O
you	O
can	O
import	O
it	O
like	O
:	O
m	O
=	O
__import__	O
(	O
'foo	O
'	O
)	O
func	O
=	O
getattr	O
(	O
m	O
,	O
'bar	O
'	O
)	O
func	O
(	O
)	O
Check	O
out	O
FileHelpers	O
Open	O
Source	O
Library	O
.	O
A	O
good	O
simple	O
way	O
to	O
do	O
it	O
is	O
to	O
open	O
the	O
file	O
,	O
and	O
read	O
each	O
line	O
into	O
an	O
array	O
,	O
linked	O
list	O
,	O
data-structure-of-your-choice	O
.	O
Be	O
careful	O
about	O
handling	O
the	O
first	O
line	O
though	O
.	O
This	O
may	O
be	O
over	O
your	O
head	O
,	O
but	O
there	O
seems	O
to	O
be	O
a	O
direct	O
way	O
to	O
access	O
them	O
as	O
well	O
using	O
a	O
connection	O
string	O
.	O
Why	O
not	O
try	O
using	O
Python	O
instead	O
of	O
C	O
#	O
or	O
VB	O
?	O
It	O
has	O
a	O
nice	O
CSV	O
module	O
to	O
import	O
that	O
does	O
all	O
the	O
heavy	O
lifting	O
for	O
you	O
.	O
If	O
you	O
can	O
guarantee	O
that	O
there	O
are	O
no	O
commas	O
in	O
the	O
data	O
,	O
then	O
the	O
simplest	O
way	O
would	O
probably	O
be	O
to	O
use	O
String.split	B-API
.	O
For	O
example	O
:	O
String	B-API
[	I-API
]	I-API
values	I-API
=	I-API
;	I-API
myObject.StringField	I-API
=	I-API
values	I-API
[	I-API
0	I-API
]	I-API
;	O
myObject.IntField	B-API
=	O
myString.Split	B-API
(	O
'	O
,	O
'	O
)	O
Int32.Parse	B-API
(	I-API
values	I-API
[	I-API
1	I-API
]	I-API
)	I-API
There	O
may	O
be	O
libraries	O
you	O
could	O
use	O
to	O
help	O
,	O
but	O
that	O
's	O
probably	O
as	O
simple	O
as	O
you	O
can	O
get	O
.	O
Just	O
make	O
sure	O
you	O
ca	O
n't	O
have	O
commas	O
in	O
the	O
data	O
,	O
otherwise	O
you	O
will	O
need	O
to	O
parse	O
it	O
better	O
.	O
There	O
are	O
two	O
articles	O
on	O
CodeProject	O
that	O
provide	O
code	O
for	O
a	O
solution	O
,	O
one	O
that	O
uses	O
StreamReader	B-API
and	O
one	O
that	O
imports	O
CSV	O
data	O
using	O
the	O
Microsoft	O
Text	O
Driver	O
.	O
I	O
was	O
bored	O
so	O
i	O
modified	O
some	O
stuff	O
i	O
wrote	O
.	O
It	O
try	O
's	O
to	O
encapsulate	O
the	O
parsing	O
in	O
an	O
OO	O
manner	O
whle	O
cutting	O
down	O
on	O
the	O
amount	O
of	O
iterations	O
through	O
the	O
file	O
,	O
it	O
only	O
iterates	O
once	O
at	O
the	O
top	O
foreach	O
.	O
using	O
System	B-API
;	O
using	O
System.Collections.Generic	B-API
;	O
using	O
System.Linq	B-API
;	O
using	O
System.Text	B-API
;	O
using	O
System.IO	B-API
;	O
namespace	O
ConsoleApplication1	O
{	O
class	O
Program	O
{	O
static	O
void	O
Main	O
(	O
string	B-API
[	I-API
]	I-API
args	O
)	O
{	O
//	O
usage	O
:	O
//	O
note	O
this	O
wont	O
run	O
as	O
getting	O
streams	O
is	O
not	O
Implemented	O
//	O
but	O
will	O
get	O
you	O
started	O
CSVFileParser	B-API
fileParser	I-API
=	I-API
new	I-API
CSVFileParser	I-API
(	I-API
)	I-API
;	O
//	O
TO	O
Do	O
:	O
configure	O
fileparser	O
PersonParser	B-API
personParser	I-API
=	I-API
new	I-API
PersonParser	I-API
(	I-API
fileParser	I-API
)	I-API
;	O
ListPerson	O
persons	O
=	O
new	O
ListPerson	O
(	O
)	O
;	O
//	O
if	O
the	O
file	O
is	O
large	O
and	O
there	O
is	O
a	O
good	O
way	O
to	O
limit	O
//	O
without	O
having	O
to	O
reparse	O
the	O
whole	O
file	O
you	O
can	O
use	O
a	O
//	O
linq	O
query	O
if	O
you	O
desire	O
foreach	O
(	O
Person	O
person	O
in	O
personParser.GetPersons	O
(	O
)	O
)	O
{	O
persons.Add	O
(	O
person	O
)	O
;	O
}	O
//	O
now	O
we	O
have	O
a	O
list	O
of	O
Person	O
objects	O
}	O
}	O
public	O
abstract	O
class	O
CSVParser	O
{	O
protected	O
String	O
[	O
]	O
deliniators	O
=	O
{	O
``	O
,	O
''	O
}	O
;	O
protected	O
internal	O
IEnumerableString	B-API
[	I-API
]	I-API
GetRecords	I-API
(	I-API
)	I-API
{	O
Stream	B-API
stream	I-API
=	I-API
GetStream	I-API
(	I-API
)	I-API
;	O
StreamReader	B-API
reader	I-API
=	I-API
new	I-API
StreamReader	I-API
(	I-API
stream	I-API
)	I-API
;	O
String	B-API
[	I-API
]	I-API
aRecord	I-API
;	O
while	O
(	O
!	O
reader.EndOfStream	B-API
)	O
{	O
aRecord	O
=	O
reader.ReadLine	B-API
(	I-API
)	I-API
.Split	O
(	O
deliniators	O
,	O
StringSplitOptions.None	B-API
)	O
;	O
yield	O
return	O
aRecord	O
;	O
}	O
}	O
protected	O
abstract	O
Stream	B-API
GetStream	I-API
(	I-API
)	I-API
;	O
}	O
public	O
class	O
CSVFileParser	O
:	O
CSVParser	O
{	O
//	O
to	O
do	O
:	O
add	O
logic	O
to	O
get	O
a	O
stream	O
from	O
a	O
file	O
protected	O
override	O
Stream	B-API
GetStream	I-API
(	I-API
)	I-API
{	O
throw	O
new	O
NotImplementedException	B-API
(	I-API
)	I-API
;	O
}	O
}	O
public	O
class	O
CSVWebParser	O
:	O
CSVParser	O
{	O
//	O
to	O
do	O
:	O
add	O
logic	O
to	O
get	O
a	O
stream	O
from	O
a	O
web	O
request	O
protected	O
override	O
Stream	B-API
GetStream	I-API
(	I-API
)	I-API
{	O
throw	O
new	O
NotImplementedException	B-API
(	I-API
)	I-API
;	O
}	O
}	O
public	O
class	O
Person	O
{	O
public	O
String	B-API
Name	I-API
{	I-API
get	I-API
;	I-API
set	I-API
;	I-API
}	I-API
public	O
String	B-API
Address	I-API
{	I-API
get	I-API
;	I-API
set	I-API
;	I-API
}	I-API
public	O
DateTime	B-API
DOB	O
{	O
get	O
;	O
set	O
;	O
}	O
}	O
public	O
class	O
PersonParser	O
{	O
public	O
PersonParser	O
(	O
CSVParser	O
parser	O
)	O
{	O
this.Parser	O
=	O
parser	O
;	O
}	O
public	O
CSVParser	O
Parser	O
{	O
get	O
;	O
set	O
;	O
}	O
public	O
IEnumerablePerson	O
GetPersons	O
(	O
)	O
{	O
foreach	O
(	O
String	B-API
[	I-API
]	I-API
record	I-API
in	I-API
this.Parser.GetRecords	I-API
(	I-API
)	I-API
)	O
{	O
yield	O
return	O
new	O
Person	O
(	O
)	O
{	O
Name	O
=	O
record	O
[	O
0	O
]	O
,	O
Address	O
=	O
record	O
[	O
1	O
]	O
,	O
DOB	O
=	O
DateTime.Parse	B-API
(	I-API
record	I-API
[	I-API
2	I-API
]	I-API
)	I-API
,	O
}	O
;	O
}	O
}	O
}	O
}	O
Brian	O
gives	O
a	O
nice	O
solution	O
for	O
converting	O
it	O
to	O
a	O
strongly	O
typed	O
collection	O
.	O
Most	O
of	O
the	O
CSV	O
parsing	O
methods	O
given	O
do	O
n't	O
take	O
into	O
account	O
escaping	O
fields	O
or	O
some	O
of	O
the	O
other	O
subtleties	O
of	O
CSV	O
files	O
(	O
like	O
trimming	O
fields	O
)	O
.	O
Here	O
is	O
the	O
code	O
I	O
personally	O
use	O
.	O
It	O
's	O
a	O
bit	O
rough	O
around	O
the	O
edges	O
and	O
has	O
pretty	O
much	O
no	O
error	O
reporting	O
.	O
public	O
static	B-API
IListIListstring	O
{	O
IListIListstring	O
records	O
=	O
new	O
;	O
StringReader	B-API
stringReader	I-API
=	I-API
new	I-API
;	O
bool	B-API
inQoutedString	I-API
=	I-API
false	I-API
;	I-API
IListstring	B-API
record	B-API
=	B-API
new	I-API
;	O
StringBuilder	B-API
fieldBuilder	I-API
=	I-API
new	I-API
;	O
while	O
!	O
=	O
-1	O
)	O
{	O
char	O
readChar	O
=	O
;	O
if	O
(	O
readChar	O
==	O
'\n	O
'	O
||	O
(	O
readChar	O
==	O
'\r	O
'	O
==	O
'\n	O
'	O
)	O
)	O
{	O
//	O
If	O
it	O
's	O
a	O
\r\n	O
combo	O
consume	O
the	O
\n	O
part	O
and	O
throw	O
it	O
away	O
.	O
if	O
(	O
readChar	O
==	O
'\r	O
'	O
)	O
{	O
;	O
}	O
if	O
(	O
inQoutedString	O
)	O
{	O
if	O
(	O
readChar	O
==	O
'\r	O
'	O
)	O
{	O
;	O
}	O
;	O
}	O
else	O
{	O
)	O
;	O
fieldBuilder	B-API
=	I-API
new	I-API
;	O
;	O
record	O
=	O
new	O
;	O
inQoutedString	O
=	O
false	O
;	O
}	O
}	O
else	O
if	O
(	O
fieldBuilder.Length	O
==	O
0	O
!	O
inQoutedString	O
)	O
{	O
if	O
)	O
{	O
//	O
Ignore	O
leading	O
whitespaCe	O
}	O
else	O
if	O
(	O
readChar	O
==	O
'	O
''	O
'	O
)	O
{	O
inQoutedString	O
=	O
true	O
;	O
}	O
else	O
if	O
(	O
readChar	O
==	O
'	O
,	O
'	O
)	O
{	O
)	O
;	O
fieldBuilder	O
=	O
new	O
;	O
}	O
else	O
{	O
;	O
}	O
}	O
else	O
if	O
(	O
readChaO	O
==	O
'	O
,	O
'	O
)	O
{	O
if	O
(	O
inQoutedString	O
)	O
{	O
;	O
}	O
else	O
{	O
)	O
;	O
fieldBuilder	O
=	O
new	O
;	O
}	O
}	O
else	O
if	O
(	O
readChar	O
==	O
'	O
''	O
'	O
)	O
{	O
if	O
(	O
inQoutedString	O
)	O
{	O
if	O
==	O
'	O
''	O
'	O
)	O
{	O
;	O
;	O
}	O
else	O
{	O
inQoutedString	O
=	O
false	O
;	O
}	O
}	O
else	O
{	O
;	O
}	O
}	O
else	O
{	O
;	O
}	O
}	O
)	O
;	O
;	O
return	O
(	O
string	B-API
content	I-API
)	O
ListIListstring	B-API
(	I-API
)	I-API
StringReader	B-API
(	I-API
content	I-API
)	I-API
Liststring	B-API
(	I-API
)	I-API
StringBuilder	B-API
(	I-API
)	I-API
(	O
stringReader.Peek	B-API
(	I-API
)	I-API
(	O
char	O
)	O
stringReader.Read	B-API
(	I-API
)	I-API
stringReader.Peek	B-API
(	I-API
)	I-API
stringReader.Read	B-API
(	I-API
)	I-API
fieldBuilder.Append	B-API
(	I-API
'\r	I-API
'	I-API
)	I-API
fieldBuilder.Append	B-API
(	I-API
'\n	I-API
'	I-API
)	I-API
record.Add	B-API
(	I-API
fieldBuilder.ToString	B-API
(	I-API
)	I-API
.TrimEnd	I-API
(	I-API
)	I-API
StringBuilder	B-API
(	I-API
)	I-API
records.Add	O
(	O
record	O
)	O
Liststring	O
(	O
)	O
(	O
char.IsWhiteSpace	B-API
(	I-API
readChar	I-API
)	I-API
record.Add	O
(	O
fieldBuilder.ToString	B-API
(	I-API
)	I-API
.TrimEnd	I-API
(	I-API
)	I-API
StringBuilder	B-API
(	I-API
)	I-API
fieldBuilder.Append	B-API
(	I-API
readChar	I-API
)	I-API
fieldBuilder.Append	B-API
(	I-API
'	I-API
,	I-API
'	I-API
)	I-API
record.Add	B-API
(	I-API
fieldBuilder.ToString	I-API
(	I-API
)	I-API
.TrimEnd	I-API
(	I-API
)	I-API
StringBuilder	B-API
(	I-API
)	I-API
(	O
stringReader.Peek	B-API
(	I-API
)	I-API
stringReader.Read	B-API
(	I-API
)	I-API
fieldBuilder.Append	B-API
(	I-API
'	I-API
''	I-API
'	I-API
)	I-API
fieldBuilder.Append	B-API
(	I-API
readChar	I-API
)	I-API
fieldBuilder.Append	B-API
(	I-API
readChar	I-API
)	I-API
record.Add	B-API
(	I-API
fieldBuilder.ToString	B-API
(	I-API
)	I-API
.TrimEnd	I-API
(	I-API
)	I-API
records.Add	B-API
(	I-API
record	I-API
)	I-API
Note	O
that	O
this	O
does	O
n't	O
handle	O
the	O
edge	O
case	O
of	O
fields	O
not	O
being	O
deliminated	O
by	O
double	O
quotes	O
,	O
but	O
meerley	O
having	O
a	O
quoted	O
string	O
inside	O
of	O
it	O
.	O
See	O
this	O
post	O
for	O
a	O
bit	O
of	O
a	O
better	O
expanation	O
as	O
well	O
as	O
some	O
links	O
to	O
some	O
proper	O
libraries	O
.	O
You	O
need	O
to	O
create	O
an	O
extension	O
method	O
,	O
which	O
requires	O
.NET	O
3.5	O
.	O
The	O
method	O
needs	O
to	O
be	O
static	O
,	O
in	O
a	O
static	O
class	O
.	O
The	O
first	O
parameter	O
of	O
the	O
method	O
needs	O
to	O
be	O
prefixed	O
with	O
``	O
this	O
''	O
in	O
the	O
signature	O
.	O
public	B-API
static	B-API
string	B-API
{	B-API
//	B-API
do	B-API
(	O
this	O
string	O
input	O
)	O
You	O
can	O
then	O
call	O
it	O
like	O
``	B-API
asdfas	I-API
''	I-API
.MyMethod	I-API
(	I-API
)	I-API
You	O
ca	O
n't	O
dynamically	O
add	O
methods	O
to	O
existing	O
objects	O
or	O
classes	O
in	O
.NET	O
,	O
except	O
by	O
changing	O
the	O
source	O
for	O
that	O
class	O
.	O
You	O
can	O
,	O
however	O
,	O
in	O
C	O
#	O
3.0	O
,	O
use	O
extension	O
methods	O
,	O
which	O
look	O
like	O
new	O
methods	O
,	O
but	O
are	O
compile-time	O
magic	O
.	O
To	O
do	O
this	O
for	O
your	O
code	O
:	O
public	B-API
static	B-API
class	B-API
StringExtensions	B-API
{	I-API
public	B-API
static	B-API
String	B-API
{	B-API
return	B-API
;	B-API
(	O
this	O
String	B-API
s	I-API
)	I-API
s.Trim	B-API
(	I-API
)	I-API
To	O
use	O
it	O
:	O
String	B-API
s	I-API
=	I-API
``	I-API
Test	I-API
``	I-API
;	O
s	O
=	O
s.trim	B-API
(	I-API
)	I-API
This	O
looks	O
like	O
a	O
new	O
method	O
,	O
but	O
will	O
compile	O
the	O
exact	O
same	O
way	O
as	O
this	O
code	O
:	O
String	B-API
s	I-API
=	I-API
``	I-API
Test	I-API
``	I-API
;	I-API
s	I-API
=	O
StringExtensions.trim	B-API
(	I-API
s	I-API
)	I-API
What	O
exactly	O
are	O
you	O
trying	O
to	O
accomplish	O
?	O
Perhaps	O
there	O
are	O
better	O
ways	O
of	O
doing	O
what	O
you	O
want	O
?	O
