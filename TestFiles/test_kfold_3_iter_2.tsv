I	O
think	O
the	O
``	O
wisdom	O
of	O
crowds	O
''	O
work	O
here	O
.	O
How	O
did	O
most	O
people	O
learn	O
how	O
to	O
program	O
?	O
Many	O
claim	O
that	O
they	O
did	O
so	O
by	O
copying	O
programs	O
of	O
others	O
,	O
usually	O
games	O
they	O
wanted	O
to	O
play	O
in	O
BASIC	B-API
.	O
Maybe	O
that	O
route	O
will	O
work	O
with	O
him	O
too	O
?	O
If	O
you	O
want	O
to	O
teach	O
the	O
basics	O
of	O
programming	O
,	O
without	O
being	O
language	O
specific	O
,	O
there	O
is	O
an	O
application	O
called	O
Scratch	O
that	O
was	O
created	O
in	O
MIT	O
.	O
It	O
's	O
designed	O
to	O
help	O
people	O
develop	O
programming	O
skills	O
.	O
As	O
users	O
create	O
Scratch	O
projects	O
,	O
they	O
learn	O
to	O
create	O
conditions	O
,	O
loops	O
,	O
etc	O
.	O
There	O
is	O
a	O
also	O
a	O
community	O
of	O
scratch	O
projects	O
,	O
form	O
which	O
projects	O
can	O
be	O
downloaded	O
-	O
that	O
way	O
you	O
can	O
explore	O
other	O
people	O
's	O
programs	O
and	O
see	O
how	O
they	O
were	O
built	O
.	O
I	O
recently	O
wrote	O
an	O
article	O
titled	O
How	O
to	O
teach	O
your	O
girlfriend	O
programming	O
,	O
it	O
has	O
little	O
to	O
do	O
with	O
girlfriends	O
and	O
everything	O
about	O
teaching	O
something	O
technical	O
to	O
someone	O
that	O
does	O
not	O
understand	O
it	O
.	O
I	O
'm	O
told	O
it	O
's	O
also	O
funny	O
.	O
It	O
really	O
depends	O
on	O
your	O
brother	O
's	O
learning	O
style	O
.	O
Many	O
people	O
learn	O
faster	O
by	O
getting	O
their	O
hands	O
dirty	O
just	O
getting	O
into	O
it	O
,	O
crystallising	O
the	O
concepts	O
and	O
the	O
big	O
picture	O
as	O
they	O
progress	O
and	O
build	O
their	O
knowledge	O
.	O
Me	O
,	O
I	O
prefer	O
to	O
start	O
with	O
the	O
big	O
picture	O
and	O
drill	O
down	O
into	O
the	O
nitty-gritty	O
.	O
The	O
first	O
thing	O
I	O
wanted	O
to	O
know	O
was	O
how	O
it	O
all	O
fits	O
together	O
then	O
all	O
that	O
Object-oriented	O
gobbledygook	O
,	O
then	O
about	O
classes	O
instances	O
and	O
so-on	O
.	O
I	O
like	O
to	O
know	O
the	O
underlying	O
concepts	O
and	O
a	O
bit	O
of	O
theory	O
before	O
I	O
learn	O
the	O
syntax	O
.	O
I	O
had	O
a	O
bit	O
of	O
an	O
advantage	O
because	O
I	O
wrote	O
some	O
games	O
in	O
BASIC	B-API
20	O
years	O
ago	O
but	O
nothing	O
much	O
since	O
.	O
Perhaps	O
it	O
is	O
useful	O
to	O
shadow	O
a	O
production	O
process	O
by	O
starting	O
with	O
an	O
overall	O
mission	O
statement	O
,	O
then	O
a	O
plan	O
and/or	O
flowchart	O
,	O
then	O
elaborate	O
into	O
some	O
pseudo	O
code	O
(	O
leaning	O
towards	O
the	O
syntax	O
you	O
will	O
ultimately	O
use	O
)	O
before	O
actually	O
writing	O
the	O
code	O
.	O
The	O
golden	O
rule	O
here	O
is	O
to	O
suss	O
out	O
your	O
student	O
's	O
leaning	O
style	O
.	O
Try	O
Ruby	B-API
(	O
In	O
Your	O
Browser	O
)	O
I	O
agree	O
with	O
Leac	O
.	O
I	O
actually	O
play	O
with	O
Scratch	B-API
sometimes	O
if	O
I	O
'm	O
bored	O
.	O
It	O
's	O
a	O
pretty	O
fun	O
visual	O
way	O
of	O
looking	O
at	O
code	O
.	O
How	O
it	O
works	O
is	O
,	O
they	O
give	O
you	O
a	O
bunch	O
of	O
``	O
blocks	O
''	O
(	O
these	O
look	O
like	O
legos	O
)	O
which	O
you	O
can	O
stack	O
.	O
And	O
by	O
stacking	O
these	O
blocks	O
,	O
and	O
interacting	O
with	O
the	O
canvas	O
(	O
where	O
you	O
put	O
your	O
sprites	O
,	O
graphics	O
)	O
,	O
you	O
can	O
create	O
games	O
,	O
movies	O
,	O
slideshows	O
...	O
it	O
's	O
really	O
interesting	O
.	O
When	O
it	O
's	O
complete	O
you	O
can	O
upload	O
it	O
right	O
to	O
the	O
Scratch	O
websites	O
,	O
which	O
is	O
a	O
youtube-ish	O
portal	O
for	O
Scratch	O
applications	O
.	O
Not	O
only	O
that	O
,	O
but	O
you	O
can	O
download	O
any	O
submission	O
on	O
the	O
website	O
,	O
and	O
learn	O
from	O
or	O
extend	O
other	O
Scratch	B-API
applications	O
.	O
This	O
is	O
a	O
fantastic	O
book	O
which	O
my	O
little	O
brothers	O
used	O
to	O
learn	O
:	O
http	O
:	O
//pine.fm/LearnToProgram/	O
Of	O
course	O
,	O
the	O
most	O
important	O
thing	O
is	O
to	O
start	O
on	O
a	O
real	O
,	O
useful	O
program	O
of	O
some	O
kind	O
IMMEDIATELY	O
after	O
finishing	O
the	O
book	O
.	O
I	O
recommend	O
starting	O
them	O
off	O
with	O
C/C++	O
.	O
I	O
find	O
that	O
it	O
is	O
a	O
good	O
foundation	O
for	O
just	O
about	O
every	O
other	O
language	O
.	O
Also	O
,	O
the	O
different	O
versions	O
of	O
BASIC	O
can	O
be	O
pretty	O
dodgy	O
,	O
at	O
best	O
,	O
and	O
have	O
no	O
real	O
correlation	O
to	O
actual	O
programming	O
.	O
I	O
think	O
learning	O
to	O
program	O
because	O
you	O
want	O
to	O
learn	O
to	O
program	O
will	O
never	O
be	O
as	O
good	O
as	O
learning	O
to	O
program	O
because	O
you	O
want	O
to	O
DO	O
something	O
.	O
If	O
you	O
can	O
find	O
something	O
that	O
your	O
brother	O
is	O
interested	O
in	O
making	O
work	O
because	O
he	O
wants	O
to	O
make	O
it	O
work	O
,	O
you	O
can	O
just	O
leave	O
him	O
with	O
Google	O
and	O
he	O
'll	O
do	O
it	O
.	O
And	O
he	O
'll	O
have	O
you	O
around	O
to	O
check	O
he	O
's	O
going	O
along	O
the	O
right	O
path	O
.	O
I	O
think	O
one	O
of	O
the	O
biggest	O
problems	O
with	O
teaching	O
programming	O
in	O
the	O
abstract	O
is	O
that	O
it	O
's	O
not	O
got	O
a	O
real-world	O
context	O
that	O
the	O
learner	O
can	O
get	O
emotionally	O
invested	O
in	O
.	O
Programming	O
is	O
hard	O
,	O
and	O
there	O
has	O
to	O
be	O
some	O
real	O
payoff	O
to	O
make	O
it	O
worth	O
the	O
effort	O
of	O
doing	O
it	O
.	O
In	O
my	O
case	O
,	O
I	O
'd	O
done	O
computer	O
science	O
at	O
uni	O
,	O
learned	O
Pascal	O
and	O
COBOL	O
there	O
,	O
and	O
learned	O
BASIC	B-API
at	O
home	O
before	O
that	O
,	O
but	O
I	O
never	O
really	O
got	O
anywhere	O
with	O
it	O
until	O
I	O
became	O
a	O
self-employed	O
web	O
designer	O
back	O
in	O
the	O
90s	O
and	O
my	O
clients	O
needed	O
functionality	O
on	O
their	O
web	O
sites	O
,	O
and	O
were	O
willing	O
to	O
pay	O
about	O
10x	O
more	O
for	O
functionality	O
than	O
for	O
design	O
.	O
Putting	O
food	O
on	O
the	O
table	O
is	O
a	O
hell	O
of	O
a	O
motivator	O
!	O
So	O
I	O
learned	O
Perl	O
,	O
then	O
ASP/VBScript	O
,	O
then	O
JavaScript	B-API
,	O
then	O
Flash/ActionScript	O
then	O
PHP	B-API
-	O
all	O
in	O
order	O
to	O
make	O
the	O
stuff	O
I	O
wanted	O
to	O
happen	O
.	O
How	O
to	O
Design	O
Programs	O
Structure	O
and	O
Interpretation	O
of	O
Computer	O
Programs	O
.	O
Videos	O
lectures	O
at	O
http	O
:	O
//www.swiss.ai.mit.edu/classes/6.001/abelson-sussman-lectures/	O
I	O
think	O
that	O
once	O
he	O
has	O
the	O
basics	O
(	O
variables	O
,	O
loops	O
,	O
etc	O
)	O
down	O
you	O
should	O
try	O
to	O
help	O
him	O
find	O
something	O
specific	O
that	O
he	O
is	O
interested	O
in	O
and	O
help	O
him	O
learn	O
the	O
necessities	O
to	O
make	O
it	O
happen	O
.	O
I	O
know	O
that	O
I	O
am	O
much	O
more	O
inclined	O
and	O
motivated	O
to	O
do	O
something	O
if	O
it	O
's	O
of	O
interest	O
to	O
me	O
.	O
Also	O
,	O
make	O
sure	O
to	O
let	O
him	O
struggle	O
though	O
some	O
of	O
the	O
tougher	O
problems	O
,	O
nothing	O
is	O
more	O
satisfying	O
than	O
the	O
moment	O
you	O
figure	O
it	O
out	O
on	O
your	O
own	O
.	O
I	O
'd	O
just	O
let	O
him	O
write	O
tons	O
of	O
code	O
.	O
Let	O
him	O
drive	O
in	O
everything	O
you	O
guys	O
do	O
,	O
and	O
just	O
be	O
available	O
to	O
answer	O
questions	O
.	O
Believe	O
it	O
or	O
not	O
,	O
after	O
a	O
few	O
months	O
of	O
writings	O
tons	O
of	O
crappy	O
code	O
,	O
he	O
'll	O
start	O
to	O
get	O
the	O
idea	O
and	O
start	O
writing	O
better	O
programs	O
.	O
At	O
that	O
point	O
,	O
you	O
can	O
get	O
bogged	O
down	O
in	O
details	O
(	O
memory	O
,	O
etc	O
)	O
,	O
and	O
also	O
talk	O
about	O
general	O
design	O
principles	O
.	O
I	O
've	O
heard	O
that	O
what	O
separates	O
the	O
great	O
artists	O
from	O
the	O
mediocre	O
ones	O
,	O
is	O
that	O
every	O
time	O
they	O
practice	O
,	O
they	O
improve	O
on	O
something	O
,	O
no	O
matter	O
how	O
small	O
.	O
Let	O
your	O
brother	O
practice	O
,	O
and	O
he	O
'll	O
improve	O
every	O
time	O
he	O
sits	O
down	O
at	O
the	O
keyboard	O
.	O
Edit	O
:	O
[	O
Justin	O
Standard	O
]	O
Esteban	O
,	O
this	O
reminds	O
me	O
of	O
a	O
recent	O
coding	O
horror	O
post	O
,	O
and	O
I	O
do	O
think	O
you	O
are	O
right	O
.	O
But	O
I	O
think	O
its	O
still	O
worthwhile	O
to	O
find	O
methods	O
to	O
guide	O
his	O
practice	O
.	O
No	O
question	O
,	O
I	O
want	O
him	O
writing	O
as	O
much	O
code	O
as	O
he	O
knows	O
how	O
to	O
do	O
.	O
Thats	O
one	O
reason	O
I	O
'm	O
asking	O
for	O
sample	O
projects	O
.	O
I	O
was	O
taught	O
by	O
learning	O
how	O
to	O
solve	O
problems	O
in	O
a	O
language	O
agnostic	O
way	O
using	O
flowcharts	O
and	O
PDL	B-API
(	O
Program	O
Design	O
Language	O
)	O
.	O
After	O
a	O
couple	O
weeks	O
of	O
that	O
,	O
I	O
learned	O
to	O
convert	O
the	O
PDL	B-API
I	O
had	O
written	O
to	O
a	O
language	O
.	O
I	O
am	O
glad	O
I	O
learned	O
that	O
way	O
because	O
I	O
have	O
spent	O
the	O
majority	O
of	O
my	O
years	O
programming	O
,	O
solving	O
problems	O
without	O
being	O
tied	O
to	O
a	O
language	O
.	O
What	O
language	O
I	O
use	O
has	O
always	O
been	O
an	O
implementation	O
detail	O
and	O
not	O
part	O
of	O
the	O
design	O
.	O
Having	O
to	O
solve	O
the	O
problem	O
by	O
breaking	O
it	O
down	O
into	O
it	O
's	O
basic	O
steps	O
is	O
a	O
key	O
skill	O
.	O
I	O
think	O
it	O
is	O
one	O
of	O
the	O
things	O
that	O
separates	O
those	O
that	O
can	O
program	O
from	O
those	O
that	O
ca	O
n't	O
.	O
As	O
far	O
as	O
how	O
you	O
tackle	O
the	O
order	O
of	O
concepts	O
of	O
a	O
language	O
I	O
believe	O
the	O
easiest	O
way	O
is	O
to	O
decide	O
that	O
is	O
to	O
have	O
a	O
project	O
in	O
mind	O
and	O
tackle	O
the	O
concepts	O
as	O
they	O
are	O
needed	O
.	O
This	O
lets	O
you	O
apply	O
them	O
as	O
they	O
are	O
needed	O
on	O
something	O
that	O
you	O
are	O
interested	O
in	O
doing	O
.	O
When	O
learning	O
a	O
language	O
it	O
is	O
good	O
to	O
have	O
several	O
simple	O
projects	O
in	O
mind	O
and	O
a	O
few	O
with	O
progressive	O
complexity	O
.	O
Deciding	O
on	O
those	O
will	O
help	O
you	O
map	O
out	O
the	O
concepts	O
that	O
are	O
needed	O
and	O
their	O
order	O
.	O
With	O
the	O
``	O
Built	O
in	O
''	O
stuff	O
,	O
you	O
ca	O
n't	O
,	O
as	O
using	O
1.0	O
.	O
*	O
or	O
1.0.0	O
.	O
*	O
will	O
replace	O
the	O
revision	O
and	O
build	O
numbers	O
with	O
a	O
coded	O
date/timestamp	O
,	O
which	O
is	O
usually	O
also	O
a	O
good	O
way	O
.	O
For	O
more	O
info	O
,	O
see	O
the	O
Assembly	O
Linker	O
Documentation	O
in	O
the	O
/v	O
tag	O
.	O
As	O
for	O
automatically	O
incrementing	O
numbers	O
,	O
use	O
the	O
AssemblyInfo	B-API
Task	I-API
:	O
AssemblyInfo	B-API
Task	I-API
This	O
can	O
be	O
configured	O
to	O
automatically	O
increment	O
the	O
build	O
number	O
.	O
There	O
are	O
2	O
Gotchas	O
:	O
Each	O
of	O
the	O
4	O
numbers	O
in	O
the	O
Version	O
string	O
is	O
limited	O
to	O
65535	O
.	O
This	O
is	O
a	O
Windows	O
Limitation	O
and	O
unlikely	O
to	O
get	O
fixed	O
.	O
Why	O
are	O
build	O
numbers	O
limited	O
to	O
65535	O
?	O
Using	O
with	O
with	O
Subversion	O
requires	O
a	O
small	O
change	O
:	O
Using	O
MSBuild	O
to	O
generate	O
assembly	O
version	O
info	O
at	O
build	O
time	O
(	O
including	O
SubVersion	O
fix	O
)	O
Retrieving	O
the	O
Version	O
number	O
is	O
then	O
quite	O
easy	O
:	O
Version	B-API
v	O
=	O
Assembly.GetExecutingAssembly	B-API
(	I-API
)	I-API
.GetName	I-API
(	I-API
)	I-API
.Version	O
;	O
string	O
About	O
=	O
string.Format	B-API
(	O
CultureInfo.InvariantCulture	O
,	O
@	O
''	O
YourApp	O
Version	O
{	O
0	O
}	O
.	O
{	O
1	O
}	O
.	O
{	O
2	O
}	O
(	O
r	O
{	O
3	O
}	O
)	O
''	O
,	O
v.Major	O
,	O
v.Minor	O
,	O
v.Build	O
,	O
v.Revision	O
)	O
;	O
And	O
,	O
to	O
clarify	O
:	O
In	O
.net	O
or	O
at	O
least	O
in	O
C	B-API
#	I-API
,	O
the	O
build	O
is	O
actually	O
the	O
THIRD	O
number	O
,	O
not	O
the	O
fourth	O
one	O
as	O
some	O
people	O
(	O
for	O
example	O
Delphi	O
Developers	O
who	O
are	O
used	O
to	O
Major.Minor.Release.Build	B-API
)	O
might	O
expect	O
.	O
In	O
.net	O
,	O
it	O
's	O
Major.Minor.Build.Revision	B-API
.	O
What	O
source	O
control	O
system	O
are	O
you	O
using	O
?	O
Almost	O
all	O
of	O
them	O
have	O
some	O
form	O
of	O
$	O
Id	O
$	O
tag	O
that	O
gets	O
expanded	O
when	O
the	O
file	O
is	O
checked	O
in	O
.	O
I	O
usually	O
use	O
some	O
form	O
of	O
hackery	O
to	O
display	O
this	O
as	O
the	O
version	O
number	O
.	O
The	O
other	O
alternative	O
is	O
use	O
to	O
use	O
the	O
date	O
as	O
the	O
build	O
number	O
:	O
080803-1448	O
Some	O
time	O
ago	O
I	O
wrote	O
a	O
quick	O
and	O
dirty	O
exe	O
that	O
would	O
update	O
the	O
version	O
#	O
's	O
in	O
an	O
assemblyinfo	O
.	O
{	O
cs/vb	O
}	O
-	O
I	O
also	O
have	O
used	O
rxfind.exe	O
(	O
a	O
simple	O
and	O
powerful	O
regex-based	O
search	O
replace	O
tool	O
)	O
to	O
do	O
the	O
update	O
from	O
a	O
command	O
line	O
as	O
part	O
of	O
the	O
build	O
process	O
.	O
A	O
couple	O
of	O
other	O
helpfule	O
hints	O
:	O
separate	O
the	O
assemblyinfo	O
into	O
product	O
parts	O
(	O
company	O
name	O
,	O
version	O
,	O
etc	O
.	O
)	O
and	O
assembly	O
specific	O
parts	O
(	O
assembly	O
name	O
etc.	O
)	O
.	O
See	O
here	O
Also	O
-	O
i	O
use	O
subversion	O
,	O
so	O
I	O
found	O
it	O
helpful	O
to	O
set	O
the	O
build	O
number	O
to	O
subversion	O
revision	O
number	O
thereby	O
making	O
it	O
really	O
easy	O
to	O
always	O
get	O
back	O
to	O
the	O
codebase	O
that	O
generated	O
the	O
assembly	O
(	O
e.g	O
.	O
1.4.100.1502	O
was	O
built	O
from	O
revision	O
1502	O
)	O
.	O
You	O
can	O
use	O
ImageMagick	B-API
's	O
convert	O
utility	O
for	O
this	O
,	O
see	O
some	O
examples	O
in	O
http	O
:	O
//studio.imagemagick.org/pipermail/magick-users/2002-May/002636.html	O
:	O
Convert	O
taxes.pdf	O
taxes.jpg	O
Will	O
convert	O
a	O
two	O
page	O
PDF	O
file	O
into	O
[	O
2	O
]	O
jpeg	O
files	O
:	O
taxes.jpg.0	O
,	O
taxes.jpg.1	O
I	O
can	O
also	O
convert	O
these	O
JPEGS	O
to	O
a	O
thumbnail	O
as	O
follows	O
:	O
convert	O
-size	O
120x120	O
taxes.jpg.0	O
-geometry	O
120x120	O
+profile	O
'*	O
'	O
thumbnail.jpg	O
I	O
can	O
even	O
convert	O
the	O
PDF	O
directly	O
to	O
a	O
jpeg	O
thumbnail	O
as	O
follows	O
:	O
convert	O
-size	O
120x120	O
taxes.pdf	O
-geometry	O
120x120	O
+profile	O
'*	O
'	O
thumbnail.jpg	O
This	O
will	O
result	O
in	O
a	O
thumbnail.jpg.0	O
and	O
thumbnail.jpg.1	O
for	O
the	O
two	O
pages	O
.	O
While	O
I	O
have	O
n't	O
used	O
a	O
flash	O
object	O
inside	O
a	O
windows	O
form	O
application	O
myself	O
,	O
I	O
do	O
know	O
that	O
it	O
's	O
possible	O
.	O
In	O
Visual	B-API
studio	I-API
on	O
your	O
toolbox	O
,	O
choose	O
to	O
add	O
a	O
new	O
component	O
.	O
Then	O
in	O
the	O
new	O
window	O
that	O
appears	O
choose	O
the	O
``	O
COM	O
Components	O
''	O
tab	O
to	O
get	O
a	O
list	O
in	O
which	O
you	O
can	O
find	O
the	O
``	O
Shockwave	B-API
Flash	I-API
Object	I-API
''	O
Once	O
added	O
to	O
the	O
toolbox	O
,	O
simply	O
use	O
the	O
control	O
as	O
you	O
would	O
use	O
any	O
other	O
``	O
standard	O
''	O
control	O
from	O
visual	O
studio	O
.	O
three	O
simple	O
commands	O
are	O
available	O
to	O
interact	O
with	O
the	O
control	O
:	O
AxShockwaveFlash1.Stop	B-API
(	I-API
)	I-API
AxShockwaveFlash1.Movie	O
=	O
FilePath	O
''	O
\FileName.swf	O
''	O
AxShockwaveFlash1.Play	B-API
(	I-API
)	I-API
which	O
,	O
I	O
think	O
,	O
are	O
all	O
self	O
explanatory	O
.	O
It	O
would	O
be	O
great	O
to	O
be	O
able	O
to	O
load	O
the	O
flash	O
content	O
from	O
a	O
stream	O
of	O
sorts	O
rather	O
than	O
a	O
file	O
on	O
disk	O
.	O
I	O
just	O
saw	O
you	O
are	O
also	O
looking	O
for	O
a	O
means	O
to	O
load	O
the	O
content	O
from	O
a	O
stream	O
,	O
and	O
because	O
I	O
'm	O
not	O
really	O
sure	O
that	O
is	O
possible	O
with	O
the	O
shockwave	O
flash	O
object	O
I	O
will	O
give	O
you	O
another	O
option	O
(	O
two	O
actually	O
)	O
.	O
the	O
first	O
is	O
the	O
one	O
I	O
would	O
advise	O
you	O
to	O
use	O
only	O
when	O
necessary	O
,	O
as	O
it	O
uses	O
the	O
full	O
blown	O
``	O
webbrowser	O
component	O
''	O
(	O
also	O
available	O
as	O
an	O
extra	O
toolbox	O
item	O
)	O
,	O
which	O
is	O
like	O
trying	O
to	O
shoot	O
a	O
fly	O
with	O
a	O
bazooka	O
.	O
of	O
course	O
it	O
will	O
work	O
,	O
as	O
the	O
control	O
will	O
act	O
as	O
a	O
real	O
browser	O
window	O
(	O
actually	O
the	O
internet	O
explorer	O
browser	O
)	O
,	O
but	O
its	O
not	O
really	O
meant	O
to	O
be	O
used	O
in	O
the	O
way	O
you	O
need	O
it	O
.	O
the	O
second	O
option	O
is	O
to	O
use	O
something	O
I	O
just	O
discovered	O
while	O
looking	O
for	O
more	O
information	O
about	O
playing	O
flash	O
content	O
inside	O
a	O
windows	O
form	O
.	O
F-IN-BOX	O
is	O
a	O
commercial	O
solution	O
that	O
will	O
also	O
play	O
content	O
from	O
a	O
given	O
website	O
URL	O
.	O
(	O
The	O
link	O
provided	O
will	O
direct	O
you	O
to	O
the	O
.NET	B-API
code	O
you	O
have	O
to	O
use	O
)	O
.	O
Sven	O
,	O
you	O
reached	O
the	O
same	O
conclusion	O
as	O
I	O
did	O
:	O
I	O
found	O
the	O
Shockwave	B-API
Flash	I-API
Object	I-API
,	O
all	O
be	O
it	O
from	O
a	O
slightly	O
different	O
route	O
,	O
but	O
was	O
stumped	O
on	O
how	O
to	O
load	O
the	O
files	O
from	O
somewhere	O
other	O
than	O
file	O
on	O
disk/URL	O
.	O
The	O
F-IN-BOX	O
,	O
although	O
just	O
a	O
wrapper	O
of	O
the	O
Shockwave	B-API
Flash	I-API
Object	I-API
seems	O
to	O
provide	O
much	O
more	O
functionality	O
,	O
which	O
may	O
just	O
help	O
me	O
!	O
Shooting	O
flys	O
with	O
bazookas	O
may	O
be	O
fun	O
,	O
but	O
an	O
embeded	O
web	O
brower	O
is	O
not	O
the	O
path	O
that	O
I	O
am	O
looking	O
for	O
.	O
:	O
)	O
There	O
was	O
a	O
link	O
on	O
Adobe	O
's	O
site	O
that	O
talked	O
about	O
``	O
Embedding	O
and	O
Communicating	O
with	O
the	O
Macromedia	O
Flash	O
Player	O
in	O
C	O
#	O
Windows	O
Applications	O
''	O
but	O
they	O
seem	O
to	O
have	O
removed	O
it	O
:	O
(	O
One	O
implementation	O
of	O
this	O
problem	O
is	O
to	O
attempt	O
to	O
call	O
the	O
parameter-less	O
constructor	O
of	O
the	O
Type	O
:	O
public	O
static	O
object	O
GetNewObject	B-API
(	I-API
Type	I-API
t	I-API
)	I-API
{	O
try	O
{	O
return	O
t.GetConstructor	B-API
(	I-API
new	I-API
Type	I-API
[	I-API
]	I-API
{	I-API
}	I-API
)	I-API
.Invoke	I-API
(	I-API
new	I-API
object	I-API
[	I-API
]	I-API
{	I-API
}	I-API
)	I-API
;	O
}	O
catch	O
{	O
return	O
null	O
;	O
}	O
}	O
Here	O
is	O
the	O
same	O
approach	O
,	O
contained	O
in	O
a	O
generic	O
method	O
:	O
public	O
static	O
T	O
GetNewObjectT	B-API
(	I-API
)	I-API
{	O
try	O
{	O
return	O
(	O
T	O
)	O
typeof	B-API
(	I-API
T	I-API
)	I-API
.GetConstructor	B-API
(	I-API
new	I-API
Type	I-API
[	I-API
]	I-API
{	I-API
}	I-API
)	I-API
.Invoke	B-API
(	I-API
new	I-API
object	I-API
[	I-API
]	I-API
{	I-API
}	I-API
)	I-API
;	O
}	O
catch	O
{	O
return	O
default	B-API
(	I-API
T	I-API
)	I-API
;	O
}	O
}	O
The	O
class	O
within	O
the	O
root	O
namespace	O
is	O
pretty	O
powerful	O
.	O
There	O
are	O
a	O
lot	O
of	O
overloads	O
for	O
passing	O
parameters	O
to	O
the	O
constructor	O
and	O
such	O
.	O
Check	O
out	O
the	O
documentation	O
at	O
:	O
http	O
:	O
//msdn.microsoft.com/en-us/library/system.activator.createinstance.aspx	O
Here	O
are	O
some	O
simple	O
examples	O
:	O
ObjectType	O
instance	O
=	O
(	O
ObjectType	O
)	O
Activator.CreateInstance	B-API
(	I-API
objectType	I-API
)	I-API
;	O
ObjectType	O
instance	O
=	O
(	O
ObjectType	O
)	O
Activator.CreateInstance	B-API
(	I-API
``	I-API
MyAssembly	I-API
''	I-API
,	I-API
''	I-API
MyNamespace.ObjectType	I-API
''	I-API
)	I-API
;	O
open	O
up	O
a	O
terminal	O
(	O
Applications-Utilities-Terminal	O
)	O
and	O
type	O
this	O
in	O
:	O
locate	B-API
This	O
will	O
spit	O
out	O
every	O
file	O
that	O
has	O
the	O
name	O
you	O
want	O
.	O
Warning	O
:	O
there	O
may	O
be	O
alot	O
to	O
wade	O
through	O
.	O
I	O
have	O
n't	O
been	O
able	O
to	O
find	O
anything	O
that	O
does	O
this	O
directly	O
.	O
I	O
think	O
you	O
'll	O
have	O
to	O
iterate	O
through	O
the	O
various	O
font	O
folders	O
on	O
the	O
system	O
:	O
,	O
,	O
and	O
there	O
can	O
probably	O
be	O
a	O
user-level	O
directory	O
as	O
well	O
.	O
Unfortunately	O
the	O
only	O
API	O
that	O
is	O
n't	O
deprecated	O
is	O
located	O
in	O
the	O
ApplicationServices	B-API
framework	I-API
,	O
which	O
does	O
n't	O
have	O
a	O
bridge	O
support	O
file	O
,	O
and	O
thus	O
is	O
n't	O
available	O
in	O
the	O
bridge	O
.	O
If	O
you	O
're	O
wanting	O
to	O
use	O
ctypes	O
,	O
you	O
can	O
use	O
ATSFontGetFileReference	B-API
after	O
looking	O
up	O
the	O
ATSFontRef	B-API
.	O
Cocoa	O
does	O
n't	O
have	O
any	O
native	O
support	O
,	O
at	O
least	O
as	O
of	O
10.5	O
,	O
for	O
getting	O
the	O
location	O
of	O
a	O
font	O
.	O
Java	B-API
autoboxing/unboxing	O
does	O
n't	O
go	O
to	O
the	O
extent	O
to	O
allow	O
you	O
to	O
dereference	O
a	O
primitive	O
,	O
so	O
your	O
compiler	O
prevents	O
it	O
.	O
Your	O
compiler	O
still	O
knows	O
as	O
a	O
primitive	O
.	O
There	O
's	O
a	O
paper	O
about	O
this	O
issue	O
at	O
jcp.org	O
.	O
Autoboxing	O
is	O
mainly	O
useful	O
during	O
assignment	O
or	O
parameter	O
passing	O
--	O
allowing	O
you	O
to	O
pass	O
a	O
primitive	O
as	O
an	O
object	O
(	O
or	O
vice	O
versa	O
)	O
,	O
or	O
assign	O
a	O
primitive	O
to	O
an	O
object	O
(	O
or	O
vice	O
versa	O
)	O
.	O
So	O
unfortunately	O
,	O
you	O
would	O
have	O
to	O
do	O
it	O
like	O
this	O
:	O
(	O
kudos	O
Patrick	O
,	O
I	O
switched	O
to	O
your	O
way	O
)	O
Integer.toString	B-API
(	I-API
myInt	I-API
)	I-API
;	O
Ditto	O
on	O
what	O
Justin	O
said	O
,	O
but	O
you	O
should	O
do	O
this	O
instead	O
:	O
Integer.toString	B-API
(	I-API
myInt	I-API
)	I-API
;	O
It	O
saves	O
an	O
allocation	O
or	O
two	O
and	O
is	O
more	O
readable	O
.	O
seems	O
like	O
a	O
shortcoming	O
of	O
the	O
specification	O
to	O
me	O
There	O
are	O
more	O
shortcomings	O
and	O
this	O
is	O
a	O
subtle	O
topic	O
.	O
Check	O
this	O
out	O
:	O
public	O
class	O
methodOverloading	O
{	O
public	O
static	B-API
void	B-API
{	I-API
;	I-API
}	I-API
public	O
static	B-API
void	B-API
{	I-API
;	I-API
}	I-API
public	O
static	B-API
void	O
{	O
int	O
i	O
=	O
5	O
;	O
;	O
(	O
Integer	B-API
x	O
)	O
System.out.println	B-API
(	I-API
``	I-API
Integer	I-API
''	I-API
)	I-API
(	O
long	O
x	O
)	O
System.out.println	B-API
(	I-API
``	I-API
long	I-API
''	I-API
)	I-API
(	O
String	B-API
[	I-API
]	I-API
args	O
)	O
hello	B-API
(	I-API
i	I-API
)	I-API
Here	O
``	O
long	O
''	O
would	O
be	O
printed	O
(	O
have	O
n't	O
checked	O
it	O
myself	O
)	O
,	O
because	O
the	O
compiler	O
choses	O
widening	O
over	O
autoboxing	O
.	O
Be	O
careful	O
when	O
using	O
autoboxing	O
or	O
do	O
n't	O
use	O
it	O
at	O
all	O
!	O
That	O
actually	O
sounds	O
like	O
IIS	O
's	O
level	O
.	O
If	O
it	O
is	O
,	O
then	O
you	O
wo	O
n't	O
be	O
able	O
to	O
write	O
to	O
any	O
file	O
,	O
not	O
just	O
the	O
.	O
Here	O
are	O
the	O
levels	O
from	O
IIS	O
's	O
help	O
file	O
:	O
Full	O
(	O
internal	O
)	O
-	O
Specifies	O
unrestricted	O
permissions	O
.	O
Grants	O
the	O
ASP.NET	B-API
application	O
permissions	O
to	O
access	O
any	O
resource	O
that	O
is	O
subject	O
to	O
operating	O
system	O
security	O
.	O
All	O
privileged	O
operations	O
are	O
supported	O
.	O
High	B-API
(	I-API
web_hightrust.config	I-API
)	I-API
-	O
Specifies	O
a	O
high	O
level	O
of	O
code	O
access	O
security	O
,	O
which	O
means	O
that	O
the	O
application	O
can	O
not	O
do	O
any	O
one	O
of	O
the	O
following	O
things	O
by	O
default	O
:	O
Call	O
unmanaged	O
code	O
.	O
Call	O
serviced	O
components	O
.	O
Write	O
to	O
the	O
event	O
log	O
.	O
Access	B-API
Message	I-API
Queuing	I-API
service	I-API
queues	O
.	O
Access	O
ODBC	B-API
,	O
OleDb	B-API
,	O
or	O
Oracle	B-API
data	O
sources	O
.	O
Medium	B-API
(	I-API
web_mediumtrust.config	I-API
)	I-API
-	O
Specifies	O
a	O
medium	O
level	O
of	O
code	O
access	O
security	O
,	O
which	O
means	O
that	O
,	O
in	O
addition	O
to	O
High	O
Trust	O
Level	O
restrictions	O
,	O
the	O
ASP.NET	B-API
application	O
can	O
not	O
do	O
any	O
of	O
the	O
following	O
things	O
by	O
default	O
:	O
Access	O
files	O
outside	O
the	O
application	O
directory	O
.	O
Access	O
the	O
registry	O
.	O
Make	O
network	O
or	O
Web	O
service	O
calls	O
.	O
Low	B-API
(	I-API
web_lowtrust.config	I-API
)	I-API
-	O
Specifies	O
a	O
low	O
level	O
of	O
code	O
access	O
security	O
,	O
which	O
means	O
that	O
,	O
in	O
addition	O
to	O
Medium	B-API
Trust	I-API
Level	I-API
restrictions	O
,	O
the	O
application	O
can	O
not	O
do	O
any	O
of	O
the	O
following	O
things	O
by	O
default	O
:	O
Write	O
to	O
the	O
file	O
system	O
.	O
Call	O
the	O
Assert	O
method	O
.	O
Minimal	B-API
(	I-API
web_minimaltrust.config	I-API
)	I-API
-	O
Specifies	O
a	O
minimal	O
level	O
of	O
code	O
access	O
security	O
,	O
which	O
means	O
that	O
the	O
application	O
has	O
only	O
execute	O
permissions	O
.	O
I	O
would	O
suggest	O
that	O
if	O
you	O
are	O
dead	O
set	O
on	O
having	O
an	O
installer	O
,	O
have	O
it	O
create	O
a	O
web.config	O
in	O
memory	O
that	O
the	O
user	O
can	O
save	O
locally	O
and	O
up	O
afterward	O
.	O
In	O
Java	B-API
,	O
the	O
'int	O
'	O
type	O
is	O
a	O
primitive	O
,	O
whereas	O
the	O
'Integer	O
'	O
type	O
is	O
an	O
object	O
.	O
In	O
C	B-API
#	I-API
,	O
the	O
'int	O
'	O
type	O
is	O
the	O
same	O
as	O
and	O
is	O
a	O
value	O
type	O
(	O
ie	O
more	O
like	O
the	O
java	O
'int	O
'	O
)	O
.	O
An	O
integer	O
(	O
just	O
like	O
any	O
other	O
value	O
types	O
)	O
can	O
be	O
boxed	O
(	O
``	O
wrapped	O
''	O
)	O
into	O
an	O
object	O
.	O
The	O
differences	O
between	O
objects	O
and	O
primitives	O
are	O
somewhat	O
beyond	O
the	O
scope	O
of	O
this	O
question	O
,	O
but	O
to	O
summarize	O
:	O
Objects	O
provide	O
facilities	O
for	O
polymorphism	O
,	O
are	O
passed	O
by	O
reference	O
(	O
or	O
more	O
accurately	O
have	O
references	O
passed	O
by	O
value	O
)	O
,	O
and	O
are	O
allocated	O
from	O
the	O
heap	O
.	O
Conversely	O
,	O
primitives	O
are	O
immutable	O
types	O
that	O
are	O
passed	O
by	O
value	O
and	O
are	O
often	O
allocated	O
from	O
the	O
stack	O
.	O
Well	O
,	O
in	O
Java	B-API
an	O
int	O
is	O
a	O
primitive	O
while	O
an	O
Integer	B-API
is	O
an	O
Object	B-API
.	O
Meaning	O
,	O
if	O
you	O
made	O
a	O
new	O
Integer	B-API
:	O
Integer	B-API
i	O
=	O
new	B-API
Integer	I-API
(	I-API
6	I-API
)	I-API
;	O
You	O
could	O
call	O
some	O
method	O
on	O
i	O
:	O
String	B-API
s	O
=	O
i.toString	B-API
(	I-API
)	I-API
;	O
//sets	O
s	O
the	O
string	O
representation	O
of	O
i	O
Whereas	O
with	O
an	O
int	O
:	O
int	O
i	O
=	O
6	O
;	O
You	O
can	O
not	O
call	O
any	O
methods	O
on	O
it	O
,	O
because	O
it	O
is	O
simply	O
a	O
primitive	O
.	O
So	O
:	O
String	B-API
s	O
=	O
i.toString	B-API
(	I-API
)	I-API
;	O
//will	O
not	O
work	O
!	O
!	O
!	O
would	O
produce	O
an	O
error	O
,	O
because	O
int	O
is	O
not	O
an	O
object	O
.	O
int	O
is	O
one	O
of	O
the	O
few	O
primitives	O
in	O
Java	B-API
(	O
along	O
with	O
char	O
and	O
some	O
others	O
)	O
.	O
I	O
'm	O
not	O
100	O
%	O
sure	O
,	O
but	O
I	O
'm	O
thinking	O
that	O
the	O
Integer	B-API
object	O
more	O
or	O
less	O
just	O
has	O
an	O
int	O
property	O
and	O
a	O
whole	O
bunch	O
of	O
methods	O
to	O
interact	O
with	O
that	O
property	O
(	O
like	O
the	O
toString	B-API
(	I-API
)	I-API
method	O
for	O
example	O
)	O
.	O
So	O
Integer	B-API
is	O
a	O
fancy	O
way	O
to	O
work	O
with	O
an	O
int	O
(	O
Just	O
as	O
perhaps	O
String	B-API
is	O
a	O
fancy	O
way	O
to	O
work	O
with	O
a	O
group	O
of	O
chars	O
)	O
.	O
I	O
know	O
that	O
Java	B-API
is	O
n't	O
C	O
,	O
but	O
since	O
I	O
've	O
never	O
programmed	O
in	O
C	O
this	O
is	O
the	O
closest	O
I	O
could	O
come	O
to	O
the	O
answer	O
.	O
Hope	O
this	O
helps	O
!	O
Integer	B-API
object	O
javadoc	O
Integer	B-API
Ojbect	B-API
vs.	O
int	O
primitive	O
comparison	O
In	O
C	B-API
#	I-API
,	O
int	O
is	O
just	O
an	O
alias	O
for	O
,	O
string	O
for	O
,	O
double	O
for	O
etc	O
...	O
Personally	O
I	O
prefer	O
int	O
,	O
string	O
,	O
double	O
,	O
etc	O
.	O
because	O
they	O
do	O
n't	O
require	O
a	O
using	B-API
statement	O
:	O
)	O
A	O
silly	O
reason	O
,	O
I	O
know	O
...	O
I	O
'll	O
add	O
to	O
the	O
excellent	O
answers	O
given	O
above	O
,	O
and	O
talk	O
about	O
boxing	O
and	O
unboxing	O
,	O
and	O
how	O
this	O
applies	O
to	O
Java	B-API
(	O
although	O
C	B-API
#	I-API
has	O
it	O
too	O
)	O
.	O
I	O
'll	O
use	O
just	O
Java	B-API
terminology	O
,	O
because	O
I	O
am	O
more	O
au	O
fait	O
with	O
that	O
.	O
As	O
the	O
answers	O
mentioned	O
,	O
is	O
just	O
a	O
number	O
(	O
called	O
the	O
unboxed	O
type	O
)	O
,	O
whereas	O
is	O
an	O
object	O
(	O
which	O
contains	O
the	O
number	O
,	O
hence	O
a	O
boxed	O
type	O
)	O
.	O
In	O
Java	B-API
terms	O
,	O
that	O
means	O
(	O
apart	O
from	O
not	O
being	O
able	O
to	O
call	O
methods	O
on	O
)	O
,	O
you	O
can	O
not	O
store	O
or	O
other	O
non-object	O
types	O
in	O
collections	O
(	O
,	O
,	O
etc.	O
)	O
.	O
In	O
order	O
to	O
store	O
them	O
,	O
you	O
must	O
first	O
box	O
them	O
up	O
in	O
its	O
corresponding	O
boxed	O
type	O
.	O
Java	B-API
5	O
onwards	O
have	O
something	O
called	O
auto-boxing	O
and	O
auto-unboxing	O
which	O
allow	O
the	O
boxing/unboxing	O
to	O
be	O
done	O
behind	O
the	O
scenes	O
.	O
Compare	O
and	O
contrast	O
:	O
Java	B-API
5	O
version	O
:	O
DequeInteger	B-API
queue	I-API
;	I-API
void	B-API
{	I-API
;	I-API
}	I-API
int	O
{	O
return	O
(	O
int	O
n	O
)	O
queue.add	B-API
(	I-API
n	I-API
)	I-API
remove	B-API
(	I-API
)	I-API
queue.remove	B-API
(	I-API
)	I-API
Java	B-API
1.4	O
or	O
earlier	O
(	O
no	O
generics	O
either	O
)	O
:	O
Deque	B-API
queue	I-API
;	O
void	B-API
{	O
)	O
;	O
}	O
int	O
{	O
return	O
(	O
int	O
n	O
)	O
queue.add	B-API
(	O
Integer.valueOf	B-API
(	I-API
n	I-API
)	I-API
remove	B-API
(	I-API
)	I-API
(	O
(	O
Integer	B-API
)	O
queue.remove	B-API
(	I-API
)	I-API
)	O
.intValue	B-API
(	I-API
)	I-API
It	O
must	O
be	O
noted	O
that	O
despite	O
the	O
brevity	O
in	O
the	O
Java	B-API
5	O
version	O
,	O
both	O
versions	O
generate	O
identical	O
bytecode	O
.	O
Thus	O
,	O
although	O
auto-boxing	O
and	O
auto-unboxing	O
is	O
very	O
convenient	O
because	O
you	O
write	O
less	O
code	O
,	O
these	O
operations	O
do	O
happen	O
behind	O
the	O
scenes	O
,	O
with	O
the	O
same	O
runtime	O
costs	O
,	O
so	O
you	O
still	O
have	O
to	O
be	O
aware	O
of	O
their	O
existence	O
.	O
Hope	O
this	O
helps	O
!	O
I	O
'll	O
just	O
post	O
here	O
since	O
some	O
of	O
the	O
other	O
posts	O
are	O
slightly	O
inaccurate	O
in	O
relation	O
to	O
C	B-API
#	I-API
.	O
Correct	O
:	O
is	O
an	O
alias	O
for	O
.	O
Wrong	O
:	O
is	O
not	O
an	O
alias	O
for	O
,	O
but	O
for	O
Basically	O
,	O
int	O
is	O
a	O
reserved	O
keyword	O
in	O
the	O
C	B-API
#	I-API
programming	O
language	O
,	O
and	O
is	O
an	O
alias	O
for	O
the	O
value	O
type	O
.	O
and	O
Float	B-API
is	O
not	O
the	O
same	O
however	O
,	O
as	O
the	O
right	O
system	O
type	O
for	O
''float	O
''	O
is	O
System.Single	B-API
.	O
There	O
are	O
some	O
types	O
like	O
this	O
that	O
has	O
reserved	O
keywords	O
that	O
does	O
n't	O
seem	O
to	O
match	O
the	O
type	O
names	O
directly	O
.	O
In	O
C	B-API
#	I-API
there	O
is	O
no	O
difference	O
between	O
''	O
''	O
and	O
''	O
''	O
,	O
or	O
any	O
of	O
the	O
other	O
pa	O
rs	O
or	O
keywords/system	O
types	O
,	O
except	O
for	O
when	O
defining	O
enums	O
.	O
With	O
enums	O
you	O
can	O
specify	O
the	O
storage	O
size	O
to	O
use	O
and	O
in	O
this	O
case	O
you	O
can	O
only	O
use	O
the	O
reserved	O
keyword	O
,	O
and	O
not	O
the	O
system	O
runtime	O
type	O
name	O
.	O
Wether	O
the	O
value	O
in	O
the	O
int	O
will	O
be	O
stored	O
on	O
the	O
stack	O
,	O
in	O
memory	O
,	O
or	O
as	O
a	O
referenced	O
heap	O
object	O
depends	O
on	O
the	O
context	O
and	O
how	O
you	O
use	O
it	O
.	O
This	O
declaration	O
in	O
a	O
method	O
:	O
int	O
i	O
;	O
defines	O
a	O
variable	O
i	O
of	O
type	O
,	O
l	O
ving	O
in	O
a	O
register	O
or	O
on	O
the	O
stack	O
,	O
depending	O
on	O
optimizations	O
.	O
The	O
same	O
declaration	O
in	O
a	O
type	O
(	O
struct	O
or	O
class	O
)	O
defines	O
a	O
member	O
field	O
.	O
The	O
same	O
declaration	O
in	O
a	O
method	O
argument	O
list	O
defines	O
a	O
parameter	O
,	O
with	O
the	O
same	O
storage	O
options	O
as	O
for	O
a	O
local	O
variable	O
.	O
(	O
note	O
that	O
this	O
paragraph	O
is	O
not	O
valid	O
if	O
you	O
start	O
pulling	O
iterator	O
methods	O
into	O
the	O
mix	O
,	O
these	O
are	O
different	O
beasts	O
altogether	O
)	O
To	O
get	O
a	O
heap	O
object	O
,	O
you	O
can	O
use	O
boxing	O
:	O
object	O
o	O
=	O
i	O
;	O
this	O
will	O
create	O
a	O
boxed	O
copy	O
of	O
the	O
contents	O
of	O
i	O
on	O
the	O
heap	O
.	O
In	O
IL	O
you	O
can	O
access	O
methods	O
on	O
the	O
heap	O
object	O
directly	O
,	O
but	O
in	O
C	B-API
#	I-API
you	O
need	O
to	O
cast	O
it	O
back	O
to	O
an	O
int	O
,	O
which	O
will	O
create	O
another	O
copy	O
.	O
Thus	O
,	O
the	O
object	O
on	O
the	O
heap	O
can	O
not	O
easily	O
be	O
changed	O
in	O
C	B-API
#	I-API
without	O
creating	O
a	O
new	O
boxed	O
copy	O
of	O
a	O
new	O
int	O
value	O
.	O
(	O
Ugh	O
,	O
this	O
paragraph	O
does	O
n't	O
read	O
all	O
that	O
easily	O
.	O
)	O
This	O
has	O
already	O
been	O
answered	O
for	O
Java	B-API
,	O
here	O
's	O
the	O
C	B-API
#	I-API
answer	O
:	O
''	O
Integer	B-API
''	O
is	O
not	O
a	O
valid	O
type	O
name	O
in	O
C	B-API
#	I-API
and	O
``	O
int	O
''	O
is	O
just	O
an	O
alias	O
for	O
System.Int32	B-API
.	O
Also	O
,	O
unlike	O
in	O
Java	B-API
(	O
or	O
C++	B-API
)	O
there	O
are	O
n't	O
any	O
special	O
primitive	O
types	O
in	O
C	B-API
#	I-API
,	O
every	O
instance	O
of	O
a	O
type	O
in	O
C	B-API
#	I-API
(	O
including	O
int	O
)	O
is	O
an	O
object	O
.	O
Here	O
's	O
some	O
demonstrative	O
code	O
:	O
void	B-API
{	I-API
5	I-API
)	I-API
)	I-API
;	I-API
)	I-API
;	I-API
}	I-API
string	O
{	O
return	O
)	O
;	O
}	O
string	O
{	O
return	O
(	O
typeof	B-API
DoStuff	B-API
(	I-API
)	I-API
(	O
SomeMethod	O
(	O
(	O
int	O
)	O
(	O
GetTypeNameint	B-API
(	I-API
)	I-API
(	O
object	O
someParameter	O
)	O
(	O
``	O
Some	O
text	O
{	O
0	O
}	O
''	O
,	O
someParameter.ToString	B-API
(	I-API
)	I-API
GetTypeNameT	B-API
(	I-API
)	I-API
Regarding	O
Java	B-API
1.5	O
and	O
autoboxing	O
there	O
is	O
an	O
important	O
``	O
quirk	O
''	O
that	O
comes	O
to	O
play	O
when	O
comparing	O
Integer	B-API
objects	O
.	O
In	O
Java	B-API
,	O
Integer	B-API
objects	O
with	O
the	O
values	O
-128	O
to	O
127	O
are	O
immutable	O
(	O
that	O
is	O
,	O
for	O
one	O
particular	O
integer	O
value	O
,	O
say	O
23	O
,	O
all	O
Integer	B-API
objects	O
instantiated	O
through	O
your	O
program	O
with	O
the	O
value	O
23	O
points	O
to	O
the	O
exact	O
same	O
object	O
)	O
.	O
Example	O
,	O
this	O
returns	O
true	O
:	O
Integer	B-API
i1	I-API
=	I-API
new	I-API
;	O
Integer	B-API
i2	I-API
=	I-API
new	I-API
;	O
//	O
Integer	B-API
(	I-API
127	I-API
)	I-API
(	O
127	O
)	O
;	O
System.out.println	B-API
(	I-API
i1	I-API
==	I-API
i2	I-API
)	I-API
While	O
this	O
returns	O
false	O
:	O
Integer	B-API
i1	I-API
=	I-API
new	I-API
;	O
Integer	B-API
i2	I-API
=	I-API
new	I-API
;	O
//	O
Integer	B-API
(	I-API
128	I-API
)	I-API
(	O
128	O
)	O
;	O
System.out.println	B-API
(	I-API
i1	I-API
==	I-API
i2	I-API
)	I-API
The	O
==	O
compares	O
by	O
reference	O
(	O
does	O
the	O
variables	O
point	O
to	O
the	O
same	O
object	O
)	O
.	O
This	O
result	O
may	O
or	O
may	O
not	O
differ	O
depending	O
on	O
what	O
JVM	O
you	O
are	O
using	O
.	O
The	O
specification	O
autoboxing	O
for	O
Java	B-API
1.5	O
requires	O
that	O
integers	O
(	O
-128	O
to	O
127	O
)	O
always	O
box	O
to	O
the	O
same	O
wrapper	O
object	O
.	O
A	O
solution	O
?	O
=	O
)	O
One	O
should	O
always	O
use	O
the	O
Integer.equals	B-API
(	I-API
)	I-API
method	O
when	O
comparing	O
Integer	B-API
objects	O
.	O
)	O
;	O
//	O
System.out.println	B-API
(	I-API
i1.equals	I-API
(	I-API
i2	I-API
)	I-API
More	O
info	O
at	O
java.net	O
Example	O
at	O
bexhuff.com	O
In	O
Java	B-API
there	O
are	O
two	O
basic	O
types	O
in	O
the	O
JVM	B-API
.	O
1	O
)	O
Primitive	O
types	O
and	O
2	O
)	O
Reference	O
Types	O
.	O
int	O
is	O
a	O
primitive	O
type	O
and	O
Integer	B-API
is	O
a	O
class	O
type	O
(	O
which	O
is	O
kind	O
of	O
reference	O
type	O
)	O
.	O
Primitive	O
values	O
do	O
not	O
share	O
state	O
with	O
other	O
primitive	O
values	O
.	O
A	O
variable	O
whose	O
type	O
is	O
a	O
primitive	O
type	O
always	O
holds	O
a	O
primitive	O
value	O
of	O
that	O
type	O
.	O
int	O
aNumber	O
=	O
4	O
;	O
int	O
anotherNum	O
=	O
aNumber	O
;	O
aNumber	O
+=	O
6	O
;	O
System.out.println	B-API
(	I-API
anotherNum	I-API
)	I-API
;	O
//	O
Prints	O
4	O
An	O
object	O
is	O
a	O
dynamically	O
created	O
class	O
instance	O
or	O
an	O
array	O
.	O
The	O
reference	O
values	O
(	O
often	O
just	O
references	O
)	O
are	O
pointers	O
to	O
these	O
objects	O
and	O
a	O
special	O
null	O
reference	O
,	O
which	O
refers	O
to	O
no	O
object	O
.	O
There	O
may	O
be	O
many	O
references	O
to	O
the	O
same	O
object	O
.	O
Integer	B-API
aNumber	O
=	O
Integer.valueOf	B-API
(	I-API
4	I-API
)	I-API
;	O
Integer	B-API
anotherNumber	O
=	O
aNumber	O
;	O
//	O
anotherNumber	O
references	O
the	O
//	O
same	O
object	O
as	O
aNumber	O
Also	O
in	O
Java	B-API
everything	O
is	O
passed	O
by	O
value	O
.	O
With	O
objects	O
the	O
value	O
that	O
is	O
passed	O
is	O
the	O
reference	O
to	O
the	O
object	O
.	O
So	O
another	O
difference	O
between	O
int	O
and	O
Integer	B-API
in	O
java	O
is	O
how	O
they	O
are	O
passed	O
in	O
method	O
calls	O
.	O
For	O
example	O
in	O
public	O
int	O
add	O
(	O
int	O
a	O
,	O
int	O
b	O
)	O
{	O
return	O
a	O
+	O
b	O
;	O
}	O
final	O
int	O
two	O
=	O
2	O
;	O
int	O
sum	O
=	O
add	O
(	O
1	O
,	O
two	O
)	O
;	O
The	O
variable	O
two	O
is	O
passed	O
as	O
the	O
primitive	O
integer	O
type	O
2	O
.	O
Whereas	O
in	O
public	O
int	O
add	O
(	O
Integer	B-API
a	O
,	O
Integer	B-API
b	O
)	O
{	O
return	O
a.intValue	B-API
(	I-API
)	I-API
+	O
b.intValue	B-API
(	I-API
)	I-API
;	O
}	O
final	O
Integer	B-API
two	O
=	O
Integer.valueOf	B-API
(	I-API
2	I-API
)	I-API
;	O
int	O
sum	O
=	O
add	O
(	O
Integer.valueOf	B-API
(	I-API
1	I-API
)	I-API
,	O
two	O
)	O
;	O
The	O
variable	O
two	O
is	O
passed	O
as	O
a	O
reference	O
to	O
an	O
object	O
that	O
holds	O
the	O
integer	O
value	O
2	O
.	O
@	O
WolfmanDragon	O
:	O
Pass	O
by	O
reference	O
would	O
work	O
like	O
so	O
:	O
public	O
void	O
increment	O
(	O
int	O
x	O
)	O
{	O
x	O
=	O
x	O
+	O
1	O
;	O
}	O
int	O
a	O
=	O
1	O
;	O
increment	O
(	O
a	O
)	O
;	O
//	O
a	O
is	O
now	O
2	O
When	O
increment	O
is	O
called	O
it	O
passes	O
a	O
reference	O
(	O
pointer	O
)	O
to	O
variable	O
a	O
.	O
And	O
the	O
increment	O
function	O
directly	O
modifies	O
variable	O
a	O
.	O
And	O
for	O
object	O
types	O
it	O
would	O
work	O
as	O
follows	O
:	O
public	O
void	O
increment	O
(	O
Integer	B-API
x	O
)	O
{	O
x	O
=	O
Integer.valueOf	O
(	O
x.intValue	B-API
(	I-API
)	I-API
+	O
1	O
)	O
;	O
}	O
Integer	B-API
a	O
=	O
Integer.valueOf	B-API
(	I-API
1	I-API
)	I-API
;	O
increment	O
(	O
a	O
)	O
;	O
//	O
a	O
is	O
now	O
2	O
Do	O
you	O
see	O
the	O
difference	O
now	O
?	O
One	O
more	O
thing	O
that	O
I	O
do	O
n't	O
see	O
in	O
previous	O
answers	O
:	O
In	O
Java	B-API
the	O
primitive	O
wrappers	O
classes	O
like	O
Integer	B-API
,	O
Double	B-API
,	O
Float	B-API
,	O
Boolean	B-API
...	O
and	O
String	B-API
are	O
suposed	O
to	O
be	O
invariant	O
,	O
so	O
that	O
when	O
you	O
pass	O
an	O
instance	O
of	O
those	O
classes	O
the	O
invoked	O
method	O
could	O
n't	O
alter	O
your	O
data	O
in	O
any	O
way	O
,	O
in	O
opositin	O
with	O
most	O
of	O
other	O
classes	O
,	O
which	O
internal	O
data	O
could	O
be	O
altered	O
by	O
its	O
public	O
methods	O
.	O
So	O
that	O
this	O
classes	O
only	O
has	O
'getter	O
'	O
methods	O
,	O
no	O
'setters	O
'	O
,	O
besides	O
the	O
constructor	O
.	O
In	O
a	O
java	O
program	O
String	B-API
literals	O
are	O
stored	O
in	O
a	O
separate	O
portion	O
of	O
heap	O
memory	O
,	O
only	O
a	O
instance	O
for	O
literal	O
,	O
to	O
save	O
memory	O
reusing	O
those	O
instances	O
Consider	O
using	O
a	O
ManualResetEvent	B-API
to	O
block	O
the	O
main	O
thread	O
at	O
the	O
end	O
of	O
its	O
processing	O
,	O
and	O
call	O
Reset	B-API
(	I-API
)	I-API
on	O
it	O
once	O
the	O
timer	O
's	O
processing	O
has	O
finished	O
.	O
If	O
this	O
is	O
something	O
that	O
needs	O
to	O
run	O
constantly	O
,	O
consider	O
moving	O
this	O
into	O
a	O
service	O
process	O
instead	O
of	O
a	O
console	O
app	O
.	O
You	O
can	O
use	O
something	O
like	O
Console.ReadLine	B-API
(	I-API
)	I-API
to	O
block	O
the	O
main	O
thread	O
,	O
so	O
other	O
background	O
threads	O
(	O
like	O
timer	O
threads	O
)	O
will	O
still	O
work	O
.	O
You	O
may	O
also	O
use	O
an	O
AutoResetEvent	B-API
to	O
block	O
the	O
execution	O
,	O
then	O
(	O
when	O
you	O
need	O
to	O
)	O
you	O
can	O
call	O
Set	B-API
(	I-API
)	I-API
method	O
on	O
that	O
AutoResetEvent	B-API
object	O
to	O
release	O
the	O
main	O
thread	O
.	O
Also	O
ensure	O
that	O
your	O
reference	O
to	O
Timer	O
object	O
does	O
n't	O
go	O
out	O
of	O
scope	O
and	O
garbage	O
collected	O
.	O
If	O
you	O
are	O
using	O
a	O
button	O
or	O
hyperlink	O
or	O
something	O
to	O
trigger	O
the	O
popup	O
to	O
show	O
,	O
could	O
you	O
also	O
add	O
an	O
additional	O
handler	O
to	O
the	O
onClick	B-API
event	I-API
of	O
the	O
trigger	O
which	O
should	O
still	O
fire	O
the	O
modal	O
popup	O
and	O
run	O
the	O
javascript	O
at	O
the	O
same	O
time	O
?	O
The	O
ModalPopupExtender	B-API
modifies	O
the	O
button/hyperlink	O
that	O
you	O
tell	O
it	O
to	O
be	O
the	O
``	O
trigger	O
''	O
element	O
.	O
The	O
onclick	O
script	O
I	O
add	O
triggers	O
before	O
the	O
popup	O
is	O
shown	O
.	O
I	O
want	O
script	O
to	O
fire	O
after	O
the	O
popup	O
is	O
shown	O
.	O
Also	O
,	O
still	O
leaves	O
me	O
with	O
the	O
problem	O
of	O
when	O
I	O
show	O
the	O
modal	O
from	O
server	O
side	O
.	O
hmmm	O
...	O
I	O
'm	O
pretty	O
sure	O
that	O
there	O
's	O
a	O
shown	O
event	O
for	O
the	O
MPE	B-API
...	O
this	O
is	O
off	O
the	O
top	O
of	O
my	O
head	O
,	O
but	O
I	O
think	O
you	O
can	O
add	O
an	O
event	O
handler	O
to	O
the	O
shown	O
event	O
on	O
page_load	O
function	O
{	O
var	B-API
popup	O
=	O
;	O
;	O
}	O
function	O
{	O
pageLoad	B-API
(	I-API
)	I-API
$	O
find	B-API
(	I-API
'ModalPopupClientID	I-API
'	I-API
)	I-API
popup.add_shown	B-API
(	I-API
SetFocus	I-API
)	I-API
SetFocus	B-API
(	I-API
)	I-API
$	O
get	B-API
(	I-API
'TriggerClientId	I-API
'	I-API
)	I-API
.focus	I-API
(	I-API
)	I-API
i	O
'm	O
not	O
sure	O
tho	O
if	O
this	O
will	O
help	O
you	O
with	O
calling	O
it	O
from	O
the	O
server	O
side	O
tho	O
I	O
have	O
n't	O
thought	O
too	O
hard	O
about	O
this	O
,	O
but	O
I	O
reckon	O
you	O
could	O
get	O
a	O
Custom	B-API
Treeview	I-API
in	O
WPF	O
to	O
do	O
what	O
you	O
want	O
.	O
I	O
was	O
reading	O
an	O
article	O
on	O
code	O
project	O
a	O
while	O
back	O
that	O
implemented	O
an	O
org	O
chart	O
this	O
way	O
...	O
I	O
'm	O
all	O
for	O
writing	O
your	O
own	O
software	O
when	O
something	O
does	O
n't	O
suit	O
your	O
needs	O
and	O
a	O
frequent	O
re-inventer	O
of	O
the	O
wheel	O
.	O
But	O
this	O
honestly	O
seems	O
like	O
one	O
of	O
those	O
things	O
were	O
the	O
solution	O
is	O
readily	O
available	O
,	O
in	O
this	O
case	O
in	O
the	O
form	O
of	O
Family	O
Tree	O
Maker	O
And	O
at	O
a	O
mere	O
$	O
40	O
I	O
would	O
venture	O
to	O
guess	O
that	O
you	O
'd	O
come	O
out	O
ahead	O
compared	O
to	O
the	O
hours	O
you	O
would	O
spend	O
trying	O
to	O
get	O
your	O
own	O
program	O
doing	O
exactly	O
what	O
you	O
need	O
.	O
I	O
currently	O
use	O
the	O
software	O
and	O
it	O
works	O
great	O
.	O
Now	O
,	O
if	O
your	O
interest	O
in	O
writing	O
it	O
partly	O
for	O
the	O
purpose	O
of	O
just	O
doing	O
it	O
because	O
you	O
can	O
and	O
to	O
learn	O
something	O
...	O
then	O
by	O
all	O
means	O
I	O
salute	O
your	O
will	O
to	O
learn	O
and	O
hope	O
you	O
find	O
the	O
control	O
you	O
are	O
looking	O
for	O
.	O
Geni	B-API
is	O
probably	O
what	O
your	O
looking	O
for	O
.	O
If	O
you	O
're	O
really	O
looking	O
for	O
an	O
application	O
that	O
you	O
can	O
modify	O
try	O
out	O
Family.Show	B-API
on	O
CodePlex	B-API
.	O
Take	O
a	O
look	O
at	O
Creating	O
and	O
Using	O
URL	B-API
Monikers	I-API
,	O
About	O
Asynchronous	O
Pluggable	O
Protocols	O
and	O
Registering	O
an	O
Application	O
to	O
a	O
URL	O
Protocol	O
from	O
MSDN	O
Here	O
's	O
some	O
old	O
Delphi	B-API
code	O
we	O
used	O
as	O
a	O
way	O
to	O
get	O
shortcuts	O
in	O
a	O
web	O
application	O
to	O
start	O
a	O
windows	O
program	O
locally	O
for	O
the	O
user	O
.	O
procedure	B-API
InstallIntoRegistry	I-API
;	O
var	B-API
Reg	O
:	O
TRegistry	B-API
;	O
begin	O
Reg	O
:	O
=	O
TRegistry.Create	B-API
;	O
try	O
Reg.RootKey	B-API
:	O
=	O
HKEY_CLASSES_ROOT	B-API
;	O
if	B-API
then	I-API
begin	O
;	O
;	O
;	O
;	O
if	B-API
then	I-API
begin	O
+	O
'	O
''	O
``	O
%	O
1	O
''	O
'	O
)	O
;	O
end	O
;	O
end	O
else	B-API
begin	O
+	O
'Please	O
make	O
sure	O
you	O
are	O
logged	O
in	O
with	O
a	O
user	O
account	O
with	O
administrative	O
rights	O
!	O
'	O
,	O
'Access	O
denied	O
'	O
,	O
0	O
)	O
;	O
Exit	B-API
;	O
end	O
;	O
finally	O
;	O
end	O
;	O
(	O
'moniker	O
'	O
,	O
True	B-API
)	I-API
(	I-API
''	O
,	O
'URL	O
:	O
Name	O
of	O
moniker	O
'	O
)	O
(	O
'URL	O
Protocol	O
'	O
,	O
''	O
)	O
(	O
'Source	O
Filter	O
'	O
,	O
'	O
{	O
E436EBB6-524F-11CE-9F53-0020AF0BA770	O
}	O
'	O
)	O
(	O
'EditFlags	O
'	O
,	O
2	O
)	O
(	O
'shell\open\command	O
'	O
,	O
True	B-API
)	I-API
(	I-API
''	O
,	O
'	O
''	O
'	O
+	O
ParamStr	B-API
(	I-API
0	I-API
)	I-API
(	O
0	O
,	O
'You	O
do	O
not	O
have	O
the	O
necessary	O
access	O
rights	O
to	O
complete	O
this	O
installation	O
!	O
'	O
+	O
Chr	B-API
(	I-API
13	I-API
)	I-API
FreeAndNil	B-API
(	I-API
Reg	I-API
)	I-API
(	O
0	O
,	O
'Application	O
WebStart	O
has	O
been	O
installed	O
successfully	O
!	O
'	O
,	O
'Installed	O
'	O
,	O
0	O
)	O
A	O
tidier	O
way	O
is	O
to	O
create	O
separate	O
forms	O
for	O
each	O
'pane	O
'	O
and	O
,	O
in	O
each	O
form	O
constructor	O
,	O
set	B-API
this.TopLevel	I-API
=	O
false	O
;	O
this.FormBorderStyle	O
=	O
FormBorderStyle.None	B-API
;	O
this.Dock	O
=	O
DockStyle.Fill	B-API
;	O
That	O
way	O
,	O
each	O
of	O
these	O
forms	O
can	O
be	O
laid	O
out	O
in	O
its	O
own	O
designer	O
,	O
instantiated	O
one	O
or	O
more	O
times	O
at	O
runtime	O
,	O
and	O
added	O
to	O
the	O
empty	O
area	O
like	O
a	O
normal	O
control	O
.	O
Perhaps	O
the	O
main	O
form	O
could	O
use	O
a	O
with	O
a	O
static	O
in	O
one	O
panel	O
,	O
and	O
space	O
to	O
add	O
these	O
forms	O
in	O
the	O
other	O
.	O
Once	O
they	O
are	O
added	O
,	O
they	O
could	O
be	O
flipped	O
through	O
using	O
or	O
methods	O
.	O
SeparateForm	O
f	O
=	O
new	O
SeparateForm	B-API
(	I-API
)	I-API
;	O
MainFormSplitContainer.Panel2.Controls.Add	B-API
(	I-API
f	I-API
)	I-API
;	O
f.Show	B-API
(	I-API
)	I-API
;	O
Greg	O
Hurlman	O
wrote	O
:	O
Why	O
not	O
just	O
show/hide	O
the	O
proper	O
container	O
when	O
a	O
node	O
is	O
selected	O
in	O
the	O
grid	O
?	O
Have	O
the	O
containers	O
all	O
sized	O
appropriately	O
in	O
the	O
same	O
spot	O
,	O
and	O
hide	O
all	O
but	O
the	O
default	O
,	O
which	O
would	O
be	O
preselected	O
in	O
the	O
grid	O
on	O
load	O
.	O
Unfortunately	O
,	O
that	O
's	O
what	O
I	O
'm	O
trying	O
to	O
avoid	O
.	O
I	O
'm	O
looking	O
for	O
an	O
easy	O
way	O
to	O
handle	O
the	O
interface	O
during	O
design	O
time	O
,	O
with	O
minimal	O
reformatting	O
code	O
needed	O
to	O
get	O
it	O
working	O
during	O
run	O
time	O
.	O
I	O
like	O
Duncan	O
's	O
answer	O
because	O
it	O
means	O
the	O
design	O
of	O
each	O
node	O
's	O
interface	O
can	O
be	O
kept	O
completely	O
separate	O
.	O
This	O
means	O
I	O
do	O
n't	O
get	O
overlap	O
on	O
the	O
snapping	O
guidelines	O
and	O
other	O
design	O
time	O
advantages	O
.	O
Static	B-API
methods	O
can	O
not	O
be	O
inherited	O
or	O
overridden	O
,	O
and	O
that	O
is	O
why	O
they	O
ca	O
n't	O
be	O
abstract	O
.	O
Since	O
static	B-API
methods	O
are	O
defined	O
on	O
the	O
type	O
,	O
not	O
the	O
instance	O
,	O
of	O
a	O
class	O
,	O
they	O
must	O
be	O
called	O
explicitly	O
on	O
that	O
type	O
.	O
So	O
when	O
you	O
want	O
to	O
call	O
a	O
method	O
on	O
a	O
child	O
class	O
,	O
you	O
need	O
to	O
use	O
its	O
name	O
to	O
call	O
it	O
.	O
This	O
makes	O
inheritance	O
irrelevant	O
.	O
Assume	O
you	O
could	O
,	O
for	O
a	O
moment	O
,	O
inherit	O
static	B-API
methods	O
.	O
Imagine	O
this	O
scenario	O
:	O
public	O
static	B-API
class	O
Base	O
{	O
public	O
static	B-API
virtual	I-API
int	I-API
{	I-API
return	I-API
5	I-API
;	I-API
}	I-API
}	O
public	O
static	B-API
class	I-API
Child1	I-API
:	I-API
Base	I-API
{	O
public	O
static	B-API
override	I-API
int	I-API
{	O
return	O
1	O
;	O
}	O
}	O
public	O
static	B-API
class	I-API
Child2	I-API
:	I-API
Base	I-API
{	O
public	O
static	B-API
override	I-API
int	I-API
{	O
return	O
2	O
;	O
GetNumber	B-API
(	I-API
)	I-API
GetNumber	B-API
(	I-API
)	I-API
GetNumber	B-API
(	I-API
)	I-API
If	O
you	O
call	O
Base.GetNumber	B-API
(	I-API
)	I-API
,	O
which	O
method	O
would	O
be	O
called	O
?	O
Which	O
value	O
returned	O
?	O
Its	O
pretty	O
easy	O
to	O
see	O
that	O
without	O
creating	O
instances	O
of	O
objects	O
,	O
inheritance	O
is	O
rather	O
hard	O
.	O
Abstract	O
methods	O
without	O
inheritance	O
are	O
just	O
methods	O
that	O
do	O
n't	O
have	O
a	O
body	O
,	O
so	O
ca	O
n't	O
be	O
called	O
.	O
To	O
add	O
to	O
the	O
previous	O
explanations	O
,	O
static	B-API
method	O
calls	O
are	O
bound	O
to	O
a	O
specific	O
method	O
at	O
compile-time	O
,	O
which	O
rather	O
rules	O
out	O
polymorphic	O
behavior	O
.	O
Static	B-API
methods	O
are	O
not	O
instantiated	O
as	O
such	O
,	O
they	O
're	O
just	O
available	O
without	O
an	O
object	O
reference	O
.	O
A	O
call	O
to	O
a	O
static	B-API
method	O
is	O
done	O
through	O
the	O
class	O
name	O
,	O
not	O
through	O
an	O
object	O
reference	O
,	O
and	O
the	O
IL	O
code	O
to	O
call	O
it	O
will	O
call	O
the	O
abstract	O
method	O
through	O
the	O
name	O
of	O
the	O
class	O
that	O
defined	O
it	O
,	O
not	O
necessarily	O
the	O
name	O
of	O
the	O
class	O
you	O
used	O
.	O
Let	O
me	O
show	O
an	O
example	O
.	O
With	O
the	O
following	O
code	O
:	O
public	O
class	O
A	O
{	O
public	O
static	B-API
void	I-API
{	I-API
}	I-API
}	O
public	O
class	B-API
B	I-API
:	I-API
Test	I-API
(	I-API
)	I-API
If	O
you	O
call	O
B.Test	B-API
,	O
like	O
this	O
:	O
class	O
Program	O
{	O
static	B-API
void	I-API
{	I-API
;	I-API
(	I-API
string	B-API
[	I-API
]	I-API
args	O
)	O
B.Test	B-API
(	I-API
)	I-API
Then	O
the	O
actual	O
code	O
inside	O
the	O
Main	O
method	O
is	O
as	O
follows	O
:	O
.entrypoint.maxstack	B-API
8L0000	O
:	O
nop	O
L0001	O
:	O
call	O
void	O
L0006	O
:	O
nop	O
L0007	O
:	O
ret	O
ConsoleApplication1.A	B-API
:	I-API
:Test	I-API
(	I-API
)	I-API
As	O
you	O
can	O
see	O
,	O
the	O
call	O
is	O
made	O
to	O
A.Test	B-API
,	O
because	O
it	O
was	O
the	O
A	O
class	O
that	O
defined	O
it	O
,	O
and	O
not	O
to	O
B.Test	B-API
,	O
even	O
though	O
you	O
can	O
write	O
the	O
code	O
that	O
way	O
.	O
If	O
you	O
had	O
class	O
types	O
,	O
like	O
in	O
Delphi	O
,	O
where	O
you	O
can	O
make	O
a	O
variable	O
referring	O
to	O
a	O
type	O
and	O
not	O
an	O
object	O
,	O
you	O
would	O
have	O
more	O
use	O
for	O
virtual	O
and	O
thus	O
abstract	O
static	B-API
methods	O
(	O
and	O
also	O
constructors	O
)	O
,	O
but	O
they	O
are	O
n't	O
available	O
and	O
thus	O
static	O
calls	O
are	O
non-virtual	O
in	O
.NET	B-API
.	O
I	O
realize	O
that	O
the	O
IL	O
designers	O
could	O
allow	O
the	O
code	O
to	O
be	O
compiled	O
to	O
call	O
B.Test	B-API
,	O
and	O
resolve	O
the	O
call	O
at	O
runtime	O
,	O
but	O
it	O
still	O
would	O
n't	O
be	O
virtual	O
,	O
as	O
you	O
would	O
still	O
have	O
to	O
write	O
some	O
kind	O
of	O
class	O
name	O
there	O
.	O
Virtual	O
methods	O
,	O
and	O
thus	O
abstract	O
ones	O
,	O
are	O
only	O
useful	O
when	O
you	O
're	O
using	O
a	O
variable	O
which	O
,	O
at	O
runtime	O
,	O
can	O
contain	O
many	O
different	O
types	O
of	O
objects	O
,	O
and	O
you	O
thus	O
want	O
to	O
call	O
the	O
right	O
method	O
for	O
the	O
current	O
object	O
you	O
have	O
in	O
the	O
variable	O
.	O
With	O
static	O
methods	O
you	O
need	O
to	O
go	O
through	O
a	O
class	O
name	O
anyway	O
,	O
so	O
the	O
exact	O
method	O
to	O
call	O
is	O
known	O
at	O
compile	O
time	O
because	O
it	O
ca	O
n't	O
and	O
wo	O
n't	O
change	O
.	O
Thus	O
,	O
virtual/abstract	O
static	O
methods	O
are	O
not	O
available	O
in	O
.NET	B-API
.	O
using	O
System.Net	B-API
;	O
foreach	B-API
(	O
IPAddress	B-API
address	O
in	O
Dns.GetHostAddresses	B-API
(	I-API
``	I-API
www.google.com	I-API
''	I-API
)	I-API
)	O
{	O
Console.WriteLine	B-API
(	O
address.ToString	B-API
(	I-API
)	I-API
)	O
;	O
}	O
Try	O
using	O
the	O
System.Net.Dns	B-API
class	O
Well	O
,	O
here	O
's	O
how	O
we	O
do	O
it	O
on	O
Stack	O
Overflow	O
.	O
var	B-API
ts	O
=	O
new	O
TimeSpan	B-API
(	O
DateTime.UtcNow.Ticks	B-API
-	O
dt.Ticks	B-API
)	O
;	O
double	O
delta	O
=	O
Math.Abs	B-API
(	I-API
ts.TotalSeconds	I-API
)	I-API
;	O
if	B-API
(	I-API
delta	I-API
60	I-API
)	I-API
{	O
return	O
ts.Seconds	B-API
==	O
1	O
?	O
``	O
one	O
second	O
ago	O
''	O
:	O
ts.Seconds	B-API
+	O
``	O
seconds	O
ago	O
''	O
;	O
}	O
if	B-API
(	I-API
delta	I-API
120	I-API
)	I-API
{	O
return	O
``	O
a	O
minute	O
ago	O
''	O
;	O
}	O
if	B-API
(	I-API
delta	I-API
2700	I-API
)	I-API
//	O
45	O
*	O
60	O
{	O
return	O
ts.Minutes	B-API
+	O
``	O
minutes	O
ago	O
''	O
;	O
}	O
if	B-API
(	I-API
delta	I-API
5400	I-API
)	I-API
//	O
90	O
*	O
60	O
{	O
return	O
``	O
an	O
hour	O
ago	O
''	O
;	O
}	O
if	B-API
(	I-API
delta	I-API
86400	I-API
)	I-API
//	O
24	O
*	O
60	O
*	O
60	O
{	O
return	O
ts.Hours	B-API
+	O
``	O
hours	O
ago	O
''	O
;	O
}	O
if	B-API
(	I-API
delta	I-API
172800	I-API
)	I-API
//	O
48	O
*	O
60	O
*	O
60	O
{	O
return	O
``	O
yesterday	O
''	O
;	O
}	O
if	B-API
(	I-API
delta	I-API
2592000	I-API
)	I-API
//	O
30	O
*	O
24	O
*	O
60	O
*	O
60	O
{	O
return	O
ts.Days	B-API
+	O
``	O
days	O
ago	O
''	O
;	O
}	O
if	B-API
(	I-API
delta	I-API
31104000	I-API
)	I-API
//	O
12	O
*	O
30	O
*	O
24	O
*	O
60	O
*	O
60	O
{	O
int	O
months	O
=	O
Convert.ToInt32	B-API
(	O
Math.Floor	B-API
(	O
(	O
double	O
)	O
ts.Days	O
/	O
30	O
)	O
)	O
;	O
return	O
months	O
=	O
1	O
?	O
``	O
one	O
month	O
ago	O
''	O
:	O
months	O
+	O
``	O
months	O
ago	O
''	O
;	O
}	O
int	O
years	O
=	O
Convert.ToInt32	B-API
(	O
Math.Floor	B-API
(	O
(	O
double	O
)	O
ts.Days	O
/	O
365	O
)	O
)	O
;	O
return	O
years	O
=	O
1	O
?	O
``	O
one	O
year	O
ago	O
''	O
:	O
years	O
+	O
``	O
years	O
ago	O
''	O
;	O
Suggestions	O
?	O
Comments	O
?	O
Ways	O
to	O
improve	O
this	O
algorithm	O
?	O
@	O
jeff	O
IMHO	O
yours	O
seems	O
a	O
little	O
long	O
.	O
However	O
it	O
does	O
seem	O
a	O
little	O
more	O
robust	O
with	O
support	O
for	O
``	O
yesterday	O
''	O
and	O
``	O
years	O
''	O
.	O
But	O
in	O
my	O
experience	O
when	O
this	O
is	O
used	O
the	O
person	O
is	O
most	O
likely	O
to	O
view	O
the	O
content	O
in	O
the	O
first	O
30	O
days	O
.	O
It	O
is	O
only	O
the	O
really	O
hardcore	O
people	O
that	O
come	O
after	O
that	O
.	O
So	O
that	O
is	O
why	O
I	O
usually	O
elect	O
to	O
keep	O
this	O
short	O
and	O
simple	O
.	O
This	O
is	O
the	O
method	O
I	O
am	O
currently	O
using	O
on	O
one	O
of	O
my	O
websites	O
.	O
This	O
only	O
returns	O
a	O
relative	O
day	O
,	O
hour	O
,	O
time	O
.	O
And	O
then	O
the	O
user	O
has	O
to	O
slap	O
on	O
``	O
ago	O
''	O
in	O
the	O
output	O
.	O
public	B-API
static	I-API
string	I-API
{	0-API
string	O
output	O
=	O
String.Empty	B-API
;	O
if	B-API
(	I-API
time.Days	I-API
0	I-API
)	I-API
output	O
+=	O
time.Days	O
+	O
``	O
days	O
``	O
;	O
if	B-API
time.Hours	I-API
0	I-API
)	I-API
output	O
+=	O
time.Hours	O
+	O
``	O
hr	O
``	O
;	O
if	B-API
(	I-API
time.Days	I-API
==	I-API
0	I-API
time.Minutes	I-API
0	I-API
)	I-API
output	O
+=	O
time.Minutes	B-API
+	O
``	O
min	O
``	O
;	O
if	B-API
(	I-API
output.Length	I-API
==	I-API
0	I-API
)	I-API
output	O
+=	O
time.Seconds	B-API
+	O
``	O
sec	O
''	O
;	O
return	O
(	O
this	O
TimeSpan	O
time	O
)	O
(	O
time.Days	B-API
==	O
0	O
||	O
time.Days	B-API
==	O
1	O
)	O
output.Trim	B-API
(	I-API
)	I-API
Jeff	O
,	O
your	O
code	O
is	O
nice	O
but	O
could	O
be	O
clearer	O
with	O
constants	O
(	O
as	O
suggested	O
in	O
Code	O
Complete	O
)	O
.	O
const	B-API
int	I-API
SECOND	I-API
=	I-API
1	I-API
;	O
const	B-API
int	I-API
MINUTE	I-API
=	I-API
60	I-API
*	I-API
SECOND	I-API
;	O
const	B-API
int	I-API
HOUR	I-API
=	I-API
60	I-API
*	I-API
MINUTE	I-API
;	O
const	B-API
int	I-API
DAY	I-API
=	I-API
24	I-API
*	I-API
HOUR	I-API
;	O
const	B-API
int	I-API
MONTH	I-API
=	I-API
30	I-API
*	I-API
DAY	I-API
;	O
var	O
ts	O
=	O
new	O
TimeSpan	B-API
(	O
DateTime.UtcNow.Ticks	B-API
-	O
yourDate.Ticks	B-API
)	O
;	O
double	O
delta	O
=	O
Math.Abs	B-API
(	I-API
ts.TotalSeconds	I-API
)	I-API
;	O
if	B-API
(	I-API
delta	I-API
1	I-API
*	I-API
MINUTE	I-API
)	I-API
return	O
ts.Seconds	O
==	O
1	O
?	O
``	O
one	O
second	O
ago	O
''	O
:	O
ts.Seconds	O
+	O
``	O
seconds	O
ago	O
''	O
;	O
if	B-API
(	I-API
delta	I-API
2	I-API
*	I-API
MINUTE	I-API
)	I-API
return	O
``	O
a	O
minute	O
ago	O
''	O
;	O
if	B-API
(	I-API
delta	I-API
45	I-API
*	I-API
MINUTE	I-API
)	I-API
return	O
ts.Minutes	O
+	O
``	O
minutes	O
ago	O
''	O
;	O
if	B-API
(	I-API
delta	I-API
90	I-API
*	I-API
MINUTE	I-API
)	I-API
return	O
``	O
an	O
hour	O
ago	O
''	O
;	O
if	B-API
(	I-API
delta	I-API
24	I-API
*	I-API
HOUR	I-API
)	I-API
return	O
ts.Hours	O
+	O
``	O
hours	O
ago	O
''	O
;	O
if	B-API
(	I-API
delta	I-API
48	I-API
*	I-API
HOUR	I-API
)	I-API
return	O
``	O
yesterday	O
''	O
;	O
if	B-API
(	I-API
delta	I-API
30	I-API
*	I-API
DAY	I-API
)	I-API
return	O
ts.Days	O
+	O
``	O
days	O
ago	O
''	O
;	O
if	B-API
(	I-API
delta	I-API
12	I-API
*	I-API
MONTH	I-API
)	I-API
{	O
int	O
months	O
=	O
Convert.ToInt32	B-API
(	O
Math.Floor	B-API
(	O
(	O
double	O
)	O
ts.Days	O
/	O
30	O
)	O
)	O
;	O
return	O
months	O
=	O
1	O
?	O
``	O
one	O
month	O
ago	O
''	O
:	O
months	O
+	O
``	O
months	O
ago	O
''	O
;	O
}	O
else	O
{	O
int	O
years	O
=	O
Convert.ToInt32	B-API
(	O
Math.Floor	B-API
(	O
(	O
double	O
)	O
ts.Days	O
/	O
365	O
)	O
)	O
;	O
return	O
years	O
=	O
1	O
?	O
``	O
one	O
year	O
ago	O
''	O
:	O
years	O
+	O
``	O
years	O
ago	O
''	O
;	O
}	O
I	O
thought	O
I	O
'd	O
give	O
this	O
a	O
shot	O
using	O
classes	O
and	O
polymorphism	O
.	O
I	O
had	O
a	O
previous	O
iteration	O
which	O
used	O
sub-classing	O
which	O
ended	O
up	O
having	O
way	O
too	O
much	O
overhead	O
.	O
I	O
've	O
switched	O
to	O
a	O
more	O
flexible	O
delegate	O
/	O
public	O
property	O
object	O
model	O
which	O
is	O
significantly	O
better	O
.	O
My	O
code	O
is	O
very	O
slightly	O
more	O
accurate	O
,	O
I	O
wish	O
I	O
could	O
come	O
up	O
with	O
a	O
better	O
way	O
to	O
generate	O
``	O
months	O
ago	O
''	O
that	O
did	O
n't	O
seem	O
too	O
over-engineered	O
.	O
I	O
think	O
I	O
'd	O
still	O
stick	O
with	O
Jeff	O
's	O
if-then	O
cascade	O
because	O
it	O
's	O
less	O
code	O
and	O
it	O
's	O
simpler	O
(	O
it	O
's	O
definitely	O
easier	O
to	O
ensure	O
it	O
'll	O
work	O
as	O
expected	O
)	O
.	O
For	O
the	O
below	O
code	O
PrintRelativeTime.GetRelativeTimeMessage	B-API
(	I-API
TimeSpan	I-API
ago	I-API
)	I-API
returns	O
the	O
relative	O
time	O
message	O
(	O
e.g	O
.	O
``	O
yesterday	O
''	O
)	O
.	O
public	B-API
class	I-API
RelativeTimeRange	I-API
:	I-API
IComparable	I-API
{	O
public	O
TimeSpan	O
UpperBound	O
{	O
get	O
;	O
set	O
;	O
}	O
public	O
delegate	B-API
string	I-API
;	O
public	O
RelativeTimeTextDelegate	B-API
MessageCreator	I-API
{	O
get	O
;	O
set	O
;	O
}	O
public	O
int	O
{	O
if	O
)	O
{	O
return	O
1	O
;	O
}	O
//	O
note	O
that	O
this	O
sorts	O
in	O
reverse	O
order	O
to	O
the	O
way	O
you	O
'd	O
expect	O
,	O
//	O
this	O
saves	O
having	O
to	O
reverse	O
a	O
list	O
later	O
return	O
(	O
obj	O
as	O
;	O
}	O
}	O
public	O
class	B-API
PrintRelativeTime	I-API
{	O
private	O
static	B-API
ListRelativeTimeRange	I-API
timeRanges	I-API
;	O
static	O
{	O
timeRanges	O
=	O
new	O
ListRelativeTimeRange	B-API
{	O
new	O
RelativeTimeRange	B-API
{	O
UpperBound	B-API
=	O
,	O
MessageCreator	B-API
=	O
(	O
delta	O
)	O
=	O
{	O
return	O
``	O
one	O
second	O
ago	O
''	O
;	O
}	O
}	O
,	O
new	O
RelativeTimeRange	B-API
{	O
UpperBound	B-API
=	O
,	O
MessageCreator	B-API
=	O
(	O
delta	O
)	O
=	O
{	O
return	O
delta.Seconds	B-API
+	O
``	O
seconds	O
ago	O
''	O
;	O
}	O
}	O
,	O
new	O
RelativeTimeRange	B-API
{	O
UpperBound	B-API
=	O
,	O
MessageCreator	B-API
=	O
(	O
delta	O
)	O
=	O
{	O
return	O
``	O
one	O
minute	O
ago	O
''	O
;	O
}	O
}	O
,	O
new	O
RelativeTimeRange	B-API
{	O
UpperBound	B-API
=	O
,	O
MessageCreator	B-API
=	O
(	O
delta	O
)	O
=	O
{	O
return	O
delta.Minutes	O
+	O
``	O
minutes	O
ago	O
''	O
;	O
}	O
}	O
,	O
new	O
RelativeTimeRange	B-API
{	O
UpperBound	B-API
=	O
,	O
MessageCreator	B-API
=	O
(	O
delta	O
)	O
=	O
{	O
return	O
``	O
one	O
hour	O
ago	O
''	O
;	O
}	O
}	O
,	O
new	O
RelativeTimeRange	B-API
{	O
UpperBound	B-API
=	O
,	O
MessageCreator	B-API
=	O
(	O
delta	O
)	O
=	O
{	O
return	O
delta.Hours	O
+	O
``	O
hours	O
ago	O
''	O
;	O
}	O
}	O
,	O
new	O
RelativeTimeRange	B-API
{	O
UpperBound	B-API
=	O
,	O
MessageCreator	B-API
=	O
(	O
delta	O
)	O
=	O
{	O
return	O
``	O
yesterday	O
''	O
;	O
}	O
}	O
,	O
new	O
RelativeTimeRange	B-API
{	O
UpperBound	B-API
=	O
)	O
,	O
MessageCreator	B-API
=	O
(	O
delta	O
)	O
=	O
{	O
return	O
delta.Days	O
+	O
``	O
days	O
ago	O
''	O
;	O
}	O
}	O
,	I-API
new	O
RelativeTimeRange	B-API
{	O
UpperBound	B-API
=	O
)	O
,	O
MessageCreator	B-API
=	O
(	O
delta	O
)	O
=	O
{	O
return	O
``	O
one	O
month	O
ago	O
''	O
;	O
}	O
}	O
,	O
new	O
RelativeTimeRange	B-API
{	O
UpperBound	B-API
=	O
)	O
,	O
MessageCreator	B-API
=	O
(	O
delta	O
)	O
=	O
{	O
return	O
+	O
``	O
months	O
ago	O
''	O
;	O
}	O
}	O
,	O
new	O
RelativeTimeRange	B-API
{	O
UpperBound	B-API
=	O
)	O
,	O
MessageCreator	B-API
=	O
(	O
delta	O
)	O
=	O
{	O
return	O
``	O
one	O
year	O
ago	O
''	O
;	O
}	O
}	O
,	O
new	O
RelativeTimeRange	B-API
{	O
UpperBound	B-API
=	O
TimeSpan.MaxValue	B-API
,	O
MessageCreator	B-API
=	O
(	O
delta	O
)	O
=	O
{	O
return	O
+	O
``	O
years	O
ago	O
''	O
;	O
}	O
}	O
}	O
;	O
;	O
}	O
public	O
static	B-API
string	I-API
{	O
RelativeTimeRange	B-API
postRelativeDateRange	O
=	O
timeRanges	B-API
[	I-API
0	I-API
]	I-API
;	O
foreach	B-API
(	I-API
var	I-API
timeRange	I-API
in	I-API
timeRanges	I-API
)	I-API
{	O
if	O
=	O
0	O
)	O
{	O
postRelativeDateRange	O
=	O
timeRange	O
;	O
}	O
}	O
return	O
;	O
(	O
TimeSpan	O
timeDelta	B-API
)	I-API
(	I-API
object	O
obj	O
)	O
!	O
(	O
obj	O
is	O
RelativeTimeRange	B-API
)	O
RelativeTimeRange	B-API
)	O
.UpperBound.CompareTo	B-API
(	I-API
UpperBound	I-API
)	I-API
PrintRelativeTime	B-API
(	I-API
)	I-API
TimeSpan.FromSeconds	B-API
(	I-API
1	I-API
)	I-API
TimeSpan.FromSeconds	B-API
(	I-API
60	I-API
)	I-API
TimeSpan.FromMinutes	B-API
(	I-API
2	I-API
)	I-API
TimeSpan.FromMinutes	B-API
(	I-API
60	I-API
)	I-API
TimeSpan.FromHours	B-API
(	I-API
2	I-API
)	I-API
TimeSpan.FromHours	B-API
(	I-API
24	I-API
)	I-API
TimeSpan.FromDays	B-API
(	I-API
2	I-API
)	I-API
DateTime.Now.Subtract	B-API
(	O
DateTime.Now.AddMonths	I-API
(	I-API
-1	I-API
)	I-API
DateTime.Now.Subtract	B-API
(	O
DateTime.Now.AddMonths	I-API
(	I-API
-2	I-API
)	I-API
DateTime.Now.Subtract	B-API
(	O
DateTime.Now.AddYears	I-API
(	I-API
-1	I-API
)	I-API
int	O
)	O
Math.Floor	B-API
(	I-API
delta.TotalDays	I-API
/	I-API
30	I-API
)	I-API
DateTime.Now.Subtract	B-API
(	O
DateTime.Now.AddYears	I-API
(	I-API
-2	I-API
)	I-API
int	O
)	O
Math.Floor	B-API
(	I-API
delta.TotalDays	I-API
/	I-API
365.24D	I-API
)	I-API
timeRanges.Sort	B-API
(	I-API
)	I-API
(	O
TimeSpan	O
ago	O
)	O
(	O
ago.CompareTo	B-API
(	I-API
timeRange.UpperBound	I-API
)	I-API
postRelativeDateRange.MessageCreator	B-API
(	I-API
ago	I-API
)	I-API
The	O
size	O
of	O
the	O
file	O
is	O
sent	O
as	O
the	O
Content-Length	O
header	O
.	O
Here	O
is	O
how	O
to	O
get	O
it	O
with	O
urllib	B-API
:	O
site	O
=	O
meta	O
=	O
print	B-API
urllib.urlopen	B-API
(	I-API
``	I-API
http	I-API
:	I-API
//python.org	I-API
''	I-API
)	I-API
site.info	B-API
(	I-API
)	I-API
meta.getheaders	B-API
(	I-API
``	I-API
Content-Length	I-API
''	I-API
)	I-API
Using	O
the	O
returned-urllib-object	B-API
method	O
info	B-API
(	I-API
)	I-API
,	O
you	O
can	O
get	O
various	O
information	O
on	O
the	O
retrived	O
document	O
.	O
Example	O
of	O
grabbing	O
the	O
current	O
Google	O
logo	O
:	O
import	B-API
urllib	I-API
d	O
=	O
print	B-API
Content-Type	O
:	O
image/gifLast-Modified	O
:	O
Thu	O
,	O
07	O
Aug	O
2008	O
16:20:19	O
GMT	O
Expires	O
:	O
Sun	O
,	O
17	O
Jan	O
2038	O
19:14:07	O
GMT	O
Cache-Control	O
:	O
public	O
Date	B-API
:	O
Fri	O
,	O
08	O
Aug	O
2008	O
13:40:41	O
GMT	O
Server	O
:	O
gws	O
Content-Length	O
:	O
20172	O
Connection	O
:	O
urllib.urlopen	B-API
(	I-API
``	I-API
http	I-API
:	I-API
//www.google.co.uk/logos/olympics08_opening.gif	I-API
''	I-API
)	I-API
d.info	B-API
(	I-API
)	I-API
It	O
's	O
a	O
dict	O
,	O
so	O
to	O
get	O
the	O
size	O
of	O
the	O
file	O
,	O
you	O
do	O
urllibobject.info	B-API
(	I-API
)	I-API
print	B-API
f.info	B-API
(	I-API
)	I-API
And	O
to	O
get	O
the	O
size	O
of	O
the	O
local	O
file	O
(	O
for	O
comparison	O
)	O
,	O
you	O
can	O
use	O
the	O
os.stat	B-API
(	I-API
)	I-API
command	O
:	O
os.stat	B-API
(	I-API
``	I-API
/the/local/file.zip	I-API
''	I-API
)	I-API
Also	O
if	O
the	O
server	O
you	O
are	O
connecting	O
to	O
supports	O
it	O
,	O
look	O
at	O
Etags	O
and	O
the	O
If-Modified-Since	O
and	O
If-None-Match	O
headers	O
.	O
Using	O
these	O
will	O
take	O
advantage	O
of	O
the	O
webserver	O
's	O
caching	O
rules	O
and	O
will	O
return	O
a	O
304	O
Not	O
Modified	O
status	O
code	O
if	O
the	O
content	O
has	O
n't	O
changed	O
.	O
I	O
have	O
reproduced	O
what	O
you	O
are	O
seeing	O
:	O
import	B-API
urllib	B-API
,	O
oslink	O
=	O
``	O
http	O
:	O
//python.org	O
''	O
print	I-API
``	O
opening	O
url	O
:	O
''	O
,	O
linksite	O
=	O
meta	O
=	O
print	B-API
``	O
Content-Length	O
:	O
''	O
,	O
[	O
0	O
]	O
f	O
=	O
print	B-API
``	O
File	B-API
on	O
f	O
=	O
f	O
=	O
print	B-API
``	O
File	B-API
on	O
disk	O
after	O
print	O
.st_size	O
returns	O
:	O
''	O
,	O
urllib.urlopen	B-API
(	I-API
link	I-API
)	I-API
site.info	B-API
(	I-API
)	I-API
meta.getheaders	B-API
(	I-API
``	I-API
Content-Length	I-API
''	I-API
)	I-API
(	O
``	O
out.txt	O
''	O
,	O
``	O
r	O
''	O
)	O
disk	O
:	O
''	O
,	O
len	O
(	O
f.read	B-API
(	I-API
)	I-API
)	O
f.close	B-API
(	I-API
)	I-API
(	O
``	O
out.txt	O
''	O
,	O
``	O
w	O
''	O
)	O
f.write	B-API
(	O
site.read	B-API
(	I-API
)	I-API
)	O
site.close	B-API
(	I-API
)	I-API
f.close	B-API
(	I-API
)	I-API
(	O
``	O
out.txt	O
''	O
,	O
``	O
r	O
''	O
)	O
download	O
:	O
''	O
,	O
len	O
(	O
f.read	B-API
(	I-API
)	I-API
)	O
f.close	B-API
(	I-API
)	I-API
``	O
os.stat	B-API
(	I-API
)	I-API
os.stat	B-API
(	I-API
``	I-API
out.txt	I-API
''	I-API
)	I-API
Outputs	O
this	O
:	O
opening	O
url	O
:	O
http	O
:	O
//python.orgContent-Length	O
:	O
16535File	O
on	O
disk	O
:	O
16535File	O
on	O
disk	O
after	O
download	O
:	O
.st_size	O
returns	O
:	O
16535os.stat	B-API
(	I-API
)	I-API
What	O
am	O
I	O
doing	O
wrong	O
here	O
?	O
Is	O
os.stat	B-API
(	I-API
)	I-API
.st_size	I-API
not	O
returning	O
the	O
correct	O
size	O
?	O
Edit	O
:	O
OK	O
,	O
I	O
figured	O
out	O
what	O
the	O
problem	O
was	O
:	O
import	B-API
urllib	B-API
,	O
oslink	O
=	O
``	O
http	O
:	O
//python.org	O
''	O
print	B-API
``	O
opening	O
url	O
:	O
''	O
,	O
linksite	O
=	O
meta	O
=	O
print	B-API
``	O
Content-Length	O
:	O
''	O
,	O
[	O
0	O
]	O
f	O
=	O
print	B-API
``	O
File	B-API
on	O
f	O
=	O
f	O
=	O
print	O
``	O
File	B-API
on	O
disk	O
after	O
print	B-API
.st_size	O
returns	O
:	O
''	O
,	O
urllib.urlopen	B-API
(	I-API
link	I-API
)	I-API
site.info	B-API
(	I-API
)	I-API
meta.getheaders	B-API
(	O
``	O
Content-Length	O
''	O
)	O
(	O
``	O
out.txt	O
''	O
,	O
``	O
rb	O
''	O
)	O
disk	B-API
:	O
''	O
,	O
len	O
(	O
f.read	B-API
(	I-API
)	I-API
)	O
f.close	B-API
(	I-API
)	I-API
(	O
``	O
out.txt	O
''	O
,	O
``	O
wb	O
''	O
)	O
f.write	B-API
(	O
site.read	B-API
(	I-API
)	I-API
)	O
site.close	B-API
(	I-API
)	I-API
f.close	B-API
(	I-API
)	I-API
(	O
``	O
out.txt	O
''	O
,	O
``	O
rb	O
''	O
)	O
download	O
:	O
''	O
,	O
len	O
(	O
f.read	B-API
(	I-API
)	I-API
)	O
f.close	B-API
(	I-API
)	I-API
``	O
os.stat	B-API
(	I-API
)	I-API
os.stat	B-API
(	I-API
``	I-API
out.txt	I-API
''	I-API
)	I-API
this	O
outputs	O
:	O
$	O
python	O
test.pyopening	O
url	O
:	O
http	O
:	O
//python.orgContent-Length	O
:	O
16535File	O
on	O
disk	O
:	O
16535File	O
on	O
disk	O
after	O
download	O
:	O
.st_size	O
returns	O
:	O
16535os.stat	B-API
(	I-API
)	I-API
Make	O
sure	O
you	O
are	O
opening	O
both	O
files	O
for	O
binary	O
read/write	O
.	O
//	O
open	O
for	O
binary	O
//	O
open	O
for	O
binary	O
(	O
filename	O
,	O
``	O
wb	O
''	O
)	O
(	O
filename	O
,	O
``	O
rb	O
''	O
)	O
Would	O
use	O
double.TryParse	B-API
,	O
it	O
has	O
performance	O
benefits	O
.	O
I	O
'd	O
personally	O
use	O
int.tryparse	B-API
,	O
then	O
double.tryparse	B-API
.	O
Performance	O
on	O
those	O
methods	O
is	O
quite	O
fast	O
.	O
They	O
both	O
return	O
a	O
Boolean	B-API
.	O
If	O
both	O
fail	O
then	O
you	O
have	O
a	O
string	O
,	O
per	O
how	O
you	O
defined	O
your	O
data	O
.	O
I	O
would	O
say	O
,	O
do	O
n't	O
worry	O
so	O
much	O
about	O
such	O
micro	O
performance	O
.	O
It	O
is	O
much	O
better	O
to	O
just	O
get	O
something	O
to	O
work	O
,	O
and	O
then	O
make	O
it	O
as	O
clear	O
and	O
concise	O
and	O
easy	O
to	O
read	O
as	O
possible	O
.	O
The	O
worst	O
thing	O
you	O
can	O
do	O
is	O
sacrifice	O
readability	O
for	O
an	O
insignificant	O
amount	O
of	O
performance	O
.	O
In	O
the	O
end	O
,	O
the	O
best	O
way	O
to	O
deal	O
with	O
performance	O
issues	O
is	O
to	O
save	O
them	O
for	O
when	O
you	O
have	O
data	O
that	O
indicates	O
there	O
is	O
an	O
actual	O
performance	O
problem	O
...	O
otherwise	O
you	O
will	O
spend	O
a	O
lot	O
of	O
time	O
micro-optimizing	O
and	O
actually	O
cause	O
higher	O
maintenance	O
costs	O
for	O
later	O
on	O
.	O
If	O
you	O
find	O
this	O
parsing	O
situation	O
is	O
really	O
the	O
bottleneck	O
in	O
your	O
application	O
,	O
THEN	O
is	O
the	O
time	O
to	O
try	O
and	O
figure	O
out	O
what	O
the	O
fastest	O
way	O
to	O
solve	O
the	O
problem	O
is	O
.	O
I	O
think	O
Jeff	O
(	O
and	O
many	O
others	O
)	O
have	O
blogged	O
about	O
this	O
sort	O
of	O
thing	O
a	O
lot	O
.	O
If	O
the	O
data	O
modification	O
is	O
not	O
too	O
time	O
consuming	O
(	O
meaning	O
,	O
if	O
the	O
main	O
purpose	O
of	O
the	O
background	O
thread	O
is	O
not	O
the	O
actual	O
data	O
modification	O
)	O
,	O
try	O
moving	O
the	O
section	O
that	O
modifies	O
the	O
data	O
to	O
a	O
delegate	O
and	O
Invoke'ing	O
that	O
delegate	O
.	O
If	O
the	O
actual	O
heavy	O
work	O
is	O
on	O
the	O
data	O
,	O
you	O
'll	O
probably	O
have	O
to	O
create	O
a	O
deep	O
copy	O
of	O
this	O
data	O
to	O
pass	O
to	O
the	O
background	O
thread	O
,	O
which	O
will	O
send	O
the	O
processed	O
data	O
back	O
to	O
the	O
UI	O
thread	O
via	O
Invoke	O
again	O
.	O
You	O
should	O
be	O
able	O
to	O
do	O
something	O
like	O
:	O
if	B-API
(	I-API
control.InvokeRequired	I-API
)	I-API
{	O
;	O
}	O
else	O
{	O
control.Invoke	B-API
(	I-API
delegateWithMyCode	I-API
)	I-API
delegateWithMyCode	B-API
(	I-API
)	I-API
InvokeRequired	O
is	O
a	O
property	O
on	O
Controls	O
to	O
see	O
if	O
you	O
are	O
on	O
the	O
correct	O
thread	O
,	O
then	O
Invoke	O
will	O
invoke	O
the	O
delegate	O
on	O
the	O
correct	O
thread	O
.	O
UPDATE	O
:	O
Actually	O
,	O
at	O
my	O
last	O
job	O
we	O
did	O
something	O
like	O
this	O
:	O
private	O
void	O
{	O
if	B-API
(	I-API
this.InvokeRequired	I-API
)	I-API
{	O
,	O
someParam	O
)	O
;	O
}	O
//	O
Regular	O
handling	O
(	O
Object	O
someParam	O
)	O
(	O
new	O
SomeEventHandlerDelegate	O
(	O
SomeEventHandler	O
)	O
which	O
removes	O
the	O
need	O
for	O
the	O
else	O
block	O
and	O
kind	O
of	O
tightens	O
up	O
the	O
code	O
.	O
As	O
I	O
do	O
n't	O
have	O
a	O
test	O
case	O
to	O
go	O
from	O
I	O
ca	O
n't	O
guarantee	O
this	O
solution	O
,	O
but	O
it	O
seems	O
to	O
me	O
that	O
a	O
scenario	O
similar	O
to	O
the	O
one	O
used	O
to	O
update	O
progress	O
bars	O
in	O
different	O
threads	O
(	O
use	O
a	O
delegate	O
)	O
would	O
be	O
suitable	O
here	O
.	O
public	O
delegate	B-API
void	I-API
;	O
public	O
DataBindDelegate	B-API
BindData	O
=	O
new	O
;	O
public	O
void	O
{	O
DataBindDelegate	B-API
(	I-API
)	I-API
DataBindDelegate	B-API
(	I-API
DoDataBind	I-API
)	I-API
DoDataBind	B-API
(	I-API
)	I-API
DataBind	B-API
(	I-API
)	I-API
If	O
the	O
data	O
binding	O
needs	O
to	O
be	O
done	O
by	O
a	O
particular	O
thread	O
,	O
then	O
let	O
that	O
thread	O
do	O
the	O
work	O
!	O
Re	O
:	O
2004	O
No	O
,	O
you	O
will	O
only	O
move	O
the	O
code	O
that	O
changes	O
the	O
data	O
into	O
the	O
delegate	O
function	O
(	O
because	O
the	O
data	O
change	O
is	O
what	O
triggers	O
the	O
control	O
update	O
)	O
.	O
Other	O
than	O
that	O
,	O
you	O
should	O
not	O
have	O
to	O
write	O
anything	O
extra	O
.	O
If	O
the	O
thread	O
call	O
is	O
``	O
illegal	O
''	O
(	O
i.e	O
.	O
the	O
DataBind	O
call	O
affects	O
controls	O
that	O
were	O
not	O
created	O
in	O
the	O
thread	O
it	O
is	O
being	O
called	O
from	O
)	O
then	O
you	O
need	O
to	O
create	O
a	O
delegate	O
so	O
that	O
even	O
if	O
the	O
decision	O
/	O
preparation	O
for	O
the	O
DataBind	O
is	O
not	O
done	O
in	O
the	O
control-creating	O
thread	O
,	O
any	O
resultant	O
modification	O
of	O
them	O
(	O
i.e	O
.	O
DataBind	O
(	O
)	O
)	O
will	O
be	O
.	O
You	O
would	O
call	O
my	O
code	O
from	O
the	O
worker	O
thread	O
like	O
so	O
:	O
this.BindData.Invoke	B-API
(	I-API
)	I-API
This	O
would	O
then	O
cause	O
the	O
original	O
thread	O
to	O
do	O
the	O
binding	O
,	O
which	O
(	O
presuming	O
it	O
is	O
the	O
thread	O
that	O
created	O
the	O
controls	O
)	O
should	O
work	O
.	O
In	O
WPF	B-API
and	O
Silverlight	B-API
the	O
binding	O
infrastructure	O
takes	O
care	O
of	O
the	O
switching	O
to	O
the	O
UI	O
thread	O
.	O
NUnit	B-API
is	O
always	O
a	O
favorite	O
of	O
mine	O
.	O
However	O
if	O
you	O
are	O
using	O
TFS	B-API
as	O
your	O
source	O
control	O
I	O
suggest	O
you	O
stick	O
with	O
the	O
Microsoft	B-API
Stack	I-API
.	O
For	O
a	O
Mock	B-API
Object	I-API
library	O
,	O
I	O
've	O
found	O
the	O
BSD-licensed	B-API
Rhino.Mocks	I-API
to	O
be	O
rather	O
pleasing	O
.	O
NUnit	B-API
is	O
available	O
at	O
http	O
:	O
//www.nunit.org	O
I	O
would	O
suggest	O
this	O
even	O
when	O
working	O
on	O
the	O
MS	B-API
stack	I-API
-	O
the	O
support	O
for	O
non-MS	O
frameworks	O
is	O
happening	O
in	O
the	O
MVC	O
previews	O
which	O
shows	O
a	O
definite	O
movement	O
in	O
the	O
right	O
direction	O
to	O
allow	O
us	O
all	O
to	O
customise	O
our	O
stacks	O
to	O
fit	O
.	O
I	O
've	O
had	O
great	O
success	O
using	O
NUnit	B-API
as	O
well	O
.	O
I	O
've	O
also	O
used	O
NMock	B-API
when	O
the	O
need	O
arose	O
for	O
mock	O
objects	O
.	O
As	O
an	O
added	O
bonus	O
,	O
the	O
factory	O
for	O
creating	O
your	O
mock	O
objects	O
is	O
called	O
the	O
Mockery	O
.	O
To	O
facilitate	O
the	O
running	O
of	O
unit	O
tests	O
,	O
I	O
've	O
used	O
TestDriven.NET	B-API
to	O
run	O
unit	O
tests	O
as	O
I	O
coded	O
.	O
Also	O
,	O
I	O
've	O
used	O
Cruise	B-API
Control	I-API
.NET	I-API
to	O
watch	O
SVN	O
and	O
check	O
that	O
every	O
new	O
commit	O
builds	O
and	O
passes	O
all	O
unit	O
tests	O
.	O
We	O
use	O
MbUnit	B-API
and	O
Rihno	B-API
Mocks	I-API
and	O
they	O
prove	O
to	O
work	O
very	O
well	O
together	O
.	O
When	O
doing	O
TDD	O
you	O
will	O
almost	O
certainly	O
need	O
to	O
do	O
some	O
form	O
of	O
dependency	O
injection	O
,	O
while	O
this	O
can	O
be	O
done	O
manually	O
,	O
its	O
worth	O
looking	O
at	O
an	O
IoC	O
container	O
such	O
as	O
Castle	B-API
Windsor	I-API
.	O
It	O
well	O
worth	O
looking	O
at	O
John	O
Paul	O
Bodhood	O
's	O
screen	O
casts	O
to	O
get	O
you	O
started	O
.	O
JPB	O
's	O
Blog	O
I	O
'm	O
not	O
a	O
javascript	O
expert	O
but	O
it	O
looks	O
like	O
you	O
would	O
have	O
to	O
loop	O
through	O
the	O
elements	O
and	O
count	O
them	O
since	O
Object	O
does	O
n't	O
have	O
a	O
length	O
method	O
:	O
var	O
element_count	O
=	O
0	O
;	O
for	O
(	O
e	O
in	O
myArray	O
)	O
{	O
if	O
(	O
myArray.hasOwnProperty	O
(	O
e	O
)	O
)	O
element_count++	O
;	O
}	O
@	O
palmsey	O
:	O
In	O
fairness	O
to	O
the	O
OP	O
,	O
the	O
javascript	O
docs	O
actually	O
explicitly	O
refer	O
to	O
using	O
variables	O
of	O
type	O
Object	O
in	O
this	O
manner	O
as	O
``	O
associative	O
arrays	O
''	O
.	O
Here	O
's	O
how	O
and	O
do	O
n't	O
forget	O
to	O
check	O
that	O
the	O
property	O
is	O
not	O
on	O
the	O
prototype	O
chain	O
:	O
var	O
element_count	O
=	O
0	O
;	O
for	O
(	O
var	O
e	O
in	O
myArray	O
)	O
if	O
(	O
myArray.hasOwnProperty	O
(	O
e	O
)	O
)	O
element_count++	O
;	O
@	O
palmsey	O
:	O
In	O
fairness	O
to	O
the	O
OP	O
,	O
the	O
javascript	O
docs	O
actually	O
explicitly	O
refer	O
to	O
using	O
variables	O
of	O
type	O
Object	O
in	O
this	O
manner	O
as	O
``	O
associative	O
arrays	O
''	O
.	O
And	O
in	O
fairness	O
to	O
@	O
palmsey	O
he	O
was	O
quite	O
correct	O
,	O
they	O
are	O
n't	O
associative	O
arrays	O
,	O
they	O
're	O
definitely	O
objects	O
:	O
)	O
-	O
doing	O
the	O
job	O
of	O
an	O
associative	O
array	O
.	O
But	O
as	O
regards	O
the	O
wider	O
point	O
you	O
definitely	O
seem	O
to	O
have	O
the	O
right	O
of	O
it	O
according	O
to	O
this	O
rather	O
fine	O
article	O
I	O
found	O
:	O
JavaScript	O
Associative	O
Arrays	O
Considered	O
Harmful	O
But	O
according	O
to	O
all	O
this	O
,	O
is	O
n't	O
the	O
accepted	O
answer	O
itself	O
bad	O
practice	O
?	O
Specify	O
a	O
prototype	O
size	B-API
(	I-API
)	I-API
function	O
for	O
Object	O
If	O
anything	O
else	O
has	O
been	O
added	O
to	O
Object	O
.prototype	O
,	O
then	O
the	O
suggested	O
code	O
will	O
fail	O
:	O
script	O
type=	O
''	O
text/javascript	O
''	O
Object.prototype.size	B-API
=	O
function	O
(	O
)	O
{	O
var	O
len	O
=	O
this.length	B-API
?	O
--	O
this.length	B-API
:	O
-1	O
;	O
for	O
(	O
var	O
k	O
in	O
this	O
)	O
len++	O
;	O
return	O
len	O
;	O
}	O
Object.prototype.size2	O
=	O
function	O
(	O
)	O
{	O
var	O
len	O
=	O
this.length	B-API
?	O
--	O
this.length	B-API
:	O
-1	O
;	O
for	O
(	O
var	O
k	O
in	O
this	O
)	O
len++	O
;	O
return	O
len	O
;	O
}	O
var	O
myArray	O
=	O
new	O
Object	B-API
(	I-API
)	I-API
;	O
myArray	O
[	O
``	O
firstname	O
''	O
]	O
=	O
``	O
Gareth	O
''	O
;	O
myArray	O
[	O
``	O
lastname	O
''	O
]	O
=	O
``	O
Simpson	O
''	O
;	O
myArray	O
[	O
``	O
age	O
''	O
]	O
=	O
21	O
;	O
alert	B-API
(	I-API
``	O
age	O
is	O
``	O
+	O
myArray	O
[	O
``	O
age	O
''	O
]	O
)	O
;	O
alert	B-API
(	I-API
``	I-API
length	I-API
is	I-API
``	I-API
+	I-API
myArray.size	I-API
(	I-API
)	I-API
)	I-API
;	O
/script	O
I	O
do	O
n't	O
think	O
that	O
answer	O
should	O
be	O
the	O
accepted	O
one	O
as	O
it	O
ca	O
n't	O
be	O
trusted	O
to	O
work	O
if	O
you	O
have	O
any	O
other	O
code	O
running	O
in	O
the	O
same	O
execution	O
context	O
.	O
To	O
do	O
it	O
in	O
a	O
robust	O
fashion	O
surely	O
you	O
would	O
need	O
to	O
define	O
the	O
size	B-API
method	O
within	O
myArray	O
and	O
check	O
for	O
the	O
type	O
of	O
the	O
members	O
as	O
you	O
iterate	O
through	O
them	O
.	O
Your	O
object	O
has	O
a	O
(	O
String	B-API
paramName	O
)	O
method	O
that	O
can	O
be	O
used	O
to	O
get	O
parameter	O
values	O
.	O
http	O
:	O
//java.sun.com/javaee/5/docs/api/javax/servlet/ServletRequest.html	O
#	O
getParameter	B-API
(	I-API
java.lang.String	I-API
)	I-API
POST	O
variables	O
should	O
be	O
accessible	O
via	O
the	O
request	O
object	O
:	O
HttpRequest.getParameterMap	B-API
(	I-API
)	I-API
.	O
The	O
exception	O
is	O
if	O
the	O
form	O
is	O
sending	O
multipart	O
MIME	O
data	O
(	O
the	O
FORM	O
has	O
enctype=	O
''	O
multipart/form-data	O
''	O
)	O
.	O
In	O
that	O
case	O
,	O
you	O
need	O
to	O
parse	O
the	O
byte	O
stream	O
with	O
a	O
MIME	O
parser	O
.	O
You	O
can	O
write	O
your	O
own	O
or	O
use	O
an	O
existing	O
one	O
like	O
the	O
Apache	B-API
Commons	I-API
File	I-API
Upload	I-API
API	I-API
.	O
Well	O
,	O
I	O
do	O
n't	O
really	O
have	O
an	O
expert	O
opinion	O
on	O
this	O
.	O
I	O
usually	O
end	O
up	O
using	O
closures	O
based	O
approach	O
just	O
because	O
it	O
keeps	O
the	O
code	O
simpler	O
to	O
manager	O
.	O
But	O
,	O
I	O
have	O
found	O
myself	O
using	O
prototypes	O
for	O
methods	O
that	O
have	O
loads	O
of	O
lines	O
of	O
code	O
.	O
You	O
also	O
have	O
the	O
choice	O
of	O
:	O
function	O
{	O
function	O
{	O
return	O
;	O
(	O
x	O
,	O
y	O
,	O
z	O
)	O
length	B-API
(	I-API
)	I-API
(	O
x	O
*	O
x	O
+	O
...	O
)	O
Which	O
is	O
probably	O
just	O
as	O
slow	O
as	O
example	O
two	O
,	O
but	O
it	O
looks	O
more	O
like	O
Java/C	O
#	O
and	O
is	O
a	O
bit	O
more	O
explicit	O
.	O
Assigning	O
functions	O
to	O
the	O
prototype	O
is	O
better	O
(	O
for	O
public	O
methods	O
)	O
because	O
all	O
instances	O
of	O
the	O
class	O
will	O
share	O
the	O
same	O
copy	O
of	O
the	O
method	O
.	O
If	O
you	O
assign	O
the	O
function	O
inside	O
the	O
constructor	O
as	O
in	O
the	O
second	O
example	O
,	O
every	O
time	O
you	O
create	O
a	O
new	O
instance	O
,	O
the	O
constructor	O
creates	O
a	O
new	O
copy	O
of	O
the	O
length	O
function	O
and	O
assigns	O
it	O
to	O
just	O
that	O
one	O
instance	O
.	O
However	O
this	O
latter	O
technique	O
is	O
useful	O
if	O
you	O
want	O
each	O
copy	O
to	O
have	O
it	O
's	O
own	O
copy	O
,	O
the	O
main	O
use	O
of	O
that	O
being	O
to	O
do	O
private/privileges	O
methods	O
which	O
have	O
access	O
to	O
private	O
variables	O
declared	O
inside	O
the	O
constructor	O
and	O
inherited	O
via	O
the	O
closure	O
mechanism	O
.	O
Douglas	O
Crockford	O
has	O
a	O
good	O
summary	O
.	O
Fortunately	O
I	O
get	O
to	O
use	O
,	O
which	O
provides	O
some	O
nice	O
wrappers	O
.	O
So	O
you	O
can	O
do	O
this	O
:	O
var	O
Person	O
=	O
Class.create	B-API
(	O
{	O
initialize	O
:	O
function	O
(	O
name	O
)	O
{	O
this.name	O
=	O
name	O
;	O
}	O
,	O
say	O
:	O
function	O
(	O
message	O
)	O
{	O
return	O
this.name	O
+	O
'	O
:	O
'	O
+	O
message	O
;	O
}	O
}	O
)	O
;	O
Documentation	O
:	O
Defining	O
classes	O
and	O
inheritance	O
I	O
'm	O
not	O
certain	O
,	O
but	O
I	O
believe	O
you	O
can	O
put	O
it	O
in	O
a	O
config	O
file	O
and	O
encrypt	O
the	O
config	O
file	O
.	O
Update	O
:	O
See	O
Jon	O
Galloway	O
's	O
post	O
here	O
.	O
If	O
the	O
app	O
is	O
an	O
ASP.NET	O
app	O
then	O
just	O
encrypt	O
the	O
connection	O
strings	O
section	O
of	O
your	O
.	O
If	O
the	O
app	O
is	O
a	O
client	O
application	O
running	O
on	O
multiple	O
machines	O
,	O
instead	O
of	O
storing	O
the	O
connection	O
string	O
locally	O
,	O
consider	O
using	O
a	O
web	O
service	O
or	O
some	O
other	O
kind	O
of	O
secure	O
mechanism	O
to	O
store	O
it	O
centrally	O
.	O
This	O
would	O
facilitate	O
easier	O
updates	O
in	O
the	O
future	O
and	O
you	O
're	O
not	O
storing	O
the	O
connection	O
string	O
locally	O
.	O
Just	O
some	O
thoughts	O
.	O
Updated	O
:	O
@	O
lassevk	O
''	O
Storing	O
the	O
connection	O
string	O
on	O
a	O
server	O
,	O
and	O
obtaining	O
it	O
through	O
a	O
web	O
connection	O
sounds	O
good	O
,	O
until	O
you	O
realize	O
that	O
you	O
need	O
security	O
on	O
that	O
web	O
connection	O
as	O
well	O
,	O
otherwise	O
an	O
attacker	O
could	O
just	O
as	O
well	O
impersonate	O
your	O
program	O
and	O
talk	O
to	O
the	O
web	O
connection	O
.	O
''	O
Security	O
on	O
the	O
web	O
service	O
was	O
implicit	O
.	O
Depending	O
on	O
the	O
type	O
of	O
deployment	O
there	O
are	O
a	O
numerous	O
options	O
...	O
for	O
example	O
client	O
side	O
certificates	O
.	O
I	O
hate	O
to	O
say	O
this	O
but	O
as	O
soon	O
as	O
you	O
put	O
something	O
on	O
a	O
client	O
machine	O
,	O
security	O
for	O
that	O
data	O
goes	O
out	O
the	O
window	O
.	O
If	O
your	O
program	O
is	O
going	O
to	O
decrypt	O
that	O
string	O
,	O
you	O
need	O
to	O
assume	O
that	O
an	O
attacker	O
can	O
do	O
the	O
same	O
.	O
Attaching	O
a	O
debugger	O
to	O
your	O
program	O
would	O
be	O
one	O
way	O
.	O
Storing	O
the	O
connection	O
string	O
on	O
a	O
server	O
,	O
and	O
obtaining	O
it	O
through	O
a	O
web	O
connection	O
sounds	O
good	O
,	O
until	O
you	O
realize	O
that	O
you	O
need	O
security	O
on	O
that	O
web	O
connection	O
as	O
well	O
,	O
otherwise	O
an	O
attacker	O
could	O
just	O
as	O
well	O
impersonate	O
your	O
program	O
and	O
talk	O
to	O
the	O
web	O
connection	O
.	O
Let	O
me	O
ask	O
a	O
question	O
.	O
Who	O
are	O
you	O
hiding	O
the	O
connection	O
string	O
from	O
?	O
The	O
user	O
or	O
an	O
attacker	O
?	O
And	O
if	O
the	O
user	O
,	O
why	O
?	O
There	O
are	O
some	O
other	O
idea	O
's	O
also	O
.	O
You	O
can	O
always	O
use	O
impersonation	O
.	O
Also	O
,	O
you	O
can	O
use	O
the	O
Enterprise	O
Library	O
's	O
(	O
Common	O
Library	O
)	O
.	O
section	O
name=	O
''	O
enterpriseLibrary.ConfigurationSource	B-API
''	O
type=	O
''	O
Microsoft.Practices.EnterpriseLibrary.Common.Configuration.ConfigurationSourceSection	B-API
,	O
Microsoft.Practices.EnterpriseLibrary.Common	B-API
,	O
Version=3.1.0.0	B-API
,	O
Culture=neutral	B-API
,	O
PublicKeyToken=b03f5f7f11d50a3a	B-API
''	O
/enterpriseLibrary.ConfigurationSource	B-API
selectedSource=	O
''	O
Common	O
''	O
sources	O
add	O
name=	O
''	O
Common	O
''	O
type=	O
''	O
Microsoft.Practices.EnterpriseLibrary.Common.Configuration.FileConfigurationSource	B-API
,	O
Microsoft.Practices.EnterpriseLibrary.Common	B-API
,	O
Version=3.1.0.0	B-API
,	O
Culture=neutral	O
,	O
PublicKeyToken=b03f5f7f11d50a3a	B-API
''	O
filePath=	O
''	O
Config\Exception.config	B-API
''	I-API
.NET	O
supports	O
encryption	O
on	O
config	O
values	O
like	O
this	O
.	O
You	O
could	O
leave	O
it	O
in	O
a	O
config	O
file	O
,	O
but	O
encrypted	O
.	O
You	O
want	O
to	O
be	O
able	O
to	O
distribute	O
the	O
DLL	O
with	O
all	O
of	O
the	O
setup	O
information	O
being	O
in	O
a	O
configurable	O
place	O
,	O
but	O
the	O
fact	O
is	O
you	O
ca	O
n't	O
have	O
one	O
of	O
the	O
handy-dandy	O
.NET	O
config	O
files	O
for	O
a	O
DLL	O
unless	O
you	O
do	O
something	O
custom	O
.	O
Maybe	O
you	O
need	O
to	O
rethink	O
what	O
responsibility	O
your	O
DLL	O
should	O
have	O
.	O
Would	O
it	O
be	O
possible	O
,	O
or	O
make	O
sense	O
to	O
require	O
that	O
the	O
connection	O
string	O
be	O
passed	O
in	O
by	O
the	O
user	O
of	O
your	O
library	O
?	O
Does	O
it	O
really	O
make	O
sense	O
that	O
your	O
DLL	O
reads	O
a	O
config	O
file	O
?	O
gedit	B-API
Syntax	O
highlighting	O
Fast	O
,	O
lightweight	O
Tabs	O
GUI	O
emacs	O
has	O
been	O
used	O
by	O
linux	O
programmers	O
for	O
decades	O
.	O
It	O
features	O
syntax	O
highlighting	O
,	O
it	O
's	O
fast	O
,	O
and	O
there	O
are	O
a	O
million	O
tutorials	O
out	O
there	O
you	O
can	O
find	O
.	O
any	O
of	O
the	O
popular	O
editors	O
can	O
be	O
turned	O
into	O
an	O
ide	O
.	O
I	O
use	O
Vi	O
on	O
the	O
console	O
and	O
have	O
used	O
various	O
gui	O
editors	O
over	O
the	O
years	O
.	O
This	O
does	O
n't	O
just	O
go	O
for	O
linux	O
I	O
use	O
Crimson	O
Editor	O
on	O
windows	O
as	O
a	O
C/python/z80asm	O
ide	O
.	O
I	O
bounce	O
about	O
between	O
Mac	O
,	O
Windows	O
and	O
Ubuntu	O
and	O
while	O
Emacs	O
used	O
to	O
be	O
my	O
editor	O
of	O
choice	O
,	O
I	O
'm	O
finding	O
that	O
in	O
my	O
old	O
age	O
I	O
prefer	O
to	O
something	O
GUI-based	O
(	O
using	O
command-line	O
for	O
the	O
shell	O
is	O
still	O
fine	O
by	O
me	O
)	O
.	O
My	O
preferred	O
editor	O
is	O
Komodo	O
Edit	O
,	O
which	O
the	O
advantages	O
of	O
:	O
Being	O
free	O
(	O
as	O
in	O
beer	O
)	O
Available	O
for	O
Mac	O
,	O
Windows	O
and	O
Linux	O
Syntax	O
highlighting	O
for	O
a	O
boatload	O
of	O
languages	O
,	O
including	O
C++	O
and	O
PHP	O
(	O
I	O
'm	O
using	O
it	O
for	O
Ruby	O
,	O
Python	O
and	O
PHP	O
myself	O
)	O
Code	O
completion	O
,	O
even	O
for	O
classes	O
I	O
defined	O
myself	O
Ability	O
to	O
``	O
remote	O
save	O
''	O
via	O
FTP	O
,	O
SFTP	O
or	O
SCP	O
Support	O
for	O
organizing	O
your	O
files	O
into	O
projects	O
Tabs	O
and	O
other	O
interface	O
niceties	O
I	O
'm	O
not	O
sure	O
how	O
lightweight	O
it	O
is	O
,	O
but	O
it	O
certainly	O
feels	O
snappier	O
than	O
Eclipse	O
!	O
Joey	O
,	O
I	O
believe	O
anything	O
is	O
lighter	O
than	O
Eclipse	O
!	O
:	O
o	O
)	O
Vim	O
(	O
or	O
Emacs	O
varying	O
on	O
religion	O
)	O
will	O
always	O
be	O
my	O
first	O
answer	O
to	O
this	O
question	O
,	O
over	O
any	O
point-and-click	O
IDE	O
.	O
As	O
they	O
write	O
in	O
The	O
Pragmatic	O
Programmer	O
Choose	O
an	O
editor	O
,	O
know	O
it	O
thoroughly	O
,	O
and	O
use	O
it	O
for	O
all	O
editing	O
tasks	O
.	O
[	O
...	O
]	O
The	O
editor	O
will	O
be	O
an	O
extension	O
of	O
your	O
hand	O
;	O
the	O
keys	O
will	O
sing	O
as	O
they	O
slice	O
their	O
way	O
through	O
text	O
and	O
thought	O
.	O
That	O
's	O
our	O
goal	O
.	O
Make	O
sure	O
that	O
the	O
editor	O
you	O
choose	O
is	O
available	O
on	O
all	O
platforms	O
you	O
use	O
.	O
Vim	O
is	O
configurable	O
,	O
extensible	O
,	O
programmable	O
and	O
can	O
be	O
turned	O
into	O
an	O
IDE	O
with	O
all	O
the	O
regular	O
features	O
.	O
Lately	O
I	O
've	O
been	O
using	O
Eclim	O
to	O
``	O
bring	O
Eclipse	O
functionality	O
to	O
the	O
Vim	O
editor	O
''	O
(	O
projects	O
,	O
better	O
java	O
support	O
etc	O
.	O
)	O
making	O
it	O
a	O
complete	O
platform	O
with	O
advanced	O
IDE	O
features	O
.	O
If	O
you	O
are	O
taking	O
your	O
time	O
switching	O
to	O
linux	O
,	O
I	O
'd	O
switch	O
to	O
emacs	O
or	O
vim	O
at	O
some	O
point	O
as	O
well	O
.	O
There	O
will	O
always	O
be	O
a	O
resource	O
or	O
a	O
document	O
describing	O
exactly	O
the	O
problem	O
you	O
are	O
having	O
with	O
either	O
of	O
them	O
,	O
and	O
generally	O
a	O
solution	O
is	O
just	O
a	O
few	O
more	O
clicks	O
down	O
the	O
road	O
.	O
Emacs	O
may	O
be	O
easier	O
at	O
the	O
beginning	O
because	O
of	O
modeless	O
editing	O
...	O
but	O
do	O
n't	O
let	O
modal	O
editing	O
scare	O
you	O
away	O
from	O
Vim	O
.	O
The	O
key	O
with	O
either	O
Vim	O
or	O
Emacs	O
is	O
knowing	O
it	O
could	O
probably	O
take	O
you	O
the	O
better	O
part	O
of	O
the	O
day	O
just	O
to	O
figure	O
out	O
what	O
you	O
want	O
them	O
to	O
do	O
,	O
let	O
alone	O
how	O
to	O
get	O
them	O
to	O
do	O
that	O
.	O
Once	O
they	O
work	O
for	O
you	O
though	O
,	O
you	O
'll	O
see	O
why	O
mostly	O
everyone	O
is	O
in	O
one	O
of	O
two	O
camps	O
.	O
General	O
hints	O
:	O
Setting	O
up	O
a	O
Makefile	O
for	O
your	O
project	O
is	O
almost	O
always	O
worth	O
it	O
.	O
Using	O
cscope	O
and	O
or	O
ctags	O
will	O
make	O
your	O
life	O
easier	O
.	O
Vim	O
hints	O
:	O
:	O
make	O
:	O
cn	O
,	O
:	O
cp	O
OmniCompletion	B-API
using	O
BufRead	O
autoloads	O
to	O
set	O
what	O
:	O
make	O
should	O
do	O
depending	O
on	O
file	O
type	O
Emacs	O
hints	O
:	O
ecb	O
is	O
fun	O
M-x	O
dired	O
M-	O
.	O
M-	O
,	O
M-*	O
M-x	O
complete-tag	O
for	O
etags	O
M-x	O
compile	B-API
(	I-API
add-hook	I-API
'mylanguage-mode-hook	I-API
'	I-API
(	I-API
lambda	I-API
(	I-API
)	I-API
(	I-API
setq	I-API
my-customizations	I-API
t	I-API
)	I-API
)	I-API
)	I-API
And	O
check	O
out	O
other	O
people	O
's	O
customizations	O
for	O
examples	O
of	O
what	O
other	O
people	O
do	O
.	O
No	O
.	O
See	O
A	O
Pragmatic	O
Look	O
at	O
Exception	O
Specifications	O
for	O
reasons	O
why	O
not	O
.	O
The	O
only	O
way	O
you	O
can	O
``	O
help	O
''	O
this	O
is	O
to	O
document	O
the	O
exceptions	O
your	O
function	O
can	O
throw	O
,	O
say	O
as	O
a	O
comment	O
in	O
the	O
header	O
file	O
declaring	O
it	O
.	O
This	O
is	O
not	O
enforced	O
by	O
the	O
compiler	O
or	O
anything	O
.	O
Use	O
code	O
reviews	O
for	O
that	O
purpose	O
.	O
Or	O
you	O
could	O
start	O
throwing	O
critical	O
exceptions	O
.	O
Surely	O
,	O
an	O
access	O
violation	O
exception	O
will	O
catch	O
your	O
users	O
'	O
attention	O
.	O
Outside	O
the	O
scope	O
of	O
your	O
question	O
so	O
I	O
debated	O
not	O
posting	O
this	O
but	O
in	O
Java	O
there	O
are	O
actually	O
2	O
types	O
of	O
exceptions	O
,	O
checked	O
and	O
unchecked	O
.	O
The	O
basic	O
difference	O
is	O
that	O
,	O
much	O
like	O
in	O
,	O
you	O
dont	O
have	O
to	O
catch	O
an	O
unchecked	O
exception	O
.	O
For	O
a	O
good	O
reference	O
try	O
this	O
Is	O
there	O
a	O
way	O
one	O
can	O
ensure	O
that	O
the	O
exceptions	O
thrown	O
are	O
always	O
caught	O
using	O
try/catch	O
by	O
the	O
calling	O
function	O
?	O
I	O
find	O
it	O
rather	O
funny	O
,	O
that	O
the	O
Java	O
crowd	O
-	O
including	O
myself	O
-	O
is	O
trying	O
to	O
avoid	O
checked	O
Exceptions	O
.	O
They	O
are	O
trying	O
to	O
work	O
their	O
way	O
around	O
being	O
forced	O
to	O
catch	O
Exceptions	O
by	O
using	O
RuntimeExceptions	O
.	O
Chris	O
'	O
probably	O
has	O
the	O
best	O
pure	O
answer	O
to	O
the	O
question	O
:	O
However	O
,	O
I	O
'm	O
curious	O
about	O
the	O
root	O
of	O
the	O
question	O
.	O
If	O
the	O
user	O
should	O
always	O
wrap	O
the	O
call	O
in	O
a	O
try/catch	O
block	O
,	O
should	O
the	O
user-called	O
function	O
really	O
be	O
throwing	O
exceptions	O
in	O
the	O
first	O
place	O
?	O
This	O
is	O
a	O
difficult	O
question	O
to	O
answer	O
without	O
more	O
context	O
regarding	O
the	O
code-base	O
in	O
question	O
.	O
Shooting	O
from	O
the	O
hip	O
,	O
I	O
think	O
the	O
best	O
answer	O
here	O
is	O
to	O
wrap	O
the	O
function	O
up	O
such	O
that	O
the	O
recommended	O
(	O
if	O
not	O
only	O
,	O
depending	O
on	O
the	O
overall	O
exception	O
style	O
of	O
the	O
code	O
)	O
public	O
interface	O
does	O
the	O
try/catch	O
for	O
the	O
user	O
.	O
If	O
you	O
're	O
just	O
trying	O
to	O
ensure	O
that	O
there	O
are	O
no	O
unhandled	O
exceptions	O
in	O
your	O
code	O
,	O
unit	O
tests	O
and	O
code	O
review	O
are	O
probably	O
the	O
best	O
solution	O
.	O
Firebug	B-API
is	O
pretty	O
well	O
unbeatable	O
for	O
JavaScript	O
development	O
in	O
a	O
browser	O
.	O
'alert	B-API
(	I-API
x	I-API
)	I-API
;	O
'	O
was	O
the	O
primary	O
technique	O
for	O
too	O
long	O
.	O
FireBug	O
,	O
as	O
others	O
have	O
said	O
,	O
is	O
the	O
way	O
to	O
go	O
in	O
FireFox	O
debugging	O
.	O
the	O
Aptana	O
IDE	O
(	O
based	O
on	O
eclipse	O
)	O
made	O
a	O
bit	O
of	O
a	O
splash	O
in	O
the	O
javascript	O
IDE	O
region	O
recently	O
.	O
Visual	O
Studio	O
2008	O
contains	O
much	O
improved	O
javascript	O
debugging	O
capabilities	O
over	O
the	O
previous	O
versions	O
.	O
Try	O
a	O
combination	O
of	O
Script	B-API
#	I-API
(	I-API
http	I-API
:	I-API
//www.nikhilk.net/ScriptSharpIntro.aspx	I-API
)	I-API
and	O
Firebug	O
Cheers	O
The	O
nightly	O
builds	O
of	O
WebKit	O
have	O
some	O
great	O
new	O
debugging	O
tools	O
:	O
http	O
:	O
//nightly.webkit.org/	O
We	O
use	O
FindBugs	B-API
and	O
JDepend	B-API
integrated	O
with	O
Ant	O
.	O
We	O
use	O
JUnit	B-API
but	O
we	O
're	O
not	O
using	O
any	O
coverage	O
tool	O
.	O
I	O
'm	O
not	O
using	O
it	O
integrated	O
to	O
Rational	O
Application	O
Developer	O
(	O
the	O
IDE	O
I	O
'm	O
using	O
to	O
develop	O
J2EE	O
applications	O
)	O
because	O
I	O
like	O
how	O
neat	O
it	O
looks	O
when	O
you	O
run	O
javac	O
in	O
the	O
Windows	O
console	O
.	O
:	O
P	O
Checkstyle	O
is	O
another	O
one	O
I	O
've	O
used	O
at	O
a	O
previous	O
company	O
...	O
it	O
's	O
mainly	O
for	O
style	O
checking	O
,	O
but	O
it	O
can	O
do	O
some	O
static	O
analysis	O
too	O
.	O
Also	O
,	O
Clover	O
for	O
code	O
coverage	O
,	O
though	O
be	O
aware	O
it	O
is	O
not	O
a	O
free	O
tool	O
.	O
We	O
are	O
using	O
FindBugs	O
and	O
Checkstyle	O
as	O
well	O
as	O
Clover	O
for	O
Code	O
Coverage	O
.	O
I	O
think	O
it	O
's	O
important	O
to	O
have	O
some	O
kind	O
of	O
static	O
analysis	O
,	O
supporting	O
your	O
development	O
.	O
Unfortunately	O
it	O
's	O
still	O
not	O
widely	O
spread	O
that	O
these	O
tools	O
are	O
important	O
.	O
I	O
am	O
looking	O
for	O
many	O
answers	O
to	O
learn	O
about	O
new	O
tools	O
and	O
consolidate	O
this	O
knowledge	O
in	O
a	O
one	O
question/thread	O
,	O
so	O
I	O
doubt	O
there	O
will	O
be	O
1	O
true	O
answer	O
to	O
this	O
question	O
.	O
My	O
answer	O
to	O
my	O
own	O
question	O
is	O
that	O
we	O
use	O
:	O
Findbugs	O
to	O
look	O
for	O
common	O
errors	O
bad/coding	O
-	O
run	O
from	O
maven	O
,	O
and	O
also	O
integrates	O
easily	O
into	O
Eclipse	O
Cobertura	O
for	O
our	O
coverage	O
reports	O
-	O
run	O
from	O
maven	O
Hudson	O
also	O
has	O
a	O
task-scanner	O
plugin	O
that	O
will	O
display	O
a	O
count	O
of	O
your	O
TODO	O
and	O
FIXMEs	O
,	O
as	O
well	O
as	O
show	O
where	O
they	O
are	O
in	O
the	O
source	O
files	O
.	O
All	O
are	O
integrated	O
with	O
Maven	O
1.x	O
in	O
our	O
case	O
and	O
tied	O
into	O
Hudson	O
,	O
which	O
runs	O
our	O
builds	O
on	O
check-in	O
as	O
well	O
as	O
extra	O
things	O
nightly	O
and	O
weekly	O
.	O
Hudson	O
trend	O
graphs	O
our	O
JUnit	B-API
tests	O
,	O
coverage	O
,	O
findbugs	O
,	O
as	O
well	O
as	O
open	O
tasks	O
.	O
There	O
is	O
also	O
a	O
Hudson	O
plugin	O
that	O
reports	O
and	O
graphs	O
our	O
compile	O
warnings	O
.	O
We	O
also	O
have	O
several	O
performance	O
tests	O
with	O
their	O
own	O
graphs	O
of	O
performance	O
and	O
memory	O
use	O
over	O
time	O
using	O
the	O
Hudson	O
plots	O
plugin	O
as	O
well	O
.	O
I	O
would	O
first	O
find	O
out	O
if	O
the	O
site	B-API
(	I-API
s	I-API
)	I-API
in	O
question	O
provide	O
an	O
API	O
server	O
or	O
RSS	O
Feeds	O
for	O
access	O
the	O
data	O
you	O
require	O
.	O
The	O
Ruby	O
world	O
's	O
equivalent	O
to	O
Beautiful	O
Soup	O
is	O
why_the_lucky_stiff	O
's	O
Hpricot	O
.	O
Regular	O
expressions	O
work	O
pretty	O
well	O
for	O
HTML	O
scraping	O
as	O
well	O
;	O
-	O
)	O
Though	O
after	O
looking	O
at	O
Beautiful	O
Soup	O
,	O
I	O
can	O
see	O
why	O
this	O
would	O
be	O
a	O
valuable	O
tool	O
.	O
You	O
probably	O
have	O
as	O
much	O
already	O
,	O
but	O
I	O
think	O
this	O
is	O
what	O
you	O
are	O
trying	O
to	O
do	O
:	O
from	O
__future__	B-API
import	I-API
with_statementimport	I-API
re	I-API
,	I-API
osprofile	I-API
=	I-API
``	I-API
http	I-API
:	I-API
//stackoverflow.com/users/30/myProfile.html	I-API
'	I-API
)	I-API
with	O
as	O
f	O
:	O
for	O
line	O
in	O
f	O
:	O
profile	O
=	O
profile	O
+	O
p	O
=	O
/div	O
'	O
)	O
#	O
Rep	O
is	O
found	O
hereprin	O
pm	O
=	O
print	O
mprint	O
+	O
``	O
``	O
os.system	B-API
(	I-API
'wget	I-API
--	I-API
no-cookies	I-API
--	I-API
header	I-API
``	I-API
Cookie	I-API
:	I-API
soba=	B-API
(	I-API
SeCreTCODe	I-API
)	I-API
open	B-API
(	I-API
``	I-API
myProfile.html	I-API
''	I-API
)	I-API
linef.close	B-API
(	I-API
)	I-API
re.compile	B-API
(	I-API
'summarycount	I-API
''	I-API
(	I-API
\d+	I-API
)	I-API
p.search	B-API
(	I-API
profile	I-API
)	I-API
(	O
1	O
)	O
os.system	B-API
(	I-API
``	I-API
espeak	B-API
\	O
''	O
Rep	O
is	O
at	O
``	O
+	O
m.group	O
(	O
1	O
)	O
points\	B-API
''	I-API
''	I-API
os.remove	B-API
(	I-API
``	I-API
myProfile.html	I-API
''	I-API
)	I-API
For	O
Perl	O
,	O
there	O
's	O
WWW	O
:	O
:Mechanize	O
.	O
I	O
use	O
Hpricot	O
on	O
Ruby	O
.	O
As	O
an	O
example	O
this	O
is	O
a	O
snippet	O
of	O
code	O
that	O
I	O
use	O
to	O
retrieve	O
all	O
book	O
titles	O
from	O
the	O
six	O
pages	O
of	O
my	O
HireThings	O
account	O
(	O
as	O
they	O
do	O
n't	O
seem	O
to	O
provide	O
a	O
single	O
page	O
with	O
this	O
information	O
)	O
:	O
pagerange	O
=	O
1..6	O
proxy	O
=	O
Net	O
:	O
:HTTP	O
:	O
:Proxy	B-API
(	I-API
proxy	I-API
,	I-API
port	I-API
,	I-API
user	I-API
,	I-API
pwd	I-API
)	I-API
proxy.start	B-API
(	I-API
'www.hirethings.co.nz	I-API
'	I-API
)	I-API
do	O
|http|	O
pagerange.each	B-API
do	O
|page|	O
resp	O
,	O
data	O
=	O
http.get	B-API
``	I-API
/perth_dotnet	I-API
?	I-API
page=	O
#	O
{	O
page	O
}	O
''	O
if	O
resp.class	O
==	O
Net	O
:	O
:HTTPOK	B-API
(	I-API
Hpricot	B-API
(	I-API
data	I-API
)	I-API
/	I-API
''	I-API
h3	I-API
a	I-API
''	I-API
)	I-API
.each	O
{	O
|a|	O
puts	O
a.innerText	B-API
}	O
end	O
end	O
end	O
It	O
's	O
pretty	O
much	O
complete	O
.	O
All	O
that	O
comes	O
before	O
this	O
are	O
library	O
imports	O
and	O
the	O
settings	O
for	O
my	O
proxy	O
.	O
BeautifulSoup	O
is	O
a	O
great	O
way	O
to	O
go	O
for	O
HTML	O
scraping	O
.	O
My	O
previous	O
job	O
had	O
me	O
doing	O
a	O
lot	O
of	O
scraping	O
and	O
I	O
wish	O
I	O
knew	O
about	O
BeautifulSoup	B-API
when	O
I	O
started	O
.	O
It	O
's	O
like	O
the	O
DOM	O
with	O
a	O
lot	O
more	O
useful	O
options	O
and	O
is	O
a	O
lot	O
more	O
pythonic	O
.	O
If	O
you	O
want	O
to	O
try	O
Ruby	O
they	O
ported	O
BeautifulSoup	B-API
calling	O
it	O
RubyfulSoup	B-API
but	O
it	O
has	O
n't	O
been	O
updated	O
in	O
a	O
while	O
.	O
Other	O
useful	O
tools	O
are	O
HTMLParser	B-API
or	O
sgmllib.SGMLParser	B-API
which	O
are	O
part	O
of	O
the	O
standard	O
Python	O
library	O
.	O
These	O
work	O
by	O
calling	O
methods	O
every	O
time	O
you	O
enter/exit	O
a	O
tag	O
and	O
encounter	O
html	O
text	O
.	O
They	O
're	O
like	O
Expat	O
if	O
you	O
're	O
familiar	O
with	O
that	O
.	O
These	O
libraries	O
are	O
especially	O
useful	O
if	O
you	O
are	O
going	O
to	O
parse	O
very	O
large	O
files	O
and	O
creating	O
a	O
DOM	O
tree	O
would	O
be	O
long	O
and	O
expensive	O
.	O
Regular	O
expressions	O
are	O
n't	O
very	O
necessary	O
.	O
BeautifulSoup	B-API
handles	O
regular	O
expressions	O
so	O
if	O
you	O
need	O
their	O
power	O
you	O
can	O
utilize	O
it	O
there	O
.	O
I	O
say	O
go	O
with	O
BeautifulSoup	B-API
unless	O
you	O
need	O
speed	O
and	O
a	O
smaller	O
memory	O
footprint	O
.	O
If	O
you	O
find	O
a	O
better	O
HTML	O
parser	O
on	O
Python	O
,	O
let	O
me	O
know	O
.	O
I	O
found	O
HTMLSQL	O
to	O
be	O
a	O
ridiculously	O
simple	O
way	O
to	O
screenscrape	O
.	O
It	O
takes	O
literally	O
minutes	O
to	O
get	O
results	O
with	O
it	O
.	O
The	O
queries	O
are	O
super-intuitive	O
-	O
like	O
:	O
SELECT	B-API
title	I-API
from	I-API
img	I-API
WHERE	I-API
$	I-API
class	I-API
==	I-API
There	O
are	O
now	O
some	O
other	O
alternatives	O
that	O
take	O
the	O
same	O
approach	O
.	O
In	O
the	O
.NET	O
world	O
,	O
I	O
recommend	O
the	O
HTML	B-API
Agility	I-API
Pack	I-API
.	O
Not	O
near	O
as	O
simple	O
as	O
some	O
of	O
the	O
above	O
options	O
(	O
like	O
HTMLSQL	O
)	O
,	O
but	O
it	O
's	O
very	O
flexible	O
.	O
It	O
lets	O
you	O
maniuplate	O
poorly	O
formed	O
HTML	O
as	O
if	O
it	O
were	O
well	O
formed	O
XML	O
,	O
so	O
you	O
can	O
use	O
XPATH	B-API
or	O
just	O
itereate	O
over	O
nodes	O
.	O
http	O
:	O
//www.codeplex.com/htmlagilitypack	O
Sounds	O
to	O
me	O
like	O
you	O
're	O
trying	O
to	O
combine	O
things	O
that	O
should	O
n't	O
be	O
combined	O
.	O
If	O
you	O
need	O
to	O
do	O
different	O
processing	O
in	O
your	O
view	O
depending	O
on	O
if	O
it	O
's	O
a	O
User	O
or	O
Group	O
object	O
you	O
're	O
trying	O
to	O
look	O
at	O
then	O
you	O
should	O
use	O
two	O
different	O
view	O
functions	O
.	O
On	O
the	O
other	O
hand	O
there	O
can	O
be	O
common	O
idioms	O
you	O
'd	O
want	O
to	O
extract	O
out	O
of	O
your	O
object_detail	O
type	O
views	O
...	O
perhaps	O
you	O
could	O
use	O
a	O
decorator	O
or	O
just	O
helper	O
functions	O
?	O
-Dan	O
If	O
you	O
're	O
simply	O
displaying	O
data	O
from	O
models	O
,	O
why	O
not	O
use	O
the	O
Django	O
Generic	O
Views	O
?	O
They	O
're	O
designed	O
to	O
let	O
you	O
easy	O
show	O
data	O
from	O
a	O
model	O
without	O
having	O
to	O
write	O
your	O
own	O
view	O
and	O
stuff	O
about	O
mapping	O
URL	O
paramaters	O
to	O
views	O
,	O
fetching	O
data	O
,	O
handling	O
edge	O
cases	O
,	O
rendering	O
output	O
,	O
etc	O
.	O
Try	O
this	O
:	O
var	O
request	O
=	O
new	B-API
;	I-API
request.onreadystatechange	B-API
=	I-API
process	I-API
;	I-API
request.open	B-API
(	I-API
'GET	I-API
'	I-API
,	I-API
url	I-API
;	I-API
function	O
{	O
if	O
(	O
request.readyState	B-API
==	I-API
4	I-API
request.status	B-API
==	I-API
200	I-API
)	O
var	O
xml	O
=	O
;	O
(	O
)	O
;	O
request.overrideMimeType	B-API
(	I-API
'text/xml	I-API
'	I-API
)	I-API
;	O
request.send	B-API
(	I-API
null	I-API
)	I-API
process	B-API
(	I-API
)	I-API
Notice	O
the	O
overrideMimeType	O
and	O
responseXML	O
.	O
The	O
readyState	O
==	O
4	O
is	O
'completed	O
'	O
.	O
Try	O
creating	O
a	O
div	B-API
(	I-API
'div	I-API
'	I-API
)	I-API
And	O
then	O
set	O
the	O
tag	O
soup	O
HTML	O
to	O
the	O
innerHTML	O
of	O
the	O
div	O
.	O
The	O
browser	O
should	O
process	O
that	O
into	O
XML	O
,	O
which	O
then	O
you	O
can	O
parse	O
.	O
The	O
innerHTML	O
property	O
takes	O
a	O
string	O
that	O
specifies	O
a	O
valid	O
combination	O
of	O
text	O
and	O
elements	O
.	O
When	O
the	O
innerHTML	O
property	O
is	O
set	O
,	O
the	O
given	O
string	O
completely	O
replaces	O
the	O
existing	O
content	O
of	O
the	O
object	O
.	O
If	O
the	O
string	O
contains	O
HTML	O
tags	O
,	O
the	O
string	O
is	O
parsed	O
and	O
formatted	O
as	O
it	O
is	O
placed	O
into	O
the	O
document	O
.	O
So	O
you	O
want	O
to	O
download	O
a	O
webpage	O
as	O
an	O
XML	O
object	O
using	O
javascript	O
,	O
but	O
you	O
do	O
n't	O
want	O
to	O
use	O
a	O
webpage	O
?	O
Since	O
you	O
have	O
no	O
control	O
over	O
what	O
the	O
user	O
will	O
do	O
(	O
closing	O
tabs	O
or	O
windows	O
or	O
whatnot	O
)	O
you	O
would	O
need	O
to	O
do	O
this	O
in	O
like	O
a	O
OSX	O
Dashboard	O
widget	O
or	O
some	O
separate	O
application	O
.	O
A	O
Firefox	O
extension	O
would	O
also	O
work	O
,	O
unless	O
you	O
have	O
to	O
worry	O
about	O
the	O
user	O
closing	O
the	O
browser	O
.	O
Ajaxian	O
actually	O
had	O
a	O
post	O
on	O
inserting	O
/	O
retrieving	O
html	O
from	O
an	O
iframe	O
today	O
.	O
You	O
can	O
probably	O
use	O
the	O
js	O
snippet	O
they	O
have	O
posted	O
there	O
.	O
As	O
for	O
handling	O
closing	O
of	O
a	O
browser	O
/	O
tab	O
,	O
you	O
can	O
attach	O
to	O
the	O
onbeforeunload	B-API
(	I-API
http	I-API
:	I-API
//msdn.microsoft.com/en-us/library/ms536907	I-API
(	I-API
VS.85	I-API
)	I-API
.aspx	I-API
)	I-API
event	O
and	O
do	O
whatever	O
you	O
need	O
to	O
do	O
.	O
For	O
C++	O
,	O
Boost.Random	B-API
is	O
probably	O
what	O
you	O
're	O
looking	O
for	O
.	O
It	O
has	O
support	O
for	O
MT	O
(	O
among	O
many	O
other	O
algorithms	O
)	O
,	O
and	O
can	O
collect	O
entropy	O
via	O
the	O
class	O
.	O
Check	O
it	O
out	O
!	O
:	O
-	O
)	O
The	O
Gnu	O
Scientific	O
Library	O
(	O
GSL	B-API
)	O
has	O
a	O
pretty	O
extensive	O
set	O
of	O
RN	O
generators	O
,	O
test	O
harness	O
,	O
etc	O
.	O
If	O
you	O
're	O
on	O
linux	O
,	O
it	O
's	O
probably	O
already	O
available	O
on	O
your	O
system	O
.	O
Here	O
is	O
a	O
simple	O
static	O
method	O
to	O
do	O
this	O
in	O
C	O
#	O
:	O
public	B-API
static	O
string	O
{	O
return	O
(	O
string	B-API
targetString	I-API
)	O
System.Threading.Thread.CurrentThread.CurrentCulture.TextInfo.ToTitleCase	B-API
(	I-API
targetString	I-API
)	I-API
In	O
what	O
language	O
?	O
In	O
PHP	O
it	O
is	O
:	O
ucwords	B-API
(	I-API
)	I-API
example	O
:	O
$	O
HelloWorld	O
=	O
ucwords	B-API
(	I-API
'hello	I-API
world	I-API
'	I-API
)	I-API
;	O
Without	O
using	O
a	O
ready-made	O
function	O
,	O
a	O
super-simple	O
low-level	O
algorithm	O
to	O
convert	O
a	O
string	O
to	O
title	O
case	O
:	O
convert	B-API
first	B-API
character	B-API
to	B-API
uppercase.for	B-API
each	B-API
character	B-API
in	B-API
,	O
if	B-API
the	B-API
previous	B-API
character	B-API
is	B-API
,	O
convert	B-API
character	B-API
to	B-API
This	O
asssumes	O
the	O
``	O
convert	O
character	O
to	O
uppercase	O
''	O
will	O
do	O
that	O
correctly	O
regardless	O
of	O
whether	O
or	O
not	O
the	O
character	O
is	O
case-sensitive	O
(	O
e.g.	O
,	O
'+	O
'	O
)	O
.	O
If	O
the	O
language	O
you	O
are	O
using	O
has	O
a	O
supported	O
method/function	O
then	O
just	O
use	O
that	O
(	O
as	O
in	O
the	O
C	O
#	O
method	O
)	O
If	O
it	O
does	O
not	O
,	O
then	O
you	O
will	O
want	O
to	O
do	O
something	O
like	O
the	O
following	O
:	O
Read	O
in	O
the	O
string	O
Take	O
the	O
first	O
word	O
Capitalize	O
the	O
first	O
letter	O
of	O
that	O
word	O
1	O
Go	O
forward	O
and	O
find	O
the	O
next	O
word	O
Go	O
to	O
3	O
if	O
not	O
at	O
the	O
end	O
of	O
the	O
string	O
,	O
otherwise	O
exit	O
1	O
To	O
capitalize	O
it	O
in	O
,	O
say	O
,	O
C	O
-	O
use	O
the	O
ascii	O
codes	O
to	O
find	O
the	O
integer	O
value	O
of	O
the	O
char	O
and	O
subtract	O
32	O
from	O
it	O
.	O
There	O
would	O
need	O
to	O
be	O
much	O
more	O
error	O
checking	O
in	O
the	O
code	O
(	O
ensuring	O
valid	O
letters	O
etc	O
.	O
)	O
,	O
and	O
the	O
``	O
Capitalize	B-API
''	O
function	O
will	O
need	O
to	O
impose	O
some	O
sort	O
of	O
``	O
title-case	O
scheme	O
''	O
on	O
the	O
letters	O
to	O
check	O
for	O
words	O
that	O
do	O
not	O
need	O
to	O
be	O
capatilised	O
(	O
'and	O
'	O
,	O
'but	O
'	O
etc	O
.	O
Here	O
is	O
a	O
good	O
scheme	O
)	O
Here	O
's	O
a	O
Perl	O
solution	O
http	O
:	O
//daringfireball.net/2008/05/title_case	O
Here	O
's	O
a	O
Ruby	O
solution	O
http	O
:	O
//frankschmitt.org/projects/title-case	O
Here	O
's	O
a	O
Ruby	O
one-liner	O
solution	O
:	O
http	O
:	O
//snippets.dzone.com/posts/show/4702	O
'some	O
string	O
here'.gsub	O
(	O
/\b\w/	O
)	O
{	O
$	O
.upcase	O
}	O
What	O
the	O
one-liner	O
is	O
doing	O
is	O
using	O
a	O
regular	O
expression	O
substitution	O
of	O
the	O
first	O
character	O
of	O
each	O
word	O
with	O
the	O
uppercase	O
version	O
of	O
it	O
.	O
I	O
would	O
be	O
wary	O
of	O
automatically	O
upcasing	O
all	O
whitespace-preceded-words	O
in	O
scenarios	O
where	O
I	O
would	O
run	O
the	O
risk	O
of	O
attracting	O
the	O
fury	O
of	O
nitpickers	O
.	O
I	O
would	O
at	O
least	O
consider	O
implementing	O
a	O
dictionary	O
for	O
exception	O
cases	O
like	O
articles	O
and	O
conjunctions	O
.	O
Behold	O
:	O
``	O
Beauty	O
and	O
the	O
Beast	O
''	O
And	O
when	O
it	O
comes	O
to	O
proper	O
nouns	O
,	O
the	O
thing	O
gets	O
much	O
uglier	O
.	O
To	O
capatilise	O
it	O
in	O
,	O
say	O
,	O
C	O
-	O
use	O
the	O
ascii	O
codes	O
(	O
http	O
:	O
//www.asciitable.com/	O
)	O
to	O
find	O
the	O
integer	O
value	O
of	O
the	O
char	O
and	O
subtract	O
32	O
from	O
it	O
.	O
This	O
is	O
a	O
poor	O
solution	O
if	O
you	O
ever	O
plan	O
to	O
accept	O
characters	O
beyond	O
a-z	O
and	O
A-Z	O
.	O
For	O
instance	O
:	O
ASCII	O
134	O
:	O
,	O
ASCII	O
143	O
:	O
.	O
Using	O
arithmetic	O
gets	O
you	O
:	O
ASCII	O
102	O
:	O
f	O
Use	O
library	O
calls	O
,	O
do	O
n't	O
assume	O
you	O
can	O
use	O
integer	O
arithmetic	O
on	O
your	O
characters	O
to	O
get	O
back	O
something	O
useful	O
.	O
Unicode	O
is	O
tricky	O
.	O
Looking	O
into	O
the	O
registry	O
is	O
perfectly	O
valid	O
,	O
so	O
long	O
as	O
you	O
can	O
be	O
sure	O
that	O
the	O
user	O
of	O
the	O
application	O
will	O
always	O
have	O
access	O
to	O
what	O
you	O
need	O
.	O
Take	O
a	O
look	O
at	O
Raymond	O
Chens	O
solution	O
:	O
How	O
to	O
detect	O
programmatically	O
whether	O
you	O
are	O
running	O
on	O
64-bit	O
Windows	O
and	O
here	O
's	O
the	O
PINVOKE	O
for	O
.NET	O
:	O
IsWow64Process	B-API
(	I-API
kernel32	I-API
)	I-API
Update	O
:	O
I	O
'd	O
take	O
issue	O
with	O
checking	O
for	O
'x86	O
'	O
.	O
Who	O
's	O
to	O
say	O
what	O
intel	O
's	O
or	O
AMD	O
's	O
next	O
32	O
bit	O
processor	O
may	O
be	O
designated	O
as	O
.	O
The	O
probability	O
is	O
low	O
but	O
it	O
is	O
a	O
risk	O
.	O
You	O
should	O
ask	O
the	O
OS	O
to	O
determine	O
this	O
via	O
the	O
correct	O
API	O
's	O
,	O
not	O
by	O
querying	O
what	O
could	O
be	O
a	O
OS	O
version/platform	O
specific	O
value	O
that	O
may	O
be	O
considered	O
opaque	O
to	O
the	O
outside	O
world	O
.	O
Ask	O
yourself	O
the	O
questions	O
,	O
1	O
-	O
is	O
the	O
registry	O
entry	O
concerned	O
properly	O
documented	O
by	O
MS	O
,	O
2	O
-	O
If	O
it	O
is	O
do	O
they	O
provide	O
a	O
definitive	O
list	O
of	O
possible	O
values	O
that	O
is	O
guaranteed	O
to	O
permit	O
you	O
as	O
a	O
developer	O
to	O
make	O
the	O
informed	O
decision	O
between	O
whether	O
you	O
are	O
running	O
32	O
bit	O
or	O
64	O
bit	O
.	O
If	O
the	O
answer	O
is	O
no	O
,	O
then	O
call	O
the	O
API	O
's	O
,	O
yeah	O
it	O
's	O
a	O
but	O
more	O
long	O
winded	O
but	O
it	O
is	O
documented	O
and	O
definitive	O
.	O
The	O
easiest	O
way	O
to	O
test	O
for	O
64-bit	O
under	O
.NET	O
is	O
to	O
check	O
the	O
value	O
of	O
IntPtr.Size	B-API
.	I-API
EDIT	I-API
:	O
Doh	O
!	O
This	O
will	O
tell	O
you	O
whether	O
or	O
not	O
the	O
current	O
process	O
is	O
64-bit	O
,	O
not	O
the	O
OS	O
as	O
a	O
whole	O
.	O
Sorry	O
!	O
The	O
easiest	O
way	O
to	O
test	O
for	O
64-bit	O
under	O
.NET	O
is	O
to	O
check	O
the	O
value	O
of	O
IntPtr.Size	B-API
.	O
I	O
believe	O
the	O
value	O
of	O
IntPtr.Size	B-API
is	O
4	O
for	O
a	O
32bit	O
app	O
that	O
's	O
running	O
under	O
WOW	O
,	O
is	O
n't	O
it	O
?	O
Edit	O
:	O
@	O
Edit	O
:	O
Yeah	O
.	O
:	O
)	O
You	O
can	O
use	O
reflection	O
to	O
get	O
the	O
property	O
and	O
invoke	O
it	O
.	O
Something	O
like	O
this	O
:	O
object	O
result	O
=	O
(	O
)	O
.GetProperty	B-API
(	I-API
``	I-API
Property	I-API
''	I-API
+	I-API
i	I-API
)	I-API
(	O
theObject	O
,	O
null	O
)	O
That	O
is	O
,	O
assuming	O
the	O
object	O
that	O
has	O
the	O
property	O
is	O
called	O
``	O
theObject	O
''	O
:	O
)	O
You	O
could	O
do	O
it	O
with	O
a	O
prototype	O
function	O
:	O
void	O
something	O
(	O
int	O
i	O
,	O
string	O
P1	O
)	O
{	O
something	O
(	O
i	O
,	O
P1	O
,	O
String.Empty	B-API
)	O
;	O
}	O
void	O
something	O
(	O
int	O
i	O
,	O
string	O
P1	O
,	O
string	O
P2	O
)	O
{	O
something	O
(	O
i	O
,	O
P1	O
,	O
P2	O
,	O
String.Empty	B-API
)	O
;	O
}	O
void	O
something	O
(	O
int	O
i	O
,	O
string	O
P1	O
,	O
string	O
P2	O
,	O
string	O
P3	O
)	O
{	O
something	O
(	O
i	O
,	O
P1	O
,	O
P2	O
,	O
P3	O
,	O
String.Empty	B-API
)	O
;	O
}	O
and	O
so	O
on	O
...	O
Not	O
really	O
.	O
You	O
can	O
use	O
reflection	O
to	O
achieve	O
what	O
you	O
want	O
,	O
but	O
it	O
wo	O
n't	O
be	O
nearly	O
as	O
simple	O
as	O
in	O
Javascript	O
.	O
For	O
example	O
,	O
if	O
you	O
wanted	O
to	O
set	O
the	O
private	O
field	O
of	O
an	O
object	O
to	O
something	O
,	O
you	O
could	O
use	O
this	O
function	O
:	O
protected	O
static	O
void	O
SetField	O
(	O
object	O
o	O
,	O
string	O
fieldName	O
,	O
object	O
value	O
)	O
{	O
FieldInfo	O
field	O
=	O
o.GetType	O
(	O
)	O
.GetField	O
(	O
fieldName	O
,	O
BindingFlags.Instance	B-API
|	O
BindingFlags.NonPublic	B-API
)	O
;	O
field.SetValue	O
(	O
o	O
,	O
value	O
)	O
;	O
}	O
Unfortunately	O
,	O
C	O
#	O
is	O
n't	O
a	O
dynamic	O
language	O
like	O
that	O
.	O
What	O
you	O
can	O
do	O
,	O
however	O
,	O
is	O
to	O
create	O
a	O
C	O
#	O
source	O
code	O
file	O
,	O
full	O
with	O
class	O
and	O
everything	O
,	O
and	O
run	O
it	O
through	O
the	O
CodeDom	O
provider	O
for	O
C	O
#	O
and	O
compile	O
it	O
into	O
an	O
assembly	O
,	O
and	O
then	O
execute	O
it	O
.	O
This	O
forum	O
post	O
on	O
MSDN	O
contains	O
an	O
answer	O
with	O
some	O
example	O
code	O
down	O
the	O
page	O
somewhat	O
:	O
create	O
a	O
anonymous	O
method	O
from	O
a	O
string	O
?	O
I	O
would	O
hardly	O
say	O
this	O
is	O
a	O
very	O
good	O
solution	O
,	O
but	O
it	O
is	O
possible	O
anyway	O
.	O
What	O
kind	O
of	O
code	O
are	O
you	O
going	O
to	O
expect	O
in	O
that	O
string	O
?	O
If	O
it	O
is	O
a	O
minor	O
subset	O
of	O
valid	O
code	O
,	O
for	O
instance	O
just	O
math	O
expressions	O
,	O
it	O
might	O
be	O
that	O
other	O
alternatives	O
exists	O
.	O
Edit	O
:	O
Well	O
,	O
that	O
teaches	O
me	O
to	O
read	O
the	O
questions	O
thoroughly	O
first	O
.	O
Yes	O
,	O
reflection	O
would	O
be	O
able	O
to	O
give	O
you	O
some	O
help	O
here	O
.	O
If	O
you	O
split	O
the	O
string	O
by	O
the	O
;	O
first	O
,	O
to	O
get	O
individual	O
properties	O
,	O
you	O
can	O
use	O
the	O
following	O
code	O
to	O
get	O
a	O
PropertyInfo	O
object	O
for	O
a	O
particular	O
property	O
for	O
a	O
class	O
,	O
and	O
then	O
use	O
that	O
object	O
to	O
manipulate	O
a	O
particular	O
object	O
.	O
String	B-API
propName	I-API
=	I-API
``	I-API
Text	O
''	O
;	O
PropertyInfo	O
pi	O
=	O
someObject.GetType	O
(	O
)	O
.GetProperty	B-API
(	I-API
propName	I-API
)	I-API
;	O
pi.SetValue	O
(	O
someObject	O
,	O
``	O
New	O
Value	O
''	O
,	O
new	O
Object	O
[	O
0	O
]	O
)	O
;	O
Link	O
:	O
PropertyInfo.SetValue	O
Method	O
All	O
of	O
that	O
would	O
definitely	O
work	O
.	O
Personally	O
,	O
for	O
that	O
particular	O
problem	O
,	O
I	O
would	O
probably	O
take	O
a	O
little	O
different	O
approach	O
.	O
Maybe	O
something	O
like	O
this	O
:	O
class	B-API
MyClass	B-API
{	B-API
public	B-API
Point	B-API
point1	B-API
,	I-API
point2	B-API
,	I-API
point3	B-API
;	I-API
private	B-API
Point	B-API
[	I-API
]	I-API
points	B-API
;	I-API
public	B-API
{	B-API
//	B-API
...	I-API
this.points	B-API
=	B-API
new	B-API
Point	B-API
[	I-API
]	I-API
{	B-API
point1	I-API
,	I-API
point2	B-API
,	I-API
point3	B-API
}	I-API
;	I-API
}	B-API
public	B-API
void	B-API
{	B-API
Point	B-API
target	B-API
=	B-API
this.points	B-API
[	I-API
i+1	I-API
]	I-API
;	I-API
//	B-API
do	B-API
stuff	B-API
to	B-API
target	B-API
MyClass	B-API
(	I-API
)	I-API
(	O
int	O
i	O
)	O
When	O
using	O
patterns	O
like	O
this	O
,	O
you	O
have	O
to	O
be	O
careful	O
that	O
your	O
data	O
is	O
stored	O
by	O
reference	O
and	O
not	O
by	O
value	O
.	O
In	O
other	O
words	O
,	O
do	O
n't	O
do	O
this	O
with	O
primitives	O
.	O
You	O
have	O
to	O
use	O
their	O
big	O
bloated	O
class	O
counterparts	O
.	O
I	O
realized	O
that	O
's	O
not	O
exactly	O
the	O
question	O
,	O
but	O
the	O
question	O
has	O
been	O
pretty	O
well	O
answered	O
and	O
I	O
thought	O
maybe	O
an	O
alternative	O
approach	O
might	O
help	O
.	O
J	O
#	O
is	O
no	O
longer	O
included	O
in	O
VS2008	O
.	O
Unless	O
you	O
already	O
have	O
J	O
#	O
code	O
,	O
you	O
should	O
probably	O
stay	O
away	O
.	O
From	O
j	O
#	O
product	O
page	O
:	O
Since	O
customers	O
have	O
told	O
us	O
that	O
the	O
existing	O
J	O
#	O
feature	O
set	O
largely	O
meets	O
their	O
needs	O
and	O
usage	O
of	O
J	O
#	O
is	O
declining	O
,	O
Microsoft	O
is	O
retiring	O
the	O
Visual	O
J	O
#	O
product	O
and	O
Java	O
Language	O
Conversion	O
Assistant	O
tool	O
to	O
better	O
allocate	O
resources	O
for	O
other	O
customer	O
requirements	O
.	O
The	O
J	O
#	O
language	O
and	O
JLCA	O
tool	O
will	O
not	O
be	O
available	O
in	O
future	O
versions	O
of	O
Visual	O
Studio	O
.	O
To	O
preserve	O
existing	O
customer	O
investments	O
in	O
J	O
#	O
,	O
Microsoft	O
will	O
continue	O
to	O
support	O
the	O
J	O
#	O
and	O
JLCA	O
technology	O
that	O
shipped	O
with	O
Visual	O
Studio	O
2005	O
through	O
to	O
2015	O
as	O
per	O
our	O
product	O
life-cycle	O
strategy	O
.	O
For	O
more	O
information	O
,	O
see	O
Expanded	O
Microsoft	O
Support	O
Lifecycle	O
Policy	O
for	O
Business	O
Development	O
Products	O
.	O
The	O
whole	O
purpose	O
of	O
J	O
#	O
is	O
to	O
ease	O
the	O
transition	O
of	O
Java	O
developers	O
to	O
the	O
.NET	O
environment	O
which	O
did	O
n't	O
work	O
so	O
well	O
(	O
I	O
guessing	O
here	O
)	O
so	O
Microsoft	O
dropped	O
J	O
#	O
from	O
Visual	O
Studio	O
2008	O
.	O
For	O
your	O
question	O
,	O
``	O
Is	O
there	O
a	O
real	O
benefit	O
of	O
using	O
J	O
#	O
?	O
''	O
..	O
in	O
a	O
nutshell	O
...	O
No..	O
One	O
of	O
the	O
killers	O
I	O
've	O
found	O
with	O
J	O
#	O
in	O
the	O
past	O
is	O
that	O
there	O
is	O
no	O
built	O
in	O
support	O
for	O
referencing	O
web	O
services	O
.	O
That	O
alone	O
has	O
been	O
enough	O
to	O
deter	O
me	O
from	O
it	O
ever	O
since	O
.	O
C	O
#	O
syntax	O
is	O
so	O
close	O
to	O
Java	O
(	O
and	O
better	O
in	O
some	O
ways	O
)	O
that	O
you	O
might	O
as	O
well	O
learn	O
C	O
#	O
instead	O
of	O
J	O
#	O
.	O
And	O
since	O
C	O
#	O
is	O
more	O
widely	O
used	O
,	O
you	O
can	O
easily	O
find	O
Java	O
--	O
C	O
#	O
tutorials	O
on	O
google	O
or	O
check	O
out	O
http	O
:	O
//www.asp.net/learn	O
and	O
watch	O
some	O
videos	O
.	O
No	O
,	O
there	O
are	O
many	O
applications	O
built	O
with	O
VS2005	O
that	O
have	O
to	O
support	O
Windows	O
XP	O
,	O
2000	O
,	O
NT	O
,	O
the	O
whole	O
stack	O
.	O
The	O
issue	O
is	O
that	O
(	O
by	O
default	O
)	O
VS2005	O
wants	O
to	O
use	O
libraries/exports	O
not	O
present	O
on	O
NT	O
.	O
See	O
this	O
thread	O
for	O
some	O
background	O
.	O
Then	O
start	O
limiting	O
your	O
dependencies	O
via	O
preprocessor	O
macros	O
,	O
and	O
avoiding	O
APIs	O
which	O
are	O
n't	O
supported	O
on	O
NT	O
.	O
I	O
would	O
suggest	O
storing	O
the	O
stylesheet	O
selection	O
in	O
the	O
session	O
so	O
you	O
do	O
n't	O
have	O
to	O
rely	O
on	O
the	O
querystring	O
key	O
being	O
present	O
all	O
the	O
time	O
.	O
You	O
can	O
check	O
the	O
session	O
in	O
Page_Load	O
and	O
add	O
the	O
appropriate	O
stylesheet	O
reference	O
.	O
It	O
sounds	O
like	O
this	O
is	O
a	O
temporary/development	O
situation	O
,	O
so	O
go	O
with	O
whatever	O
is	O
easy	O
and	O
works	O
.	O
if	O
)	O
(	O
!	O
String.IsNullOrEmpty	B-API
(	O
Request.QueryString	B-API
[	O
``	O
css	O
''	O
]	O
)	O
Session.Add	B-API
(	I-API
``	I-API
CSS	I-API
''	I-API
,	I-API
Request.QueryString	B-API
[	O
``	O
css	O
''	O
]	O
)	O
In	O
Asp.net	O
3.5	O
,	O
you	O
should	O
be	O
able	O
to	O
set	O
up	O
the	O
Link	O
tag	O
in	O
the	O
header	O
as	O
a	O
server	O
tag	O
.	O
Then	O
in	O
the	O
codebehind	O
you	O
can	O
set	O
the	O
href	O
property	O
for	O
the	O
link	O
element	O
,	O
based	O
on	O
a	O
cookie	O
value	O
,	O
querystring	O
,	O
date	O
,	O
etc	O
.	O
In	O
your	O
aspx	O
file	O
:	O
head	O
link	O
id=	O
''	O
linkStyles	O
''	O
rel=	O
''	O
stylesheet	O
''	O
type=	O
''	O
text/css	O
''	O
runat=	O
''	O
server	O
''	O
/	O
/head	O
And	O
in	O
the	O
Code	O
behind	O
:	O
protected	O
void	O
Page_Load	O
(	O
object	O
sender	O
,	O
EventArgs	O
e	O
)	O
{	O
string	O
stylesheetAddress	O
=	O
//	O
logic	O
to	O
determine	O
stylesheet	O
linkStyles.Href	B-API
=	O
stylesheetAddress	O
;	O
}	O
You	O
should	O
look	O
into	O
ASP.NET	O
themes	O
,	O
that	O
's	O
exactly	O
what	O
they	O
're	O
used	O
for	O
.	O
They	O
also	O
allow	O
you	O
to	O
skin	O
controls	O
,	O
which	O
means	O
give	O
them	O
a	O
set	O
of	O
default	O
attributes	O
.	O
I	O
would	O
do	O
the	O
following	O
:	O
www.website.com/	O
?	O
stylesheet=new.css	O
Then	O
in	O
your	O
ASP.NET	O
code	O
:	O
if	O
(	O
Request.Querystring	B-API
[	O
``	O
stylesheet	O
''	O
]	O
!	O
=	O
null	O
)	O
{	O
Response.Cookies	B-API
[	I-API
``	I-API
stylesheet	I-API
''	I-API
]	I-API
.Value	O
=	O
Request.QueryString	B-API
[	I-API
``	I-API
stylesheet	I-API
''	I-API
]	I-API
;	O
(	O
Current	O
Page	O
)	O
Then	O
where	O
you	O
define	O
your	O
stylesheets	O
:	O
if	O
(	O
Request.Cookies	B-API
[	I-API
``	I-API
stylesheet	I-API
''	I-API
]	I-API
!	O
=	O
null	O
)	O
{	O
//	O
New	O
Stylesheet	O
}	O
else	O
{	O
//	O
Assuming	O
module	O
with	O
method	O
:	O
import	O
foo	B-API
methodToCall	I-API
=	I-API
(	I-API
foo	I-API
,	I-API
'bar	I-API
'	I-API
)	I-API
result	O
=	O
methodToCall	O
(	O
)	O
As	O
far	O
as	O
that	O
goes	O
,	O
lines	O
2	O
and	O
3	O
can	O
be	O
compressed	O
to	O
:	O
result	O
=	O
getattr	B-API
(	I-API
foo	I-API
,	I-API
'bar	I-API
'	I-API
)	I-API
(	O
)	O
if	O
that	O
makes	O
more	O
sense	O
for	O
your	O
use	O
case	O
.	O
You	O
can	O
use	O
getattr	O
in	O
this	O
fashion	O
on	O
class	O
instance	O
bound	O
methods	O
,	O
module-level	O
methods	O
,	O
class	O
methods	O
...	O
the	O
list	O
goes	O
on	O
.	O
Patrick	O
's	O
solution	O
is	O
probably	O
the	O
cleanest	O
.	O
If	O
you	O
need	O
to	O
dynamically	O
pick	O
up	O
the	O
module	O
as	O
well	O
,	O
you	O
can	O
import	O
it	O
like	O
:	O
m	O
=	O
__import__	O
(	O
'foo	O
'	O
)	O
func	O
=	O
getattr	O
(	O
m	O
,	O
'bar	O
'	O
)	O
func	O
(	O
)	O
Check	O
out	O
FileHelpers	O
Open	O
Source	O
Library	O
.	O
A	O
good	O
simple	O
way	O
to	O
do	O
it	O
is	O
to	O
open	O
the	O
file	O
,	O
and	O
read	O
each	O
line	O
into	O
an	O
array	O
,	O
linked	O
list	O
,	O
data-structure-of-your-choice	O
.	O
Be	O
careful	O
about	O
handling	O
the	O
first	O
line	O
though	O
.	O
This	O
may	O
be	O
over	O
your	O
head	O
,	O
but	O
there	O
seems	O
to	O
be	O
a	O
direct	O
way	O
to	O
access	O
them	O
as	O
well	O
using	O
a	O
connection	O
string	O
.	O
Why	O
not	O
try	O
using	O
Python	O
instead	O
of	O
C	O
#	O
or	O
VB	O
?	O
It	O
has	O
a	O
nice	O
CSV	O
module	O
to	O
import	O
that	O
does	O
all	O
the	O
heavy	O
lifting	O
for	O
you	O
.	O
If	O
you	O
can	O
guarantee	O
that	O
there	O
are	O
no	O
commas	O
in	O
the	O
data	O
,	O
then	O
the	O
simplest	O
way	O
would	O
probably	O
be	O
to	O
use	O
String.split	B-API
.	O
For	O
example	O
:	O
String	B-API
[	I-API
]	I-API
values	I-API
=	I-API
;	I-API
myObject.StringField	I-API
=	I-API
values	I-API
[	I-API
0	I-API
]	I-API
;	O
myObject.IntField	B-API
=	O
myString.Split	B-API
(	O
'	O
,	O
'	O
)	O
Int32.Parse	B-API
(	I-API
values	I-API
[	I-API
1	I-API
]	I-API
)	I-API
There	O
may	O
be	O
libraries	O
you	O
could	O
use	O
to	O
help	O
,	O
but	O
that	O
's	O
probably	O
as	O
simple	O
as	O
you	O
can	O
get	O
.	O
Just	O
make	O
sure	O
you	O
ca	O
n't	O
have	O
commas	O
in	O
the	O
data	O
,	O
otherwise	O
you	O
will	O
need	O
to	O
parse	O
it	O
better	O
.	O
There	O
are	O
two	O
articles	O
on	O
CodeProject	O
that	O
provide	O
code	O
for	O
a	O
solution	O
,	O
one	O
that	O
uses	O
StreamReader	B-API
and	O
one	O
that	O
imports	O
CSV	O
data	O
using	O
the	O
Microsoft	O
Text	O
Driver	O
.	O
I	O
was	O
bored	O
so	O
i	O
modified	O
some	O
stuff	O
i	O
wrote	O
.	O
It	O
try	O
's	O
to	O
encapsulate	O
the	O
parsing	O
in	O
an	O
OO	O
manner	O
whle	O
cutting	O
down	O
on	O
the	O
amount	O
of	O
iterations	O
through	O
the	O
file	O
,	O
it	O
only	O
iterates	O
once	O
at	O
the	O
top	O
foreach	O
.	O
using	O
System	B-API
;	O
using	O
System.Collections.Generic	B-API
;	O
using	O
System.Linq	B-API
;	O
using	O
System.Text	B-API
;	O
using	O
System.IO	B-API
;	O
namespace	O
ConsoleApplication1	O
{	O
class	O
Program	O
{	O
static	O
void	O
Main	O
(	O
string	B-API
[	I-API
]	I-API
args	O
)	O
{	O
//	O
usage	O
:	O
//	O
note	O
this	O
wont	O
run	O
as	O
getting	O
streams	O
is	O
not	O
Implemented	O
//	O
but	O
will	O
get	O
you	O
started	O
CSVFileParser	B-API
fileParser	I-API
=	I-API
new	I-API
CSVFileParser	I-API
(	I-API
)	I-API
;	O
//	O
TO	O
Do	O
:	O
configure	O
fileparser	O
PersonParser	B-API
personParser	I-API
=	I-API
new	I-API
PersonParser	I-API
(	I-API
fileParser	I-API
)	I-API
;	O
ListPerson	O
persons	O
=	O
new	O
ListPerson	O
(	O
)	O
;	O
//	O
if	O
the	O
file	O
is	O
large	O
and	O
there	O
is	O
a	O
good	O
way	O
to	O
limit	O
//	O
without	O
having	O
to	O
reparse	O
the	O
whole	O
file	O
you	O
can	O
use	O
a	O
//	O
linq	O
query	O
if	O
you	O
desire	O
foreach	O
(	O
Person	O
person	O
in	O
personParser.GetPersons	O
(	O
)	O
)	O
{	O
persons.Add	O
(	O
person	O
)	O
;	O
}	O
//	O
now	O
we	O
have	O
a	O
list	O
of	O
Person	O
objects	O
}	O
}	O
public	O
abstract	O
class	O
CSVParser	O
{	O
protected	O
String	O
[	O
]	O
deliniators	O
=	O
{	O
``	O
,	O
''	O
}	O
;	O
protected	O
internal	O
IEnumerableString	B-API
[	I-API
]	I-API
GetRecords	I-API
(	I-API
)	I-API
{	O
Stream	B-API
stream	I-API
=	I-API
GetStream	I-API
(	I-API
)	I-API
;	O
StreamReader	B-API
reader	I-API
=	I-API
new	I-API
StreamReader	I-API
(	I-API
stream	I-API
)	I-API
;	O
String	B-API
[	I-API
]	I-API
aRecord	I-API
;	O
while	O
(	O
!	O
reader.EndOfStream	B-API
)	O
{	O
aRecord	O
=	O
reader.ReadLine	B-API
(	I-API
)	I-API
.Split	O
(	O
deliniators	O
,	O
StringSplitOptions.None	B-API
)	O
;	O
yield	O
return	O
aRecord	O
;	O
}	O
}	O
protected	O
abstract	O
Stream	B-API
GetStream	I-API
(	I-API
)	I-API
;	O
}	O
public	O
class	O
CSVFileParser	O
:	O
CSVParser	O
{	O
//	O
to	O
do	O
:	O
add	O
logic	O
to	O
get	O
a	O
stream	O
from	O
a	O
file	O
protected	O
override	O
Stream	B-API
GetStream	I-API
(	I-API
)	I-API
{	O
throw	O
new	O
NotImplementedException	B-API
(	I-API
)	I-API
;	O
}	O
}	O
public	O
class	O
CSVWebParser	O
:	O
CSVParser	O
{	O
//	O
to	O
do	O
:	O
add	O
logic	O
to	O
get	O
a	O
stream	O
from	O
a	O
web	O
request	O
protected	O
override	O
Stream	B-API
GetStream	I-API
(	I-API
)	I-API
{	O
throw	O
new	O
NotImplementedException	B-API
(	I-API
)	I-API
;	O
}	O
}	O
public	O
class	O
Person	O
{	O
public	O
String	B-API
Name	I-API
{	I-API
get	I-API
;	I-API
set	I-API
;	I-API
}	I-API
public	O
String	B-API
Address	I-API
{	I-API
get	I-API
;	I-API
set	I-API
;	I-API
}	I-API
public	O
DateTime	B-API
DOB	O
{	O
get	O
;	O
set	O
;	O
}	O
}	O
public	O
class	O
PersonParser	O
{	O
public	O
PersonParser	O
(	O
CSVParser	O
parser	O
)	O
{	O
this.Parser	O
=	O
parser	O
;	O
}	O
public	O
CSVParser	O
Parser	O
{	O
get	O
;	O
set	O
;	O
}	O
public	O
IEnumerablePerson	O
GetPersons	O
(	O
)	O
{	O
foreach	O
(	O
String	B-API
[	I-API
]	I-API
record	I-API
in	I-API
this.Parser.GetRecords	I-API
(	I-API
)	I-API
)	O
{	O
yield	O
return	O
new	O
Person	O
(	O
)	O
{	O
Name	O
=	O
record	O
[	O
0	O
]	O
,	O
Address	O
=	O
record	O
[	O
1	O
]	O
,	O
DOB	O
=	O
DateTime.Parse	B-API
(	I-API
record	I-API
[	I-API
2	I-API
]	I-API
)	I-API
,	O
}	O
;	O
}	O
}	O
}	O
}	O
Brian	O
gives	O
a	O
nice	O
solution	O
for	O
converting	O
it	O
to	O
a	O
strongly	O
typed	O
collection	O
.	O
Most	O
of	O
the	O
CSV	O
parsing	O
methods	O
given	O
do	O
n't	O
take	O
into	O
account	O
escaping	O
fields	O
or	O
some	O
of	O
the	O
other	O
subtleties	O
of	O
CSV	O
files	O
(	O
like	O
trimming	O
fields	O
)	O
.	O
Here	O
is	O
the	O
code	O
I	O
personally	O
use	O
.	O
It	O
's	O
a	O
bit	O
rough	O
around	O
the	O
edges	O
and	O
has	O
pretty	O
much	O
no	O
error	O
reporting	O
.	O
public	O
static	B-API
IListIListstring	O
{	O
IListIListstring	O
records	O
=	O
new	O
;	O
StringReader	B-API
stringReader	I-API
=	I-API
new	I-API
;	O
bool	B-API
inQoutedString	I-API
=	I-API
false	I-API
;	I-API
IListstring	B-API
record	B-API
=	B-API
new	I-API
;	O
StringBuilder	B-API
fieldBuilder	I-API
=	I-API
new	I-API
;	O
while	O
!	O
=	O
-1	O
)	O
{	O
char	O
readChar	O
=	O
;	O
if	O
(	O
readChar	O
==	O
'\n	O
'	O
||	O
(	O
readChar	O
==	O
'\r	O
'	O
==	O
'\n	O
'	O
)	O
)	O
{	O
//	O
If	O
it	O
's	O
a	O
\r\n	O
combo	O
consume	O
the	O
\n	O
part	O
and	O
throw	O
it	O
away	O
.	O
if	O
(	O
readChar	O
==	O
'\r	O
'	O
)	O
{	O
;	O
}	O
if	O
(	O
inQoutedString	O
)	O
{	O
if	O
(	O
readChar	O
==	O
'\r	O
'	O
)	O
{	O
;	O
}	O
;	O
}	O
else	O
{	O
)	O
;	O
fieldBuilder	B-API
=	I-API
new	I-API
;	O
;	O
record	O
=	O
new	O
;	O
inQoutedString	O
=	O
false	O
;	O
}	O
}	O
else	O
if	O
(	O
fieldBuilder.Length	O
==	O
0	O
!	O
inQoutedString	O
)	O
{	O
if	O
)	O
{	O
//	O
Ignore	O
leading	O
whitespaCe	O
}	O
else	O
if	O
(	O
readChar	O
==	O
'	O
''	O
'	O
)	O
{	O
inQoutedString	O
=	O
true	O
;	O
}	O
else	O
if	O
(	O
readChar	O
==	O
'	O
,	O
'	O
)	O
{	O
)	O
;	O
fieldBuilder	O
=	O
new	O
;	O
}	O
else	O
{	O
;	O
}	O
}	O
else	O
if	O
(	O
readChaO	O
==	O
'	O
,	O
'	O
)	O
{	O
if	O
(	O
inQoutedString	O
)	O
{	O
;	O
}	O
else	O
{	O
)	O
;	O
fieldBuilder	O
=	O
new	O
;	O
}	O
}	O
else	O
if	O
(	O
readChar	O
==	O
'	O
''	O
'	O
)	O
{	O
if	O
(	O
inQoutedString	O
)	O
{	O
if	O
==	O
'	O
''	O
'	O
)	O
{	O
;	O
;	O
}	O
else	O
{	O
inQoutedString	O
=	O
false	O
;	O
}	O
}	O
else	O
{	O
;	O
}	O
}	O
else	O
{	O
;	O
}	O
}	O
)	O
;	O
;	O
return	O
(	O
string	B-API
content	I-API
)	O
ListIListstring	B-API
(	I-API
)	I-API
StringReader	B-API
(	I-API
content	I-API
)	I-API
Liststring	B-API
(	I-API
)	I-API
StringBuilder	B-API
(	I-API
)	I-API
(	O
stringReader.Peek	B-API
(	I-API
)	I-API
(	O
char	O
)	O
stringReader.Read	B-API
(	I-API
)	I-API
stringReader.Peek	B-API
(	I-API
)	I-API
stringReader.Read	B-API
(	I-API
)	I-API
fieldBuilder.Append	B-API
(	I-API
'\r	I-API
'	I-API
)	I-API
fieldBuilder.Append	B-API
(	I-API
'\n	I-API
'	I-API
)	I-API
record.Add	B-API
(	I-API
fieldBuilder.ToString	B-API
(	I-API
)	I-API
.TrimEnd	I-API
(	I-API
)	I-API
StringBuilder	B-API
(	I-API
)	I-API
records.Add	O
(	O
record	O
)	O
Liststring	O
(	O
)	O
(	O
char.IsWhiteSpace	B-API
(	I-API
readChar	I-API
)	I-API
record.Add	O
(	O
fieldBuilder.ToString	B-API
(	I-API
)	I-API
.TrimEnd	I-API
(	I-API
)	I-API
StringBuilder	B-API
(	I-API
)	I-API
fieldBuilder.Append	B-API
(	I-API
readChar	I-API
)	I-API
fieldBuilder.Append	B-API
(	I-API
'	I-API
,	I-API
'	I-API
)	I-API
record.Add	B-API
(	I-API
fieldBuilder.ToString	I-API
(	I-API
)	I-API
.TrimEnd	I-API
(	I-API
)	I-API
StringBuilder	B-API
(	I-API
)	I-API
(	O
stringReader.Peek	B-API
(	I-API
)	I-API
stringReader.Read	B-API
(	I-API
)	I-API
fieldBuilder.Append	B-API
(	I-API
'	I-API
''	I-API
'	I-API
)	I-API
fieldBuilder.Append	B-API
(	I-API
readChar	I-API
)	I-API
fieldBuilder.Append	B-API
(	I-API
readChar	I-API
)	I-API
record.Add	B-API
(	I-API
fieldBuilder.ToString	B-API
(	I-API
)	I-API
.TrimEnd	I-API
(	I-API
)	I-API
records.Add	B-API
(	I-API
record	I-API
)	I-API
Note	O
that	O
this	O
does	O
n't	O
handle	O
the	O
edge	O
case	O
of	O
fields	O
not	O
being	O
deliminated	O
by	O
double	O
quotes	O
,	O
but	O
meerley	O
having	O
a	O
quoted	O
string	O
inside	O
of	O
it	O
.	O
See	O
this	O
post	O
for	O
a	O
bit	O
of	O
a	O
better	O
expanation	O
as	O
well	O
as	O
some	O
links	O
to	O
some	O
proper	O
libraries	O
.	O
You	O
need	O
to	O
create	O
an	O
extension	O
method	O
,	O
which	O
requires	O
.NET	O
3.5	O
.	O
The	O
method	O
needs	O
to	O
be	O
static	O
,	O
in	O
a	O
static	O
class	O
.	O
The	O
first	O
parameter	O
of	O
the	O
method	O
needs	O
to	O
be	O
prefixed	O
with	O
``	O
this	O
''	O
in	O
the	O
signature	O
.	O
public	B-API
static	B-API
string	B-API
{	B-API
//	B-API
do	B-API
(	O
this	O
string	O
input	O
)	O
You	O
can	O
then	O
call	O
it	O
like	O
``	B-API
asdfas	I-API
''	I-API
.MyMethod	I-API
(	I-API
)	I-API
You	O
ca	O
n't	O
dynamically	O
add	O
methods	O
to	O
existing	O
objects	O
or	O
classes	O
in	O
.NET	O
,	O
except	O
by	O
changing	O
the	O
source	O
for	O
that	O
class	O
.	O
You	O
can	O
,	O
however	O
,	O
in	O
C	O
#	O
3.0	O
,	O
use	O
extension	O
methods	O
,	O
which	O
look	O
like	O
new	O
methods	O
,	O
but	O
are	O
compile-time	O
magic	O
.	O
To	O
do	O
this	O
for	O
your	O
code	O
:	O
public	B-API
static	B-API
class	B-API
StringExtensions	B-API
{	I-API
public	B-API
static	B-API
String	B-API
{	B-API
return	B-API
;	B-API
(	O
this	O
String	B-API
s	I-API
)	I-API
s.Trim	B-API
(	I-API
)	I-API
To	O
use	O
it	O
:	O
String	B-API
s	I-API
=	I-API
``	I-API
Test	I-API
``	I-API
;	O
s	O
=	O
s.trim	B-API
(	I-API
)	I-API
This	O
looks	O
like	O
a	O
new	O
method	O
,	O
but	O
will	O
compile	O
the	O
exact	O
same	O
way	O
as	O
this	O
code	O
:	O
String	B-API
s	I-API
=	I-API
``	I-API
Test	I-API
``	I-API
;	I-API
s	I-API
=	O
StringExtensions.trim	B-API
(	I-API
s	I-API
)	I-API
What	O
exactly	O
are	O
you	O
trying	O
to	O
accomplish	O
?	O
Perhaps	O
there	O
are	O
better	O
ways	O
of	O
doing	O
what	O
you	O
want	O
?	O
Using	O
the	O
3.5	O
compiler	O
you	O
can	O
use	O
an	O
Extension	O
Method	O
:	O
public	B-API
static	B-API
void	B-API
{	B-API
//	B-API
(	O
this	O
string	B-API
s	I-API
)	O
You	O
can	O
use	O
this	O
on	O
a	O
CLR	O
2.0	O
targeted	O
project	O
(	O
3.5	O
compiler	O
)	O
by	O
including	O
this	O
hack	O
:	O
namespace	O
System.Runtime.CompilerServices	B-API
{	O
]	O
public	O
sealed	O
class	O
ExtensionAttribute	O
:	O
Attribute	B-API
{	I-API
AttributeUsage	I-API
(	B-API
AttributeTargets.Method	B-API
|	O
AttributeTargets.Class	B-API
|	O
AttributeTargets.Assembly	B-API
)	O
It	O
sounds	O
like	O
you	O
're	O
talking	O
about	O
C	O
#	O
's	O
Extension	O
Methods	O
.	O
You	O
add	O
functionality	O
to	O
existing	O
classes	O
by	O
inserting	O
the	O
``	O
this	O
''	O
keyword	O
before	O
the	O
first	O
parameter	O
.	O
The	O
method	O
has	O
to	O
be	O
a	O
static	O
method	O
in	O
a	O
static	O
class	O
.	O
Strings	O
in	O
.NET	O
already	O
have	O
a	O
``	O
Trim	O
''	O
method	O
,	O
so	O
I	O
'll	O
use	O
another	O
example.public	O
static	O
class	O
MyStringEtensions	O
{	O
public	O
static	O
bool	O
ContainsMabster	O
(	O
this	O
string	O
s	O
)	O
{	O
return	O
s.Contains	B-API
(	I-API
``	I-API
Mabster	I-API
''	I-API
)	I-API
;	O
}	O
}	O
So	O
now	O
every	O
string	O
has	O
a	O
tremendously	O
useful	O
ContainsMabster	O
method	O
,	O
which	O
I	O
can	O
use	O
like	O
this	O
:	O
if	O
(	O
``	O
Why	O
hello	O
there	O
,	O
Mabster	O
!	O
``	O
.ContainsMabster	B-API
(	I-API
)	I-API
)	O
{	O
/*	O
...	O
*/	O
}	O
Note	O
that	O
you	O
can	O
also	O
add	O
extension	O
methods	O
to	O
interfaces	O
(	O
eg	O
IList	O
)	O
,	O
which	O
means	O
that	O
any	O
class	O
implementing	O
that	O
interface	O
will	O
also	O
pick	O
up	O
that	O
new	O
method	O
.	O
Any	O
extra	O
parameters	O
you	O
declare	O
in	O
the	O
extension	O
method	O
(	O
after	O
the	O
first	O
``	O
this	O
''	O
parameter	O
)	O
are	O
treated	O
as	O
normal	O
parameters	O
.	O
I	O
'm	O
not	O
a	O
Java	O
developer	O
,	O
but	O
just	O
from	O
the	O
sound	O
of	O
it	O
,	O
it	O
seems	O
like	O
an	O
is	O
called	O
for	O
if	O
you	O
do	O
n't	O
want	O
null	O
to	O
be	O
an	O
allowed	O
value	O
,	O
and	O
the	O
would	O
be	O
thrown	O
if	O
you	O
were	O
trying	O
to	O
use	O
a	O
variable	O
that	O
turns	O
out	O
to	O
be	O
null	O
.	O
If	O
it	O
's	O
a	O
setter	O
method	O
and	O
null	O
is	O
being	O
passed	O
to	O
it	O
,	O
I	O
think	O
it	O
would	O
make	O
more	O
sense	O
to	O
throw	O
an	O
IllegalArgumentException	B-API
.	O
A	O
NullPointerException	B-API
seems	O
to	O
make	O
more	O
sense	O
in	O
the	O
case	O
where	O
you	O
're	O
attempting	O
to	O
actually	O
use	O
the	O
null	O
.	O
So	O
,	O
if	O
you	O
're	O
using	O
it	O
and	O
it	O
's	O
null	O
,	O
NullPointer	O
.	O
If	O
it	O
's	O
being	O
passed	O
in	O
and	O
it	O
's	O
null	O
,	O
IllegalArgument	B-API
.	O
I	O
think	O
you	O
should	O
definitely	O
throw	O
a	O
IllegalArgumentException	B-API
and	O
thus	O
fail-fast	O
.	O
Let	O
other	O
developers	O
know	O
by	O
marking	O
it	O
in	O
the	O
JavaDocs	O
and	O
also	O
define	O
constraints	O
on	O
your	O
methods	O
,	O
so	O
that	O
they	O
see	O
what	O
happens	O
when	O
they	O
pass	O
an	O
invalid	O
objects	O
.	O
I	O
wrote	O
about	O
this	O
a	O
couple	O
of	O
weeks	O
ago	O
,	O
if	O
you	O
want	O
to	O
follow	O
up	O
.	O
I	O
tend	O
to	O
follow	O
the	O
design	O
of	O
JDK	O
libraries	O
,	O
especially	O
Collections	O
and	O
Concurrency	O
(	O
Joshua	O
Bloch	O
,	O
Doug	O
Lea	O
,	O
those	O
guys	O
know	O
how	O
to	O
design	O
solid	O
APIs	O
)	O
.	O
Anyway	O
,	O
many	O
APIs	O
in	O
the	O
JDK	O
pro-actively	O
throws	O
.	O
For	O
example	O
,	O
the	O
Javadoc	O
for	O
states	O
:	O
@	O
throws	O
NullPointerException	B-API
if	O
the	O
key	O
is	O
null	O
and	O
this	O
map	O
does	O
not	O
permit	O
null	O
keys	O
(	O
optional	O
)	O
.	O
It	O
's	O
perfectly	O
valid	O
to	O
throw	O
your	O
own	O
NPE	O
.	O
The	O
convention	O
is	O
to	O
include	O
the	O
parameter	O
name	O
which	O
was	O
null	O
in	O
the	O
message	O
of	O
the	O
exception	O
.	O
The	O
pattern	O
goes	O
:	O
public	O
void	O
someMethod	O
(	O
Object	O
mustNotBeNull	O
)	O
{	O
if	O
(	O
mustNotBeNull	O
==	O
null	O
)	O
{	O
throw	O
new	O
NullPointerException	B-API
(	O
``	O
mustNotBeNull	O
must	O
not	O
be	O
null	O
''	O
)	O
;	O
}	O
}	O
Whatever	O
you	O
do	O
,	O
do	O
n't	O
allow	O
a	O
bad	O
value	O
to	O
get	O
set	O
and	O
throw	O
an	O
exception	O
later	O
when	O
other	O
code	O
attempts	O
to	O
use	O
it	O
.	O
That	O
makes	O
debugging	O
a	O
nightmare	O
.	O
You	O
should	O
always	O
the	O
follow	O
the	O
``	O
fail-fast	O
''	O
principle	O
.	O
I	O
've	O
tried	O
finding	O
the	O
ultimate	O
compiler	O
call	O
earlier	O
and	O
I	O
gave	O
up	O
.	O
There	O
's	O
quite	O
a	O
number	O
of	O
layers	O
of	O
interfaces	O
and	O
virtual	O
classes	O
for	O
my	O
patience	O
.	O
I	O
do	O
n't	O
think	O
the	O
source	O
reader	O
part	O
of	O
the	O
compiler	O
ends	O
up	O
with	O
a	O
DOM	O
tree	O
,	O
but	O
intuitively	O
I	O
would	O
agree	O
with	O
you	O
.	O
The	O
work	O
necessary	O
to	O
transform	O
the	O
DOM	O
to	O
IL	O
should	O
be	O
much	O
less	O
than	O
reading	O
C	O
#	O
source	O
code	O
.	O
There	O
is	O
no	O
pure	O
CSS/HTML	O
way	O
to	O
achieve	O
this	O
,	O
as	O
far	O
as	O
I	O
know	O
.	O
Your	O
best	O
bet	O
would	O
be	O
to	O
do	O
it	O
in	O
pre-processing	O
(	O
if	O
list	O
length	O
>	O
150	O
,	O
split	O
into	O
3	O
columns	O
,	O
esle	O
if	O
>	O
70	O
,	O
split	O
into	O
2	O
columns	O
,	O
else	O
1	O
)	O
.	O
The	O
other	O
option	O
,	O
using	O
JavaScript	O
(	O
I	O
'm	O
not	O
familiar	O
with	O
the	O
jQuery	O
library	O
specifically	O
)	O
would	O
be	O
to	O
iterate	O
through	O
lists	O
,	O
probably	O
based	O
on	O
them	O
being	O
a	O
certain	O
class	O
,	O
count	O
the	O
number	O
of	O
children	O
,	O
and	O
if	O
it	O
is	O
a	O
high	O
enough	O
number	O
,	O
dynamically	O
create	O
a	O
new	O
list	O
after	O
the	O
first	O
,	O
transferring	O
some	O
number	O
of	O
list	O
items	O
to	O
the	O
new	O
list	O
.	O
As	O
far	O
as	O
implementing	O
the	O
columns	O
,	O
you	O
could	O
probably	O
float	O
them	O
left	O
,	O
followed	O
by	O
an	O
element	O
that	O
had	O
the	O
style	O
or	O
.	O
CSS	O
:	O
ul.column	O
{	O
float	O
:	O
left	O
;	O
width:50	O
%	O
;	O
}	O
div.clear	B-API
{	I-API
clear	I-API
:	I-API
both	O
;	O
}	O
HTML	O
:	O
ul	O
class=	O
''	O
column	O
''	O
liItem	O
1/li	O
liItem	O
2/li	O
!	O
--	O
...	O
--	O
liItem	O
49/li	O
liItem	O
50/li	O
/ul	O
ul	O
class=	O
''	O
column	O
''	O
liItem	O
51/li	O
liItem	O
52/li	O
!	O
--	O
...	O
--	O
liItem	O
99/li	O
liItem	O
100/li	O
/ul	O
div	O
class=	O
''	O
clear	O
''	O
/	O
So	O
I	O
dug	O
up	O
this	O
article	O
from	O
A	O
List	O
Apart	O
CSS	O
Swag	O
:	O
Multi-Column	O
Lists	O
.	O
I	O
ended	O
up	O
using	O
the	O
first	O
solution	O
,	O
it	O
's	O
not	O
the	O
best	O
but	O
the	O
others	O
require	O
either	O
using	O
complex	O
HTML	O
that	O
ca	O
n't	O
be	O
generated	O
dynamically	O
,	O
or	O
creating	O
a	O
lot	O
of	O
custom	O
classes	O
,	O
which	O
could	O
be	O
done	O
but	O
would	O
require	O
loads	O
of	O
in-line	O
styling	O
and	O
possibly	O
a	O
huge	O
page	O
.	O
Other	O
solutions	O
are	O
still	O
welcome	O
though	O
.	O
If	O
Safari	O
and	O
Firefox	O
support	O
is	O
good	O
enough	O
for	O
you	O
,	O
there	O
is	O
a	O
CSS	O
solution	O
:	O
UL	B-API
{	I-API
column-count:3	I-API
;	I-API
-moz-column-count:3	I-API
;	I-API
-webkit-column-count:3	I-API
;	I-API
column-gap:2em	I-API
;	I-API
-moz-column-gap:2em	I-API
;	O
I	O
'm	O
not	O
sure	O
about	O
Opera	O
.	O
Yes	O
it	O
is	O
,	O
try	O
it	O
out	O
in	O
a	O
test	O
.	O
You	O
will	O
see	O
``	O
long	O
''	O
printed	O
.	O
It	O
is	O
widening	O
because	O
Java	O
will	O
choose	O
to	O
widen	O
the	O
int	O
into	O
a	O
long	O
before	O
it	O
chooses	O
to	O
autobox	O
it	O
to	O
an	O
Integer	O
,	O
so	O
the	O
hello	O
(	O
long	O
)	O
method	O
is	O
chosen	O
to	O
be	O
called	O
.	O
Edit	O
:	O
the	O
original	O
post	O
being	O
referenced	O
.	O
Further	O
Edit	O
:	O
The	O
reason	O
the	O
second	O
option	O
would	O
print	O
Integer	O
is	O
because	O
there	O
is	O
no	O
``	O
widening	O
''	O
into	O
a	O
larger	O
primitive	O
as	O
an	O
option	O
,	O
so	O
it	O
MUST	O
box	O
it	O
up	O
,	O
thus	O
Integer	O
is	O
the	O
only	O
option	O
.	O
Furthermore	O
,	O
java	O
will	O
only	O
autobox	O
to	O
the	O
original	O
type	O
,	O
so	O
it	O
would	O
give	O
a	O
compiler	O
error	O
if	O
you	O
leave	O
the	O
hello	O
(	O
Long	O
)	O
and	O
removed	O
hello	O
(	O
Integer	O
)	O
.	O
In	O
the	O
first	O
case	O
,	O
you	O
have	O
a	O
widening	O
conversion	O
happening	O
.	O
This	O
can	O
be	O
see	O
when	O
runinng	O
the	O
``	O
javap	O
''	O
utility	O
program	O
(	O
included	O
w/	O
the	O
JDK	O
)	O
,	O
on	O
the	O
compiled	O
class	O
:	O
public	O
static	O
void	O
;	O
Code	O
:	O
0	O
:	O
iconst_	O
5	O
1	O
:	O
istore_	O
1	O
2	O
:	O
iload_	O
1	O
3	O
:	O
i2l	O
4	O
:	O
invokestatic	O
#	O
6	O
;	O
//Method	O
V	O
7	O
:	O
main	O
(	O
java.lang.String	B-API
[	I-API
]	I-API
)	O
hello	O
:	O
(	O
J	O
)	O
Clearly	O
,	O
you	O
see	O
the	O
I2L	O
,	O
which	O
is	O
the	O
mnemonic	O
for	O
the	O
widening	O
Integer-To-Long	O
bytecode	O
instruction	O
.	O
See	O
reference	O
here	O
.	O
And	O
in	O
the	O
other	O
case	O
,	O
replacing	O
the	O
``	O
long	O
x	O
''	O
with	O
the	O
object	O
``	O
Long	O
x	O
''	O
signature	O
,	O
you	O
'll	O
have	O
this	O
code	O
in	O
the	O
main	O
method	O
:	O
public	O
static	O
void	O
;	O
Code	O
:	O
0	O
:	O
iconst_	O
5	O
1	O
:	O
istore_	O
1	O
2	O
:	O
iload_	O
1	O
3	O
:	O
invokestatic	O
#	O
6	O
;	O
//Metho	O
Ljava/lang/Integer	B-API
;	O
6	O
:	O
invokestatic	O
#	O
7	O
;	O
//Method	O
V	O
9	O
:	O
main	O
(	O
java.lang.String	B-API
[	I-API
]	I-API
)	O
java/lang/Integer.valueOf	B-API
:	I-API
(	I-API
I	I-API
)	I-API
hello	O
:	O
(	O
Ljava/lang/Integer	O
;	O
)	O
So	O
you	O
see	O
the	O
compiler	O
has	O
created	O
the	O
instruction	O
Integer.valueOf	B-API
(	I-API
int	I-API
)	I-API
,	O
to	O
box	O
the	O
primitive	O
inside	O
the	O
wrapper	O
.	O
Another	O
interesting	O
thing	O
with	O
this	O
example	O
is	O
the	O
method	O
overloading	O
.	O
The	O
combination	O
of	O
type	O
widening	O
and	O
method	O
overloading	O
only	O
working	O
because	O
the	O
compiler	O
has	O
to	O
make	O
a	O
decision	O
of	O
which	O
method	O
to	O
choose	O
.	O
Consider	O
the	O
following	O
example	O
:	O
public	O
static	O
void	O
hello	O
(	O
Collection	O
x	O
)	O
{	O
System.out.println	B-API
(	I-API
``	I-API
Collection	I-API
''	I-API
)	I-API
;	O
}	O
public	O
static	O
void	O
hello	O
(	O
List	O
x	O
)	O
{	O
System.out.println	B-API
(	I-API
``	I-API
List	I-API
''	I-API
)	I-API
;	O
}	O
public	O
static	O
void	O
main	O
(	O
String	B-API
[	I-API
]	I-API
args	I-API
)	I-API
{	O
Collection	B-API
col	I-API
=	I-API
new	I-API
ArrayList	I-API
(	I-API
)	I-API
;	O
hello	O
(	O
col	O
)	O
;	O
}	O
It	O
does	O
n't	O
use	O
the	O
run-time	O
type	O
which	O
is	O
List	O
,	O
it	O
uses	O
the	O
compile-time	O
type	O
which	O
is	O
Collection	B-API
and	O
thus	O
prints	O
``	O
Collection	B-API
''	O
.	O
I	O
encourage	O
your	O
to	O
read	O
Effective	O
Java	O
,	O
which	O
opened	O
my	O
eyes	O
to	O
some	O
corner	O
cases	O
of	O
the	O
JLS	O
.	O
ZOiqZQIbRMC	O
You	O
'd	O
be	O
looking	O
to	O
static	O
link	O
(	O
as	O
opposed	O
to	O
dynamically	O
link	O
)	O
I	O
'm	O
not	O
sure	O
how	O
many	O
of	O
the	O
MS	O
redistributables	O
statically	O
link	O
in	O
.	O
If	O
you	O
are	O
looking	O
to	O
find	O
out	O
which	O
dll	O
's	O
your	O
target	O
machine	O
is	O
missing	O
then	O
use	O
depends.exe	O
which	O
used	O
to	O
come	O
with	O
MSDev	O
,	O
but	O
can	O
also	O
be	O
found	O
here	O
.	O
Testing	O
this	O
on	O
a	O
few	O
target	O
machines	O
should	O
tell	O
you	O
which	O
dll	O
's	O
you	O
need	O
to	O
package	O
with	O
your	O
application	O
.	O
You	O
need	O
to	O
set	O
the	O
run-time	O
library	O
(	O
Under	O
C/C++	O
-	O
Code	O
Generation	O
)	O
for	O
ALL	O
projects	O
to	O
static	O
linkage	O
,	O
which	O
correlates	O
to	O
the	O
following	O
default	O
building	O
configurations	O
:	O
Multithreaded	O
Debug/Release	O
Singlethreaded	O
Debug/Release	O
As	O
opposed	O
to	O
the	O
``	O
DLL	O
''	O
versions	O
of	O
those	O
libraries	O
.	O
Even	O
if	O
you	O
do	O
that	O
,	O
depending	O
on	O
the	O
libraries	O
you	O
're	O
using	O
,	O
you	O
might	O
have	O
to	O
install	O
a	O
Merge	O
Module/framework/etc	O
.	O
It	O
depends	O
on	O
whether	O
static	O
LIB	O
versions	O
of	O
your	O
dependencies	O
are	O
available	O
.	O
Check	O
out	O
the	O
open	O
source	O
project	O
LMMS	O
.	O
It	O
's	O
a	O
music	O
studio	O
for	O
Linux	O
that	O
includes	O
the	O
ability	O
to	O
use	O
MIDI	O
keyboards	O
with	O
software	O
instruments	O
.	O
If	O
you	O
dig	O
around	O
in	O
source	O
files	O
with	O
'midi	O
'	O
in	O
the	O
name	O
,	O
you	O
'll	O
probably	O
find	O
what	O
you	O
're	O
looking	O
for	O
.	O
This	O
is	O
part	O
of	O
a	O
solution	O
I	O
use	O
on	O
a	O
local	O
intranet	O
.	O
Some	O
of	O
the	O
variables	O
you	O
will	O
have	O
to	O
collect	O
yourself	O
as	O
I	O
pull	O
them	O
from	O
a	O
database	O
but	O
you	O
may	O
pull	O
them	O
from	O
somewhere	O
else	O
.	O
The	O
only	O
extra	O
but	O
I	O
've	O
got	O
in	O
there	O
is	O
a	O
function	O
called	O
getMimeType	B-API
which	O
connects	O
to	O
the	O
database	O
and	O
pulls	O
back	O
the	O
correct	O
mine	O
type	O
based	O
on	O
file	O
extension	O
.	O
This	O
defaults	O
to	O
application/octet-stream	O
if	O
none	O
is	O
found	O
.	O
//	O
Clear	O
the	O
response	O
buffer	O
incase	O
there	O
is	O
anything	O
already	O
in	O
;	O
Response.Buffer	B-API
=	I-API
true	I-API
;	O
//	O
Read	O
the	O
original	O
file	O
from	O
diskFileStream	B-API
myFileStream	I-API
=	I-API
new	I-API
;	O
long	O
FileSize	O
=	O
myFileStream.Length	B-API
;	O
byte	O
[	O
]	O
Buffer	B-API
=	I-API
new	I-API
;	O
//	O
Tell	O
the	O
browse	O
stuff	O
about	O
the	O
)	O
;	O
Response.ContentType	B-API
=	O
;	O
//	O
Send	O
the	O
data	O
to	O
the	O
it.Response.Clear	B-API
(	I-API
)	I-API
(	O
sPath	O
,	O
FileMode.Open	B-API
)	O
[	O
(	O
int	O
)	O
FileSize	O
]	O
;	O
myFileStream.Read	B-API
(	I-API
Buffer	I-API
,	I-API
0	I-API
,	I-API
(	I-API
int	I-API
)	I-API
FileSize	I-API
)	I-API
;	O
myFileStream.Close	B-API
(	I-API
)	I-API
(	O
``	O
Content-Length	O
''	O
,	O
FileSize.ToString	B-API
(	I-API
)	I-API
;	O
Response.AddHeader	B-API
(	I-API
)	I-API
``	O
Content-Disposition	O
''	O
,	O
``	O
inline	O
;	O
filename=	O
''	O
+	O
sFilename.Replace	B-API
(	I-API
``	I-API
``	I-API
,	I-API
''	I-API
_	I-API
''	I-API
)	I-API
(	O
sExtention	O
,	O
oConnection	O
)	O
browserResponse.BinaryWrite	B-API
(	I-API
Buffer	I-API
)	I-API
;	O
Response.End	B-API
(	I-API
)	I-API
LINQ	O
turns	O
into	O
method	O
calls	O
like	O
the	O
code	O
you	O
have	O
.	O
In	O
other	O
words	O
,	O
there	O
should	O
be	O
no	O
difference	O
.	O
However	O
,	O
in	O
your	O
two	O
pieces	O
of	O
code	O
you	O
are	O
not	O
calling	O
.ToList	O
in	O
the	O
first	O
,	O
so	O
the	O
first	O
piece	O
of	O
code	O
will	O
produce	O
an	O
enumerable	O
data	O
source	O
,	O
but	O
if	O
you	O
call	O
.ToList	B-API
on	O
it	O
,	O
the	O
two	O
should	O
be	O
the	O
same	O
.	O
Other	O
than	O
the	O
ToList	O
difference	O
,	O
#	O
2	O
is	O
a	O
lot	O
more	O
readable	O
and	O
natural	O
IMO	O
Why	O
are	O
pointers	O
such	O
a	O
leading	O
factor	O
of	O
confusion	O
for	O
many	O
new	O
,	O
and	O
even	O
old	O
,	O
college	O
level	O
students	O
in	O
the	O
C/C++	O
language	O
?	O
The	O
concept	O
of	O
a	O
placeholder	O
for	O
a	O
value	O
-	O
variables	O
-	O
maps	O
onto	O
something	O
we	O
're	O
taught	O
in	O
school	O
-	O
algebra	O
.	O
There	O
is	O
n't	O
an	O
existing	O
parallel	O
you	O
can	O
draw	O
without	O
understanding	O
how	O
memory	O
is	O
physically	O
laid	O
out	O
within	O
a	O
computer	O
,	O
and	O
no	O
one	O
thinks	O
about	O
this	O
kind	O
of	O
thing	O
until	O
they	O
're	O
dealing	O
with	O
low	O
level	O
things	O
-	O
at	O
the	O
C/C++/byte	O
communications	O
level	O
.	O
Are	O
there	O
any	O
tools	O
or	O
thought	O
processes	O
that	O
helped	O
you	O
understand	O
how	O
pointers	O
work	O
at	O
the	O
variable	O
,	O
function	O
,	O
and	O
beyond	O
level	O
?	O
Addresses	O
boxes	O
.	O
I	O
remember	O
when	O
I	O
was	O
learning	O
to	O
program	O
BASIC	O
into	O
microcomputers	O
,	O
there	O
were	O
these	O
pretty	O
books	O
with	O
games	O
in	O
them	O
,	O
and	O
sometimes	O
you	O
had	O
to	O
poke	O
values	O
into	O
particular	O
addresses	O
.	O
They	O
had	O
a	O
picture	O
of	O
a	O
bunch	O
of	O
boxes	O
,	O
incrementally	O
labelled	O
with	O
0	O
,	O
1	O
,	O
2	O
...	O
and	O
it	O
was	O
explained	O
that	O
only	O
one	O
small	O
thing	O
(	O
a	O
byte	O
)	O
could	O
fit	O
in	O
these	O
boxes	O
,	O
and	O
there	O
were	O
a	O
lot	O
of	O
them	O
-	O
some	O
computers	O
had	O
as	O
many	O
as	O
65535	O
!	O
They	O
were	O
next	O
to	O
each	O
other	O
,	O
and	O
they	O
all	O
had	O
an	O
address	O
.	O
What	O
are	O
some	O
good	O
practice	O
things	O
that	O
can	O
be	O
done	O
to	O
bring	O
somebody	O
to	O
the	O
level	O
of	O
,	O
``	O
Ah-hah	O
,	O
I	O
got	O
it	O
,	O
''	O
without	O
getting	O
them	O
bogged	O
down	O
in	O
the	O
overall	O
concept	O
?	O
Basically	O
,	O
drill	O
like	O
scenarios	O
.	O
For	O
a	O
drill	O
?	O
Make	O
a	O
struct	O
:	O
struct	O
{	O
char	O
a	O
;	O
char	O
b	O
;	O
char	O
c	O
;	O
char	O
d	O
;	O
}	O
mystruct	O
;	O
mystruct.a	O
=	O
'r	O
'	O
;	O
mystruct.b	O
=	O
's	O
'	O
;	O
mystruct.c	O
=	O
't	O
'	O
;	O
mystruct.d	O
=	O
'u	O
'	O
;	O
char*	O
my_pointer	O
;	O
my_pointer	O
=	O
mystruct.b	O
;	O
cout	O
'Start	O
:	O
my_pointer	O
=	O
'	O
*my_pointer	O
endl	O
;	O
my_pointer++	O
;	O
cout	O
'After	O
:	O
my_pointer	O
=	O
'	O
*my_pointer	O
endl	O
;	O
my_pointer	O
=	O
mystruct.a	O
;	O
cout	O
'Then	O
:	O
my_pointer	O
=	O
'	O
*my_pointer	O
endl	O
;	O
my_pointer	O
=	O
my_pointer	O
+	O
3	O
;	O
cout	O
'End	O
:	O
my_pointer	O
=	O
'	O
*my_pointer	O
endl	O
;	O
Same	O
example	O
as	O
above	O
,	O
except	O
in	O
C	O
:	O
//	O
Same	O
example	O
as	O
above	O
,	O
except	O
in	O
C	O
:	O
struct	O
{	O
char	O
a	O
;	O
char	O
b	O
;	O
char	O
c	O
;	O
char	O
d	O
;	O
}	O
mystruct	O
;	O
mystruct.a	O
=	O
'r	O
'	O
;	O
mystruct.b	O
=	O
's	O
'	O
;	O
mystruct.c	O
=	O
't	O
'	O
;	O
mystruct.d	O
=	O
'u	O
'	O
;	O
char*	O
my_pointer	O
;	O
my_pointer	O
=	O
mystruct.b	O
;	O
printf	O
(	O
``	O
Start	O
:	O
my_pointer	O
=	O
%	O
c\n	O
''	O
,	O
*my_pointer	O
)	O
;	O
my_pointer++	O
;	O
printf	O
(	O
``	O
After	O
:	O
my_pointer	O
=	O
%	O
c\n	O
''	O
,	O
*my_pointer	O
)	O
;	O
my_pointer	O
=	O
mystruct.a	O
;	O
printf	O
(	O
``	O
Then	O
:	O
my_pointer	O
=	O
%	O
c\n	O
''	O
,	O
*my_pointer	O
)	O
;	O
my_pointer	O
=	O
my_pointer	O
+	O
3	O
;	O
printf	O
(	O
``	O
End	O
:	O
my_pointer	O
=	O
%	O
c\n	O
''	O
,	O
*my_pointer	O
)	O
;	O
Output	O
:	O
Start	O
:	O
my_pointer	O
=	O
s	O
After	O
:	O
my_pointer	O
=	O
t	O
Then	O
:	O
my_pointer	O
=	O
r	O
End	O
:	O
my_pointer	O
=	O
u	O
Perhaps	O
that	O
explains	O
some	O
of	O
the	O
basics	O
through	O
example	O
?	O
I	O
do	O
n't	O
think	O
pointers	O
as	O
a	O
concept	O
are	O
particularly	O
tricky	O
-	O
most	O
students	O
'	O
mental	O
models	O
map	O
to	O
something	O
like	O
this	O
and	O
some	O
quick	O
box	O
sketches	O
can	O
help	O
.	O
The	O
difficulty	O
,	O
at	O
least	O
that	O
which	O
I	O
've	O
experienced	O
in	O
the	O
past	O
and	O
seen	O
others	O
deal	O
with	O
,	O
is	O
that	O
the	O
management	O
of	O
pointers	O
in	O
C/C++	O
can	O
be	O
unncessarily	O
convoluted	O
.	O
I	O
do	O
n't	O
see	O
what	O
is	O
so	O
confusing	O
about	O
pointers	O
.	O
They	O
point	O
to	O
a	O
location	O
in	O
memory	O
,	O
that	O
is	O
it	O
stores	O
the	O
memory	O
address	O
.	O
In	O
C/C++	O
you	O
can	O
specify	O
the	O
type	O
the	O
pointer	O
points	O
to	O
.	O
For	O
example	O
:	O
int*	B-API
Says	O
that	O
my_int_pointer	O
contains	O
the	O
address	O
to	O
a	O
location	O
that	O
contains	O
an	O
int	O
.	O
The	O
problem	O
with	O
pointers	O
is	O
that	O
they	O
point	O
to	O
a	O
location	O
in	O
memory	O
,	O
so	O
it	O
is	O
easy	O
to	O
trail	O
off	O
into	O
some	O
location	O
you	O
should	O
not	O
be	O
in	O
.	O
As	O
proof	O
look	O
at	O
the	O
numerous	O
security	O
holes	O
in	O
C/C++	O
applications	O
from	O
buffer	O
overflow	O
(	O
incrementing	O
the	O
pointer	O
past	O
the	O
allocated	O
boundary	O
)	O
.	O
The	O
reason	O
pointers	O
seem	O
to	O
confuse	O
so	O
many	O
people	O
is	O
that	O
they	O
mostly	O
come	O
with	O
little	O
or	O
no	O
background	O
in	O
computer	O
architecture	O
.	O
Since	O
many	O
do	O
n't	O
seem	O
to	O
have	O
an	O
idea	O
of	O
how	O
computers	O
(	O
the	O
machine	O
)	O
is	O
actually	O
implemented	O
-	O
working	O
in	O
C/C++	O
seems	O
alien	O
.	O
A	O
drill	O
is	O
to	O
ask	O
them	O
to	O
implement	O
a	O
simple	O
bytecode	O
based	O
virtual	O
machine	O
(	O
in	O
any	O
language	O
they	O
chose	O
,	O
python	O
works	O
great	O
for	O
this	O
)	O
with	O
an	O
instruction	O
set	O
focussed	O
on	O
pointer	O
operations	O
(	O
load	O
,	O
store	O
,	O
direct/indirect	O
addressing	O
)	O
.	O
Then	O
ask	O
them	O
to	O
write	O
simple	O
programs	O
for	O
that	O
instruction	O
set	O
.	O
Anything	O
requiring	O
slightly	O
more	O
than	O
simple	O
addition	O
is	O
going	O
to	O
involve	O
pointers	O
and	O
they	O
are	O
sure	O
to	O
get	O
it	O
.	O
I	O
think	O
that	O
the	O
main	O
reason	O
that	O
people	O
have	O
trouble	O
with	O
it	O
is	O
because	O
it	O
's	O
generally	O
not	O
taught	O
in	O
an	O
interesting	O
and	O
engaging	O
manner	O
.	O
I	O
'd	O
like	O
to	O
see	O
a	O
lecturer	O
get	O
10	O
volunteers	O
from	O
the	O
crowd	O
and	O
give	O
them	O
a	O
1	O
meter	O
ruler	O
each	O
,	O
get	O
them	O
to	O
stand	O
around	O
in	O
a	O
certain	O
configuration	O
and	O
use	O
the	O
rulers	O
to	O
point	O
at	O
each	O
other	O
.	O
Then	O
show	O
pointer	O
arithmetic	O
by	O
moving	O
people	O
around	O
(	O
and	O
where	O
they	O
point	O
their	O
rulers	O
)	O
.	O
It	O
'd	O
be	O
a	O
simple	O
but	O
effective	O
(	O
and	O
above	O
all	O
memorable	O
)	O
way	O
of	O
showing	O
the	O
concepts	O
without	O
getting	O
too	O
bogged	O
down	O
in	O
the	O
mechanics	O
.	O
Once	O
you	O
get	O
to	O
C	O
and	O
C++	O
it	O
seems	O
to	O
get	O
harder	O
for	O
some	O
people	O
.	O
I	O
'm	O
not	O
sure	O
if	O
this	O
is	O
because	O
they	O
are	O
finally	O
putting	O
theory	O
that	O
they	O
do	O
n't	O
properly	O
grasp	O
into	O
practice	O
or	O
because	O
pointer	O
manipulation	O
is	O
inherently	O
harder	O
in	O
those	O
languages	O
.	O
I	O
ca	O
n't	O
remember	O
my	O
own	O
transition	O
that	O
well	O
,	O
but	O
I	O
knew	O
pointers	O
in	O
Pascal	O
and	O
then	O
moved	O
to	O
C	O
and	O
got	O
totally	O
lost	O
.	O
Pointers	O
is	O
a	O
concept	O
t	O
at	O
for	O
many	O
can	O
be	O
confusing	O
at	O
first	O
,	O
in	O
particular	O
when	O
it	O
comes	O
to	O
copying	O
pointer	O
values	O
around	O
and	O
still	O
referencing	O
the	O
same	O
memory	O
block	O
.	O
I	O
've	O
found	O
that	O
the	O
best	O
analogy	O
is	O
to	O
consider	O
the	O
pointer	O
as	O
a	O
piece	O
of	O
paper	O
with	O
a	O
house	O
address	O
on	O
it	O
,	O
and	O
the	O
memory	O
block	O
it	O
references	O
as	O
the	O
actual	O
house	O
.	O
All	O
sorts	O
of	O
operations	O
can	O
thus	O
be	O
easily	O
explained	O
.	O
I	O
've	O
added	O
some	O
Delphi	O
code	O
down	O
below	O
,	O
and	O
some	O
comments	O
where	O
appropriate	O
.	O
I	O
chose	O
Delphi	O
since	O
my	O
other	O
main	O
programming	O
language	O
,	O
C	O
#	O
,	O
does	O
not	O
exhibit	O
things	O
like	O
memory	O
leaks	O
in	O
the	O
same	O
way	O
.	O
If	O
you	O
only	O
wish	O
to	O
learn	O
the	O
high-level	O
concept	O
of	O
pointers	O
,	O
then	O
you	O
should	O
ignore	O
the	O
parts	O
labelled	O
``	O
Memory	O
layout	O
''	O
in	O
the	O
explanation	O
below	O
.	O
They	O
are	O
intended	O
to	O
give	O
examples	O
of	O
what	O
memory	O
could	O
look	O
like	O
after	O
operations	O
,	O
but	O
they	O
are	O
more	O
low-level	O
in	O
nature	O
.	O
However	O
,	O
in	O
order	O
to	O
accurately	O
explain	O
how	O
buffer	O
overruns	O
really	O
work	O
,	O
it	O
was	O
important	O
that	O
I	O
added	O
these	O
diagrams	O
.	O
Disclaimer	O
:	O
For	O
all	O
intents	O
and	O
purposes	O
,	O
this	O
explanation	O
and	O
the	O
example	O
memory	O
layouts	O
are	O
vastly	O
simplified	O
.	O
There	O
's	O
more	O
overhead	O
and	O
a	O
lot	O
more	O
details	O
you	O
would	O
need	O
to	O
know	O
if	O
you	O
need	O
to	O
deal	O
with	O
memory	O
on	O
a	O
low-level	O
basis	O
.	O
However	O
,	O
for	O
the	O
intents	O
of	O
explaining	O
memory	O
and	O
pointers	O
,	O
it	O
is	O
accurate	O
enough	O
.	O
Let	O
's	O
assume	O
the	O
THouse	O
class	O
used	O
below	O
looks	O
like	O
this	O
:	O
type	O
THouse	O
=	O
class	O
private	O
FName	O
:	O
array	O
[	O
0..9	O
]	O
of	O
Char	O
;	O
public	O
constructor	O
Create	O
(	O
name	O
:	O
PChar	O
)	O
;	O
end	O
;	O
When	O
you	O
initialize	O
the	O
house	O
object	O
,	O
the	O
name	O
given	O
to	O
the	O
constructor	O
is	O
copied	O
into	O
the	O
private	O
field	O
FName	O
.	O
There	O
is	O
a	O
reason	O
it	O
is	O
defined	O
as	O
a	O
fixed-size	O
array	O
.	O
In	O
memory	O
,	O
there	O
will	O
be	O
some	O
overhead	O
associated	O
with	O
the	O
house	O
allocation	O
,	O
I	O
'll	O
illustrate	O
this	O
below	O
like	O
this	O
:	O
--	O
-	O
[	O
ttttNNNNNNNNNN	O
]	O
--	O
-	O
^	O
^	O
|	O
|	O
|	O
+-	O
the	O
FName	O
array	O
|	O
+-	O
overhead	O
The	O
``	O
tttt	O
''	O
area	O
is	O
overhead	O
,	O
there	O
will	O
typically	O
be	O
more	O
of	O
this	O
for	O
various	O
types	O
of	O
runtimes	O
and	O
languages	O
,	O
like	O
8	O
or	O
12	O
bytes	O
.	O
It	O
is	O
imperative	O
that	O
whatever	O
values	O
are	O
stored	O
in	O
this	O
area	O
never	O
gets	O
changed	O
by	O
anything	O
other	O
than	O
the	O
memory	O
allocator	O
or	O
the	O
core	O
system	O
routines	O
,	O
or	O
you	O
risk	O
crashing	O
the	O
program	O
.	O
Allocate	O
memory	O
Get	O
an	O
entrepreneur	O
to	O
build	O
your	O
house	O
,	O
and	O
give	O
you	O
the	O
address	O
to	O
the	O
house	O
.	O
In	O
contrast	O
to	O
the	O
real	O
world	O
,	O
memory	O
allocation	O
can	O
not	O
be	O
told	O
where	O
to	O
allocate	O
,	O
but	O
will	O
find	O
a	O
suitable	O
spot	O
with	O
enough	O
room	O
,	O
and	O
report	O
back	O
the	O
address	O
to	O
the	O
allocated	O
memory	O
.	O
In	O
other	O
words	O
,	O
the	O
entrepreneur	O
will	O
choose	O
the	O
spot	O
.	O
THouse.Create	O
(	O
'My	O
house	O
'	O
)	O
;	O
Memory	O
layout	O
:	O
--	O
-	O
[	O
ttttNNNNNNNNNN	O
]	O
--	O
-	O
1234My	O
house	O
Keep	O
a	O
variable	O
with	O
the	O
address	O
Write	O
the	O
address	O
to	O
your	O
new	O
house	O
down	O
on	O
a	O
piece	O
of	O
paper	O
.	O
This	O
paper	O
will	O
serve	O
as	O
your	O
reference	O
to	O
your	O
house	O
.	O
Without	O
this	O
piece	O
of	O
paper	O
,	O
you	O
're	O
lost	O
,	O
and	O
can	O
not	O
find	O
the	O
house	O
,	O
unless	O
you	O
're	O
already	O
in	O
it	O
.	O
var	O
h	O
:	O
THouse	O
;	O
begin	O
h	O
:	O
=	O
THouse.Create	O
(	O
'My	O
house	O
'	O
)	O
;	O
...	O
Memory	O
layout	O
:	O
h	O
v	O
--	O
-	O
[	O
ttttNNNNNNNNNN	O
]	O
--	O
-	O
1234My	O
house	O
Copy	O
pointer	O
value	O
Just	O
write	O
the	O
address	O
on	O
a	O
new	O
piece	O
of	O
paper	O
.	O
You	O
now	O
have	O
two	O
pieces	O
of	O
paper	O
that	O
will	O
get	O
you	O
to	O
the	O
same	O
house	O
,	O
not	O
two	O
separate	O
houses	O
.	O
Any	O
attempts	O
to	O
follow	O
the	O
address	O
from	O
one	O
paper	O
and	O
rearrange	O
the	O
furniture	O
at	O
that	O
house	O
will	O
make	O
it	O
seem	O
that	O
the	O
other	O
house	O
has	O
been	O
modified	O
in	O
the	O
same	O
manner	O
,	O
unless	O
you	O
can	O
explicitly	O
detect	O
that	O
it	O
's	O
actually	O
just	O
one	O
house	O
.	O
Note	O
This	O
is	O
usually	O
the	O
concept	O
that	O
I	O
have	O
the	O
most	O
problem	O
explaining	O
to	O
people	O
,	O
two	O
pointers	O
does	O
not	O
mean	O
two	O
objects	O
or	O
memory	O
blocks	O
.	O
var	O
h1	O
,	O
h2	O
:	O
THouse	O
;	O
begin	O
h1	O
:	O
=	O
THouse.Create	B-API
(	I-API
'My	I-API
house	I-API
'	I-API
)	I-API
;	O
h2	O
:	O
=	O
h1	O
;	O
//	O
copies	O
the	O
address	O
,	O
not	O
the	O
house	O
...	O
h1	O
v	O
--	O
-	O
[	O
ttttNNNNNNNNNN	O
]	O
--	O
-	O
1234My	O
house	O
^	O
h2	O
Freeing	O
the	O
memory	O
Demolish	O
the	O
house	O
.	O
You	O
can	O
then	O
later	O
on	O
reuse	O
the	O
paper	O
for	O
a	O
new	O
address	O
if	O
you	O
so	O
wish	O
,	O
or	O
clear	O
it	O
to	O
forget	O
the	O
address	O
to	O
the	O
house	O
that	O
no	O
longer	O
exists	O
.	O
var	O
h	O
:	O
THouse	O
;	O
begin	O
h	O
:	O
=	O
THouse.Create	B-API
(	I-API
'My	I-API
house	I-API
'	I-API
)	I-API
;	O
...	O
h	O
;	O
:	O
=	O
nil	O
;	O
Here	O
I	O
first	O
construct	O
the	O
house	O
,	O
and	O
get	O
hold	O
of	O
its	O
address	O
.	O
Then	O
I	O
do	O
something	O
to	O
the	O
house	O
(	O
use	O
it	O
,	O
the	O
...	O
code	O
,	O
left	O
as	O
an	O
exercise	O
for	O
the	O
reader	O
)	O
,	O
and	O
then	O
I	O
free	O
it	O
.	O
Lastly	O
I	O
clear	O
the	O
address	O
from	O
my	O
variable	O
.	O
Memory	O
layout	O
:	O
h	O
--	O
+	O
v	O
+-	O
before	O
free	O
--	O
-	O
[	O
ttttNNNNNNNNNN	O
]	O
--	O
-	O
|	O
1234My	O
house	O
--	O
+	O
h	O
(	O
now	O
points	O
nowhere	O
)	O
--	O
+	O
+-	O
after	O
free	O
--	O
--	O
--	O
--	O
--	O
--	O
--	O
--	O
--	O
--	O
--	O
|	O
(	O
note	O
,	O
memory	O
might	O
still	O
xx34My	O
house	O
--	O
+	O
contain	O
some	O
data	O
)	O
Dangling	O
pointers	O
You	O
tell	O
your	O
entrepreneur	O
to	O
destroy	O
the	O
house	O
,	O
but	O
you	O
forget	O
to	O
erase	O
the	O
address	O
from	O
your	O
piece	O
of	O
paper	O
.	O
When	O
later	O
on	O
you	O
look	O
at	O
the	O
piece	O
of	O
paper	O
,	O
you	O
've	O
forgotten	O
that	O
the	O
house	O
is	O
no	O
longer	O
there	O
,	O
and	O
goes	O
to	O
visit	O
it	O
,	O
with	O
failed	O
results	O
(	O
see	O
also	O
the	O
part	O
about	O
an	O
invalid	O
reference	O
below	O
)	O
.	O
var	O
h	O
:	O
THouse	O
;	O
begin	O
h	O
:	O
=	O
THouse.Create	B-API
(	I-API
'My	I-API
house	I-API
'	I-API
)	I-API
;	O
...	O
h.Free	O
;	O
...	O
//	O
forgot	O
to	O
clear	O
h	O
here	O
h.OpenFrontDoor	B-API
;	O
//	O
will	O
most	O
likely	O
fail	O
Using	O
h	O
after	O
the	O
call	O
to	O
.Free	O
might	O
work	O
,	O
but	O
that	O
is	O
just	O
pure	O
luck	O
.	O
Most	O
likely	O
it	O
will	O
fail	O
,	O
at	O
a	O
customers	O
place	O
,	O
in	O
the	O
middle	O
of	O
a	O
critical	O
operation	O
.	O
h	O
--	O
+	O
v	O
+-	O
before	O
free	O
--	O
-	O
[	O
ttttNNNNNNNNNN	O
]	O
--	O
-	O
|	O
1234My	O
house	O
--	O
+	O
h	O
--	O
+	O
v	O
+-	O
after	O
free	O
--	O
--	O
--	O
--	O
--	O
--	O
--	O
--	O
--	O
--	O
--	O
|	O
xx34My	O
house	O
--	O
+	O
As	O
you	O
can	O
see	O
,	O
h	O
still	O
points	O
to	O
the	O
remnants	O
of	O
the	O
data	O
in	O
memory	O
,	O
but	O
since	O
it	O
might	O
not	O
be	O
complete	O
,	O
using	O
it	O
as	O
before	O
might	O
fail	O
.	O
Memory	O
leak	O
You	O
lose	O
the	O
piece	O
of	O
paper	O
and	O
can	O
not	O
find	O
the	O
house	O
.	O
The	O
house	O
is	O
still	O
standing	O
somewhere	O
though	O
,	O
and	O
when	O
you	O
later	O
on	O
want	O
to	O
construct	O
a	O
new	O
house	O
,	O
you	O
can	O
not	O
reuse	O
that	O
spot	O
.	O
var	O
h	O
:	O
THouse	O
;	O
begin	O
h	O
:	O
=	O
THouse.Create	B-API
(	I-API
'My	I-API
house	I-API
'	I-API
)	I-API
;	O
h	O
:	O
=	O
THouse.Create	B-API
(	I-API
'My	I-API
house	I-API
'	I-API
)	I-API
;	O
//	O
uh-oh	O
,	O
what	O
happened	O
to	O
our	O
first	O
house	O
?	O
...	O
h.Free	O
;	O
h	O
:	O
=	O
nil	O
;	O
Here	O
we	O
overwrote	O
the	O
contents	O
of	O
the	O
h	O
variable	O
with	O
the	O
address	O
of	O
a	O
new	O
house	O
,	O
but	O
the	O
old	O
one	O
is	O
still	O
standing	O
...	O
somewhere	O
.	O
After	O
this	O
code	O
,	O
there	O
is	O
no	O
way	O
to	O
reach	O
that	O
house	O
,	O
and	O
it	O
will	O
be	O
left	O
standing	O
.	O
In	O
other	O
words	O
,	O
the	O
allocated	O
memory	O
will	O
stay	O
allocated	O
until	O
the	O
application	O
closes	O
,	O
at	O
which	O
point	O
the	O
operating	O
system	O
will	O
tear	O
it	O
down	O
.	O
Memory	O
layout	O
after	O
first	O
allocation	O
:	O
h	O
v	O
--	O
-	O
[	O
ttttNNNNNNNNNN	O
]	O
--	O
-	O
1234My	O
house	O
Memory	O
layout	O
after	O
second	O
allocation	O
:	O
h	O
v	O
--	O
-	O
[	O
ttttNNNNNNNNNN	O
]	O
--	O
-	O
[	O
ttttNNNNNNNNNN	O
]	O
1234My	O
house	O
5678My	O
house	O
A	O
more	O
common	O
way	O
to	O
get	O
this	O
method	O
is	O
just	O
to	O
forget	O
to	O
free	O
something	O
,	O
instead	O
of	O
overwriting	O
it	O
as	O
above	O
.	O
In	O
Delphi	O
terms	O
,	O
this	O
will	O
occur	O
with	O
the	O
following	O
method	O
:	O
procedure	O
OpenTheFrontDoorOfANewHouse	O
;	O
var	O
h	O
:	O
THouse	O
;	O
begin	O
h	O
:	O
=	O
THouse.Create	B-API
(	I-API
'My	I-API
house	I-API
'	I-API
)	I-API
;	O
h.OpenFrontDoor	O
;	O
//	O
uh-oh	O
,	O
no	O
.Free	O
here	O
,	O
where	O
does	O
the	O
address	O
go	O
?	O
end	O
;	O
After	O
this	O
method	O
has	O
executed	O
,	O
there	O
's	O
no	O
place	O
in	O
our	O
variables	O
that	O
the	O
address	O
to	O
the	O
house	O
exists	O
,	O
but	O
the	O
house	O
is	O
still	O
out	O
there	O
.	O
Memory	O
layout	O
:	O
h	O
--	O
+	O
v	O
+-	O
before	O
losing	O
pointer	O
--	O
-	O
[	O
ttttNNNNNNNNNN	O
]	O
--	O
-	O
|	O
1234My	O
house	O
--	O
+	O
h	O
(	O
now	O
points	O
nowhere	O
)	O
--	O
+	O
+-	O
after	O
losing	O
pointer	O
--	O
-	O
[	O
ttttNNNNNNNNNN	O
]	O
--	O
-	O
|	O
1234My	O
house	O
--	O
+	O
As	O
you	O
can	O
see	O
,	O
the	O
old	O
data	O
is	O
left	O
intact	O
in	O
memory	O
,	O
and	O
will	O
not	O
be	O
reused	O
by	O
the	O
memory	O
allocator	O
.	O
The	O
allocator	O
keeps	O
track	O
of	O
which	O
areas	O
of	O
memory	O
has	O
been	O
used	O
,	O
and	O
will	O
not	O
reuse	O
them	O
unless	O
you	O
free	O
it	O
.	O
Freeing	O
the	O
memory	O
but	O
keeping	O
a	O
(	O
now	O
invalid	O
)	O
reference	O
Demolish	O
the	O
house	O
,	O
erase	O
one	O
of	O
the	O
pieces	O
of	O
paper	O
but	O
you	O
also	O
have	O
another	O
piece	O
of	O
paper	O
with	O
the	O
old	O
address	O
on	O
it	O
,	O
when	O
you	O
go	O
to	O
the	O
address	O
,	O
you	O
wo	O
n't	O
find	O
a	O
house	O
,	O
but	O
you	O
might	O
find	O
something	O
that	O
resembles	O
the	O
ruins	O
of	O
one	O
.	O
Perhaps	O
you	O
will	O
even	O
find	O
a	O
house	O
,	O
but	O
it	O
is	O
not	O
the	O
house	O
you	O
were	O
originally	O
given	O
the	O
address	O
to	O
,	O
and	O
thus	O
any	O
attempts	O
to	O
use	O
it	O
as	O
though	O
it	O
belongs	O
to	O
you	O
might	O
fail	O
horribly	O
.	O
Sometimes	O
you	O
might	O
even	O
find	O
that	O
a	O
neighbouring	O
address	O
has	O
a	O
rather	O
big	O
house	O
set	O
up	O
on	O
it	O
that	O
occupies	O
three	O
address	O
(	O
Main	O
Street	O
1-3	O
)	O
,	O
and	O
your	O
address	O
goes	O
to	O
the	O
middle	O
of	O
the	O
house	O
.	O
Any	O
attempts	O
to	O
treat	O
that	O
part	O
of	O
the	O
large	O
3-address	O
house	O
as	O
a	O
single	O
small	O
house	O
might	O
also	O
fail	O
horribly	O
.	O
var	O
,	O
h2	O
:	O
THouse	O
;	O
begin	O
:	O
=	O
THouse.Create	B-API
(	I-API
'My	I-API
house	I-API
'	I-API
)	I-API
;	O
:	O
=	O
h1	O
;	O
//	O
copies	O
the	O
address	O
,	O
not	O
the	O
house	O
...	O
h1.Free	O
;	O
h1	O
:	O
=	O
nil	O
;	O
h2.OpenFrontDoor	O
;	O
//	O
uh-oh	O
,	O
what	O
happened	O
to	O
our	O
house	O
?	O
Here	O
the	O
house	O
was	O
torn	O
down	O
,	O
through	O
the	O
reference	O
in	O
h1	O
,	O
and	O
while	O
h1	O
was	O
cleared	O
as	O
well	O
,	O
h2	O
still	O
has	O
the	O
old	O
,	O
out-of-date	O
,	O
address	O
.	O
Access	O
to	O
the	O
house	O
that	O
is	O
no	O
longer	O
standing	O
might	O
or	O
might	O
not	O
work	O
.	O
This	O
is	O
a	O
variation	O
of	O
the	O
dangling	O
pointer	O
above	O
.	O
See	O
its	O
memory	O
layout	O
.	O
Buffer	O
overrun	O
You	O
move	O
more	O
stuff	O
into	O
the	O
house	O
than	O
you	O
can	O
possibly	O
fit	O
,	O
spilling	O
into	O
the	O
neighbours	O
house	O
or	O
yard	O
.	O
When	O
the	O
owner	O
of	O
that	O
neighbouring	O
house	O
later	O
on	O
comes	O
home	O
,	O
he	O
'll	O
find	O
all	O
sorts	O
of	O
things	O
he	O
'll	O
consider	O
his	O
own	O
.	O
This	O
is	O
the	O
reason	O
I	O
chose	O
a	O
fixed-size	O
array	O
.	O
To	O
set	O
the	O
stage	O
,	O
assume	O
that	O
the	O
second	O
house	O
we	O
allocate	O
will	O
,	O
for	O
some	O
reason	O
,	O
be	O
placed	O
before	O
the	O
first	O
one	O
in	O
memory	O
.	O
In	O
other	O
words	O
,	O
the	O
second	O
house	O
will	O
have	O
a	O
lower	O
address	O
than	O
the	O
first	O
one	O
.	O
Also	O
,	O
they	O
're	O
allocated	O
right	O
next	O
to	O
each	O
other	O
.	O
Thus	O
,	O
this	O
code	O
:	O
var	O
h1	O
,	O
h2	O
:	O
THouse	O
;	O
begin	O
h1	O
:	O
=	O
THouse.Create	B-API
(	I-API
'My	I-API
house	I-API
'	I-API
)	I-API
;	O
h2	O
:	O
=	O
THouse.Create	B-API
(	I-API
'My	I-API
other	I-API
house	I-API
somewhere	I-API
'	I-API
)	I-API
;	O
^	O
--	O
--	O
--	O
--	O
--	O
--	O
--	O
--	O
--	O
--	O
--	O
-^	O
longer	O
than	O
10	O
characters	O
0123456789	O
--	O
10	O
characters	O
Memory	O
layout	O
after	O
first	O
allocation	O
:	O
h1	O
v	O
--	O
--	O
--	O
--	O
--	O
--	O
--	O
--	O
--	O
--	O
--	O
-	O
[	O
ttttNNNNNNNNNN	O
]	O
5678My	O
house	O
Memory	O
layout	O
after	O
second	O
allocation	O
:	O
h2	O
h1	O
v	O
v	O
--	O
-	O
[	O
ttttNNNNNNNNNN	O
]	O
--	O
--	O
[	O
ttttNNNNNNNNNN	O
]	O
1234My	O
other	O
house	O
somewhereouse	O
^	O
--	O
-+	O
--	O
^	O
|	O
+-	O
overwritten	O
The	O
part	O
that	O
will	O
most	O
often	O
cause	O
crash	O
is	O
when	O
you	O
overwrite	O
important	O
parts	O
of	O
the	O
data	O
you	O
stored	O
that	O
really	O
should	O
not	O
be	O
randomly	O
changed	O
.	O
For	O
instance	O
it	O
might	O
not	O
be	O
a	O
problem	O
that	O
parts	O
of	O
the	O
name	O
of	O
the	O
h1-house	O
was	O
changed	O
,	O
in	O
terms	O
of	O
crashing	O
the	O
program	O
,	O
but	O
overwriting	O
the	O
overhead	O
of	O
the	O
object	O
will	O
most	O
likely	O
crash	O
when	O
you	O
try	O
to	O
use	O
the	O
broken	O
object	O
,	O
as	O
will	O
overwriting	O
links	O
that	O
is	O
stored	O
to	O
other	O
objects	O
in	O
the	O
object	O
.	O
Linked	O
lists	O
When	O
you	O
follow	O
an	O
address	O
on	O
a	O
piece	O
of	O
paper	O
,	O
you	O
get	O
to	O
a	O
house	O
,	O
and	O
at	O
that	O
house	O
there	O
is	O
another	O
piece	O
of	O
paper	O
with	O
a	O
new	O
address	O
on	O
it	O
,	O
for	O
the	O
next	O
house	O
in	O
the	O
chain	O
,	O
and	O
so	O
on	O
.	O
var	O
h1	O
,	O
h2	O
:	O
THouse	O
;	O
begin	O
h1	O
:	O
=	O
THouse.Create	B-API
(	I-API
'Home	I-API
'	I-API
)	I-API
;	O
h2	O
:	O
=	O
THouse.Create	B-API
(	I-API
'Cabin	I-API
'	I-API
)	I-API
;	O
h1	O
.	O
:	O
=	O
h2	O
;	O
Here	O
we	O
create	O
a	O
link	O
from	O
our	O
home	O
house	O
to	O
our	O
cabin	O
.	O
We	O
can	O
follow	O
the	O
chain	O
until	O
a	O
house	O
has	O
no	O
NextHouse	O
reference	O
,	O
which	O
means	O
it	O
's	O
the	O
last	O
one	O
.	O
To	O
visit	O
all	O
our	O
houses	O
,	O
we	O
could	O
use	O
the	O
following	O
code	O
:	O
var	O
h1	O
,	O
h2	O
:	O
THouse	O
;	O
h	O
:	O
THouse	O
;	O
begin	O
h1	O
:	O
=	O
THouse.Create	B-API
(	I-API
'Home	I-API
'	I-API
)	I-API
;	O
h2	O
:	O
=	O
THouse.Create	B-API
(	I-API
'Cabin	I-API
'	I-API
)	I-API
;	O
h1.NextHouse	O
:	O
=	O
h2	O
;	O
...	O
h	O
:	O
=	O
h1	O
;	O
while	O
h	O
nil	O
do	O
begin	O
h.LockAllDoors	O
;	O
h.CloseAllWindows	O
;	O
h	O
:	O
=	O
h.NextHouse	O
;	O
end	O
;	O
Memory	O
layout	O
(	O
added	O
NextHouse	O
as	O
a	O
link	O
in	O
the	O
object	O
,	O
noted	O
with	O
the	O
four	O
LLLL	O
's	O
in	O
the	O
below	O
diagram	O
)	O
:	O
h1	O
h2	O
v	O
v	O
--	O
-	O
[	O
ttttNNNNNNNNNNLLLL	O
]	O
--	O
--	O
[	O
ttttNNNNNNNNNNLLLL	O
]	O
1234Home	O
+	O
5678Cabin	O
+	O
|	O
^	O
|	O
+	O
--	O
--	O
--	O
--	O
+	O
*	O
(	O
no	O
link	O
)	O
In	O
basic	O
terms	O
,	O
what	O
is	O
a	O
memory	O
address	O
?	O
A	O
memory	O
address	O
is	O
in	O
basic	O
terms	O
just	O
a	O
number	O
.	O
If	O
you	O
think	O
of	O
memory	O
as	O
a	O
big	O
array	O
of	O
bytes	O
,	O
the	O
very	O
first	O
byte	O
has	O
the	O
address	O
0	O
,	O
the	O
next	O
one	O
the	O
address	O
1	O
and	O
so	O
on	O
upwards	O
.	O
This	O
is	O
simplified	O
,	O
but	O
good	O
enough	O
.	O
So	O
this	O
memory	O
layout	O
:	O
h1	O
h2	O
v	O
v	O
--	O
-	O
[	O
ttttNNNNNNNNNN	O
]	O
--	O
-	O
[	O
ttttNNNNNNNNNN	O
]	O
1234My	O
house	O
5678My	O
house	O
Might	O
have	O
these	O
two	O
address	O
(	O
the	O
leftmost	O
-	O
is	O
address	O
0	O
)	O
:	O
h1	O
=	O
4	O
h2	O
=	O
23	O
Which	O
means	O
that	O
our	O
linked	O
list	O
above	O
might	O
actuall	O
look	O
like	O
this	O
:	O
h1	O
(	O
=4	O
)	O
h2	O
(	O
=28	O
)	O
v	O
v	O
--	O
-	O
[	O
ttttNNNNNNNNNNLLLL	O
]	O
--	O
--	O
[	O
ttttNNNNNNNNNNLLLL	O
]	O
1234Home	O
0028	O
5678Cabin	O
0000	O
|	O
^	O
|	O
+	O
--	O
--	O
--	O
--	O
+	O
*	O
(	O
no	O
link	O
)	O
It	O
is	O
typical	O
to	O
store	O
an	O
address	O
that	O
``	O
points	O
nowhere	O
''	O
as	O
a	O
zero-address	O
.	O
In	O
basic	O
terms	O
,	O
what	O
is	O
a	O
pointer	O
?	O
A	O
pointer	O
is	O
just	O
a	O
variable	O
holding	O
a	O
memory	O
address	O
.	O
You	O
can	O
typically	O
ask	O
the	O
programming	O
language	O
to	O
give	O
you	O
its	O
number	O
,	O
but	O
most	O
programming	O
languages	O
and	O
runtimes	O
tries	O
to	O
hide	O
the	O
fact	O
that	O
there	O
is	O
a	O
number	O
beneath	O
,	O
just	O
because	O
the	O
number	O
itself	O
does	O
not	O
really	O
hold	O
any	O
meaning	O
to	O
you	O
.	O
It	O
is	O
best	O
to	O
think	O
of	O
a	O
pointer	O
as	O
a	O
black	O
box	O
,	O
ie	O
.	O
you	O
do	O
n't	O
really	O
know	O
or	O
care	O
about	O
how	O
it	O
is	O
actually	O
implemented	O
,	O
just	O
as	O
long	O
as	O
it	O
works	O
.	O
An	O
example	O
of	O
a	O
tutorial	O
with	O
a	O
good	O
set	O
of	O
diagrams	O
helps	O
greatly	O
with	O
the	O
understanding	O
of	O
pointers	O
.	O
Joel	O
Spolsky	O
makes	O
some	O
good	O
points	O
about	O
understanding	O
pointers	O
in	O
his	O
Guerrilla	O
Guide	O
to	O
Interviewing	O
article	O
:	O
For	O
some	O
reason	O
most	O
people	O
seem	O
to	O
be	O
born	O
without	O
the	O
part	O
of	O
the	O
brain	O
that	O
understands	O
pointers	O
.	O
This	O
is	O
an	O
aptitude	O
thing	O
,	O
not	O
a	O
skill	O
thing	O
it	O
requires	O
a	O
complex	O
form	O
of	O
doubly-indirected	O
thinking	O
that	O
some	O
people	O
just	O
ca	O
n't	O
do	O
.	O
In	O
my	O
first	O
Comp	O
Sci	O
class	O
,	O
we	O
did	O
the	O
following	O
exercise	O
.	O
Granted	O
,	O
this	O
was	O
a	O
lecture	O
hall	O
with	O
roughly	O
200	O
students	O
in	O
it	O
...	O
Professor	O
writes	O
on	O
the	O
board	O
:	O
int	B-API
John	O
stands	O
up	O
Professor	O
writes	O
:	O
int	B-API
*sally	B-API
=	B-API
Sally	O
stands	O
up	O
,	O
points	O
at	O
john	O
Professor	O
:	O
int	B-API
*bill	B-API
=	B-API
Bill	O
stands	O
up	O
,	O
points	O
at	O
John	O
Professor	O
:	O
int	B-API
Sam	O
stands	O
up	O
Professor	O
:	O
bill	B-API
=	B-API
Bill	O
now	O
points	O
to	O
Sam	O
.	O
I	O
think	O
you	O
get	O
the	O
idea	O
.	O
I	O
think	O
we	O
spent	O
about	O
an	O
hour	O
doing	O
this	O
,	O
until	O
we	O
went	O
over	O
the	O
basics	O
of	O
pointer	O
assignment	O
.	O
I	O
've	O
been	O
successfully	O
using	O
it	O
on	O
Vista	O
x64	O
for	O
some	O
light	O
Java	O
work	O
.	O
Nothing	O
too	O
involved	O
and	O
no	O
extra	O
plugins	O
,	O
but	O
basic	O
Java	O
coding	O
has	O
been	O
working	O
without	O
any	O
issues	O
.	O
I	O
'm	O
using	O
the	O
3.4M7	O
build	O
but	O
it	O
looks	O
like	O
the	O
3.4	O
stable	O
build	O
supports	O
Vista	O
x64	O
now	O
.	O
Here	O
are	O
the	O
salient	O
points	O
:	O
You	O
ca	O
n't	O
make	O
UI	O
control	O
calls	O
from	O
a	O
different	O
thread	O
than	O
the	O
one	O
they	O
were	O
created	O
on	O
(	O
the	O
form	O
's	O
thread	O
)	O
.	O
Delegate	O
invocations	O
(	O
ie	O
,	O
event	O
hooks	O
)	O
are	O
triggered	O
on	O
the	O
same	O
thread	O
as	O
the	O
object	O
that	O
is	O
firing	O
the	O
event	O
.	O
So	O
,	O
if	O
you	O
have	O
a	O
separate	O
``	O
engine	O
''	O
thread	O
doing	O
some	O
work	O
and	O
have	O
some	O
UI	O
watching	O
for	O
state	O
changes	O
which	O
can	O
be	O
reflected	O
in	O
the	O
UI	O
(	O
such	O
as	O
a	O
progress	O
bar	O
or	O
whatever	O
)	O
,	O
you	O
have	O
a	O
problem	O
.	O
The	O
engine	O
fire	O
's	O
an	O
object	O
changed	O
event	O
which	O
has	O
been	O
hooked	O
by	O
the	O
Form	O
.	O
But	O
the	O
callback	O
delegate	O
that	O
the	O
Form	O
registered	O
with	O
the	O
engine	O
gets	O
called	O
on	O
the	O
engine	O
's	O
thread	O
not	O
on	O
the	O
Form	O
's	O
thread	O
.	O
And	O
so	O
you	O
ca	O
n't	O
update	O
any	O
controls	O
from	O
that	O
callback	O
.	O
Doh	O
!	O
BeginInvoke	O
comes	O
to	O
the	O
rescue	O
.	O
Just	O
use	O
this	O
simple	O
coding	O
model	O
in	O
all	O
your	O
callback	O
methods	O
and	O
you	O
can	O
be	O
sure	O
that	O
things	O
are	O
going	O
to	O
be	O
okay	O
:	O
private	O
delegate	O
void	O
;	O
void	O
{	O
//	O
//	O
Make	O
sure	O
this	O
callback	O
is	O
on	O
the	O
correct	O
thread	O
//	O
if	O
(	O
this.InvokeRequired	B-API
)	O
{	O
,	O
new	O
object	O
[	O
]	O
{	O
sender	O
,	O
ea	O
}	O
)	O
;	O
return	O
;	O
}	O
//	O
//	O
Do	O
something	O
with	O
the	O
event	O
such	O
as	O
update	O
a	O
control	O
//	O
textBox1.Text	B-API
=	O
``	O
Something	O
(	O
object	O
sender	O
,	O
EventArgs	O
ea	O
)	O
(	O
object	O
sender	O
,	O
EventArgs	O
ea	O
)	O
(	O
new	O
EventArgsDelegate	O
(	O
SomethingHappened	O
)	O
It	O
's	O
quite	O
simple	O
really	O
.	O
Use	O
InvokeRequired	B-API
to	O
find	O
out	O
if	O
this	O
callback	O
happened	O
on	O
the	O
correct	O
thread	O
.	O
If	O
not	O
,	O
then	O
reinvoke	O
the	O
callback	O
on	O
the	O
correct	O
thread	O
with	O
the	O
same	O
parameters	O
.	O
You	O
can	O
reinvoke	O
a	O
method	O
by	O
using	O
the	O
Invoke	B-API
(	I-API
blocking	I-API
)	I-API
or	O
BeginInvoke	B-API
(	I-API
non-blocking	I-API
)	I-API
methods	O
.	O
The	O
next	O
time	O
the	O
function	O
is	O
called	O
,	O
InvokeRequired	B-API
returns	O
false	O
because	O
we	O
are	O
now	O
on	O
the	O
correct	O
thread	O
and	O
everybody	O
is	O
happy	O
.	O
This	O
is	O
a	O
very	O
compact	O
way	O
of	O
addressing	O
this	O
problem	O
and	O
making	O
your	O
Forms	O
safe	O
from	O
multi-threaded	O
event	O
callbacks	O
.	O
In	O
many	O
simple	O
cases	O
,	O
you	O
can	O
use	O
the	O
MethodInvoker	B-API
delegate	O
and	O
avoid	O
the	O
need	O
to	O
create	O
your	O
own	O
delegate	O
type	O
.	O
To	O
simplify	O
Simon	O
's	O
code	O
a	O
bit	O
,	O
you	O
could	O
use	O
the	O
built	O
in	O
generic	O
Action	O
delegate	O
.	O
It	O
saves	O
peppering	O
your	O
code	O
with	O
a	O
bunch	O
of	O
delegate	O
types	O
you	O
do	O
n't	O
really	O
need	O
.	O
Also	O
,	O
in	O
.NET	O
3.5	O
they	O
added	O
a	O
params	O
parameter	O
to	O
the	O
Invoke	O
method	O
so	O
you	O
do	O
n't	O
have	O
to	O
define	O
a	O
temporary	O
array	O
.	O
void	O
SomethingHappened	O
(	O
object	O
sender	O
,	O
EventArgs	O
ea	O
)	O
{	O
if	O
(	O
InvokeRequired	B-API
)	O
{	O
Invoke	B-API
(	I-API
new	I-API
Actionobject	I-API
,	I-API
EventArgs	I-API
(	I-API
SomethingHappened	I-API
)	I-API
,	O
sender	O
,	O
ea	O
)	O
;	O
return	O
;	O
}	O
textBox1.Text	O
=	O
``	O
Something	O
happened	O
''	O
;	O
}	O
Take	O
a	O
look	O
at	O
the	O
BrowserPlus	O
project	O
at	O
Yahoo	O
.	O
It	O
looks	O
like	O
they	O
have	O
built	O
a	O
toolkit	O
so	O
that	O
you	O
do	O
n't	O
have	O
to	O
do	O
the	O
gritty	O
work	O
of	O
writing	O
the	O
browser	O
plugin	O
yourself	O
.	O
have	O
you	O
tried	O
watching	O
the	O
traffic	O
between	O
the	O
GUI	O
and	O
the	O
serial	O
port	O
to	O
see	O
if	O
there	O
is	O
some	O
kind	O
of	O
special	O
command	O
being	O
sent	O
across	O
?	O
Also	O
just	O
curious	O
,	O
Python	O
is	O
sending	O
ASCII	O
and	O
not	O
UTF-8	O
or	O
something	O
else	O
right	O
?	O
The	O
reason	O
I	O
ask	O
is	O
because	O
I	O
noticed	O
your	O
quote	O
changes	O
for	O
the	O
strings	O
and	O
in	O
some	O
languages	O
that	O
actually	O
is	O
the	O
difference	O
between	O
ASCII	O
and	O
UTF-8	O
.	O
is	O
the	O
``	O
callout	O
''	O
device	O
,	O
it	O
's	O
what	O
you	O
use	O
when	O
you	O
establish	O
a	O
connection	O
to	O
the	O
serial	O
device	O
and	O
start	O
talking	O
to	O
it	O
.	O
is	O
the	O
``	O
dialin	O
''	O
device	O
,	O
used	O
for	O
monitoring	O
a	O
port	O
for	O
incoming	O
calls	O
for	O
e.g	O
.	O
a	O
fax	O
listener	O
.	O
Many	O
years	O
ago	O
,	O
to	O
provide	O
an	O
age	O
calculator	O
gimmick	O
on	O
my	O
website	O
,	O
I	O
wrote	O
a	O
function	O
to	O
calculate	O
age	O
to	O
a	O
fraction	O
.	O
This	O
is	O
a	O
quick	O
port	O
of	O
that	O
function	O
to	O
C	O
#	O
(	O
from	O
the	O
PHP	O
version	O
)	O
.	O
I	O
'm	O
afraid	O
I	O
have	O
n't	O
been	O
able	O
to	O
test	O
the	O
C	O
#	O
version	O
,	O
but	O
hope	O
you	O
enjoy	O
all	O
the	O
same	O
!	O
(	O
Admittedly	O
this	O
is	O
a	O
bit	O
gimmicky	O
for	O
the	O
purposes	O
of	O
showing	O
user	O
profiles	O
on	O
Stack	O
Overflow	O
,	O
but	O
maybe	O
readers	O
will	O
find	O
some	O
use	O
for	O
it	O
.	O
:	O
-	O
)	O
)	O
double	O
AgeDiff	O
(	O
DateTime	B-API
date1	I-API
,	O
DateTime	B-API
date2	I-API
)	O
{	O
double	O
years	O
=	O
date2.Year	B-API
-	O
date1.Year	B-API
;	O
/*	O
*	O
If	O
date2	O
and	O
date1	O
+	O
round	O
(	O
date2	O
-	O
date1	O
)	O
are	O
on	O
different	O
sides	O
*	O
of	O
29	O
February	O
,	O
then	O
our	O
partial	O
year	O
is	O
considered	O
to	O
have	O
366	O
*	O
days	O
total	O
,	O
otherwise	O
it	O
's	O
365	O
.	O
Note	O
that	O
59	O
is	O
the	O
day	O
number	O
*	O
of	O
29	O
Feb.	O
*/	O
double	O
fraction	O
=	O
365	O
+	O
(	O
DateTime.IsLeapYear	B-API
(	I-API
date2.Year	I-API
)	I-API
date2.DayOfYear	B-API
=	O
59	O
(	O
date1.DayOfYear	B-API
59	O
||	O
date1.DayOfYear	B-API
date2.DayOfYear	B-API
)	O
?	O
1	O
:	O
0	O
)	O
;	O
/*	O
*	O
The	O
only	O
really	O
nontrivial	O
case	O
is	O
if	O
date1	O
is	O
in	O
a	O
leap	O
year	O
,	O
*	O
and	O
date2	O
is	O
not	O
.	O
So	O
let	O
's	O
handle	O
the	O
others	O
first	O
.	O
*/	O
if	O
(	O
DateTime.IsLeapYear	B-API
(	I-API
date2.Year	I-API
)	I-API
==	O
DateTime.IsLeapYear	B-API
(	I-API
date1.Year	I-API
)	I-API
)	O
return	O
years	O
+	O
(	O
date2.DayOfYear	B-API
-	O
date1.DayOfYear	B-API
)	O
/	O
fraction	O
;	O
/*	O
*	O
If	O
date2	O
is	O
in	O
a	O
leap	O
year	O
,	O
but	O
date1	O
is	O
not	O
and	O
is	O
March	O
or	O
*	O
beyond	O
,	O
shift	O
up	O
by	O
a	O
day	O
.	O
*/	O
if	O
(	O
DateTime.IsLeapYear	B-API
(	I-API
date2.Year	I-API
)	I-API
)	O
{	O
return	O
years	O
+	O
(	O
date2.DayOfYear	B-API
-	O
date1.DayOfYear	B-API
-	O
(	O
date1.DayOfYear	B-API
=	O
59	O
?	O
1	O
:	O
0	O
)	O
)	O
/	O
fraction	O
;	O
}	O
/*	O
*	O
If	O
date1	O
is	O
not	O
on	O
29	O
February	O
,	O
shift	O
down	O
date1	O
by	O
a	O
day	O
if	O
*	O
March	O
or	O
later	O
.	O
Proceed	O
normally	O
.	O
*/	O
if	O
(	O
date1.DayOfYear	B-API
!	O
=	O
59	O
)	O
{	O
return	O
years	O
+	O
(	O
date2.DayOfYear	B-API
-	O
date1.DayOfYear	B-API
+	O
(	O
date1.DayOfYear	B-API
59	O
?	O
1	O
:	O
0	O
)	O
)	O
/	O
fraction	O
;	O
}	O
/*	O
*	O
Okay	O
,	O
here	O
date1	O
is	O
on	O
29	O
February	O
,	O
and	O
date2	O
is	O
not	O
on	O
a	O
leap	O
*	O
year	O
.	O
What	O
to	O
do	O
now	O
?	O
On	O
28	O
Feb	O
in	O
date2	O
's	O
year	O
,	O
the	O
``	O
age	O
''	O
*	O
should	O
be	O
just	O
shy	O
of	O
a	O
whole	O
number	O
,	O
and	O
on	O
1	O
Mar	O
should	O
be	O
*	O
just	O
over	O
.	O
Perhaps	O
the	O
easiest	O
way	O
is	O
to	O
a	O
point	O
halfway	O
*	O
between	O
those	O
two	O
:	O
58.5	O
.	O
*/	O
return	O
years	O
+	O
(	O
date2.DayOfYear	B-API
-	O
58.5	O
)	O
/	O
fraction	O
;	O
}	O
The	O
best	O
way	O
that	O
I	O
know	O
of	O
because	O
of	O
leap	O
years	O
and	O
everything	O
is	O
:	O
DateTime	B-API
birthDate	I-API
=	I-API
new	I-API
;	O
int	O
age	O
=	O
.TotalDays	O
/	O
DateTime	B-API
(	I-API
2000,3,1	I-API
)	I-API
int	O
)	O
Math.Floor	B-API
(	O
(	O
DateTime.Now	B-API
-	O
birthDate	O
)	O
Hope	O
this	O
helps	O
.	O
Another	O
function	O
,	O
not	O
my	O
me	O
but	O
found	O
on	O
the	O
web	O
and	O
a	O
bit	O
refined	O
:	O
public	O
static	O
int	O
GetAge	O
(	O
DateTime	O
birthDate	O
)	O
{	O
DateTime	O
n	O
=	O
DateTime.Now	B-API
;	O
//	O
To	O
avoid	O
a	O
race	O
condition	O
around	O
midnight	O
int	O
age	O
=	O
n.Year	B-API
-	O
birthDate.Year	B-API
;	O
if	O
(	O
n.Month	B-API
birthDate.Month	B-API
||	O
(	O
n.Month	B-API
==	O
birthDate.Month	B-API
n.Day	B-API
birthDate.Day	B-API
)	O
)	O
age	O
--	O
;	O
return	O
age	O
;	O
}	O
Just	O
two	O
things	O
that	O
come	O
into	O
my	O
mind	O
:	O
What	O
about	O
people	O
from	O
countries	O
that	O
do	O
not	O
use	O
the	O
gregorian	O
calendar	O
?	O
DateTime.Now	B-API
is	O
in	O
the	O
server-specific	O
culture	O
i	O
think	O
.	O
I	O
have	O
absolutely	O
0	O
knowledge	O
about	O
actually	O
working	O
with	O
Asian	O
calendars	O
and	O
I	O
do	O
not	O
know	O
if	O
there	O
is	O
an	O
easy	O
way	O
to	O
convert	O
dates	O
between	O
calendars	O
,	O
but	O
just	O
in	O
case	O
you	O
're	O
wondering	O
about	O
those	O
chinese	O
guys	O
from	O
the	O
year	O
4660	O
:	O
-	O
)	O
For	O
some	O
reason	O
Jeff	O
's	O
code	O
did	O
n't	O
seem	O
simple	O
enough	O
.	O
To	O
me	O
this	O
seems	O
simpler	O
and	O
easier	O
to	O
understand	O
:	O
DateTime	O
today	O
=	O
DateTime.Today	B-API
;	O
int	O
age	O
=	O
today.Year	B-API
-	O
bday.Year	B-API
;	O
if	O
(	O
bday	O
today.AddYears	B-API
(	O
-age	O
)	O
)	O
age	O
--	O
;	O
However	O
,	O
this	O
assumes	O
you	O
are	O
looking	O
for	O
the	O
western	O
idea	O
of	O
age	O
and	O
not	O
using	O
East	O
Asian	O
reckoning	O
.	O
This	O
is	O
the	O
version	O
we	O
use	O
here	O
.	O
It	O
works	O
,	O
and	O
it	O
's	O
fairly	O
simple	O
.	O
It	O
's	O
the	O
same	O
idea	O
as	O
Jeff	O
's	O
but	O
I	O
think	O
it	O
's	O
a	O
little	O
clearer	O
because	O
it	O
separates	O
out	O
the	O
logic	O
for	O
subtracting	O
one	O
,	O
so	O
it	O
's	O
a	O
little	O
easier	O
to	O
understand	O
.	O
public	O
static	O
int	O
GetAge	O
(	O
this	O
dateOfBirth	O
,	O
DateTime	O
dateAsAt	O
)	O
{	O
return	O
dateAsAt.Year	B-API
-	O
dateOfBirth.Year	B-API
-	O
(	O
dateOfBirth.DayOfYear	B-API
dateAsAt.DayOfYear	B-API
?	O
0	O
:	O
1	O
)	O
;	O
}	O
You	O
could	O
expand	O
the	O
ternary	O
operator	O
to	O
make	O
it	O
even	O
clearer	O
,	O
if	O
you	O
think	O
that	O
sort	O
of	O
thing	O
is	O
unclear	O
.	O
Obviously	O
this	O
is	O
done	O
as	O
an	O
extension	O
method	O
on	O
DateTime	O
,	O
but	O
clearly	O
you	O
can	O
grab	O
that	O
one	O
line	O
of	O
code	O
that	O
does	O
the	O
work	O
and	O
put	O
it	O
anywhere	O
.	O
Here	O
we	O
have	O
another	O
overload	O
of	O
the	O
Extension	O
method	O
that	O
passes	O
in	O
,	O
just	O
for	O
completeness	O
.	O
Some	O
object	O
suppose	O
the	O
.dispose	B-API
(	I-API
)	I-API
method	O
which	O
forces	O
the	O
resource	O
to	O
be	O
removed	O
from	O
memory	O
.	O
No	O
do	O
n't	O
null	O
objects	O
.	O
You	O
can	O
check	O
out	O
http	O
:	O
//codebetter.com/blogs/karlseguin/archive/2008/04/27/foundations-of-programming-pt-7-back-to-basics-memory.aspx	O
for	O
more	O
information	O
,	O
but	O
setting	O
things	O
to	O
null	O
wo	O
n't	O
do	O
anything	O
,	O
except	O
dirty	O
your	O
code	O
.	O
The	O
only	O
time	O
you	O
should	O
set	O
a	O
variable	O
to	O
null	O
is	O
when	O
the	O
variable	O
does	O
not	O
go	O
out	O
of	O
scope	O
and	O
you	O
no	O
longer	O
need	O
the	O
data	O
associated	O
with	O
it	O
.	O
Otherwise	O
there	O
is	O
no	O
need	O
.	O
Also	O
:	O
using	O
(	O
SomeObject	O
object	O
=	O
new	O
SomeObject	O
(	O
)	O
)	O
{	O
//	O
do	O
stuff	O
with	O
the	O
object	O
}	O
//	O
the	O
object	O
will	O
be	O
disposed	O
of	O
There	O
are	O
some	O
cases	O
where	O
it	O
makes	O
sense	O
to	O
null	O
references	O
.	O
For	O
instance	O
,	O
when	O
you	O
're	O
writing	O
a	O
collection	O
--	O
like	O
a	O
priority	O
queue	O
--	O
and	O
by	O
your	O
contract	O
,	O
you	O
should	O
n't	O
be	O
keeping	O
those	O
objects	O
alive	O
for	O
the	O
client	O
after	O
the	O
client	O
has	O
removed	O
them	O
from	O
the	O
queue	O
.	O
But	O
this	O
sort	O
of	O
thing	O
only	O
matters	O
in	O
long	O
lived	O
collections	O
.	O
If	O
the	O
queue	O
's	O
not	O
going	O
to	O
survive	O
the	O
end	O
of	O
the	O
function	O
it	O
was	O
created	O
in	O
,	O
then	O
it	O
matters	O
a	O
whole	O
lot	O
less	O
.	O
On	O
a	O
whole	O
,	O
you	O
really	O
should	O
n't	O
bother	O
.	O
Let	O
the	O
compiler	O
and	O
GC	O
do	O
their	O
jobs	O
so	O
you	O
can	O
do	O
yours	O
.	O
Karl	O
is	O
absolutely	O
correct	O
,	O
there	O
is	O
no	O
need	O
to	O
set	O
objects	O
to	O
null	O
after	O
use	O
.	O
If	O
an	O
object	O
implements	O
,	O
just	O
make	O
sure	O
you	O
call	O
IDisposable.Dispose	B-API
(	I-API
)	I-API
when	O
you	O
're	O
done	O
with	O
that	O
object	O
(	O
wrapped	O
in	O
a	O
..	O
,	O
or	O
,	O
a	O
using	B-API
(	I-API
)	I-API
block	O
)	O
.	O
But	O
even	O
if	O
you	O
do	O
n't	O
remember	O
to	O
call	O
Dispose	B-API
(	I-API
)	I-API
,	O
the	O
finaliser	O
method	O
on	O
the	O
object	O
should	O
be	O
calling	O
Dispose	B-API
(	I-API
)	I-API
for	O
you	O
.	O
I	O
thought	O
this	O
was	O
a	O
good	O
treatment	O
:	O
Digging	O
into	O
IDisposable	O
and	O
this	O
Understanding	O
IDisposable	O
There	O
is	O
n't	O
any	O
point	O
in	O
trying	O
to	O
second	O
guess	O
the	O
GC	O
and	O
its	O
management	O
strategies	O
because	O
it	O
's	O
self	O
tuning	O
and	O
opaque	O
.	O
There	O
was	O
a	O
good	O
discussion	O
about	O
the	O
inner	O
workings	O
with	O
Jeffrey	O
Richter	O
on	O
Dot	O
Net	O
Rocks	O
here	O
:	O
Jeffrey	O
Richter	O
on	O
the	O
Windows	O
Memory	O
Model	O
and	O
Richters	O
book	O
CLR	O
via	O
C	O
#	O
chapter	O
20	O
has	O
a	O
great	O
treatment	O
:	O
If	O
you	O
have	O
a	O
byte	O
[	O
]	O
you	O
should	O
be	O
able	O
to	O
use	O
the	O
BinaryReader	O
class	O
and	O
set	O
values	O
on	O
NewStuff	O
using	O
the	O
available	O
ReadX	O
methods	O
.	O
From	O
what	O
I	O
can	O
see	O
in	O
that	O
context	O
,	O
you	O
do	O
n't	O
need	O
to	O
copy	O
SomeByteArray	O
into	O
a	O
buffer	O
.	O
You	O
simply	O
need	O
to	O
get	O
the	O
handle	O
from	O
SomeByteArray	O
,	O
pin	O
it	O
,	O
copy	O
the	O
IntPtr	O
data	O
using	O
PtrToStructure	B-API
and	O
then	O
release	O
.	O
No	O
need	O
for	O
a	O
copy	O
.	O
That	O
would	O
be	O
:	O
NewStuff	O
ByteArrayToNewStuff	O
(	O
byte	O
[	O
]	O
bytes	O
)	O
{	O
GCHandle	O
handle	O
=	O
GCHandle.Alloc	B-API
(	I-API
bytes	I-API
,	I-API
GCHandleType.Pinned	I-API
)	I-API
;	O
NewStuff	O
stuff	O
=	O
(	O
NewStuff	O
)	O
Marshal.PtrToStructure	B-API
(	I-API
handle.AddrOfPinnedObject	B-API
(	I-API
)	I-API
,	O
typeof	O
(	O
NewStuff	O
)	O
)	O
;	O
handle.Free	B-API
(	I-API
)	I-API
;	O
return	O
stuff	O
;	O
}	O
Generic	O
version	O
:	O
T	O
ByteArrayToStructureT	O
(	O
byte	O
[	O
]	O
bytes	O
)	O
where	O
T	O
:	O
struct	O
{	O
GCHandle	O
handle	O
=	O
GCHandle.Alloc	B-API
(	I-API
bytes	I-API
,	I-API
GCHandleType.Pinned	I-API
)	I-API
;	O
T	O
stuff	O
=	O
(	O
T	O
)	O
Marshal.PtrToStructure	O
(	O
handle.AddrOfPinnedObject	B-API
(	I-API
)	I-API
,	O
typeof	O
(	O
T	O
)	O
)	O
;	O
handle.Free	B-API
(	I-API
)	I-API
;	O
return	O
stuff	O
;	O
}	O
...	O
As	O
of	O
.Net	O
1.1	O
the	O
only	O
available	O
method	O
is	O
reaching	O
into	O
the	O
java	O
libraries	O
.	O
Using	O
the	O
Zip	O
Classes	O
in	O
the	O
J	O
#	O
Class	O
Libraries	O
to	O
Compress	O
Files	O
and	O
Data	O
with	O
C	O
#	O
Not	O
sure	O
if	O
this	O
has	O
changed	O
in	O
recent	O
versions	O
.	O
I	O
've	O
always	O
used	O
the	O
SharpZip	O
Library	O
.	O
Here	O
's	O
a	O
link	O
You	O
can	O
use	O
a	O
3rd-party	O
library	O
such	O
as	O
SharpZip	O
as	O
Tom	O
pointed	O
out	O
.	O
Another	O
way	O
(	O
without	O
going	O
3rd-party	O
)	O
is	O
to	O
use	O
the	O
Windows	B-API
Shell	I-API
API	I-API
.	O
You	O
'll	O
need	O
to	O
set	O
a	O
reference	O
to	O
the	O
Microsoft	O
Shell	O
Controls	O
and	O
Automation	O
COM	O
library	O
in	O
your	O
C	O
#	O
project	O
.	O
Gerald	O
Gibson	O
has	O
an	O
example	O
at	O
:	O
http	O
:	O
//geraldgibson.net/dnn/Home/CZipFileCompression/tabid/148/Default.aspx	O
Internet	O
Archive	O
's	O
copy	O
of	O
the	O
dead	O
page	O
This	O
is	O
very	O
easy	O
to	O
do	O
in	O
java	O
,	O
and	O
as	O
stated	O
above	O
you	O
can	O
reach	O
into	O
the	O
java.util.zip	B-API
libraries	O
from	O
C	O
#	O
.	O
For	O
references	O
see	O
:	O
java.util.zip	B-API
javadocs	O
sample	O
code	O
I	O
used	O
this	O
a	O
while	O
ago	O
to	O
do	O
a	O
deep	O
(	O
recursive	O
)	O
zip	O
of	O
a	O
folder	O
structure	O
,	O
but	O
I	O
do	O
n't	O
think	O
I	O
ever	O
used	O
the	O
unzipping	O
.	O
If	O
I	O
'm	O
so	O
motivated	O
I	O
may	O
pull	O
that	O
code	O
out	O
and	O
edit	O
it	O
into	O
here	O
later	O
.	O
The	O
.Net	O
2.0	O
framework	O
namespace	O
supports	O
GZip	O
and	O
Deflate	O
algorithms	O
.	O
Here	O
are	O
two	O
methods	O
that	O
compress	O
and	O
decompress	O
a	O
byte	O
stream	O
which	O
you	O
can	O
get	O
from	O
your	O
file	O
object	O
.	O
You	O
can	O
subsitute	O
for	O
in	O
the	O
methods	O
below	O
to	O
use	O
that	O
algorithm	O
.	O
This	O
still	O
leaves	O
the	O
problem	O
of	O
handling	O
files	O
compressed	O
with	O
different	O
algorithms	O
though	O
.	O
public	O
static	O
byte	O
[	O
]	O
Compress	O
(	O
byte	O
[	O
]	O
data	O
)	O
{	O
MemoryStream	O
output	O
=	O
new	O
MemoryStream	B-API
(	I-API
)	I-API
;	O
GZipStream	O
gzip	O
=	O
new	O
GZipStream	B-API
(	I-API
output	I-API
,	I-API
CompressionMode.Compress	I-API
,	I-API
true	I-API
)	I-API
;	O
gzip.Write	B-API
(	I-API
data	I-API
,	I-API
0	I-API
,	I-API
data.Length	I-API
)	I-API
;	O
gzip.Close	B-API
(	I-API
)	I-API
;	O
return	O
output.ToArray	B-API
(	I-API
)	I-API
;	O
}	O
public	O
static	O
byte	O
[	O
]	O
Decompress	B-API
(	I-API
byte	I-API
[	I-API
]	I-API
data	I-API
)	I-API
{	O
MemoryStream	O
input	O
=	O
new	O
MemoryStream	B-API
(	I-API
)	I-API
;	O
input.Write	 B-API
(	I-API
data	I-API
,	I-API
0	I-API
,	I-API
data.Length	I-API
)	I-API
;	O
input.Position	O
=	O
0	O
;	O
GZipStream	O
gzip	O
=	O
new	O
GZipStream	B-API
(	I-API
input	I-API
,	I-API
CompressionMode.Decompress	I-API
,	I-API
true	I-API
)	I-API
;	O
MemoryStream	O
output	O
=	O
new	O
MemoryStream	B-API
(	I-API
)	I-API
;	O
byte	O
[	O
]	O
buff	O
=	O
new	O
byte	O
[	O
64	O
]	O
;	O
int	O
read	O
=	O
-1	O
;	O
read	O
=	O
gzip.Read	B-API
(	I-API
buff	I-API
,	I-API
0	I-API
,	I-API
buff.Length	I-API
)	I-API
;	O
while	O
(	O
read	O
0	O
)	O
{	O
output.Write	B-API
(	I-API
buff	I-API
,	I-API
0	I-API
,	I-API
read	I-API
)	I-API
;	O
read	O
=	O
gzip.Read	B-API
(	I-API
buff	I-API
,	I-API
0	I-API
,	I-API
buff.Length	I-API
)	I-API
;	O
}	O
gzip.Close	B-API
(	I-API
)	I-API
;	O
return	O
output.ToArray	B-API
(	I-API
)	I-API
;	O
}	O
Can	O
you	O
show	O
us	O
your	O
code	O
?	O
The	O
example	O
on	O
the	O
Python	O
docs	O
is	O
quite	O
straightforward	O
:	O
groups	O
=	O
[	O
]	O
uniquekeys	O
=	O
[	O
]	O
for	O
k	O
,	O
g	O
in	O
groupby	B-API
(	I-API
data	I-API
,	I-API
keyfunc	I-API
)	I-API
:	O
groups.append	B-API
(	I-API
list	I-API
(	I-API
g	I-API
)	I-API
)	O
#	O
Store	O
group	O
iterator	O
as	O
a	O
list	O
uniquekeys.append	B-API
(	I-API
k	I-API
)	I-API
So	O
in	O
your	O
case	O
,	O
data	O
is	O
a	O
list	O
of	O
nodes	O
,	O
keyfunc	O
is	O
where	O
the	O
logic	O
of	O
your	O
criteria	O
function	O
goes	O
and	O
then	O
groupby	B-API
(	I-API
)	I-API
groups	O
the	O
data	O
.	O
You	O
must	O
be	O
careful	O
to	O
sort	O
the	O
data	O
by	O
the	O
criteria	O
before	O
you	O
call	O
or	O
it	O
wo	O
n't	O
work	O
.	O
method	O
actually	O
just	O
iterates	O
through	O
a	O
list	O
and	O
whenever	O
the	O
key	O
changes	O
it	O
creates	O
a	O
new	O
group	O
.	O
You	O
may	O
find	O
the	O
solution	O
in	O
SQL	O
User	O
Defined	O
Function	O
to	O
Parse	O
a	O
Delimited	O
String	O
helpful	O
(	O
from	O
The	O
Code	O
Project	O
)	O
.	O
You	O
can	O
use	O
this	O
simple	O
logic	O
:	O
Declare	O
@	O
products	O
varchar	O
(	O
200	O
)	O
=	O
'1|20|3|343|44|6|8765'	O
Declare	O
@	O
individual	O
varchar	O
(	O
20	O
)	O
=	O
null	O
WHILE	O
LEN	O
(	O
@	O
products	O
)	O
0	O
BEGIN	O
IF	O
PATINDEX	O
(	O
'	O
%	O
|	O
%	O
'	O
,	O
@	O
products	O
)	O
0	O
BEGIN	O
SET	O
@	O
individual	O
=	O
SUBSTRING	B-API
(	I-API
@	I-API
products	I-API
,	I-API
0	I-API
,	I-API
)	I-API
PATINDEX	B-API
(	I-API
'	I-API
%	I-API
|	I-API
%	I-API
'	I-API
,	I-API
@	I-API
)	I-API
products	O
)	O
)	O
SELECT	O
@	O
individual	O
SET	O
@	O
products	O
=	O
SUBSTRING	B-API
(	I-API
@	I-API
products	I-API
,	I-API
LEN	B-API
(	I-API
@	I-API
individual	I-API
+	I-API
'|	I-API
'	I-API
)	I-API
+	O
1	O
,	O
LEN	B-API
(	I-API
@	I-API
products	I-API
)	I-API
)	O
END	O
ELSE	O
BEGIN	O
SET	O
@	O
individual	O
=	O
@	O
products	O
SET	O
@	O
products	O
=	O
NULL	O
SELECT	O
@	O
individual	O
END	O
END	O
Well	O
,	O
mine	O
is	O
n't	O
all	O
that	O
simpler	O
,	O
but	O
here	O
is	O
the	O
code	O
I	O
use	O
to	O
split	O
a	O
comma-delimited	O
input	O
variable	O
into	O
individual	O
values	O
,	O
and	O
put	O
it	O
into	O
a	O
table	O
variable	O
.	O
I	O
'm	O
sure	O
you	O
could	O
modify	O
this	O
slightly	O
to	O
split	O
based	O
on	O
a	O
space	O
and	O
then	O
to	O
do	O
a	O
basic	O
SELECT	O
query	O
against	O
that	O
table	O
variable	O
to	O
get	O
your	O
results	O
.	O
--	O
Create	O
temporary	O
table	O
to	O
parse	O
the	O
list	O
of	O
accounting	O
cycles	O
.	O
DECLARE	O
@	O
tblAccountingCycles	O
table	O
(	O
AccountingCycle	O
varchar	O
(	O
10	O
)	O
)	O
DECLARE	O
@	O
vchAccountingCycle	O
varchar	O
(	O
10	O
)	O
DECLARE	O
@	O
intPosition	O
int	O
SET	O
@	O
vchAccountingCycleIDs	O
=	O
LTRIM	B-API
(	I-API
RTRIM	B-API
(	I-API
@	I-API
vchAccountingCycleIDs	I-API
)	I-API
)	I-API
+	O
'	O
,	O
'	O
SET	O
@	O
intPosition	O
=	O
CHARINDEX	B-API
(	I-API
'	I-API
,	I-API
'	I-API
,	I-API
@	I-API
vchAccountingCycleIDs	I-API
,	I-API
1	I-API
)	I-API
IF	O
REPLACE	B-API
(	I-API
@	I-API
vchAccountingCycleIDs	I-API
,	I-API
'	I-API
,	I-API
'	I-API
,	I-API
''	I-API
)	I-API
''	O
BEGIN	O
WHILE	O
@	O
intPosition	O
0	O
BEGIN	O
SET	O
@	O
vchAccountingCycle	O
=	O
LTRIM	O
(	O
RTRIM	B-API
(	I-API
LEFT	B-API
(	I-API
@	I-API
vchAccountingCycleIDs	I-API
,	I-API
@	I-API
intPosition	I-API
-	I-API
1	I-API
)	I-API
)	I-API
)	O
IF	O
@	O
vchAccountingCycle	O
''	O
BEGIN	O
INSERT	O
INTO	O
@	O
tblAccountingCycles	O
(	O
AccountingCycle	O
)	O
VALUES	O
(	O
@	O
vchAccountingCycle	O
)	O
END	O
SET	O
@	O
vchAccountingCycleIDs	O
=	O
RIGHT	O
(	O
@	O
vchAccountingCycleIDs	O
,	O
LEN	B-API
(	I-API
@	I-API
vchAccountingCycleIDs	I-API
)	I-API
-	O
@	O
intPosition	O
)	O
SET	O
@	O
intPosition	O
=	O
CHARINDEX	B-API
(	I-API
'	I-API
,	I-API
'	I-API
,	I-API
@	I-API
vchAccountingCycleIDs	I-API
,	I-API
1	I-API
)	I-API
END	O
END	O
The	O
concept	O
is	O
pretty	O
much	O
the	O
same	O
.	O
One	O
other	O
alternative	O
is	O
to	O
leverage	O
the	O
.NET	O
compatibility	O
within	O
SQL	O
Server	O
2005	O
itself	O
.	O
You	O
can	O
essentially	O
write	O
yourself	O
a	O
simple	O
method	O
in	O
.NET	O
that	O
would	O
split	O
the	O
string	O
and	O
then	O
expose	O
that	O
as	O
a	O
stored	O
procedure/function	O
.	O
Here	O
is	O
a	O
UDF	O
which	O
will	O
do	O
it	O
.	O
It	O
will	O
return	O
a	O
table	O
of	O
the	O
delimited	O
values	O
,	O
have	O
n't	O
tried	O
all	O
scenarios	O
on	O
it	O
but	O
your	O
example	O
works	O
fine	O
.	O
CREATE	O
FUNCTION	O
SplitString	O
(	O
--	O
Add	O
the	O
parameters	O
for	O
the	O
function	O
here	O
@	O
myString	O
,	O
@	O
deliminator	O
)	O
RETURNS	O
@	O
ReturnTable	O
TABLE	O
(	O
--	O
Add	O
the	O
column	O
definitions	O
for	O
the	O
TABLE	O
variable	O
here	O
[	O
id	O
]	O
[	O
int	O
]	O
NOT	O
NULL	O
,	O
[	O
part	O
]	O
NULL	O
)	O
ASBEGIN	O
Declare	O
@	O
iSpaces	O
int	O
Declare	O
@	O
part	O
--	O
initialize	O
spaces	O
Select	O
@	O
iSpaces	O
=	O
While	O
@	O
iSpaces	O
0	O
Begin	O
Select	O
@	O
part	O
=	O
)	O
Insert	O
Into	O
Select	O
@	O
part	O
Select	O
@	O
myString	O
=	O
+	O
-	O
)	O
Select	O
@	O
iSpaces	O
=	O
end	O
If	O
0	O
Insert	O
Into	O
@	O
ReturnTable	O
Select	O
@	O
myString	O
RETURN	O
varchar	O
(	O
500	O
)	O
varchar	O
(	O
10	O
)	O
IDENTITY	O
(	O
1,1	O
)	O
[	O
varchar	O
]	O
(	O
50	O
)	O
varchar	O
(	O
50	O
)	O
charindex	B-API
(	I-API
@	I-API
deliminator	I-API
,	I-API
@	I-API
myString,0	I-API
)	I-API
substring	B-API
(	I-API
@	I-API
myString,0	I-API
,	I-API
charindex	I-API
(	I-API
@	I-API
deliminator	I-API
,	I-API
@	I-API
myString,0	I-API
)	I-API
@	O
ReturnTable	O
(	O
part	O
)	O
substring	B-API
(	I-API
@	I-API
mystring	I-API
,	I-API
charindex	B-API
(	I-API
@	I-API
deliminator	I-API
,	I-API
@	I-API
myString,0	I-API
)	I-API
len	B-API
(	I-API
@	I-API
deliminator	I-API
)	I-API
,	O
len	B-API
(	I-API
@	I-API
myString	I-API
)	I-API
(	O
'	O
'	O
,	O
@	O
myString,0	O
)	O
charindex	B-API
(	I-API
@	I-API
deliminator	I-API
,	I-API
@	I-API
myString,0	I-API
)	I-API
len	B-API
(	I-API
@	I-API
myString	I-API
)	I-API
You	O
would	O
call	O
it	O
like	O
this	O
:	O
Select	O
*	O
From	O
(	O
'Hello	O
John	O
Smith	O
'	O
,	O
'	O
'	O
)	O
Edit	O
:	O
Updated	O
solution	O
to	O
handle	O
delimters	O
with	O
a	O
len1	O
as	O
in	O
:	O
select	O
*	O
From	O
SplitString	B-API
(	I-API
'Hello**John**Smith	I-API
'	I-API
,	I-API
'**	I-API
'	I-API
)	I-API
Try	O
this	O
:	O
CREATE	B-API
function	I-API
)	I-API
returns	I-API
@	I-API
t	I-API
table	I-API
(	I-API
Word	I-API
not	I-API
null	I-API
,	I-API
Position	I-API
int	I-API
not	I-API
null	I-API
)	I-API
as	O
begin	O
declare	O
@	O
pos	O
int	O
,	O
@	O
lpos	O
int	O
,	O
@	O
item	O
,	O
@	O
ignore	O
,	O
@	O
dl	O
int	O
,	O
@	O
a1	O
int	O
,	O
@	O
a2	O
int	O
,	O
@	O
z1	O
int	O
,	O
@	O
z2	O
int	O
,	O
@	O
n1	O
int	O
,	O
@	O
n2	O
int	O
,	O
@	O
c	O
,	O
@	O
a	O
smallin	O
select	O
@	O
a1	O
=	O
,	O
@	O
a2	O
=	O
,	O
@	O
z1	O
=	O
,	O
@	O
z2	O
=	O
,	O
@	O
n1	O
=	O
,	O
@	O
n2	O
=	O
set	O
@	O
ignore	O
=	O
'	O
''	O
''	O
'	O
set	O
@	O
pos	O
=	O
1	O
set	O
@	O
dl	O
=	O
set	O
@	O
lpos	O
=	O
1	O
set	O
@	O
item	O
=	O
''	O
while	O
(	O
@	O
pos	O
=	O
@	O
dl	O
)	O
begin	O
set	O
@	O
c	O
=	O
if	O
(	O
@	O
ignore	O
not	O
like	O
'	O
%	O
'	O
+	O
@	O
c	O
+	O
'	O
%	O
'	O
)	O
begin	O
set	O
@	O
a	O
=	O
if	O
and	O
(	O
@	O
a	O
=	O
@	O
z1	O
)	O
)	O
or	O
and	O
(	O
@	O
a	O
=	O
@	O
z2	O
)	O
)	O
or	O
and	O
(	O
@	O
a	O
=	O
@	O
n2	O
)	O
)	O
begin	O
set	O
@	O
item	O
=	O
@	O
item	O
+	O
@	O
c	O
end	O
else	O
if	O
(	O
@	O
item	O
''	O
)	O
begin	O
insert	O
into	O
@	O
t	O
values	O
(	O
@	O
item	O
)	O
set	O
@	O
item	O
=	O
''	O
end	O
end	O
set	O
@	O
pos	O
=	O
@	O
pos	O
+	O
1	O
end	O
if	O
(	O
@	O
item	O
''	O
)	O
begin	O
insert	O
into	O
@	O
t	O
values	O
(	O
@	O
item	O
)	O
end	O
SplitWordList	O
]	O
(	O
@	O
list	O
varchar	O
(	O
8000	O
)	O
varchar	O
(	O
50	O
)	O
identity	O
(	O
1,1	O
)	O
varchar	O
(	O
100	O
)	O
varchar	O
(	O
100	O
)	O
varchar	O
(	O
1	O
)	O
ascii	O
(	O
'a	O
'	O
)	O
ascii	B-API
(	I-API
'A	I-API
'	I-API
)	I-API
ascii	B-API
(	I-API
'z	I-API
'	I-API
)	I-API
ascii	B-API
(	I-API
'Z	I-API
'	I-API
)	I-API
ascii	B-API
(	I-API
'0	I-API
'	I-API
)	I-API
ascii	B-API
(	I-API
'9	I-API
'	I-API
)	I-API
datalength	B-API
(	I-API
@	I-API
list	I-API
)	I-API
(	O
@	O
list	O
,	O
@	O
pos	O
,	O
1	O
)	O
ascii	B-API
(	I-API
@	I-API
c	I-API
)	I-API
(	O
@	O
a	O
=	O
@	O
a1	O
)	O
(	O
@	O
a	O
=	O
@	O
a2	O
)	O
(	O
@	O
a	O
=	O
@	O
n1	O
)	O
Test	O
it	O
like	O
this	O
:	O
select	O
*	O
from	O
(	O
'Hello	O
John	O
Smith	O
'	O
)	O
I	O
do	O
n't	O
believe	O
SQL	O
Server	O
has	O
a	O
built-in	O
split	O
function	O
,	O
so	O
other	O
than	O
a	O
UDF	O
,	O
the	O
only	O
other	O
answer	O
I	O
know	O
is	O
to	O
hijack	O
the	O
PARSENAME	O
function	O
:	O
SELECT	B-API
PARSENAME	I-API
(	I-API
REPLACE	I-API
(	I-API
'Hello	I-API
John	I-API
Smith	I-API
'	I-API
,	I-API
'	I-API
'	I-API
,	I-API
'	I-API
.	I-API
'	I-API
)	I-API
,	O
2	O
)	O
PARSENAME	O
takes	O
a	O
string	O
and	O
splits	O
it	O
on	O
the	O
period	O
character	O
.	O
It	O
takes	O
a	O
number	O
as	O
its	O
second	O
argument	O
,	O
and	O
that	O
number	O
specifies	O
which	O
segment	O
of	O
the	O
string	O
to	O
return	O
(	O
working	O
from	O
back	O
to	O
front	O
)	O
.	O
SELECT	O
PARSENAME	O
(	O
REPLACE	O
(	O
'Hello	O
John	O
Smith	O
'	O
,	O
'	O
'	O
,	O
'	O
.	O
'	O
)	O
,	O
3	O
)	O
--	O
return	O
Hello	O
Obvious	O
problem	O
is	O
when	O
the	O
string	O
already	O
contains	O
a	O
period	O
.	O
I	O
still	O
think	O
using	O
a	O
UDF	O
is	O
the	O
best	O
way	O
...	O
any	O
other	O
suggestions	O
?	O
First	O
,	O
create	O
a	O
function	O
(	O
using	O
CTE	O
,	O
common	O
table	O
expression	O
does	O
away	O
with	O
the	O
need	O
for	O
a	O
temp	O
table	O
)	O
create	O
function	O
dbo.SplitString	O
(	O
@	O
str	O
nvarchar	B-API
(	I-API
4000	I-API
)	I-API
,	O
@	O
separator	O
char	B-API
(	I-API
1	I-API
)	I-API
)	O
returns	O
table	O
AS	O
return	O
(	O
with	O
tokens	O
(	O
p	O
,	O
a	O
,	O
b	O
)	O
AS	O
(	O
select	O
1	O
,	O
1	O
,	O
charindex	O
(	O
@	O
separator	O
,	O
@	O
str	O
)	O
union	O
all	O
select	O
p	O
+	O
1	O
,	O
b	O
+	O
1	O
,	O
charindex	O
(	O
@	O
separator	O
,	O
@	O
str	O
,	O
b	O
+	O
1	O
)	O
from	O
tokens	O
where	O
b	O
0	O
)	O
select	O
p-1	O
zeroBasedOccurance	O
,	O
substring	O
(	O
@	O
str	O
,	O
a	O
,	O
case	O
when	O
b	O
0	O
then	O
b-a	O
ELSE	O
4000	O
end	O
)	O
AS	O
s	O
from	O
tokens	O
)	O
GO	O
Then	O
,	O
use	O
it	O
as	O
any	O
table	O
(	O
or	O
modify	O
it	O
to	O
fit	O
within	O
your	O
existing	O
stored	O
proc	O
)	O
like	O
this	O
.	O
select	O
s	O
from	O
dbo.SplitString	O
(	O
'Hello	O
John	O
Smith	O
'	O
,	O
'	O
'	O
)	O
where	O
zeroBasedOccurance=1	O
Update	O
Previous	O
version	O
would	O
fail	O
for	O
input	O
string	O
longer	O
than	O
4000	O
chars	O
.	O
This	O
version	O
takes	O
care	O
of	O
the	O
limitation	O
:	O
create	O
function	O
dbo.SplitString	O
(	O
@	O
str	O
nvarchar	B-API
(	I-API
max	I-API
)	I-API
,	O
@	O
separator	O
char	B-API
(	I-API
1	I-API
)	I-API
)	O
returns	O
table	O
AS	O
return	O
(	O
with	O
tokens	O
(	O
p	O
,	O
a	O
,	O
b	O
)	O
AS	O
(	O
select	O
cast	B-API
(	I-API
1	I-API
as	I-API
bigint	I-API
)	I-API
,	O
cast	B-API
(	I-API
1	I-API
as	I-API
bigint	I-API
)	I-API
,	O
charindex	B-API
(	I-API
@	I-API
separator	I-API
,	I-API
@	I-API
str	I-API
)	I-API
union	O
all	O
select	O
p	O
+	O
1	O
,	O
b	O
+	O
1	O
,	O
charindex	B-API
(	I-API
@	I-API
separator	I-API
,	I-API
@	I-API
str	I-API
,	I-API
b	I-API
+	I-API
1	I-API
)	I-API
from	O
tokens	O
where	O
b	O
0	O
)	O
select	O
p-1	O
ItemIndex	O
,	O
substring	O
(	O
@	O
str	O
,	O
a	O
,	O
case	O
when	O
b	O
0	O
then	O
b-a	O
ELSE	O
LEN	B-API
(	I-API
@	I-API
str	I-API
)	I-API
end	O
)	O
AS	O
Item	O
from	O
tokens	O
)	O
;	O
GO	O
Usage	O
remains	O
the	O
same	O
.	O
The	O
reason	O
is	O
that	O
a	O
generic	O
class	O
like	O
is	O
,	O
for	O
most	O
purposes	O
,	O
treated	O
externally	O
as	O
a	O
normal	O
class	O
.	O
e.g	O
.	O
when	O
you	O
say	O
Liststring	B-API
(	I-API
)	I-API
the	O
compiler	O
says	O
ListString	B-API
(	I-API
)	I-API
(	O
which	O
contains	O
strings	O
)	O
.	O
[	O
Technical	O
folk	O
:	O
this	O
is	O
an	O
extremely	O
plain-English-ified	O
version	O
of	O
what	O
's	O
going	O
on	O
]	O
Consequently	O
,	O
obviously	O
the	O
compiler	O
ca	O
n't	O
be	O
smart	O
enough	O
to	O
convert	O
a	O
ListString	O
to	O
a	O
ListObject	O
by	O
casting	O
the	O
items	O
of	O
its	O
internal	O
collection	O
.	O
That	O
's	O
why	O
there	O
's	O
extension	O
methods	O
for	O
IEnumerable	O
like	O
Convert	B-API
(	I-API
)	I-API
that	O
allow	O
you	O
to	O
easily	O
supply	O
conversion	O
for	O
the	O
items	O
stored	O
inside	O
a	O
collection	O
,	O
which	O
could	O
be	O
as	O
simple	O
as	O
casting	O
from	O
one	O
to	O
another	O
.	O
Think	O
of	O
it	O
this	O
way	O
,	O
if	O
you	O
were	O
to	O
do	O
such	O
a	O
cast	O
,	O
and	O
then	O
add	O
an	O
object	O
of	O
type	O
Foo	O
to	O
the	O
list	O
,	O
the	O
list	O
of	O
strings	O
is	O
no	O
longer	O
consistent	O
.	O
If	O
you	O
were	O
to	O
iterate	O
the	O
first	O
reference	O
,	O
you	O
would	O
get	O
a	O
class	O
cast	O
exception	O
because	O
once	O
you	O
hit	O
the	O
Foo	O
instance	O
,	O
the	O
Foo	O
could	O
not	O
be	O
converted	O
to	O
string	O
!	O
As	O
a	O
side	O
note	O
,	O
I	O
think	O
it	O
would	O
be	O
more	O
significant	O
whether	O
or	O
not	O
you	O
can	O
do	O
the	O
reverse	O
cast	O
:	O
Listobject	O
ol	O
=	O
new	O
;	O
Liststring	O
sl	O
;	O
sl	O
=	O
Listobject	B-API
(	I-API
)	I-API
I	O
have	O
n't	O
used	O
C	O
#	O
in	O
a	O
while	O
,	O
so	O
I	O
do	O
n't	O
know	O
if	O
that	O
is	O
legal	O
,	O
but	O
that	O
sort	O
of	O
cast	O
is	O
actually	O
(	O
potentially	O
)	O
useful	O
.	O
In	O
this	O
case	O
,	O
you	O
are	O
going	O
from	O
a	O
more	O
general	O
class	O
(	O
object	O
)	O
to	O
a	O
more	O
specific	O
class	O
(	O
string	O
)	O
that	O
extends	O
from	O
the	O
general	O
one	O
.	O
In	O
this	O
way	O
,	O
if	O
you	O
add	O
to	O
the	O
list	O
of	O
strings	O
,	O
you	O
are	O
not	O
violating	O
the	O
list	O
of	O
objects	O
.	O
Does	O
anybody	O
know	O
or	O
can	O
test	O
if	O
such	O
a	O
cast	O
is	O
legal	O
in	O
C	O
#	O
?	O
Mike	O
-	O
I	O
believe	O
contravariance	O
is	O
n't	O
allowed	O
in	O
C	O
#	O
either	O
See	O
Generic	O
type	O
parameter	O
variance	O
in	O
the	O
CLR	O
for	O
some	O
more	O
info	O
.	O
This	O
has	O
a	O
lot	O
to	O
do	O
with	O
covariance	O
,	O
e.g.	O
,	O
generic	O
types	O
are	O
considered	O
as	O
parameters	O
,	O
and	O
if	O
the	O
parameters	O
do	O
not	O
resolve	O
properly	O
to	O
a	O
more	O
specific	O
type	O
then	O
the	O
operation	O
fails	O
.	O
The	O
implication	O
of	O
such	O
is	O
that	O
you	O
really	O
can	O
not	O
cast	O
to	O
a	O
more	O
general	O
type	O
like	O
object	O
.	O
And	O
as	O
stated	O
by	O
Rex	O
,	O
the	O
List	O
object	O
wo	O
n't	O
convert	O
each	O
object	O
for	O
you	O
.	O
You	O
might	O
want	O
to	O
try	O
the	O
ff	O
code	O
instead	O
:	O
Liststring	O
sl	O
=	O
new	O
;	O
//populate	O
slListobject	O
ol	O
=	O
new	O
Liststring	B-API
(	I-API
)	I-API
Listobject	B-API
(	I-API
sl	I-API
)	I-API
or	O
:	O
Listobject	O
ol	O
=	O
new	O
Listobject	B-API
(	I-API
)	I-API
;	I-API
ol.AddRange	B-API
(	I-API
sl	I-API
)	I-API
ol	O
will	O
(	O
theoretically	O
)	O
copy	O
all	O
the	O
contents	O
of	O
sl	O
without	O
problems	O
.	O
If	O
you	O
're	O
using	O
.NET	O
3.5	O
have	O
a	O
look	O
at	O
the	O
Enumerable.Cast	B-API
method	O
.	O
It	O
's	O
an	O
extension	O
method	O
so	O
you	O
can	O
call	O
it	O
directly	O
on	O
the	O
List	O
.	O
Liststring	O
sl	O
=	O
new	O
Liststring	B-API
(	I-API
)	I-API
;	O
IEnumerableobject	O
ol	O
;	O
ol	O
=	O
sl.Castobject	B-API
(	I-API
)	I-API
;	O
It	O
's	O
not	O
exactly	O
what	O
you	O
asked	O
for	O
but	O
should	O
do	O
the	O
trick	O
.	O
Edit	O
:	O
As	O
noted	O
by	O
Zooba	O
,	O
you	O
can	O
then	O
call	O
ol.ToList	B-API
(	I-API
)	I-API
to	O
get	O
a	O
List	O
This	O
has	O
to	O
do	O
with	O
how	O
data	O
bindings	O
are	O
set	O
up	O
in	O
the	O
dotnet	O
framework	O
,	O
especially	O
the	O
.	O
On	O
a	O
high	O
level	O
it	O
means	O
that	O
if	O
you	O
have	O
n't	O
specified	O
otherwise	O
each	O
form	O
and	O
all	O
the	O
controls	O
of	O
the	O
form	O
share	O
the	O
same	O
.	O
When	O
you	O
are	O
setting	O
the	O
property	O
the	O
will	O
use	O
the	O
to	O
get	O
a	O
that	O
wraps	O
the	O
list	O
.	O
The	O
keeps	O
track	O
of	O
such	O
things	O
as	O
the	O
current	O
selected	O
position	O
in	O
the	O
list	O
.	O
When	O
you	O
set	O
the	O
of	O
the	O
second	O
it	O
will	O
use	O
the	O
same	O
(	O
the	O
forms	O
)	O
which	O
will	O
yield	O
a	O
reference	O
to	O
the	O
same	O
as	O
above	O
used	O
to	O
set	O
up	O
the	O
data	O
bindings	O
.	O
To	O
get	O
a	O
more	O
detailed	O
explanation	O
see	O
BindingContext	O
.	O
It	O
's	O
called	O
alpha	O
blending	O
.	O
In	O
psuedocode	O
,	O
assuming	O
the	O
background	O
color	O
(	O
blend	O
)	O
always	O
has	O
255	O
alpha	O
.	O
Also	O
assumes	O
alpha	O
is	O
0-255	O
.	O
r	O
=	O
+	O
(	O
1	O
-	O
g	O
=	O
+	O
(	O
1	O
-	O
b	O
=	O
+	O
(	O
1	O
-	O
alpha=argb.alpha	B-API
(	I-API
)	I-API
(	O
alpha/255	O
)	O
*argb.r	B-API
(	I-API
)	I-API
alpha/255	O
)	O
*blend.r	O
(	O
)	O
(	O
alpha/255	O
)	O
*argb.g	O
(	O
)	O
alpha/255	O
)	O
*blend.g	O
(	O
)	O
(	O
alpha/255	O
)	O
*argb.b	O
(	O
)	O
alpha/255	O
)	O
*blend.b	O
(	O
)	O
note	O
:	O
you	O
probably	O
need	O
to	O
be	O
a	O
bit	O
(	O
more	O
)	O
careful	O
about	O
floating-point/int	O
math	O
and	O
rounding	O
issues	O
,	O
depending	O
on	O
language	O
.	O
Cast	O
intermediates	O
accordingly	O
Edited	O
to	O
add	O
:	O
If	O
you	O
do	O
n't	O
have	O
a	O
background	O
color	O
with	O
an	O
alpha	O
of	O
255	O
,	O
the	O
algebra	O
gets	O
alot	O
more	O
complicated	O
.	O
I	O
've	O
done	O
it	O
before	O
and	O
it	O
's	O
a	O
fun	O
exercise	O
left	O
to	O
the	O
reader	O
(	O
if	O
you	O
really	O
need	O
to	O
know	O
,	O
ask	O
another	O
question	O
:	O
)	O
.	O
In	O
other	O
words	O
,	O
what	O
color	O
C	O
blends	O
into	O
some	O
background	O
the	O
same	O
as	O
blending	O
A	O
,	O
then	O
blending	O
B	O
.	O
This	O
is	O
sort	O
of	O
like	O
calculating	O
A+B	O
(	O
which	O
is	O
n't	O
the	O
same	O
as	O
B+A	O
)	O
.	O
if	O
you	O
do	O
n't	O
need	O
to	O
know	O
this	O
pre-render	O
,	O
you	O
could	O
always	O
use	O
the	O
win32	O
method	O
of	O
getpixel	O
,	O
I	O
believe	O
.	O
Note	O
:	O
typing	O
on	O
iPhone	O
in	O
the	O
middle	O
of	O
Missouri	O
with	O
no	O
inet	O
access	O
.	O
Will	O
look	O
up	O
real	O
win32	O
example	O
and	O
see	O
if	O
there	O
is	O
a	O
.net	O
equivalent	O
.	O
In	O
case	O
anyone	O
cares	O
,	O
and	O
does	O
n't	O
want	O
to	O
use	O
the	O
(	O
excellent	O
)	O
answer	O
posted	O
above	O
,	O
you	O
can	O
get	O
the	O
color	O
value	O
of	O
a	O
pixel	O
in	O
.Net	O
via	O
this	O
link	O
MSDN	O
example	O
try	O
libpcre	O
If	O
you	O
're	O
stuck	O
on	O
windows	O
they	O
have	O
a	O
windows	O
port	O
which	O
should	O
work	O
.	O
I	O
know	O
e-texteditor	O
uses	O
it	O
,	O
so	O
at	O
least	O
that	O
's	O
proof	O
it	O
works	O
:	O
-	O
)	O
The	O
GNU	O
C	O
Library	O
supports	O
regular	O
expressions	O
.	O
It	O
's	O
open	O
,	O
and	O
the	O
RE	O
code	O
seems	O
to	O
be	O
easily	O
extractable	O
.	O
The	O
GNU	O
C	O
library	O
regular	O
expressions	O
facility	O
(	O
regcomp	B-API
(	I-API
)	I-API
,	O
regexec	B-API
(	I-API
)	I-API
and	O
friends	O
)	O
is	O
broken	O
.	O
Use	O
libetre	O
instead	O
;	O
the	O
function	O
signatures	O
match	O
the	O
ones	O
provided	O
by	O
glibc	O
.	O
http	O
:	O
//laurikari.net/tre/	O
If	O
you	O
use	O
Visual	O
Studio	O
you	O
can	O
use	O
Visual	O
C++	O
2008	O
Feature	O
Pack	O
Release	O
,	O
this	O
implements	O
some	O
of	O
TR1	O
,	O
and	O
includes	O
regular	O
expression	O
parsing	O
.	O
Get	O
it	O
You	O
can	O
use	O
this	O
program	O
,	O
Handle	O
,	O
to	O
find	O
which	O
process	O
has	O
the	O
lock	O
on	O
your	O
file	O
.	O
It	O
's	O
a	O
command-line	O
tool	O
,	O
so	O
I	O
guess	O
you	O
use	O
the	O
output	O
from	O
that	O
...	O
I	O
'm	O
not	O
sure	O
about	O
finding	O
it	O
programmatically	O
.	O
If	O
deleting	O
the	O
file	O
can	O
wait	O
,	O
you	O
could	O
specify	O
it	O
for	O
deletion	O
when	O
your	O
computer	O
next	O
starts	O
up	O
:	O
Start	O
REGEDT32	B-API
or	O
REGEDIT	B-API
and	O
navigate	O
to	O
:	O
HKEY_LOCAL_MACHINE\System\CurrentControlSet\Control\Session	O
Manager	O
W2K	O
and	O
WXP	O
W2K	O
:	O
EditAdd	O
Value	O
...	O
Data	O
Type	O
:	O
Value	O
Name	O
:	O
OK	O
WXP	O
:	O
EditNewMulti-String	O
Valueenter	O
In	O
the	O
Data	O
area	O
,	O
enter	O
``	B-API
\	I-API
?	I-API
?	I-API
\	I-API
''	I-API
+	B-API
to	O
be	O
deleted	O
.	O
LFNs	O
may	O
be	O
entered	O
without	O
being	O
embedded	O
in	O
quotes	O
.	O
To	O
delete	O
C	B-API
:	I-API
\Long	I-API
Directory	B-API
Name\Long	B-API
File	B-API
,	O
enter	O
the	O
following	O
data	O
:	O
\	O
?	O
?	O
\C	O
:	O
\Long	O
Directory	O
Name\Long	O
File	O
Name.exe	O
Then	O
press	O
OK	O
.	O
The	O
``	O
destination	O
file	O
name	O
''	O
is	O
a	O
null	O
(	O
zero	O
)	O
string	O
.	O
It	O
is	O
entered	O
as	O
follows	O
:	O
W2K	O
:	O
EditBinaryselect	O
Data	O
Format	O
:	O
Hexclick	O
at	O
the	O
end	O
of	O
the	O
hex	O
stringenter	O
0000	O
(	O
four	O
zeros	O
)	O
OK	O
WXP	O
:	O
Right-click	O
the	O
valuechoose	O
``	O
Modify	O
Binary	O
Data	O
''	O
click	O
at	O
the	O
end	O
of	O
the	O
hex	O
stringenter	O
0000	O
(	O
four	O
zeros	O
)	O
OK	O
Close	O
and	O
reboot	O
to	O
delete	O
the	O
file	O
.	O
(	O
Shamelessly	O
stolen	O
from	O
some	O
random	O
forum	O
,	O
for	O
posterity	O
's	O
sake	O
.	O
)	O
Killing	O
other	O
processes	O
is	O
not	O
a	O
healthy	O
thing	O
to	O
do	O
.	O
If	O
your	O
scenario	O
involves	O
something	O
like	O
uninstallation	O
,	O
you	O
could	O
use	O
the	O
API	O
function	O
to	O
mark	O
the	O
file	O
for	O
deletion	O
upon	O
next	O
reboot	O
.	O
If	O
it	O
appears	O
that	O
you	O
really	O
need	O
to	O
delete	O
a	O
file	O
in	O
use	O
by	O
another	O
process	O
,	O
I	O
'd	O
recommend	O
re-considering	O
the	O
actual	O
problem	O
before	O
considering	O
any	O
solutions	O
.	O
If	O
you	O
want	O
to	O
do	O
it	O
programatically	O
.	O
I	O
'm	O
not	O
sure	O
...	O
and	O
I	O
'd	O
really	O
recommend	O
against	O
it	O
.	O
If	O
you	O
're	O
just	O
troubleshooting	O
stuff	O
on	O
your	O
own	O
machine	O
,	O
SysInternals	O
Process	O
Explorer	O
can	O
help	O
you	O
Run	O
it	O
,	O
use	O
the	O
Find	O
Handle	O
command	O
(	O
I	O
think	O
it	O
's	O
either	O
in	O
the	O
find	O
or	O
handle	O
menu	O
)	O
,	O
and	O
search	O
for	O
the	O
name	O
of	O
your	O
file	O
.	O
Once	O
the	O
handle	B-API
(	I-API
s	I-API
)	O
is	O
found	O
,	O
you	O
can	O
forcibly	O
close	O
them	O
.	O
You	O
can	O
then	O
delete	O
the	O
file	O
and	O
so	O
on	O
.	O
Beware	O
,	O
doing	O
this	O
may	O
cause	O
the	O
program	O
which	O
owns	O
the	O
handles	O
to	O
behave	O
strangely	O
,	O
as	O
you	O
've	O
just	O
pulled	O
the	O
proverbial	O
rug	O
out	O
from	O
under	O
it	O
,	O
but	O
it	O
works	O
well	O
when	O
you	O
are	O
debugging	O
your	O
own	O
errant	O
code	O
,	O
or	O
when	O
visual	O
studio	O
/	O
windows	O
explorer	O
is	O
being	O
crap	O
and	O
not	O
releasing	O
file	O
handles	O
even	O
though	O
you	O
told	O
them	O
to	O
close	O
the	O
file	O
ages	O
ago	O
...	O
sigh	O
:	O
-	O
)	O
Oh	O
,	O
one	O
big	O
hack	O
I	O
employed	O
years	O
ago	O
,	O
is	O
that	O
Windows	O
wo	O
n't	O
let	O
you	O
delete	O
files	O
,	O
but	O
it	O
does	O
let	O
you	O
move	O
them	O
.	O
Pseudo-sort-of-code	O
:	O
mv	O
%	O
WINDIR	O
%	O
\System32\	O
%	O
WINDIR\System32\mfc42.dll.old	O
Install	O
new	O
mfc42.dll	O
Tell	O
user	O
to	O
save	O
work	O
and	O
restart	O
applications	O
When	O
the	O
applications	O
restarted	O
(	O
note	O
we	O
did	O
n't	O
need	O
to	O
reboot	O
the	O
machine	O
)	O
,	O
they	O
loaded	O
the	O
new	O
mfc42.dll	O
,	O
and	O
all	O
was	O
well	O
.	O
That	O
,	O
coupled	O
with	O
to	O
delete	O
the	O
old	O
one	O
the	O
next	O
time	O
the	O
whole	O
system	O
restarted	O
,	O
worked	O
pretty	O
well	O
.	O
The	O
typical	O
method	O
is	O
as	O
follows	O
.	O
You	O
've	O
said	O
you	O
want	O
to	O
do	O
this	O
in	O
C	O
#	O
so	O
here	O
goes	O
...	O
If	O
you	O
do	O
n't	O
know	O
which	O
process	O
has	O
the	O
file	O
locked	O
,	O
you	O
'll	O
need	O
to	O
examine	O
each	O
process	O
's	O
handle	O
list	O
,	O
and	O
query	O
each	O
handle	O
to	O
determine	O
if	O
it	O
identifies	O
the	O
locked	O
file	O
.	O
Doing	O
this	O
in	O
C	O
#	O
will	O
likely	O
require	O
P/Invoke	O
or	O
an	O
intermediary	O
C++/CLI	O
to	O
call	O
the	O
native	O
APIs	O
you	O
'll	O
need	O
.	O
Once	O
you	O
've	O
figured	O
out	O
which	O
process	O
(	O
es	O
)	O
have	O
the	O
file	O
locked	O
,	O
you	O
'll	O
need	O
to	O
safely	O
inject	O
a	O
small	O
native	O
DLL	O
into	O
the	O
process	O
(	O
you	O
can	O
also	O
inject	O
a	O
managed	O
DLL	O
,	O
but	O
this	O
is	O
messier	O
,	O
as	O
you	O
then	O
have	O
to	O
start	O
or	O
attach	O
to	O
the	O
.NET	O
runtime	O
)	O
.	O
That	O
bootstrap	O
DLL	O
then	O
closes	O
the	O
handle	O
using	O
CloseHandle	O
etc	O
.	O
Essentially	O
:	O
the	O
way	O
to	O
unlock	O
a	O
``	O
locked	O
''	O
file	O
is	O
to	O
inject	O
a	O
DLL	O
into	O
the	O
offending	O
process	O
's	O
address	O
space	O
and	O
close	O
it	O
yourself	O
.	O
You	O
can	O
do	O
this	O
using	O
native	O
or	O
managed	O
code	O
.	O
No	O
matter	O
what	O
,	O
you	O
're	O
going	O
to	O
need	O
a	O
small	O
amount	O
of	O
native	O
code	O
or	O
at	O
least	O
P/Invoke	O
into	O
the	O
same	O
.	O
Helpful	O
links	O
:	O
http	O
:	O
//www.codeproject.com/KB/threads/winspy.aspx	O
http	O
:	O
//damianblog.com/2008/07/02/net-code-injection/	O
Good	O
luck	O
!	O
Someone	O
correct	O
me	O
if	O
I	O
'm	O
wrong	O
,	O
but	O
I	O
do	O
n't	O
think	O
that	O
AppSettings	O
is	O
typically	O
meant	O
to	O
be	O
used	O
for	O
these	O
type	O
of	O
configuration	O
settings	O
.	O
Normally	O
you	O
would	O
only	O
put	O
in	O
settings	O
that	O
remain	O
fairly	O
static	O
(	O
database	O
connection	O
strings	O
,	O
file	O
paths	O
,	O
etc.	O
)	O
.	O
If	O
you	O
want	O
to	O
store	O
customizable	O
user	O
settings	O
,	O
it	O
would	O
be	O
better	O
to	O
create	O
a	O
separate	O
preferences	O
file	O
,	O
or	O
ideally	O
store	O
those	O
settings	O
in	O
a	O
database	O
.	O
Could	O
I	O
ask	O
why	O
you	O
're	O
not	O
saving	O
the	O
user	O
's	O
settings	O
in	O
a	O
database	O
?	O
Generally	O
,	O
I	O
save	O
application	O
settings	O
that	O
are	O
changed	O
very	O
infrequently	O
in	O
the	O
appSettings	O
section	O
(	O
the	O
default	O
email	O
address	O
error	O
logs	O
are	O
sent	O
to	O
,	O
the	O
number	O
of	O
minutes	O
after	O
which	O
you	O
are	O
automatically	O
logged	O
out	O
,	O
etc	O
.	O
)	O
The	O
scope	O
of	O
this	O
really	O
is	O
at	O
the	O
application	O
,	O
not	O
at	O
the	O
user	O
,	O
and	O
is	O
generally	O
used	O
for	O
deployment	O
settings	O
.	O
one	O
thing	O
I	O
would	O
look	O
at	O
doing	O
is	O
caching	O
the	O
appsettings	O
on	O
a	O
read	O
,	O
then	O
flushing	O
the	O
settings	O
from	O
the	O
cache	O
on	O
the	O
write	O
which	O
should	O
minimize	O
the	O
amount	O
of	O
actual	O
load	O
the	O
server	O
has	O
to	O
deal	O
with	O
for	O
processing	O
the	O
appSettings	O
.	O
Also	O
,	O
if	O
possible	O
,	O
look	O
at	O
breaking	O
the	O
appSettings	O
up	O
into	O
configSections	O
so	O
you	O
can	O
read	O
write	O
and	O
cache	O
related	O
settings	O
.	O
Having	O
said	O
all	O
that	O
,	O
I	O
would	O
seriously	O
consider	O
looking	O
at	O
storing	O
these	O
values	O
in	O
a	O
database	O
as	O
you	O
seem	O
to	O
actually	O
be	O
storing	O
user	O
preferences	O
,	O
and	O
not	O
application	O
settings	O
.	O
I	O
should	O
probably	O
clarify	O
a	O
few	O
points	O
.	O
This	O
is	O
not	O
a	O
web	O
application	O
,	O
so	O
connecting	O
a	O
database	O
to	O
the	O
application	O
might	O
be	O
overkill	O
simply	O
for	O
storing	O
configuration	O
settings	O
.	O
This	O
is	O
a	O
Windows	O
Forms	O
application	O
.	O
According	O
to	O
the	O
MSDN	O
documention	O
,	O
the	O
ConfigurationManager	O
is	O
for	O
storing	O
not	O
just	O
application	O
level	O
settings	O
,	O
but	O
user	O
settings	O
as	O
well	O
.	O
(	O
Especially	O
important	O
if	O
,	O
for	O
instance	O
,	O
the	O
application	O
is	O
installed	O
as	O
a	O
partial-trust	O
application	O
.	O
)	O
Check	O
out	O
SQLite	O
,	O
it	O
seems	O
like	O
a	O
good	O
option	O
for	O
this	O
particular	O
scenario	O
.	O
I	O
would	O
not	O
use	O
config	O
files	O
for	O
storing	O
user	O
data	O
.	O
Use	O
a	O
db	O
.	O
since	O
you	O
're	O
using	O
a	O
winforms	O
app	O
,	O
if	O
it	O
's	O
in	O
.net	O
2.0	O
there	O
's	O
actually	O
a	O
user	O
settings	O
system	O
(	O
called	O
Properties	O
)	O
that	O
is	O
designed	O
for	O
this	O
purpose	O
.	O
This	O
article	O
on	O
MSDN	O
has	O
a	O
pretty	O
good	O
introduction	O
into	O
this	O
If	O
you	O
're	O
still	O
worried	O
about	O
performance	O
then	O
take	O
a	O
look	O
at	O
SQL	O
Compact	O
Edition	O
which	O
is	O
similar	O
to	O
SQLite	O
but	O
is	O
the	O
Microsoft	O
offering	O
which	O
I	O
've	O
found	O
plays	O
very	O
nicely	O
with	O
winforms	O
and	O
there	O
's	O
even	O
the	O
ability	O
to	O
make	O
it	O
work	O
with	O
Linq	O
Dylan	O
,	O
Do	O
n't	O
use	O
the	O
application	O
config	O
file	O
for	O
this	O
purpose	O
,	O
use	O
a	O
SQL	O
DB	O
(	O
SQLite	O
,	O
MySQL	O
,	O
MSSQL	O
,	O
whatever	O
)	O
because	O
you	O
'll	O
have	O
to	O
worry	O
less	O
about	O
concurrency	O
issues	O
during	O
reads	O
and	O
writes	O
to	O
the	O
config	O
file	O
.	O
You	O
'll	O
also	O
have	O
better	O
flexibility	O
in	O
the	O
type	O
of	O
data	O
you	O
want	O
to	O
store	O
.	O
The	O
appSettings	O
section	O
is	O
just	O
a	O
key/value	O
list	O
which	O
you	O
may	O
outgrow	O
as	O
time	O
passes	O
and	O
as	O
the	O
app	O
matures	O
.	O
You	O
could	O
use	O
custom	O
config	O
sections	O
but	O
then	O
you	O
're	O
into	O
a	O
new	O
problem	O
area	O
when	O
it	O
comes	O
to	O
the	O
design	O
.	O
The	O
appSettings	O
is	O
n't	O
really	O
meant	O
for	O
what	O
you	O
are	O
trying	O
to	O
do	O
.	O
When	O
your	O
.NET	O
application	O
starts	O
,	O
it	O
reads	O
in	O
the	O
app.config	O
file	O
,	O
and	O
caches	O
its	O
contents	O
in	O
memory	O
.	O
For	O
that	O
reason	O
,	O
after	O
you	O
write	O
to	O
the	O
app.config	O
file	O
,	O
you	O
'll	O
have	O
to	O
somehow	O
force	O
the	O
runtime	O
to	O
re-parse	O
the	O
app.config	O
file	O
so	O
it	O
can	O
cache	O
the	O
settings	O
again	O
.	O
This	O
is	O
unnecessary	O
The	O
best	O
approach	O
would	O
be	O
to	O
use	O
a	O
database	O
to	O
store	O
your	O
configuration	O
settings	O
.	O
Barring	O
the	O
use	O
of	O
a	O
database	O
,	O
you	O
could	O
easily	O
setup	O
an	O
external	O
XML	O
configuration	O
file	O
.	O
When	O
your	O
application	O
starts	O
,	O
you	O
could	O
cache	O
its	O
contents	O
in	O
a	O
NameValueCollection	O
object	O
or	O
HashTable	O
object	O
.	O
As	O
you	O
change/add	O
settings	O
,	O
you	O
would	O
do	O
it	O
to	O
that	O
cached	O
copy	O
.	O
When	O
your	O
application	O
shuts	O
down	O
,	O
or	O
at	O
an	O
appropriate	O
time	O
interval	O
,	O
you	O
can	O
write	O
the	O
cache	O
contents	O
back	O
out	O
to	O
file	O
.	O
It	O
might	O
be	O
worth	O
checking	O
out	O
what	O
some	O
of	O
the	O
other	O
guys	O
are	O
doing	O
in	O
this	O
space	O
and	O
not	O
necessarily	O
in	O
the	O
C	O
#	O
arena	O
either	O
.	O
This	O
is	O
a	O
library	O
written	O
in	O
c	O
#	O
SVN	O
also	O
has	O
a	O
binary	O
diff	O
algorithm	O
and	O
I	O
know	O
there	O
's	O
an	O
implementation	O
in	O
python	O
although	O
I	O
could	O
n't	O
find	O
it	O
with	O
a	O
quick	O
search	O
.	O
They	O
might	O
give	O
you	O
some	O
ideas	O
on	O
where	O
to	O
improve	O
your	O
own	O
algorithm	O
Sorry	O
I	O
could	O
n't	O
be	O
more	O
help	O
.	O
I	O
would	O
definately	O
keep	O
looking	O
at	O
xdelta	O
because	O
I	O
have	O
used	O
it	O
a	O
number	O
of	O
times	O
to	O
produce	O
quality	O
diffs	O
on	O
600MB+	O
ISO	O
files	O
we	O
have	O
generated	O
for	O
distributing	O
our	O
products	O
and	O
it	O
performs	O
very	O
well	O
.	O
If	O
this	O
is	O
for	O
installation	O
or	O
distribution	O
,	O
have	O
you	O
considered	O
using	O
the	O
Windows	O
Installer	O
SDK	O
?	O
It	O
has	O
the	O
ability	O
to	O
patch	O
binary	O
files	O
.	O
http	O
:	O
//msdn.microsoft.com/en-us/library/aa370578	O
(	O
VS.85	O
)	O
.aspx	O
Yes	O
they	O
should	O
,	O
only	O
leads	O
to	O
confusion	O
otherwise	O
.	O
I	O
'd	O
say	O
yes	O
.	O
First	O
,	O
it	O
will	O
be	O
easier	O
to	O
find	O
the	O
actual	O
code	O
files	O
by	O
following	O
down	O
the	O
namespaces	O
(	O
say	O
,	O
when	O
somebody	O
e-mails	O
you	O
a	O
naked	O
exception	O
call	O
stack	O
)	O
.	O
If	O
you	O
let	O
your	O
folders	O
go	O
out	O
of	O
sync	O
with	O
namespaces	O
,	O
finding	O
files	O
in	O
big	O
codebases	O
becomes	O
getting	O
tiring	O
.	O
Second	O
,	O
VS	O
will	O
generate	O
new	O
classes	O
you	O
create	O
in	O
folders	O
with	O
the	O
same	O
namespace	O
of	O
its	O
parent	O
folder	O
structure	O
.	O
If	O
you	O
decide	O
to	O
swim	O
against	O
this	O
,	O
it	O
will	O
be	O
just	O
one	O
more	O
plumbing	O
job	O
to	O
do	O
daily	O
when	O
adding	O
new	O
files	O
.	O
Of	O
course	O
,	O
this	O
goes	O
without	O
saying	O
that	O
one	O
should	O
be	O
conservative	O
about	O
how	O
deep	O
xis	O
folder/namespace	O
hierarchy	O
goes	O
.	O
I	O
think	O
the	O
standard	O
,	O
within	O
.NET	O
,	O
is	O
to	O
try	O
to	O
do	O
it	O
when	O
possible	O
,	O
but	O
not	O
to	O
create	O
unnecessarily	O
deep	O
structures	O
just	O
to	O
adhere	O
to	O
it	O
as	O
a	O
hard	O
rule	O
.	O
None	O
of	O
my	O
projects	O
follow	O
the	O
namespace	O
==	O
structure	O
rule	O
100	O
%	O
of	O
the	O
time	O
,	O
sometimes	O
its	O
just	O
cleaner/better	O
to	O
break	O
out	O
from	O
such	O
rules	O
.	O
In	O
Java	O
you	O
do	O
n't	O
have	O
a	O
choice	O
.	O
I	O
'd	O
call	O
that	O
a	O
classic	O
case	O
of	O
what	O
works	O
in	O
theory	O
vs	O
what	O
works	O
in	O
practice	O
.	O
Also	O
,	O
note	O
that	O
if	O
you	O
use	O
the	O
built-in	O
templates	O
to	O
add	O
classes	O
to	O
a	O
folder	O
,	O
it	O
will	O
by	O
default	O
be	O
put	O
in	O
a	O
namespace	O
that	O
reflects	O
the	O
folder	O
hierarchy	O
.	O
The	O
classes	O
will	O
be	O
easier	O
to	O
find	O
and	O
that	O
alone	O
should	O
be	O
reasons	O
good	O
enough	O
.	O
The	O
rules	O
we	O
follow	O
are	O
:	O
Project/assembly	O
name	O
is	O
the	O
same	O
as	O
the	O
root	O
namespace	O
,	O
except	O
for	O
the	O
.dll	O
ending	O
Only	O
exception	O
to	O
the	O
above	O
rule	O
is	O
a	O
project	O
with	O
a	O
.Core	O
ending	O
,	O
the	O
.Core	O
is	O
stripped	O
off	O
Folders	O
equals	O
namespaces	O
One	O
type	O
per	O
file	O
(	O
class	O
,	O
struct	O
,	O
enum	O
,	O
delegate	O
,	O
etc	O
.	O
)	O
makes	O
it	O
easy	O
to	O
find	O
the	O
right	O
file	O
I	O
found	O
that	O
if	O
you	O
append	O
the	O
last	O
modified	O
timestamp	O
of	O
the	O
file	O
onto	O
the	O
end	O
of	O
the	O
URL	O
the	O
browser	O
will	O
request	O
the	O
files	O
when	O
it	O
is	O
modified	O
.	O
For	O
example	O
in	O
PHP	O
:	O
function	O
urlmtime	B-API
(	I-API
$	I-API
url	I-API
)	I-API
{	O
$	O
parsed_url	O
=	O
parse_url	B-API
(	I-API
$	I-API
url	I-API
)	I-API
;	O
$	O
path	O
=	O
$	O
parsed_url	O
[	O
'path	O
'	O
]	O
;	O
if	O
(	O
$	O
path	O
[	O
0	O
]	O
==	O
``	O
/	O
''	O
)	O
{	O
$	O
filename	O
=	O
$	O
_SERVER	O
[	O
'DOCUMENT_ROOT	O
'	O
]	O
.	O
``	O
/	O
''	O
.	O
$	O
path	O
;	O
}	O
else	O
{	O
$	O
filename	O
=	O
$	O
path	O
;	O
}	O
if	O
(	O
!	O
file_exists	B-API
(	I-API
$	I-API
filename	I-API
)	I-API
)	O
{	O
//	O
If	O
not	O
a	O
file	O
then	O
use	O
the	O
current	O
time	O
$	O
lastModified	O
=	O
date	B-API
(	I-API
'YmdHis	I-API
'	I-API
)	I-API
;	O
}	O
else	O
{	O
$	O
lastModified	O
=	O
date	B-API
(	I-API
'YmdHis	I-API
'	I-API
,	I-API
filemtime	I-API
(	I-API
$	I-API
filename	I-API
)	I-API
)	I-API
;	O
}	O
if	O
(	O
strpos	B-API
(	I-API
$	I-API
url	I-API
,	I-API
'	I-API
?	I-API
'	I-API
)	I-API
===	O
false	O
)	O
{	O
$	O
url	O
.=	O
'	O
?	O
ts=	O
'	O
.	O
$	O
lastModified	O
;	O
}	O
else	O
{	O
$	O
url	O
.=	O
'ts=	O
'	O
.	O
$	O
lastModified	O
;	O
}	O
return	O
$	O
url	O
;	O
}	O
function	O
include_css	B-API
(	I-API
$	I-API
css_url	I-API
,	I-API
$	I-API
media='all	I-API
'	I-API
)	I-API
{	O
//	O
According	O
to	O
Yahoo	O
,	O
using	O
link	O
allows	O
for	O
progressive	O
//	O
rendering	O
in	O
IE	O
where	O
as	O
@	O
import	O
url	B-API
(	I-API
$	I-API
css_url	I-API
)	I-API
does	O
not	O
echo	O
'link	O
rel=	O
''	O
stylesheet	O
''	O
type=	O
''	O
text/css	O
''	O
media=	O
''	O
'	O
.	O
$	O
media	O
.	O
'	O
''	O
href=	O
''	O
'	O
.	O
urlmtime	B-API
(	I-API
$	I-API
css_url	I-API
)	I-API
.	O
'	O
''	O
'	O
.	O
``	O
\n	O
''	O
;	O
}	O
function	O
include_javascript	B-API
(	I-API
$	I-API
javascript_url	I-API
)	I-API
{	O
echo	O
'script	O
type=	O
''	O
text/javascript	O
''	O
src=	O
''	O
'	O
.	O
urlmtime	B-API
(	I-API
$	I-API
javascript_url	I-API
)	I-API
.	O
'	O
''	O
/script	O
'	O
.	O
``	O
\n	O
''	O
;	O
}	O
Some	O
solutions	O
I	O
have	O
seen	O
involve	O
adding	O
a	O
version	O
number	O
to	O
the	O
end	O
of	O
the	O
file	O
in	O
the	O
form	O
of	O
a	O
query	O
string	O
.	O
script	O
type=	O
''	O
text/javascript	O
''	O
src=	O
''	O
funkycode.js	O
?	O
v1	O
''	O
You	O
could	O
use	O
the	O
SVN	O
revision	O
number	O
to	O
automate	O
this	O
for	O
you	O
by	O
including	O
the	O
word	O
LastChangedRevision	O
in	O
your	O
html	O
file	O
after	O
where	O
v1	O
appears	O
above	O
.	O
You	O
must	O
also	O
setup	O
your	O
repository	O
to	O
do	O
this	O
.	O
I	O
hope	O
this	O
further	O
clarifies	O
my	O
answer	O
?	O
Firefox	O
also	O
allows	O
pressing	O
CTRL	O
+	O
R	O
to	O
reload	O
everything	O
on	O
a	O
particular	O
page	O
.	O
In	O
my	O
opinion	O
,	O
it	O
is	O
better	O
to	O
make	O
the	O
version	O
number	O
part	O
of	O
the	O
file	O
itself	O
.	O
e.g	O
.	O
myscript.1.2.3.js	O
You	O
can	O
set	O
your	O
webserver	O
to	O
cache	O
this	O
file	O
forever	O
,	O
and	O
just	O
add	O
a	O
new	O
js	O
file	O
when	O
you	O
have	O
a	O
new	O
version	O
.	O
is	O
this	O
a	O
console	O
app	O
or	O
a	O
winforms	O
app	O
?	O
If	O
it	O
's	O
a	O
.NET	O
1.1	O
console	O
app	O
this	O
is	O
,	O
sadly	O
,	O
by	O
design	O
--	O
it	O
's	O
confirmed	O
by	O
a	O
MSFT	O
dev	O
in	O
the	O
second	O
blog	O
post	O
you	O
referenced	O
:	O
BTW	O
,	O
on	O
my	O
1.1	O
machine	O
the	O
example	O
from	O
MSDN	O
does	O
have	O
the	O
expected	O
output	O
;	O
it	O
's	O
just	O
that	O
the	O
second	O
line	O
does	O
n't	O
show	O
up	O
until	O
after	O
you	O
've	O
attached	O
a	O
debugger	O
(	O
or	O
not	O
)	O
.	O
In	O
v2	O
we	O
've	O
flipped	O
things	O
around	O
so	O
that	O
the	O
UnhandledException	B-API
event	O
fires	O
before	O
the	O
debugger	O
attaches	O
,	O
which	O
seems	O
to	O
be	O
what	O
most	O
people	O
expect	O
.	O
Sounds	O
like	O
.NET	O
2.0	O
does	O
this	O
better	O
(	O
thank	O
goodness	O
)	O
,	O
but	O
honestly	O
,	O
I	O
never	O
had	O
time	O
to	O
go	O
back	O
and	O
check	O
.	O
It	O
's	O
a	O
WinForms	O
app	O
.	O
The	O
exceptions	O
that	O
are	O
caught	O
by	O
Application.ThreadException	B-API
work	O
fine	O
,	O
and	O
I	O
do	O
n't	O
get	O
the	O
ugly	O
.NET	O
exception	O
box	B-API
(	I-API
OK	I-API
to	I-API
terminate	I-API
,	I-API
cancel	I-API
to	I-API
debug	I-API
?	I-API
who	I-API
came	I-API
up	I-API
with	I-API
that	I-API
?	I-API
?	I-API
)	I-API
.	O
I	O
was	O
getting	O
some	O
exceptions	O
that	O
were	O
n't	O
being	O
caught	O
by	O
that	O
and	O
ended	O
up	O
going	O
to	O
the	O
AppDomain.UnhandledException	B-API
event	O
that	O
were	O
causing	O
problems	O
.	O
I	O
think	O
I	O
've	O
caught	O
most	O
of	O
those	O
exceptions	O
and	O
I	O
am	O
displaying	O
them	O
in	O
our	O
nice	O
error	O
box	O
now	O
.	O
So	O
I	O
'll	O
just	O
have	O
to	O
hope	O
there	O
are	O
not	O
some	O
other	O
circumstances	O
that	O
would	O
cause	O
exceptions	O
to	O
not	O
be	O
caught	O
by	O
the	O
Application.ThreadException	B-API
handler	O
.	O
Oh	O
,	O
in	O
WinForms	O
you	O
definitely	O
should	O
be	O
able	O
to	O
get	O
it	O
to	O
work	O
.	O
The	O
only	O
thing	O
you	O
have	O
to	O
watch	O
out	O
for	O
is	O
things	O
happening	O
on	O
different	O
threads	O
.	O
I	O
have	O
an	O
old	O
CodeProject	O
article	O
here	O
which	O
should	O
help	O
:	O
http	O
:	O
//www.codeproject.com/KB/exception/ExceptionHandling.aspx	O
AppDomain.UnhandledException	B-API
is	O
an	O
event	O
,	O
not	O
a	O
global	O
exception	O
handler	O
.	O
This	O
means	O
,	O
by	O
the	O
time	O
it	O
is	O
raised	O
,	O
your	O
application	O
is	O
already	O
on	O
its	O
way	O
down	O
the	O
drain	O
,	O
and	O
there	O
is	O
nothing	O
you	O
can	O
do	O
about	O
it	O
,	O
except	O
for	O
doing	O
cleanup	O
and	O
error	O
logging	O
.	O
What	O
happened	O
behind	O
the	O
scenes	O
is	O
this	O
:	O
The	O
framework	O
detected	O
the	O
exception	O
,	O
walked	O
up	O
the	O
call	O
stack	O
to	O
the	O
very	O
top	O
,	O
found	O
no	O
handlers	O
that	O
would	O
recover	O
from	O
the	O
error	O
,	O
so	O
was	O
unable	O
to	O
determine	O
if	O
it	O
was	O
safe	O
to	O
continue	O
execution	O
.	O
So	O
,	O
it	O
started	O
the	O
shutdown	O
sequence	O
,	O
and	O
fired	O
up	O
this	O
event	O
as	O
a	O
courtesy	O
to	O
you	O
so	O
you	O
can	O
pay	O
your	O
respects	O
to	O
your	O
already-doomed	O
process	O
.	O
This	O
happens	O
when	O
an	O
exception	O
is	O
left	O
unhandled	O
in	O
the	O
main	O
thread	O
.	O
There	O
is	O
no	O
single-point	O
solution	O
to	O
this	O
kind	O
of	O
error	O
.	O
You	O
need	O
to	O
put	O
a	O
real	O
exception	O
handler	O
(	O
a	O
catch	O
block	O
)	O
upstream	O
of	O
all	O
places	O
where	O
this	O
error	O
occurs	O
and	O
forward	O
it	O
to	O
(	O
for	O
example	O
)	O
a	O
global	O
handler	O
method/class	O
that	O
will	O
determine	O
if	O
it	O
is	O
safe	O
to	O
simply	O
report	O
and	O
continue	O
,	O
based	O
on	O
exception	O
type	O
and/or	O
content	O
.	O
Edit	O
:	O
It	O
is	O
possible	O
to	O
disable	O
(	O
=hack	O
)	O
the	O
error-reporting	O
mechanism	O
built	O
into	O
Windows	O
so	O
the	O
mandatory	O
``	O
crash	O
and	O
burn	O
''	O
dialog	O
does	O
not	O
get	O
displayed	O
when	O
your	O
app	O
goes	O
down	O
.	O
However	O
,	O
this	O
becomes	O
effective	O
for	O
all	O
the	O
applications	O
in	O
the	O
system	O
,	O
not	O
just	O
your	O
own	O
.	O
One	O
method	O
you	O
can	O
used	O
to	O
obtain	O
this	O
option	O
is	O
by	O
placing	O
a	O
``	O
CheckBox	O
''	O
object	O
and	O
changing	O
its	O
``	O
Appearance	O
''	O
from	O
``	O
Normal	O
''	O
to	O
``	O
Button	O
''	O
this	O
will	O
give	O
you	O
the	O
same	O
functionality	O
that	O
I	O
believe	O
you	O
are	O
looking	O
for	O
.	O
Yes	O
,	O
I	O
thought	O
about	O
that	O
,	O
but	O
I	O
soon	O
figured	O
out	O
that	O
another	O
Domain-Specific-Language	O
(	O
DSL	O
)	O
would	O
be	O
a	O
bit	O
too	O
much	O
.	O
Essentially	O
,	O
they	O
need	O
to	O
interact	O
with	O
my	O
gamestate	O
in	O
possibly	O
unpredictable	O
ways	O
.	O
For	O
example	O
,	O
a	O
card	O
could	O
have	O
a	O
rule	O
``	O
When	O
this	O
cards	O
enter	O
play	O
,	O
all	O
your	O
undead	O
minions	O
gain	O
+3	O
attack	O
against	O
flying	O
enemies	O
,	O
except	O
when	O
the	O
enemy	O
is	O
blessed	O
''	O
.	O
As	O
trading	O
card	O
games	O
are	O
turn	O
based	O
,	O
the	O
GameState	O
Manager	O
will	O
fire	O
OnStageX	O
events	O
and	O
let	O
the	O
cards	O
modify	O
other	O
cards	O
or	O
the	O
GameState	O
in	O
whatever	O
way	O
the	O
card	O
needs	O
.	O
If	O
I	O
try	O
to	O
create	O
a	O
DSL	O
,	O
I	O
have	O
to	O
implement	O
a	O
rather	O
large	O
feature	O
set	O
and	O
possibly	O
constantly	O
update	O
it	O
,	O
which	O
shifts	O
the	O
maintenance	O
work	O
to	O
another	O
part	O
without	O
actually	O
removing	O
it	O
.	O
That	O
's	O
why	O
I	O
wanted	O
to	O
stay	O
with	O
a	O
``	O
real	O
''	O
.NET	O
language	O
to	O
essentially	O
be	O
able	O
to	O
just	O
fire	O
the	O
event	O
and	O
let	O
the	O
card	O
manipulate	O
the	O
gamestate	O
in	O
whatever	O
way	O
(	O
within	O
the	O
limits	O
of	O
the	O
code	O
access	O
security	O
)	O
.	O
Oleg	O
Shilo	O
's	O
C	O
#	O
Script	O
solution	O
(	O
at	O
The	O
Code	O
Project	O
)	O
really	O
is	O
a	O
great	O
introduction	O
to	O
providing	O
script	O
abilities	O
in	O
your	O
application	O
.	O
A	O
different	O
approach	O
would	O
be	O
to	O
consider	O
a	O
language	O
that	O
is	O
specifically	O
built	O
for	O
scripting	O
,	O
such	O
as	O
IronRuby	O
,	O
IronPython	O
,	O
or	O
Lua	O
.	O
IronPython	O
and	O
IronRuby	O
are	O
both	O
available	O
today	O
.	O
For	O
a	O
guide	O
to	O
embedding	O
IronPython	O
read	O
How	O
to	O
embed	O
IronPython	O
script	O
support	O
in	O
your	O
existing	O
app	O
in	O
10	O
easy	O
steps	O
.	O
Lua	O
is	O
a	O
scripting	O
language	O
commonly	O
used	O
in	O
games	O
.	O
There	O
is	O
a	O
Lua	O
compiler	O
for	O
.NET	O
,	O
available	O
from	O
CodePlex	O
--	O
http	O
:	O
//www.codeplex.com/Nua	O
That	O
codebase	O
is	O
a	O
great	O
read	O
if	O
you	O
want	O
to	O
learn	O
about	O
building	O
a	O
compiler	O
in	O
.NET	O
.	O
A	O
different	O
angle	O
altogether	O
is	O
to	O
try	O
PowerShell	O
.	O
There	O
are	O
numerous	O
examples	O
of	O
embedding	O
PowerShell	O
into	O
an	O
application	O
--	O
here	O
's	O
a	O
thorough	O
project	O
on	O
the	O
topic	O
:	O
Powershell	O
Tunnel	O
You	O
might	O
be	O
able	O
to	O
use	O
IronRuby	O
for	O
that	O
.	O
Otherwise	O
I	O
'd	O
suggest	O
you	O
have	O
a	O
directory	O
where	O
you	O
place	O
precompiled	O
assemblies	O
.	O
Then	O
you	O
could	O
have	O
a	O
reference	O
in	O
the	O
DB	O
to	O
the	O
assembly	O
and	O
class	O
,	O
and	O
use	O
reflection	O
to	O
load	O
the	O
proper	O
assemblies	O
at	O
runtime	O
.	O
If	O
you	O
really	O
want	O
to	O
compile	O
at	O
run-time	O
you	O
could	O
use	O
the	O
CodeDOM	O
,	O
then	O
you	O
could	O
use	O
reflection	O
to	O
load	O
the	O
dynamic	O
assembly	O
.	O
MSDN	O
article	O
which	O
might	O
help	O
.	O
You	O
could	O
use	O
any	O
of	O
the	O
DLR	O
languages	O
,	O
which	O
provide	O
a	O
way	O
to	O
really	O
easily	O
host	O
your	O
own	O
scripting	O
platform	O
.	O
However	O
,	O
you	O
do	O
n't	O
have	O
to	O
use	O
a	O
scripting	O
language	O
for	O
this	O
.	O
You	O
could	O
use	O
C	O
#	O
and	O
compile	O
it	O
with	O
the	O
C	O
#	O
code	O
provider	O
.	O
As	O
long	O
as	O
you	O
load	O
it	O
in	O
its	O
own	O
AppDomain	O
,	O
you	O
can	O
load	O
and	O
unload	O
it	O
to	O
your	O
heart	O
's	O
content	O
.	O
If	O
you	O
do	O
n't	O
want	O
to	O
use	O
the	O
DLR	O
you	O
can	O
use	O
Boo	O
(	O
which	O
has	O
an	O
interpreter	O
)	O
or	O
you	O
could	O
consider	O
the	O
Script.NET	B-API
(	I-API
S	I-API
#	I-API
)	I-API
project	O
on	O
CodePlex	O
.	O
With	O
the	O
Boo	O
solution	O
you	O
can	O
choose	O
between	O
compiled	O
scripts	O
or	O
using	O
the	O
interpreter	O
,	O
and	O
Boo	O
makes	O
a	O
nice	O
scripting	O
language	O
,	O
has	O
a	O
flexible	O
syntax	O
and	O
an	O
extensible	O
language	O
via	O
its	O
open	O
compiler	O
architecture	O
.	O
Script.NET	O
looks	O
nice	O
too	O
,	O
though	O
,	O
and	O
you	O
could	O
easily	O
extend	O
that	O
language	O
as	O
well	O
as	O
its	O
an	O
open	O
source	O
project	O
and	O
uses	O
a	O
very	O
friendly	O
Compiler	O
Generator	B-API
(	I-API
Irony.net	I-API
)	I-API
.	O
As	O
far	O
as	O
I	O
can	O
tell	O
Python	O
,	O
up	O
through	O
2.5	O
,	O
only	O
supports	O
hexadecimal	O
octal	O
literals	O
.	O
I	O
did	O
find	O
some	O
discussions	O
about	O
adding	O
binary	O
to	O
future	O
versions	O
but	O
nothing	O
definite	O
.	O
I	O
am	O
pretty	O
sure	O
this	O
is	O
one	O
of	O
the	O
things	O
due	O
to	O
change	O
in	O
Python	O
3.0	O
with	O
perhaps	O
bin	O
(	O
)	O
to	O
go	O
with	O
hex	B-API
(	I-API
)	I-API
and	O
oct	B-API
(	I-API
)	I-API
.	O
EDIT	O
:	O
lbrandy	O
's	O
answer	O
is	O
correct	O
in	O
all	O
cases	O
.	O
print	O
int	B-API
(	I-API
'01010101111',2	I-API
)	I-API
687	O
print	O
int	B-API
(	I-API
'11111111',2	I-API
)	I-API
255	O
Another	O
way	O
.	O
break	O
would	O
stop	O
the	O
foreach	O
loop	O
completely	O
,	O
continue	O
would	O
skip	O
to	O
the	O
next	O
DataRow	O
will	O
exit	O
the	O
loop	O
completely	O
,	O
will	O
just	O
skip	O
the	O
current	O
iteration	O
.	O
For	O
example	O
:	O
for	O
(	O
int	O
i	O
=	O
0	O
;	O
i	O
10	O
;	O
i++	O
)	O
{	O
if	O
(	O
i	O
==	O
0	O
)	O
break	O
;	O
(	O
i	O
)	O
;	O
}	O
The	O
break	O
will	O
cause	O
the	O
loop	O
to	O
exit	O
on	O
the	O
first	O
iteration	O
-	O
will	O
never	O
be	O
executed	O
.	O
This	O
here	O
:	O
for	O
(	O
int	O
i	B-API
=	B-API
;	O
i	O
10	O
;	O
i++	O
)	O
{	O
if	O
(	O
i	O
==	O
0	O
)	O
continue	O
;	O
(	O
i	O
)	O
;	O
}	O
Will	O
not	O
execute	O
DoSomeThingWith	O
for	O
i	O
=	O
0	O
,	O
but	O
the	O
loop	O
will	O
continue	O
and	O
DoSomeThingWith	O
will	O
be	O
executed	O
for	O
i	B-API
=	B-API
to	O
i	B-API
=	B-API
.	O
A	O
really	O
easy	O
way	O
to	O
understand	O
this	O
is	O
to	O
place	O
the	O
word	O
``	O
loop	O
''	O
after	O
each	O
of	O
the	O
keywords	O
.	O
The	O
terms	O
now	O
make	O
sense	O
if	O
they	O
are	O
just	O
read	O
like	O
everyday	O
phrases	O
.	O
break	O
loop	O
-	O
looping	O
is	O
broken	O
and	O
stops	O
continue	O
loop	O
-	O
loop	O
continues	O
to	O
execute	O
with	O
the	O
next	O
iteration	O
There	O
are	O
more	O
than	O
a	O
few	O
people	O
who	O
do	O
n't	O
like	O
and	O
.	O
The	O
latest	O
complaint	O
I	O
saw	O
about	O
them	O
was	O
in	O
JavaScript	O
:	O
The	O
Good	O
Parts	O
by	O
Douglas	O
Crockford	O
.	O
But	O
I	O
find	O
that	O
sometimes	O
using	O
one	O
of	O
them	O
really	O
simplifies	O
things	O
,	O
especially	O
if	O
your	O
language	O
does	O
n't	O
include	O
a	O
or	O
style	O
of	O
loop	O
.	O
I	O
tend	O
to	O
use	O
in	O
loops	O
that	O
are	O
searching	O
a	O
list	O
for	O
something	O
.	O
Once	O
found	O
,	O
there	O
's	O
no	O
point	O
in	O
continuing	O
,	O
so	O
you	O
might	O
as	O
well	O
quit	O
.	O
I	O
use	O
when	O
doing	O
something	O
with	O
most	O
elements	O
of	O
a	O
list	O
,	O
but	O
still	O
want	O
to	O
skip	O
over	O
a	O
few	O
.	O
The	O
statement	O
also	O
comes	O
in	O
handy	O
when	O
polling	O
for	O
a	O
valid	O
response	O
from	O
somebody	O
or	O
something	O
.	O
Instead	O
of	O
:	O
Ask	O
a	O
questionWhile	O
the	O
answer	O
is	O
invalid	O
:	O
Ask	O
the	O
You	O
could	O
eliminate	O
some	O
duplication	O
and	O
use	O
:	O
While	O
True	O
:	O
Ask	O
a	O
question	O
If	O
the	O
answer	O
is	O
valid	O
:	O
The	O
loop	O
that	O
I	O
mentioned	O
before	O
is	O
the	O
more	O
elegant	O
solution	O
for	O
that	O
particular	O
problem	O
:	O
Do	O
:	O
Ask	O
a	O
question	O
Until	O
the	O
answer	O
is	O
No	O
duplication	O
,	O
and	O
no	O
needed	O
either	O
.	O
Ruby	O
unfortunately	O
is	O
a	O
bit	O
different	O
.	O
PS	O
:	O
My	O
memory	O
is	O
a	O
bit	O
hazy	O
on	O
this	O
so	O
apologies	O
if	O
I	O
'm	O
wrong	O
instead	O
of	O
break/continue	O
,	O
it	O
has	O
break/next	O
,	O
which	O
behave	O
the	O
same	O
in	O
terms	O
of	O
loops	O
Loops	O
(	O
like	O
everything	O
else	O
)	O
are	O
expressions	O
,	O
and	O
``	O
return	O
''	O
the	O
last	O
thing	O
that	O
they	O
did	O
.	O
Most	O
of	O
the	O
time	O
,	O
getting	O
the	O
return	O
value	O
from	O
a	O
loop	O
is	O
pointless	O
,	O
so	O
everyone	O
just	O
does	O
this	O
a	B-API
=	B-API
5while	B-API
a	B-API
10	B-API
a	B-API
+	B-API
You	O
can	O
however	O
do	O
this	O
a	B-API
=	B-API
5b	B-API
=	B-API
while	B-API
a	B-API
10	B-API
a	B-API
+	B-API
1end	B-API
#	B-API
b	B-API
is	B-API
now	B-API
HOWEVER	O
,	O
a	O
lot	O
of	O
ruby	O
code	O
'emulates	O
'	O
a	O
loop	O
by	O
using	O
a	O
block	O
.	O
The	O
canonical	O
example	O
is	O
10.times	B-API
do	B-API
|x|	B-API
puts	B-API
As	O
it	O
is	O
much	O
more	O
common	O
for	O
people	O
to	O
want	O
to	O
do	O
things	O
with	O
the	O
result	O
of	O
a	O
block	O
,	O
this	O
is	O
where	O
it	O
gets	O
messy	O
.	O
break/next	O
mean	O
different	O
things	O
in	O
the	O
context	O
of	O
a	O
block	O
.	O
break	O
will	O
jump	O
out	O
of	O
the	O
code	O
that	O
called	O
the	O
block	O
next	O
will	O
skip	O
the	O
rest	O
of	O
the	O
code	O
in	O
the	O
block	O
,	O
and	O
'return	O
'	O
what	O
you	O
specify	O
to	O
the	O
caller	O
of	O
the	O
block	O
.	O
This	O
does	O
n't	O
make	O
any	O
sense	O
without	O
examples	O
.	O
def	O
timesten	O
10.times	O
{	O
|t|	O
puts	O
yield	O
t	O
}	O
endtimesten	O
do	O
|x|	O
x	O
*	O
2end	O
#	O
will	O
print2468	O
...	O
and	O
so	O
ontimesten	O
do	O
|x|	O
break	O
x	O
*	O
2end	O
#	O
wo	O
n't	O
print	O
anything	O
.	O
The	O
break	O
jumps	O
out	O
of	O
the	O
timesten	O
function	O
entirely	O
,	O
and	O
the	O
call	O
to	O
`puts`	O
inside	O
it	O
gets	O
skippedtimesten	O
do	O
|x|	O
break	O
5	O
x	O
*	O
2end	O
#	O
This	O
is	O
the	O
same	O
as	O
above	O
.	O
it	O
's	O
``	O
returning	O
''	O
5	O
,	O
but	O
nobody	O
is	O
catching	O
it	O
.	O
If	O
you	O
did	O
a	O
=	O
timesten	O
...	O
then	O
a	O
would	O
get	O
assigned	O
to	O
5timeste	O
do	O
|x|	O
next	O
5	O
x	O
*	O
2end	O
#	O
this	O
would	O
print555	O
...	O
and	O
so	O
on	O
,	O
because	O
'next	O
5	O
'	O
skips	O
the	O
'x	O
*	O
2	O
'	O
and	O
'returns	O
'	O
So	O
yeah	O
.	O
Ruby	O
is	O
awesome	O
,	O
but	O
it	O
has	O
some	O
awful	O
corner-cases	O
.	O
This	O
is	O
the	O
second	O
worst	O
one	O
I	O
've	O
seen	O
in	O
my	O
years	O
of	O
using	O
it	O
:	O
-	O
)	O
I	O
like	O
MbUnit	O
,	O
er	O
,	O
Gallio	O
.	O
Most	O
importantly	O
to	O
me	O
is	O
having	O
good	O
tools	O
support	O
inside	O
Visual	O
Studio	O
.	O
For	O
that	O
I	O
use	O
Resharper	O
,	O
which	O
has	O
an	O
MbUnit	O
test	O
runner	O
.	O
A	O
lot	O
of	O
folks	O
seem	O
to	O
like	O
TestDriven.NET	B-API
as	O
their	O
test	O
runner	O
as	O
well	O
.	O
I	O
like	O
TestDriven.NET	B-API
(	O
even	O
though	O
I	O
use	O
ReSharper	O
)	O
and	O
I	O
'm	O
pretty	O
happy	O
with	O
XUnit.net	B-API
.	O
It	O
uses	O
Facts	O
instead	O
of	O
Tests	O
which	O
many	O
people	O
dislike	O
but	O
I	O
like	O
the	O
difference	O
in	O
terminology	O
.	O
It	O
's	O
useful	O
to	O
think	O
of	O
a	O
collection	O
of	O
automatically	O
provable	O
Facts	O
about	O
your	O
software	O
and	O
see	O
which	O
ones	O
you	O
violate	O
when	O
you	O
make	O
a	O
change	O
.	O
Be	O
aware	O
that	O
Visual	O
Studio	O
2008	O
Professional	O
(	O
and	O
above	O
)	O
now	O
comes	O
with	O
integrated	O
Unit	O
Testing	O
(	O
it	O
used	O
to	O
be	O
available	O
only	O
with	O
the	O
Team	O
System	O
Editions	O
)	O
and	O
may	O
be	O
suitable	O
for	O
your	O
needs	O
.	O
There	O
are	O
so	O
many	O
it	O
's	O
crazy	O
.	O
Crazy	O
good	O
,	O
I	O
guess	O
.	O
For	O
the	O
conservative	O
types	O
(	O
me	O
)	O
,	O
NUnit	O
is	O
still	O
available	O
and	O
still	O
more	O
than	O
capable	O
.	O
For	O
the	O
Microsoft-types	O
,	O
MSTest	O
is	O
adequate	O
,	O
but	O
slow	O
and	O
clunky	O
compared	O
to	O
Nunit	O
.	O
It	O
also	O
lacks	O
code	O
coverage	O
without	O
paying	O
the	O
big	O
bucks	O
for	O
the	O
pricey	O
versions	O
of	O
Visual	O
Studio	O
.	O
There	O
's	O
also	O
MbUnit	O
.	O
It	O
's	O
like	O
NUnit	O
,	O
but	O
has	O
nifty	O
features	O
like	O
RowTest	B-API
(	O
run	O
the	O
same	O
test	O
with	O
different	O
parameters	O
)	O
and	O
Rollback	B-API
(	O
put	O
the	O
database	O
back	O
like	O
you	O
found	O
it	O
after	O
a	O
test	O
)	O
And	O
finally	O
,	O
xUnit.net	B-API
is	O
the	O
trendy	O
option	O
with	O
some	O
attitude	O
.	O
Oh	O
,	O
and	O
TestDriven.NET	B-API
will	O
give	O
you	O
IDE	O
integration	O
for	O
both	O
Nunit	O
and	O
MBunit	O
.	O
I	O
'm	O
sure	O
they	O
're	O
all	O
just	O
fine	O
.	O
I	O
'd	O
steer	O
away	O
from	O
MSTest	O
though	O
,	O
unless	O
you	O
just	O
enjoy	O
the	O
convenience	O
of	O
having	O
everything	O
in	O
one	O
IDE	O
out	O
of	O
the	O
box	O
.	O
Scott	O
Hanselman	O
has	O
a	O
podcast	O
on	O
this	O
very	O
topic	O
.	O
xUnit.net	B-API
looks	O
like	O
it	O
provides	O
a	O
slightly	O
different	O
approach	O
to	O
N/MB/MS/Unit	O
,	O
which	O
is	O
interesting	O
.	O
In	O
my	O
search	O
for	O
an	O
rspec-like	O
solution	O
(	O
because	O
I	O
LOVE	O
the	O
rspec	O
)	O
,	O
I	O
also	O
came	O
across	O
NSpec	O
,	O
which	O
looks	O
a	O
bit	O
wordy	O
,	O
but	O
combined	O
with	O
the	O
NSpec	O
Extensions	O
addon	O
to	O
use	O
C	O
#	O
3	O
extension	O
methods	O
,	O
it	O
looks	O
pretty	O
nice	O
.	O
We	O
use	O
NUnit	O
and	O
MBUnit	O
here	O
.	O
We	O
use	O
TestDriven.NET	B-API
to	O
run	O
the	O
unit	O
tests	O
from	O
within	O
Visual	O
Studio	O
.	O
We	O
use	O
the	O
excellent	O
,	O
highly	O
recommended	O
RhinoMocks	O
as	O
a	O
mock	O
framework	O
.	O
I	O
used	O
to	O
use	O
NUnit	O
,	O
but	O
I	O
switched	O
to	O
MbUnit	O
since	O
it	O
has	O
more	O
features	O
.	O
I	O
love	O
RowTest	O
.	O
It	O
lets	O
you	O
parametrize	O
your	O
tests	O
.	O
NUnit	O
does	O
have	O
a	O
litter	O
bit	O
better	O
tool	O
support	O
though	O
.	O
I	O
am	O
using	O
ReSharper	O
to	O
run	O
MbUnit	O
Tests	O
.	O
I	O
've	O
had	O
problems	O
with	O
TestDriven.NET	B-API
running	O
my	O
SetUp	O
methods	O
for	O
MbUnit	O
.	O
No	O
,	O
you	O
were	O
not	O
dreaming	O
.	O
Python	O
has	O
a	O
pretty	O
excellent	O
list	O
comprehension	O
system	O
that	O
lets	O
you	O
manipulate	O
lists	O
pretty	O
elegantly	O
,	O
and	O
depending	O
on	O
exactly	O
what	O
you	O
want	O
to	O
accomplish	O
,	O
this	O
can	O
be	O
done	O
a	O
couple	O
of	O
ways	O
.	O
In	O
essence	O
,	O
what	O
you	O
're	O
doing	O
is	O
saying	O
``	O
For	O
item	O
in	O
list	O
if	O
criteria.matches	O
''	O
,	O
and	O
from	O
that	O
you	O
can	O
just	O
iterate	O
through	O
the	O
results	O
or	O
dump	O
the	O
results	O
into	O
a	O
new	O
list	O
.	O
I	O
'm	O
going	O
to	O
crib	O
an	O
example	O
from	O
Dive	O
Into	O
Python	O
here	O
,	O
because	O
it	O
's	O
pretty	O
elegant	O
and	O
they	O
're	O
smarter	O
than	O
I	O
am	O
.	O
Here	O
they	O
're	O
getting	O
a	O
list	O
of	O
files	O
in	O
a	O
directory	O
,	O
then	O
filtering	O
the	O
list	O
for	O
all	O
files	O
that	O
match	O
a	O
regular	O
expression	O
criteria	O
.	O
files	O
=	O
os.listdir	B-API
(	I-API
path	I-API
)	I-API
test	O
=	O
re.compile	B-API
(	I-API
``	I-API
test\.py	I-API
$	I-API
''	I-API
,	I-API
re.IGNORCASE	I-API
)	I-API
files	O
=	O
[	O
f	O
for	O
f	O
in	O
files	O
if	O
test.search	B-API
(	I-API
f	I-API
)	I-API
]	O
You	O
could	O
do	O
this	O
without	O
regular	O
expressions	O
,	O
for	O
your	O
example	O
,	O
for	O
anything	O
where	O
your	O
expression	O
at	O
the	O
end	O
returns	O
true	O
for	O
a	O
match	O
.	O
There	O
are	O
other	O
options	O
like	O
using	O
the	O
filter	B-API
(	I-API
)	I-API
function	O
,	O
but	O
if	O
I	O
were	O
going	O
to	O
choose	O
,	O
I	O
'd	O
go	O
with	O
this	O
.	O
Eric	O
Sipple	O
I	O
think	O
:	O
#	O
!	O
/bin/pythonbar	O
in	O
dict	B-API
(	I-API
Foo	I-API
)	I-API
Is	O
what	O
you	O
are	O
thinking	O
of	O
.	O
When	O
trying	O
to	O
see	O
if	O
a	O
certain	O
key	O
exists	O
within	O
a	O
dictionary	O
in	O
python	O
(	O
python	O
's	O
version	O
of	O
a	O
hash	O
table	O
)	O
there	O
are	O
two	O
ways	O
to	O
check	O
.	O
First	O
is	O
the	O
has_key	B-API
(	I-API
)	I-API
method	O
attached	O
to	O
the	O
dictionary	O
and	O
second	O
is	O
the	O
example	O
given	O
above	O
.	O
It	O
will	O
return	O
a	O
boolean	O
value	O
.	O
That	O
should	O
answer	O
your	O
question	O
.	O
And	O
now	O
a	O
little	O
off	O
topic	O
to	O
tie	O
this	O
in	O
to	O
the	O
list	O
comprehension	O
answer	O
previously	O
given	O
(	O
for	O
a	O
bit	O
more	O
clarity	O
)	O
.	O
List	O
Comprehensions	O
construct	O
a	O
list	O
from	O
a	O
basic	O
for	O
loop	O
with	O
modifiers	O
.	O
As	O
an	O
example	O
(	O
to	O
clarify	O
slightly	O
)	O
,	O
a	O
way	O
to	O
use	O
the	O
in	O
language	O
construct	O
in	O
a	O
_list	O
comprehension_	O
:	O
Say	O
you	O
have	O
a	O
two	O
dimensional	O
dictionary	O
and	O
you	O
only	O
want	O
the	O
second	O
dimension	O
dictionaries	O
which	O
contain	O
the	O
key	O
.	O
A	O
relatively	O
straightforward	O
way	O
to	O
do	O
so	O
would	O
be	O
to	O
use	O
a	O
list	O
comprehension	O
with	O
a	O
conditional	O
as	O
follows	O
:	O
#	O
!	O
/bin/pythonbaz	O
=	O
for	O
key	O
,	O
value	O
in	O
foo	O
if	O
bar	O
in	O
(	O
[	O
(	O
key	O
,	O
value	O
)	O
Note	O
the	O
if	O
bar	O
in	O
at	O
the	O
end	O
of	O
the	O
statement	O
,	O
this	O
is	O
a	O
modifying	O
clause	O
which	O
tells	O
the	O
list	O
comprehension	O
to	O
only	O
keep	O
those	O
key-value	O
pairs	O
which	O
meet	O
the	O
conditional	O
.	O
In	O
this	O
case	O
is	O
a	O
new	O
dictionary	O
which	O
contains	O
only	O
the	O
dictionaries	O
from	O
foo	O
which	O
contain	O
bar	O
(	O
Hopefully	O
I	O
did	O
n't	O
miss	O
anything	O
in	O
that	O
code	O
example	O
...	O
you	O
may	O
have	O
to	O
take	O
a	O
look	O
at	O
the	O
list	O
comprehension	O
documentation	O
found	O
in	O
docs.python.org	O
tutorials	O
and	O
at	O
secnetix.de	O
,	O
both	O
sites	O
are	O
good	O
references	O
if	O
you	O
have	O
questions	O
in	O
the	O
future	O
.	O
)	O
.	O
Are	O
you	O
looking	O
to	O
get	O
a	O
list	O
of	O
objects	O
that	O
have	O
a	O
certain	O
attribute	O
?	O
If	O
so	O
,	O
a	O
list	O
comprehension	O
is	O
the	O
right	O
way	O
to	O
do	O
this	O
.	O
result	O
=	O
[	O
obj	O
for	O
obj	O
in	O
listOfObjs	O
if	O
(	O
obj	O
,	O
'attributeName	O
'	O
)	O
