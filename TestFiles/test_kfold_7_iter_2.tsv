For	O
most	O
needs	O
on	O
the	O
desktop	O
you	O
wont	O
need	O
to	O
know	O
the	O
Win32	O
,	O
however	O
there	O
is	O
a	O
LOT	O
of	O
Win32	O
not	O
in	O
.NET	O
,	O
but	O
it	O
is	O
in	O
the	O
outlaying	O
stuff	O
that	O
may	O
end	O
up	O
being	O
less	O
than	O
1	O
%	O
of	O
your	O
application	O
.	O
USB	O
support	O
,	O
HID	O
support	O
,	O
Windows	O
Media	O
Foundation	O
just	O
off	O
the	O
top	O
of	O
my	O
head	O
.	O
There	O
are	O
many	O
cool	O
Vista	B-API
API	I-API
's	O
only	O
available	O
from	O
Win32	O
.	O
You	O
will	O
do	O
yourself	O
a	O
large	O
favor	O
by	O
learning	O
how	O
to	O
do	O
interop	O
with	O
a	O
Win32	B-API
API	I-API
,	O
if	O
you	O
do	O
desktop	O
programing	O
,	O
because	O
when	O
you	O
do	O
need	O
to	O
call	O
Win32	O
,	O
and	O
you	O
will	O
,	O
you	O
wo	O
n't	O
spend	O
weeks	O
scratching	O
your	O
head	O
.	O
You	O
could	O
always	O
do	O
this	O
:	O
string	O
[	O
]	O
temp	O
=	O
new	O
int	O
LastCount	O
=	O
mydict	O
[	O
temp	O
[	O
mydict.count	B-API
-	O
[	O
mydict.count	B-API
]	O
;	O
mydict.Keys.CopyTo	B-API
(	I-API
temp	I-API
,	I-API
0	I-API
)	I-API
But	O
I	O
would	O
n't	O
recommend	O
it	O
.	O
There	O
's	O
no	O
guarantee	O
that	O
the	O
last	O
inserted	O
key	O
will	O
be	O
at	O
the	O
end	O
of	O
the	O
array	O
.	O
The	O
ordering	O
for	O
Keys	O
on	O
MSDN	O
is	O
unspecified	O
,	O
and	O
subject	O
to	O
change	O
.	O
In	O
my	O
very	O
brief	O
test	O
,	O
it	O
does	O
seem	O
to	O
be	O
in	O
order	O
of	O
insertion	O
,	O
but	O
you	O
'd	O
be	O
better	O
off	O
building	O
in	O
proper	O
bookkeeping	O
like	O
a	O
stack	O
--	O
as	O
you	O
suggest	O
(	O
though	O
I	O
do	O
n't	O
see	O
the	O
need	O
of	O
a	O
struct	O
based	O
on	O
your	O
other	O
statements	O
)	O
--	O
or	O
single	O
variable	O
cache	O
if	O
you	O
just	O
need	O
to	O
know	O
the	O
latest	O
key	O
.	O
I	O
do	O
n't	O
know	O
if	O
this	O
would	O
work	O
because	O
I	O
'm	O
pretty	O
sure	O
that	O
the	O
keys	O
are	O
n't	O
stored	O
in	O
the	O
order	O
they	O
are	O
added	O
,	O
but	O
you	O
could	O
cast	O
the	O
KeysCollection	O
to	O
a	O
List	O
and	O
then	O
get	O
the	O
last	O
key	O
in	O
the	O
list	O
...	O
but	O
it	O
would	O
be	O
worth	O
having	O
a	O
look	O
.	O
The	O
only	O
other	O
thing	O
I	O
can	O
think	O
of	O
is	O
to	O
store	O
the	O
keys	O
in	O
a	O
lookup	O
list	O
and	O
add	O
the	O
keys	O
to	O
the	O
list	O
before	O
you	O
add	O
them	O
to	O
the	O
dictionary	O
...	O
it	O
's	O
not	O
pretty	O
tho	O
.	O
I	O
think	O
you	O
can	O
do	O
something	O
like	O
this	O
,	O
the	O
syntax	O
might	O
be	O
wrong	O
,	O
havent	O
used	O
C	O
#	O
in	O
a	O
while	O
To	O
get	O
the	O
last	O
item	O
Dictionarystring	O
,	O
int.KeyCollection	O
keys	O
=	O
mydict.keys	B-API
;	O
string	O
lastKey	O
=	O
keys.Last	B-API
(	I-API
)	I-API
;	O
or	O
use	O
Max	O
instead	O
of	O
Last	O
to	O
get	O
the	O
max	O
value	O
,	O
I	O
dont	O
know	O
which	O
one	O
fits	O
your	O
code	O
better	O
.	O
I	O
agree	O
with	O
the	O
second	O
part	O
of	O
Patrick	O
's	O
answer	O
.	O
Even	O
if	O
in	O
some	O
tests	O
it	O
seems	O
to	O
keep	O
insertion	O
order	O
,	O
the	O
documentation	O
(	O
and	O
normal	O
behavior	O
for	O
dictionaries	O
and	O
hashes	O
)	O
explicitly	O
states	O
the	O
ordering	O
is	O
unspecified	O
.	O
You	O
're	O
just	O
asking	O
for	O
trouble	O
depending	O
on	O
the	O
ordering	O
of	O
the	O
keys	O
.	O
Add	O
your	O
own	O
bookkeeping	O
(	O
as	O
Patrick	O
said	O
,	O
just	O
a	O
single	O
variable	O
for	O
the	O
last	O
added	O
key	O
)	O
to	O
be	O
sure	O
.	O
Also	O
,	O
do	O
n't	O
be	O
tempted	O
by	O
all	O
the	O
methods	O
such	O
as	O
Last	O
and	O
Max	O
on	O
the	O
dictionary	O
as	O
those	O
are	O
probably	O
in	O
relation	O
to	O
the	O
key	O
comparator	O
(	O
I	O
'm	O
not	O
sure	O
about	O
that	O
)	O
.	O
The	O
way	O
you	O
worded	O
the	O
question	O
leads	O
me	O
to	O
believe	O
that	O
the	O
int	O
in	O
the	O
Dictionary	O
contains	O
the	O
item	O
's	O
``	O
position	O
''	O
on	O
the	O
Dictionary	O
.	O
Judging	O
from	O
the	O
assertion	O
that	O
the	O
keys	O
are	O
n't	O
stored	O
in	O
the	O
order	O
that	O
they	O
're	O
added	O
,	O
if	O
this	O
is	O
correct	O
,	O
that	O
would	O
mean	O
that	O
keys.Count	B-API
(	O
or	O
.Count	O
-	O
1	O
,	O
if	O
you	O
're	O
using	O
zero-based	O
)	O
should	O
still	O
always	O
be	O
the	O
number	O
of	O
the	O
last-entered	O
key	O
?	O
If	O
that	O
's	O
correct	O
,	O
is	O
there	O
any	O
reason	O
you	O
ca	O
n't	O
instead	O
use	O
Dictionaryint	O
,	O
string	O
so	O
that	O
you	O
can	O
use	O
mydict	O
[	O
mydict.Keys.Count	B-API
]	O
?	O
Why	O
do	O
n't	O
you	O
just	O
extend	O
the	O
dictionary	O
class	O
to	O
add	O
in	O
a	O
last	O
key	O
inserted	O
property	O
.	O
Something	O
like	O
the	O
following	O
maybe	O
?	O
public	O
class	O
ExtendedDictionary	O
:	O
Dictionarystring	O
,	O
int	O
{	O
private	O
int	O
lastKeyInserted	O
=	O
-1	O
;	O
public	O
int	O
LastKeyInserted	O
{	O
get	O
{	O
return	O
lastKeyInserted	O
;	O
}	O
set	O
{	O
lastKeyInserted	O
=	O
value	O
;	O
}	O
}	O
public	O
void	O
AddNew	O
(	O
string	O
s	O
,	O
int	O
i	O
)	O
{	O
lastKeyInserted	O
=	O
i	O
;	O
base.Add	O
(	O
s	O
,	O
i	O
)	O
;	O
}	O
}	O
You	O
can	O
use	O
an	O
OrderedDictionary	O
.	O
Represents	O
a	O
collection	O
of	O
key/value	O
pairs	O
that	O
are	O
accessible	O
by	O
the	O
key	O
or	O
index	O
.	O
I	O
know	O
that	O
if	O
you	O
use	O
a	O
paging	O
repeater	O
or	O
gridview	O
with	O
the	O
linqdatasource	O
it	O
will	O
automatically	O
optimize	O
the	O
number	O
of	O
results	O
returned	O
,	O
but	O
I	O
'm	O
also	O
pretty	O
sure	O
in	O
the	O
datasource	O
wizard	O
you	O
can	O
go	O
to	O
advanced	O
options	O
and	O
limit	O
it	O
to	O
SELECT	O
TOP	O
3	O
FROM	O
which	O
should	O
allow	O
you	O
to	O
do	O
what	O
you	O
need	O
For	O
C++	O
,	O
a	O
map	O
works	O
well	O
.	O
Several	O
million	O
objects	O
wo	O
n't	O
be	O
a	O
problem	O
.	O
10	O
million	O
items	O
took	O
about	O
4.4	O
seconds	O
and	O
about	O
57	O
meg	O
on	O
my	O
computer	O
.	O
#	O
include	O
stdio.h	O
#	O
include	O
stdlib.h	O
#	O
include	O
map	O
class	O
triple	O
{	O
public	O
:	O
int	O
x	O
;	O
int	O
y	O
;	O
int	O
z	O
;	O
bool	O
operator	O
(	O
const	O
triple	O
other	O
)	O
const	O
{	O
if	O
(	O
x	O
other.x	O
)	O
return	O
true	O
;	O
if	O
(	O
other.x	O
x	O
)	O
return	O
false	O
;	O
if	O
(	O
y	O
other.y	O
)	O
return	O
true	O
;	O
if	O
(	O
other.y	O
y	O
)	O
return	O
false	O
;	O
return	O
z	O
other.z	O
;	O
}	O
}	O
;	O
int	O
main	O
(	O
int	O
,	O
char**	O
)	O
{	O
std	O
:	O
:maptriple	O
,	O
int	O
data	O
;	O
triple	O
point	O
;	O
int	O
i	O
;	O
for	O
(	O
i	O
=	O
0	O
;	O
i	O
10000000	O
;	O
++i	O
)	O
{	O
point.x	O
=	O
rand	O
(	O
)	O
;	O
point.y	O
=	O
rand	O
(	O
)	O
;	O
point.z	O
=	O
rand	B-API
(	I-API
)	I-API
;	O
//printf	O
(	O
``	O
%	O
d	O
%	O
d	O
%	O
d	O
%	O
d\n	O
''	O
,	O
i	O
,	O
point.x	O
,	O
point.y	O
,	O
point.z	O
)	O
;	O
data	O
[	O
point	O
]	O
=	O
i	O
;	O
}	O
return	O
0	O
;	O
}	O
For	O
multiple	O
variables	O
:	O
The	O
easiest	O
way	O
is	O
to	O
make	O
the	O
index	O
a	O
string	O
,	O
and	O
then	O
make	O
the	O
index	O
strings	O
look	O
like	O
``	O
23,55	O
''	O
(	O
2	O
vars	O
)	O
or	O
``	O
34,45,56	O
''	O
(	O
3	O
vars	O
)	O
:	O
std	O
:	O
:map	O
datastring	O
,	O
int	O
data	O
;	O
char	O
ix	O
[	O
100	O
]	O
;	O
sprintf	B-API
(	I-API
ix	I-API
,	I-API
``	I-API
%	I-API
d	I-API
,	I-API
%	I-API
d	I-API
''	I-API
,	I-API
x	I-API
,	I-API
y	I-API
)	I-API
;	O
//	O
2	O
vars	O
data	O
[	O
ix	O
]	O
=	O
i	O
;	O
sprintf	B-API
(	I-API
ix	I-API
,	I-API
``	I-API
%	I-API
d	I-API
,	I-API
%	I-API
d	I-API
,	I-API
%	I-API
d	I-API
''	I-API
,	I-API
x	I-API
,	I-API
y	I-API
,	I-API
z	I-API
)	I-API
;	O
//	O
3	O
vars	O
data	O
[	O
ix	O
]	O
=	O
i	O
;	O
Hash	O
tables	O
have	O
a	O
fast	O
insertion	O
and	O
look	O
up	O
.	O
You	O
could	O
write	O
a	O
simple	O
hash	O
function	O
since	O
you	O
know	O
you	O
'd	O
be	O
dealing	O
with	O
only	O
integer	O
pairs	O
as	O
the	O
keys	O
.	O
For	O
multiple	O
variables	O
:	O
The	O
easiest	O
way	O
is	O
to	O
make	O
the	O
index	O
a	O
string	O
,	O
and	O
then	O
make	O
the	O
index	O
strings	O
look	O
like	O
``	O
23,55	O
''	O
(	O
2	O
vars	O
)	O
or	O
``	O
34,45,56	O
''	O
(	O
3	O
vars	O
)	O
:	O
std	O
:	O
:map	O
datastring	O
,	O
int	O
data	O
;	O
char	O
ix	O
[	O
100	O
]	O
;	O
sprintf	B-API
(	I-API
ix	I-API
,	I-API
``	I-API
%	I-API
d	I-API
,	I-API
%	I-API
d	I-API
''	I-API
,	I-API
x	I-API
,	I-API
y	I-API
)	I-API
;	O
//	O
2	O
vars	O
data	O
[	O
ix	O
]	O
=	O
i	O
;	O
sprintf	B-API
(	I-API
ix	I-API
,	I-API
``	I-API
%	I-API
d	I-API
,	I-API
%	I-API
d	I-API
,	I-API
%	I-API
d	I-API
''	I-API
,	I-API
x	I-API
,	I-API
y	I-API
,	I-API
z	I-API
)	I-API
;	O
//	O
3	O
vars	O
data	O
[	O
ix	O
]	O
=	O
i	O
;	O
The	O
best	O
way	O
to	O
implement	O
sparse	O
matrices	O
is	O
to	O
not	O
to	O
implement	O
them	O
-	O
atleast	O
not	O
on	O
your	O
own	O
.	O
I	O
would	O
suggest	O
to	O
BLAS	B-API
(	O
which	O
I	O
think	O
is	O
a	O
part	O
of	O
LAPACK	B-API
)	O
which	O
can	O
handle	O
really	O
huge	O
matrices	O
.	O
I	O
've	O
had	O
no	O
trouble	O
using	O
the	O
BSD	O
sockets	O
API	O
in	O
C++	O
,	O
in	O
GNU/Linux	O
.	O
Here	O
's	O
the	O
sample	O
program	O
I	O
used	O
:	O
#	B-API
include	I-API
{	B-API
return	B-API
sys/socket.hintmain	B-API
(	I-API
)	I-API
So	O
my	O
take	O
on	O
this	O
is	O
that	O
z/OS	O
is	O
probably	O
the	O
complicating	O
factor	O
here	O
,	O
however	O
,	O
because	O
I	O
've	O
never	O
used	O
z/OS	O
before	O
,	O
much	O
less	O
programmed	O
in	O
it	O
,	O
I	O
ca	O
n't	O
say	O
this	O
definitively	O
.	O
:	O
-P	O
Sure	O
I	O
can	O
post	O
a	O
test	O
app	O
.	O
#	B-API
include	I-API
sys/socket.hint	B-API
{	B-API
return	B-API
main	B-API
(	I-API
)	I-API
Compile/Link	O
Output	O
:	O
cxx	O
-Wc	O
,	O
xplink	O
-Wl	O
,	O
xplink	O
-o	O
inet_test	O
inet.C	O
''	O
./inet.C	O
''	O
,	O
line	O
5.16	O
:	O
CCN5274	O
(	O
S	O
)	O
The	O
name	O
lookup	O
for	O
``	O
AF_INET	O
''	O
did	O
not	O
find	O
a	O
declaration	O
.	O
CCN0797	O
(	O
I	O
)	O
Compilation	O
failed	O
for	O
file	O
./inet.C	O
.	O
Object	O
file	O
not	O
created	O
.	O
A	O
check	O
of	O
sys/sockets.h	O
does	O
include	O
the	O
definition	O
I	O
need	O
,	O
and	O
as	O
far	O
as	O
I	O
can	O
tell	O
,	O
it	O
is	O
not	O
being	O
blocked	O
by	O
any	O
#	O
ifdef	O
statements	O
.	O
I	O
have	O
however	O
noticed	O
it	O
contains	O
a	O
the	O
following	O
:	O
#	)-API
ifdef	O
__cplusplus	O
extern	O
``	O
C	O
''	O
which	O
encapsulates	O
basically	O
the	O
whole	O
file	O
.	O
Not	O
sure	O
if	O
it	O
matters	O
.	O
@	O
Jax	O
:	O
The	O
extern	B-API
thing	O
matters	O
,	O
very	O
very	O
much	O
.	O
If	O
a	O
header	O
file	O
does	O
n't	O
have	O
one	O
,	O
then	O
(	O
unless	O
it	O
's	O
a	O
C++-only	O
header	O
file	O
)	O
,	O
you	O
would	O
have	O
to	O
enclose	O
your	O
with	O
it	O
:	O
extern	B-API
``	B-API
C	I-API
''	I-API
{	B-API
#	I-API
include	I-API
sys/socket.h//	B-API
include	B-API
other	B-API
similarly	B-API
non-compliant	B-API
header	B-API
Basically	O
,	O
anytime	O
where	O
a	O
C++	O
program	O
wants	O
to	O
link	O
to	O
C-based	O
facilities	O
,	O
the	O
extern	B-API
is	O
vital	O
.	O
In	O
practical	O
terms	O
,	O
it	O
means	O
that	O
the	O
names	O
used	O
in	O
external	O
references	O
will	O
not	O
be	O
mangled	O
,	O
like	O
normal	O
C++	O
names	O
would	O
.	O
Reference	O
.	O
You	O
can	O
add	O
a	O
mouse	O
click	O
event	O
to	O
the	O
TreeView	B-API
,	O
then	O
select	O
the	O
correct	O
node	O
using	O
GetNodeAt	O
given	O
the	O
mouse	O
coordinates	O
provided	O
by	O
the	O
MouseEventArgs	O
.	O
void	O
treeView1MouseUp	B-API
(	I-API
object	I-API
sender	I-API
,	I-API
MouseEventArgs	I-API
e	I-API
)	I-API
{	O
if	O
(	O
e.Button	O
==	O
MouseButtons.Right	B-API
)	O
{	O
//	O
Select	O
the	O
clicked	O
node	O
treeView1.SelectedNode	O
=	O
treeView1.GetNodeAt	O
(	O
e.X	O
,	O
e.Y	O
)	O
;	O
if	O
(	O
treeView1.SelectedNode	O
!	O
=	O
null	O
)	O
{	O
myContextMenuStrip.Show	B-API
(	I-API
treeView1	I-API
,	I-API
e.Location	I-API
)	I-API
;	O
}	O
}	O
}	O
If	O
you	O
want	O
the	O
context	O
menu	O
to	O
be	O
dependent	O
on	O
the	O
selected	O
item	O
you	O
're	O
best	O
move	O
I	O
think	O
is	O
to	O
use	O
Jonesinator	O
's	O
code	O
to	O
select	O
the	O
clicked	O
item	O
.	O
Your	O
context	O
menu	O
content	O
can	O
then	O
be	O
dependent	O
on	O
the	O
selected	O
item	O
.	O
Selecting	O
the	O
item	O
first	O
as	O
opposed	O
to	O
just	O
using	O
it	O
for	O
the	O
context	O
menu	O
gives	O
a	O
few	O
advantages	O
.	O
The	O
first	O
is	O
that	O
the	O
user	O
has	O
a	O
visual	O
indication	O
as	O
to	O
which	O
he	O
clicked	O
and	O
thus	O
which	O
item	O
the	O
menu	O
is	O
associated	O
with	O
.	O
The	O
second	O
is	O
that	O
this	O
way	O
it	O
's	O
a	O
hell	O
of	O
a	O
lot	O
easier	O
to	O
keep	O
compatible	O
with	O
other	O
methods	O
of	O
invoking	O
the	O
context	O
menu	O
(	O
e.g	O
.	O
keyboard	O
shortcuts	O
)	O
.	O
for	O
C	O
#	O
3.5	O
without	O
notifyicon	O
therefore	O
you	O
will	O
need	O
to	O
terminate	O
this	O
application	O
in	O
task	O
manager	O
manually	O
using	O
System	B-API
;	O
using	O
System.Drawing	B-API
;	O
using	O
;	O
static	O
class	O
Program	O
{	O
static	O
void	O
{	O
Timer	B-API
timer	O
=	O
new	O
;	O
//	O
timer.Interval	B-API
=	O
4	O
minutes	O
timer.Interval	B-API
=	O
;	O
timer.Tick	B-API
+=	O
(	O
sender	O
,	O
args	O
)	O
=	O
{	O
Cursor.Position	B-API
=	O
new	O
;	O
}	O
;	O
;	O
;	O
Main	O
(	O
)	O
Timer	B-API
(	I-API
)	I-API
int	O
)	O
(	O
TimeSpan.TicksPerMinute	B-API
*	O
4	O
/	O
TimeSpan.TicksPerMillisecond	B-API
)	O
(	O
Cursor.Position.X	B-API
+	O
1	O
,	O
Cursor.Position.Y	B-API
+	O
1	O
)	O
timer.Start	B-API
(	I-API
)	I-API
Application.Run	B-API
(	I-API
)	I-API
Something	O
like	O
this	O
should	O
work	O
(	O
though	O
,	O
you	O
will	O
want	O
to	O
change	O
the	O
interval	O
)	O
.	O
public	O
Form1	O
(	O
)	O
{	O
InitializeComponent	B-API
(	I-API
)	I-API
;	O
Timer	B-API
Every4Minutes	O
=	O
new	O
Timer	O
(	O
)	O
;	O
Every4Minutes.Interval	B-API
=	O
10	O
;	O
Every4Minutes.Tick	B-API
+=	O
new	O
EventHandler	O
(	O
MoveNow	O
)	O
;	O
Every4Minutes.Start	B-API
(	I-API
)	I-API
;	O
}	O
void	O
MoveNow	O
(	O
object	O
sender	O
,	O
EventArgs	O
e	O
)	O
{	O
Cursor.Position	B-API
=	O
new	O
Point	O
(	O
Cursor.Position.X	B-API
-	O
1	O
,	O
Cursor.Position.Y	B-API
-	O
1	O
)	O
;	O
}	O
Boy	O
,	O
that	O
's	O
a	O
pretty	O
general	O
question	O
.	O
I	O
'll	O
do	O
my	O
best	O
,	O
but	O
be	O
prepared	O
to	O
see	O
me	O
miss	O
by	O
a	O
mile	O
.	O
Assumptions	O
You	O
are	O
using	O
ASP.NET	O
,	O
not	O
plain	O
ASP	O
You	O
do	O
n't	O
really	O
want	O
to	O
test	O
your	O
web	O
pages	O
,	O
but	O
the	O
logic	O
behind	O
them	O
.	O
Unit	O
testing	O
the	O
actual	O
.ASPX	O
pages	O
is	O
rather	O
painful	O
,	O
but	O
there	O
are	O
frameworks	O
out	O
there	O
to	O
do	O
it	O
.	O
NUnitAsp	O
is	O
one	O
.	O
The	O
first	O
thing	O
to	O
do	O
is	O
to	O
organize	O
(	O
or	O
plan	O
)	O
your	O
code	O
so	O
that	O
it	O
can	O
be	O
tested	O
.	O
The	O
two	O
most	O
popular	O
design	O
patterns	O
for	O
this	O
at	O
the	O
time	O
seem	O
to	O
be	O
MVP	O
and	O
MVC	O
.	O
Both	O
separate	O
the	O
logic	O
of	O
the	O
application	O
away	O
from	O
the	O
view	O
so	O
that	O
you	O
can	O
test	O
the	O
logic	O
without	O
the	O
view	O
(	O
web	O
pages	O
)	O
getting	O
in	O
your	O
way	O
.	O
Either	O
MVP	O
or	O
MVC	O
will	O
be	O
effective	O
.	O
MVC	O
has	O
the	O
advantage	O
of	O
having	O
a	O
Microsoft	O
framework	O
almost	O
ready	O
to	O
go	O
.	O
Once	O
you	O
've	O
selected	O
a	O
framework	O
pattern	O
that	O
encourages	O
testability	O
,	O
you	O
need	O
to	O
use	O
a	O
unit	O
testing	O
tool	O
.	O
NUnit	O
is	O
a	O
good	O
starting	O
point	O
.	O
Visual	O
Studio	O
Professional	O
has	O
a	O
testing	O
suite	O
built	O
it	O
,	O
but	O
NUnit	B-API
+	O
TestDrive.NET	B-API
also	O
works	O
in	O
the	O
IDE	O
.	O
That	O
's	O
sort	O
of	O
a	O
shotgun	O
blast	O
of	O
information	O
.	O
I	O
hope	O
some	O
if	O
it	O
hits	O
.	O
The	O
Pragmatic	O
Bookshelf	O
has	O
a	O
good	O
book	O
covering	O
the	O
topic	O
.	O
There	O
was	O
a	O
screencast	O
series	O
a	O
year	O
or	O
so	O
ago	O
on	O
Polymorphic	O
Podcast	O
that	O
did	O
a	O
pretty	O
good	O
intro	O
walkthrough	O
of	O
an	O
MVP	O
implementation	O
in	O
ASP.NET	B-API
.	O
Implemented	O
this	O
way	O
,	O
unit	O
tests	O
fall	O
into	O
place	O
much	O
more	O
naturally	O
.	O
http	O
:	O
//polymorphicpodcast.com/shows/mv-patterns/	O
The	O
former	O
will	O
throw	O
an	O
exception	O
if	O
the	O
source	O
type	O
ca	O
n't	O
be	O
cast	O
to	O
the	O
target	O
type	O
.	O
The	O
latter	O
will	O
result	O
in	O
sc2	O
being	O
a	O
null	O
reference	O
,	O
but	O
no	O
exception	O
.	O
[	O
Edit	O
]	O
My	O
original	O
answer	O
is	O
certainly	O
the	O
most	O
pronounced	O
difference	O
,	O
but	O
as	O
Eric	O
Lippert	O
points	O
out	O
,	O
it	O
's	O
not	O
the	O
only	O
one	O
.	O
Other	O
differences	O
include	O
:	O
You	O
ca	O
n't	O
use	O
the	O
'as	O
'	O
operator	O
to	O
cast	O
to	O
a	O
type	O
that	O
does	O
n't	O
accept	O
'null	O
'	O
as	O
a	O
value	O
You	O
ca	O
n't	O
use	O
'as	O
'	O
to	O
convert	O
things	O
,	O
like	O
numbers	O
to	O
a	O
different	O
representation	O
(	O
float	O
to	O
int	O
,	O
for	O
example	O
)	O
.	O
And	O
finally	O
,	O
using	O
'as	O
'	O
vs.	O
the	O
cast	O
operator	O
,	O
you	O
're	O
also	O
saying	O
``	O
I	O
'm	O
not	O
sure	O
if	O
this	O
will	O
succeed	O
.	O
''	O
The	O
parenthetical	O
cast	O
throws	O
an	O
exception	O
if	O
the	O
cast	O
attempt	O
fails	O
.	O
The	O
``	O
as	O
''	O
cast	O
returns	O
null	O
if	O
the	O
cast	O
attempt	O
fails	O
.	O
They	O
'll	O
throw	O
different	O
exceptions	O
.	O
(	O
)	O
:	O
NullReferenceException	B-API
as	O
:	O
InvalidCastException	B-API
Which	O
could	O
help	O
for	O
debugging	O
.	O
The	O
``	O
as	O
''	O
keyword	O
attempts	O
to	O
cast	O
the	O
object	O
and	O
if	O
the	O
cast	O
fails	O
,	O
null	O
is	O
returned	O
silently	O
.	O
The	O
(	O
)	O
cast	O
operator	O
will	O
throw	O
an	O
exception	O
immediately	O
if	O
the	O
cast	O
fails	O
.	O
``	O
Only	O
use	O
the	O
C	O
#	O
``	O
as	O
''	O
keyword	O
where	O
you	O
are	O
expecting	O
the	O
cast	O
to	O
fail	O
in	O
a	O
non-exceptional	O
case	O
.	O
If	O
you	O
are	O
counting	O
on	O
a	O
cast	O
to	O
succeed	O
and	O
are	O
unprepared	O
to	O
receive	O
any	O
object	O
that	O
would	O
fail	O
,	O
you	O
should	O
use	O
the	O
(	O
)	O
cast	O
operator	O
so	O
that	O
an	O
appropriate	O
and	O
helpful	O
exception	O
is	O
thrown	O
.	O
''	O
For	O
code	O
examples	O
and	O
a	O
further	O
explanation	O
:	O
http	O
:	O
//blog.nerdbank.net/2008/06/when-not-to-use-c-keyword.html	O
Also	O
note	O
that	O
you	O
can	O
only	O
use	O
the	O
as	O
keyword	O
with	O
a	O
reference	O
type	O
or	O
a	O
nullable	O
type	O
ie	O
:	O
double	B-API
d	B-API
=	B-API
;	O
int	O
i	B-API
=	B-API
d	B-API
as	B-API
will	O
not	O
compile	O
double	B-API
d	B-API
=	B-API
;	O
int	O
i	B-API
=	B-API
will	O
compile	O
.	O
Here	O
is	O
a	O
good	O
way	O
to	O
remember	O
the	O
process	O
that	O
each	O
of	O
them	O
follow	O
that	O
I	O
use	O
when	O
trying	O
to	O
decide	O
which	O
is	O
better	O
for	O
my	O
circumstance	O
.	O
DateTime	O
i	O
=	O
(	O
DateTime	O
)	O
value	O
;	O
//	O
is	O
like	O
doing	O
DateTime	O
i	O
=	O
value	O
is	O
DateTime	O
?	O
value	O
as	O
DateTime	O
:	O
throw	O
new	O
Exception	O
(	O
...	O
)	O
;	O
and	O
the	O
next	O
should	O
be	O
easy	O
to	O
guess	O
what	O
it	O
does	O
DateTime	O
i	O
=	O
value	O
as	O
DateTime	O
;	O
in	O
the	O
first	O
case	O
if	O
the	O
value	O
can	O
not	O
be	O
cast	O
than	O
an	O
exception	O
is	O
thrown	O
in	O
the	O
second	O
case	O
if	O
the	O
value	O
can	O
not	O
be	O
cast	O
,	O
i	O
is	O
set	O
to	O
null	O
.	O
So	O
in	O
the	O
first	O
case	O
a	O
hard	O
stop	O
is	O
made	O
if	O
the	O
cast	O
fails	O
in	O
the	O
second	O
cast	O
a	O
soft	O
stop	O
is	O
made	O
and	O
you	O
might	O
encounter	O
a	O
NullReferenceException	B-API
later	O
on	O
.	O
It	O
's	O
like	O
the	O
difference	O
between	O
Parse	O
and	O
TryParse	O
.	O
You	O
use	O
TryParse	O
when	O
you	O
expect	O
it	O
might	O
fail	O
,	O
but	O
when	O
you	O
have	O
strong	O
assurance	O
it	O
wo	O
n't	O
fail	O
you	O
use	O
Parse	O
.	O
Looking	O
around	O
,	O
and	O
using	O
some	O
C	O
#	O
3.0	O
features	O
we	O
can	O
do	O
this	O
:	O
foreach	O
(	O
KeyValuePairstring	O
,	O
int	O
item	O
in	O
keywordCounts.OrderBy	B-API
(	I-API
key=	I-API
key.Value	I-API
)	I-API
)	O
{	O
//	O
do	O
something	O
with	O
item.Key	O
and	O
item.Value	O
}	O
This	O
is	O
the	O
cleanest	O
way	O
I	O
've	O
seen	O
and	O
is	O
similar	O
to	O
the	O
Ruby	O
way	O
of	O
handling	O
hashes	O
.	O
On	O
a	O
high	O
level	O
,	O
you	O
have	O
no	O
other	O
choice	O
then	O
to	O
walk	O
through	O
the	O
whole	O
Dictionary	O
and	O
look	O
at	O
each	O
value	O
.	O
Maybe	O
this	O
helps	O
:	O
http	O
:	O
//bytes.com/forum/thread563638.html	O
Copy/Pasting	O
from	O
John	O
Timney	O
:	O
Dictionarystring	O
,	O
string	O
s	O
=	O
new	O
Dictionarystring	O
,	O
string	O
(	O
)	O
;	O
s.Add	O
(	O
``	O
1	O
''	O
,	O
``	O
a	O
Item	O
''	O
)	O
;	O
s.Add	O
(	O
``	O
2	O
''	O
,	O
``	O
c	O
Item	O
''	O
)	O
;	O
s.Add	O
(	O
``	O
3	O
''	O
,	O
``	O
b	O
Item	O
''	O
)	O
;	O
ListKeyValuePairstring	O
,	O
string	O
myList	O
=	O
new	O
ListKeyValuePairstring	O
,	O
string	O
(	O
s	O
)	O
;	O
myList.Sort	O
(	O
delegate	O
(	O
KeyValuePairstring	O
,	O
string	O
firstPair	O
,	O
KeyValuePairstring	O
,	O
string	O
nextPair	O
)	O
{	O
return	O
firstPair.Value.CompareTo	O
(	O
nextPair.Value	O
)	O
;	O
}	O
)	O
;	O
using	O
System.Linq.Enumerable	B-API
;	O
...	O
ListKeyValuePairstring	O
,	O
string	O
myList	O
=	O
aDictionary.ToList	B-API
(	I-API
)	I-API
;	O
myList.Sort	B-API
(	I-API
delegate	I-API
(	O
KeyValuePairstring	I-API
,	I-API
string	I-API
pair1	I-API
,	I-API
KeyValuePairstring	I-API
,	I-API
string	I-API
pair2	I-API
)	I-API
{	O
return	O
pair1.Value.CompareTo	B-API
(	I-API
pair2.Value	I-API
)	I-API
;	O
}	O
)	O
;	O
Since	O
you	O
're	O
targeting	O
.net	O
2.0	O
or	O
above	O
,	O
you	O
can	O
simplify	O
this	O
into	O
lambda	O
syntax	O
--	O
it	O
's	O
equivalent	O
but	O
shorter	O
.	O
If	O
you	O
're	O
targeting	O
.net	O
2.0	O
you	O
can	O
only	O
use	O
this	O
syntax	O
if	O
you	O
're	O
using	O
the	O
compiler	O
from	O
vs2008	O
(	O
or	O
above	O
)	O
.	O
var	O
myList	O
=	O
aDictionary.ToList	B-API
(	I-API
)	I-API
;	O
myList.Sort	B-API
(	I-API
(	I-API
pair1	I-API
,	I-API
pair2	I-API
)	I-API
=	O
pair1.Value.CompareTo	B-API
(	I-API
pair2.Value	I-API
)	I-API
)	O
;	O
Why	O
not	O
use	O
LINQ	O
:	O
Dictionarystring	O
,	O
int	O
myDict	O
=	O
new	O
Dictionarystring	O
,	O
int	O
(	O
)	O
;	O
myDict.Add	B-API
(	I-API
``	I-API
one	I-API
''	I-API
,	I-API
1	I-API
)	I-API
;	O
myDict.Add	B-API
(	I-API
``	I-API
four	I-API
''	I-API
,	I-API
4	I-API
)	I-API
;	O
myDict.Add	B-API
(	I-API
``	I-API
two	I-API
''	I-API
,	I-API
2	I-API
)	I-API
;	O
myDict.Add	B-API
(	I-API
``	I-API
three	I-API
''	I-API
,	I-API
3	I-API
)	I-API
;	O
var	O
sortedDict	O
=	O
from	O
entry	O
in	O
myDict	O
orderby	O
entry.Value	B-API
ascending	O
select	O
entry	O
;	O
This	O
would	O
also	O
allow	O
for	O
great	O
flexibility	O
in	O
that	O
you	O
can	O
select	O
the	O
top	O
10	O
,	O
20	O
10	O
%	O
etc	O
.	O
Or	O
if	O
you	O
are	O
using	O
your	O
word	O
frequency	O
index	O
for	O
,	O
you	O
could	O
also	O
include	O
clause	O
as	O
well	O
.	O
Not	O
all	O
languages	O
have	O
the	O
concept	O
of	O
unsigned	O
ints	O
.	O
For	O
example	O
VB	O
6	O
had	O
no	O
concept	O
of	O
unsigned	O
ints	O
which	O
I	O
suspect	O
drove	O
the	O
decision	O
of	O
the	O
designers	O
of	O
VB7/7.1	O
not	O
to	O
implement	O
as	O
well	O
(	O
it	O
's	O
implemented	O
now	O
in	O
VB8	O
)	O
.	O
To	O
quote	O
:	O
http	O
:	O
//msdn.microsoft.com/en-us/library/12a7a7h3.aspx	O
The	O
CLS	O
was	O
designed	O
to	O
be	O
large	O
enough	O
to	O
include	O
the	O
language	O
constructs	O
that	O
are	O
commonly	O
needed	O
by	O
developers	O
,	O
yet	O
small	O
enough	O
that	O
most	O
languages	O
are	O
able	O
to	O
support	O
it	O
.	O
In	O
addition	O
,	O
any	O
language	O
construct	O
that	O
makes	O
it	O
impossible	O
to	O
rapidly	O
verify	O
the	O
type	O
safety	O
of	O
code	O
was	O
excluded	O
from	O
the	O
CLS	O
so	O
that	O
all	O
CLS-compliant	O
languages	O
can	O
produce	O
verifiable	O
code	O
if	O
they	O
choose	O
to	O
do	O
so	O
.	O
Update	O
:	O
I	O
did	O
wonder	O
about	O
this	O
some	O
years	O
back	O
,	O
and	O
whilst	O
I	O
ca	O
n't	O
see	O
why	O
a	O
UInt	O
would	O
n't	O
be	O
type	O
safety	O
verifiable	O
,	O
I	O
guess	O
the	O
CLS	O
guys	O
had	O
to	O
have	O
a	O
cut	O
off	O
point	O
somewhere	O
as	O
to	O
what	O
would	O
be	O
the	O
baseline	O
minimum	O
number	O
of	O
value	O
types	O
supported	O
.	O
Also	O
when	O
you	O
think	O
about	O
the	O
longer	O
term	O
where	O
more	O
and	O
more	O
languages	O
are	O
being	O
ported	O
to	O
the	O
CLR	O
why	O
force	O
them	O
to	O
implement	O
unsigned	O
ints	O
to	O
gain	O
CLS	O
compliance	O
if	O
there	O
is	O
absolutely	O
no	O
concept	O
,	O
ever	O
?	O
Unsigned	O
integers	O
are	O
not	O
CLS	O
compliant	O
because	O
they	O
're	O
not	O
interoperable	O
between	O
certain	O
languages	O
.	O
An	O
explicit	O
cast	O
to	O
double	O
is	O
n't	O
necessary	O
.	O
double	O
trans	O
=	O
(	O
double	O
)	O
trackBar1.Value	B-API
/	O
;	O
Identifying	O
the	O
constant	O
as	O
5000.0	O
(	O
or	O
as	O
)	O
is	O
sufficient	O
:	O
double	O
trans	O
=	O
trackBar1.Value	B-API
/	O
5000.0	O
;	O
double	O
trans	O
=	O
trackBar1.Value	B-API
/	O
5000d	O
;	O
It	O
sounds	O
like	O
is	O
a	O
double	O
value	O
,	O
and	O
the	O
compiler	O
does	O
n't	O
like	O
you	O
trying	O
to	O
cram	O
a	O
decimal	O
value	O
into	O
it	O
.	O
A	O
more	O
generic	O
answer	O
for	O
the	O
generic	O
question	O
``	O
Decimal	O
vs	O
Double	O
?	O
``	O
:	O
Decimal	O
for	O
monetary	O
calculations	O
to	O
preserve	O
the	O
precision	O
,	O
Double	O
for	O
scientific	O
calculations	O
that	O
do	O
not	O
get	O
affected	O
by	O
small	O
differences	O
.	O
Since	O
Double	O
is	O
a	O
type	O
which	O
is	O
native	O
to	O
the	O
CPU	O
(	O
internal	O
representation	O
is	O
stored	O
in	O
base	O
2	O
)	O
,	O
calculations	O
made	O
with	O
Double	O
perform	O
better	O
then	O
Decimal	O
(	O
which	O
is	O
represented	O
in	O
base	O
10	O
internally	O
)	O
.	O
In	O
my	O
opinion	O
,	O
it	O
is	O
desirable	O
to	O
be	O
as	O
explicit	O
as	O
possible	O
.	O
This	O
adds	O
clarity	O
to	O
the	O
code	O
and	O
aids	O
your	O
fellow	O
programmers	O
who	O
may	O
eventually	O
read	O
it	O
.	O
In	O
addition	O
to	O
(	O
or	O
instead	O
of	O
)	O
appending	O
a	O
to	O
the	O
number	O
,	O
you	O
can	O
use	O
decimal.ToDouble	B-API
(	I-API
)	I-API
.	O
Here	O
are	O
some	O
examples	O
:	O
//	O
Example	O
1	O
double	O
transperancy	O
=	O
trackBar1.Value/5000	B-API
;	O
this.Opacity	B-API
=	O
decimal.ToDouble	B-API
(	I-API
transperancy	I-API
)	I-API
;	O
//	O
Example	O
2	O
-	O
with	O
inline	O
temp	O
this.Opacity	O
=	O
decimal.ToDouble	B-API
(	I-API
trackBar1.Value/5000	I-API
)	I-API
;	O
Very	O
roughly	O
and	O
from	O
memory	O
since	O
I	O
do	O
n't	O
have	O
code	O
on	O
this	O
laptop	O
:	O
using	O
(	O
OleDBConnection	B-API
conn	O
=	O
new	O
OleDbConnection	B-API
(	O
)	O
)	O
{	O
conn.ConnectionString	B-API
=	O
``	O
Whatever	O
connection	O
string	O
''	O
;	O
using	O
(	O
OleDbCommand	B-API
cmd	O
=	O
new	O
OleDbCommand	B-API
(	I-API
)	I-API
)	O
{	O
cmd.Connection	B-API
=	O
conn	O
;	O
cmd.CommandText	B-API
=	O
``	O
Select	O
*	O
from	O
CoolTable	O
''	O
;	O
using	O
(	O
OleDbDataReader	B-API
dr	O
=	O
cmd.ExecuteReader	B-API
(	I-API
)	I-API
)	O
{	O
while	O
(	O
dr.Read	B-API
(	I-API
)	I-API
)	O
{	O
//	O
do	O
something	O
like	O
Console.WriteLine	B-API
(	I-API
dr	I-API
[	I-API
``	I-API
column	I-API
name	I-API
''	I-API
]	I-API
as	I-API
String	I-API
)	I-API
;	O
}	O
}	O
}	O
}	O
@	O
Goyuix	O
--	O
that	O
's	O
excellent	O
for	O
something	O
written	O
from	O
memory	O
.	O
tested	O
it	O
here	O
--	O
found	O
the	O
connection	O
was	O
n't	O
opened	O
.	O
Otherwise	O
very	O
nice	O
.	O
using	O
System.Data.OleDb	B-API
;	O
...	O
using	O
(	O
OleDbConnection	B-API
conn	O
=	O
new	O
OleDbConnection	B-API
(	O
)	O
)	O
{	O
conn.ConnectionString	B-API
=	O
``	O
Provider=sqloledb	O
;	O
Data	O
Source=yourServername\\yourInstance	O
;	O
Initial	O
Catalog=databaseName	O
;	O
Integrated	O
Security=SSPI	O
;	O
''	O
;	O
using	O
(	O
OleDbCommand	B-API
cmd	O
=	O
new	O
OleDbCommand	B-API
(	I-API
)	I-API
)	O
{	O
conn.Open	B-API
(	I-API
)	I-API
;	O
cmd.Connection	B-API
=	O
conn	O
;	O
cmd.CommandText	B-API
=	O
``	O
Select	O
*	O
from	O
yourTable	O
''	O
;	O
using	O
(	O
OleDbDataReader	B-API
dr	O
=	O
cmd.ExecuteReader	B-API
(	I-API
)	I-API
)	O
{	O
while	O
(	O
dr.Read	B-API
(	I-API
)	I-API
)	O
{	O
Console.WriteLine	B-API
(	I-API
dr	I-API
[	I-API
``	I-API
columnName	I-API
''	I-API
]	I-API
)	I-API
;	O
}	O
}	O
}	O
}	O
That	O
's	O
definitely	O
a	O
good	O
way	O
to	O
do	O
it	O
.	O
But	O
you	O
if	O
you	O
happen	O
to	O
be	O
using	O
a	O
database	O
that	O
supports	O
LINQ	O
to	O
SQL	O
,	O
it	O
can	O
be	O
a	O
lot	O
more	O
fun	O
.	O
It	O
can	O
look	O
something	O
like	O
this	O
:	O
MyDB	O
db	O
=	O
new	O
;	O
var	O
q	O
=	O
from	O
db.MyTable	O
select	O
c	O
;	O
foreach	O
(	O
var	O
c	O
in	O
q	O
)	O
(	O
``	O
Data	O
Source=	O
...	O
''	O
)	O
(	O
c.MyField.ToString	O
(	O
)	O
This	O
is	O
an	O
alternative	O
way	O
(	O
DataReader	O
is	O
faster	O
than	O
this	O
one	O
)	O
:	O
string	O
s	O
=	O
``	O
;	O
SqlConnection	B-API
conn	O
=	O
new	O
;	O
SqlDataAdapter	B-API
da	O
=	O
new	O
DataTable	O
dt	O
=	O
new	O
;	O
for	O
(	O
int	O
i	O
=	O
0	O
;	O
i	O
dt.Rows.Count	B-API
;	O
i++	O
)	O
{	O
s	O
+=	O
+	O
``	O
--	O
``	O
+	O
+	O
(	O
``	O
Server=192.168.1.1	O
;	O
Database=master	O
;	O
Connect	O
Timeout=30	O
;	O
User	O
ID=foobar	O
;	O
Password=raboof	O
;	O
''	O
)	O
(	O
``	O
SELECT	O
TOP	O
5	O
name	O
,	O
dbid	O
FROM	O
sysdatabases	O
''	O
,	O
conn	O
)	O
DataTable	O
(	O
)	O
;	O
da.Fill	B-API
(	I-API
dt	I-API
)	I-API
dt.Rows	O
[	O
i	O
]	O
[	O
``	O
name	O
''	O
]	O
.ToString	B-API
(	I-API
)	I-API
dt.Rows	O
[	O
i	O
]	O
[	O
``	O
dbid	O
''	O
]	O
.ToString	B-API
(	I-API
)	I-API
``	O
\n	O
''	O
;	O
}	O
MessageBox.Show	B-API
(	I-API
s	I-API
)	I-API
I	O
have	O
n't	O
done	O
SWING	O
development	O
since	O
my	O
early	O
CS	O
classes	O
but	O
if	O
it	O
was	O
n't	O
built	O
in	O
you	O
could	O
just	O
inherit	O
javax.swing.AbstractButton	B-API
and	O
create	O
your	O
own	O
.	O
Should	O
be	O
pretty	O
simple	O
to	O
wire	O
something	O
together	O
with	O
their	O
existing	O
framework	O
.	O
You	O
could	O
always	O
try	O
the	O
Synth	O
look	O
feel	O
.	O
You	O
provide	O
an	O
xml	O
file	O
that	O
acts	O
as	O
a	O
sort	O
of	O
stylesheet	O
,	O
along	O
with	O
any	O
images	O
you	O
want	O
to	O
use	O
.	O
The	O
code	O
might	O
look	O
like	O
this	O
:	O
try	O
{	O
SynthLookAndFeel	O
synth	O
=	O
new	O
SynthLookAndFeel	O
(	O
)	O
;	O
Class	O
aClass	O
=	O
MainFrame.class	B-API
;	O
InputStream	O
stream	O
=	O
aClass.getResourceAsStream	B-API
(	I-API
``	I-API
\\default.xml	I-API
''	I-API
)	I-API
;	O
if	O
(	O
stream	O
==	O
null	O
)	O
{	O
System.err.println	B-API
(	I-API
``	I-API
Missing	I-API
configuration	I-API
file	I-API
''	I-API
)	I-API
;	O
System.exit	B-API
(	I-API
-1	I-API
)	I-API
;	O
}	O
synth.load	B-API
(	I-API
stream	I-API
,	I-API
aClass	I-API
)	I-API
;	O
UIManager.setLookAndFeel	B-API
(	I-API
synth	I-API
)	I-API
;	O
}	O
catch	B-API
(	I-API
ParseException	I-API
pe	I-API
)	I-API
{	O
System.err.println	B-API
(	I-API
``	I-API
Bad	I-API
configuration	I-API
file	I-API
''	I-API
)	I-API
;	O
pe.printStackTrace	B-API
(	I-API
)	I-API
;	O
System.exit	B-API
(	I-API
-2	I-API
)	I-API
;	O
}	O
catch	B-API
(	I-API
UnsupportedLookAndFeelException	I-API
ulfe	I-API
)	I-API
{	O
System.err.println	B-API
(	I-API
``	I-API
Old	I-API
JRE	I-API
in	I-API
use	I-API
.	I-API
Get	I-API
a	I-API
new	I-API
one	I-API
''	I-API
)	I-API
;	O
System.exit	B-API
(	I-API
-3	I-API
)	I-API
;	O
}	O
From	O
there	O
,	O
go	O
on	O
and	O
add	O
your	O
JButton	O
like	O
you	O
normally	O
would	O
.	O
The	O
only	O
change	O
is	O
that	O
you	O
use	O
the	O
setName	B-API
(	I-API
string	I-API
)	I-API
method	O
to	O
identify	O
what	O
the	O
button	O
should	O
map	O
to	O
in	O
the	O
xml	O
file	O
.	O
The	O
xml	O
file	O
might	O
look	O
like	O
this	O
:	O
synth	O
style	O
id=	O
''	O
button	O
''	O
font	O
name=	O
''	O
DIALOG	O
''	O
size=	O
''	O
12	O
''	O
style=	O
''	O
BOLD	O
''	O
/	O
state	O
value=	O
''	O
MOUSE_OVER	O
''	O
imagePainter	O
method=	O
''	O
buttonBackground	O
''	O
path=	O
''	O
dirt.png	O
''	O
sourceInsets=	O
''	O
2	O
2	O
2	O
2	O
''	O
/	O
insets	O
top=	O
''	O
2	O
''	O
botton=	O
''	O
2	O
''	O
right=	O
''	O
2	O
''	O
left=	O
''	O
2	O
''	O
/	O
/state	O
state	O
value=	O
''	O
ENABLED	O
''	O
imagePainter	O
method=	O
''	O
buttonBackground	O
''	O
path=	O
''	O
dirt.png	O
''	O
sourceInsets=	O
''	O
2	O
2	O
2	O
2	O
''	O
/	O
insets	O
top=	O
''	O
2	O
''	O
botton=	O
''	O
2	O
''	O
right=	O
''	O
2	O
''	O
left=	O
''	O
2	O
''	O
/	O
/state	O
/style	O
bind	O
style=	O
''	O
button	O
''	O
type=	O
''	O
name	O
''	O
key=	O
''	O
dirt	O
''	O
/	O
/synth	O
The	O
bind	O
element	O
there	O
specifies	O
what	O
to	O
map	O
to	O
(	O
in	O
this	O
example	O
,	O
it	O
will	O
apply	O
that	O
styling	O
to	O
any	O
buttons	O
whose	O
name	O
property	O
has	O
been	O
set	O
to	O
``	O
dirt	O
''	O
)	O
.	O
And	O
a	O
couple	O
of	O
useful	O
links	O
:	O
http	O
:	O
//javadesktop.org/articles/synth/	O
http	O
:	O
//docs.oracle.com/javase/tutorial/uiswing/lookandfeel/synth.html	O
Yes	O
,	O
this	O
is	O
possible	O
.	O
One	O
of	O
the	O
main	O
pros	O
for	O
using	O
Swing	O
is	O
the	O
ease	O
with	O
which	O
the	O
abstract	O
controls	O
can	O
be	O
created	O
and	O
manipulates	O
.	O
Here	O
is	O
a	O
quick	O
and	O
dirty	O
way	O
to	O
extend	O
the	O
existing	O
JButton	O
class	O
to	O
draw	O
a	O
circle	O
to	O
the	O
right	O
of	O
the	O
text	O
.	O
package	O
test	O
;	O
import	O
java.awt.Color	B-API
;	O
import	O
java.awt.Container	B-API
;	O
import	O
java.awt.Dimension	B-API
;	O
import	O
java.awt.FlowLayout	B-API
;	O
import	O
java.awt.Graphics	B-API
;	O
import	O
javax.swing.JButton	B-API
;	O
import	O
javax.swing.JFrame	B-API
;	O
public	O
class	O
MyButton	O
extends	O
JButton	O
{	O
private	O
static	O
final	O
long	O
serialVersionUID	O
=	O
1L	O
;	O
private	O
Color	O
circleColor	O
=	O
Color.BLACK	B-API
;	O
public	O
MyButton	O
(	O
String	O
label	O
)	O
{	O
super	O
(	O
label	O
)	O
;	O
}	O
@	O
Override	O
protected	O
void	O
paintComponent	O
(	O
Graphics	O
g	O
)	O
{	O
super.paintComponent	B-API
(	I-API
g	I-API
)	I-API
;	O
Dimension	O
originalSize	O
=	O
super.getPreferredSize	B-API
(	I-API
)	I-API
;	O
int	O
gap	O
=	O
(	O
int	O
)	O
(	O
originalSize.height	B-API
*	O
0.2	O
)	O
;	O
int	O
x	O
=	O
originalSize.width	B-API
+	O
gap	O
;	O
int	O
y	O
=	O
gap	O
;	O
int	O
diameter	O
=	O
originalSize.height	B-API
-	O
(	O
gap	O
*	O
2	O
)	O
;	O
g.setColor	B-API
(	I-API
circleColor	I-API
)	I-API
;	O
g.fillOval	B-API
(	I-API
x	I-API
,	I-API
y	I-API
,	I-API
diameter	I-API
,	I-API
diameter	I-API
)	I-API
;	O
}	O
@	O
Override	O
public	O
Dimension	O
getPreferredSize	O
(	O
)	O
{	O
Dimension	O
size	O
=	O
super.getPreferredSize	B-API
(	I-API
)	I-API
;	O
size.width	O
+=	O
size.height	O
;	O
return	O
size	O
;	O
}	O
/*Test	O
the	O
button*/	O
public	O
static	O
void	O
main	O
(	O
String	O
[	O
]	O
args	O
)	O
{	O
MyButton	O
button	O
=	O
new	O
MyButton	O
(	O
``	O
Hello	O
,	O
World	O
!	O
``	O
)	O
;	O
JFrame	O
frame	O
=	O
new	O
JFrame	O
(	O
)	O
;	O
frame.setDefaultCloseOperation	B-API
(	I-API
JFrame.EXIT_ON_CLOSE	I-API
)	I-API
;	O
frame.setSize	B-API
(	I-API
400	I-API
,	I-API
400	I-API
)	I-API
;	O
Container	O
contentPane	O
=	O
frame.getContentPane	B-API
(	I-API
)	I-API
;	O
contentPane.setLayout	B-API
(	I-API
new	I-API
FlowLayout	I-API
(	I-API
)	I-API
)	I-API
;	O
contentPane.add	B-API
(	I-API
button	I-API
)	I-API
;	O
frame.setVisible	B-API
(	I-API
true	I-API
)	I-API
;	O
}	O
}	O
Note	O
that	O
by	O
overriding	O
paintComponent	O
that	O
the	O
contents	O
of	O
the	O
button	O
can	O
be	O
changed	O
,	O
but	O
that	O
the	O
border	O
is	O
painted	O
by	O
the	O
paintBorder	O
method	O
.	O
The	O
getPreferredSize	O
method	O
also	O
needs	O
to	O
be	O
managed	O
in	O
order	O
to	O
dynamically	O
support	O
changes	O
to	O
the	O
content	O
.	O
Care	O
needs	O
to	O
be	O
taken	O
when	O
measuring	O
font	O
metrics	O
and	O
image	O
dimensions	O
.	O
For	O
creating	O
a	O
control	O
that	O
you	O
can	O
rely	O
on	O
,	O
the	O
above	O
code	O
is	O
not	O
the	O
correct	O
approach	O
.	O
Dimensions	O
and	O
colours	O
are	O
dynamic	O
in	O
Swing	O
and	O
are	O
dependent	O
on	O
the	O
look	O
and	O
feel	O
being	O
used	O
.	O
Even	O
the	O
default	O
Metal	O
look	O
has	O
changed	O
across	O
JRE	O
versions	O
.	O
It	O
would	O
be	O
better	O
to	O
implement	O
AbstractButton	O
and	O
conform	O
to	O
the	O
guidelines	O
set	O
out	O
by	O
the	O
Swing	O
API	O
.	O
A	O
good	O
starting	O
point	O
is	O
to	O
look	O
at	O
the	O
javax.swing.LookAndFeel	B-API
and	O
javax.swing.UIManager	B-API
classes	O
.	O
http	O
:	O
//docs.oracle.com/javase/8/docs/api/javax/swing/LookAndFeel.html	O
http	O
:	O
//docs.oracle.com/javase/8/docs/api/javax/swing/UIManager.html	O
Understanding	O
the	O
anatomy	O
of	O
LookAndFeel	O
is	O
useful	O
for	O
writing	O
controls	O
:	O
Creating	O
a	O
Custom	O
Look	O
and	O
Feel	O
When	O
I	O
was	O
first	O
learning	O
Java	O
we	O
had	O
to	O
make	O
Yahtzee	O
and	O
I	O
thought	O
it	O
would	O
be	O
cool	O
to	O
create	O
custom	O
Swing	O
components	O
and	O
containers	O
instead	O
of	O
just	O
drawing	O
everything	O
on	O
one	O
JPanel	O
.	O
The	O
benefit	O
of	O
extending	O
Swing	O
components	O
,	O
of	O
course	O
,	O
is	O
to	O
have	O
the	O
ability	O
to	O
add	O
support	O
for	O
keyboard	O
shortcuts	O
and	O
other	O
accessibility	O
features	O
that	O
you	O
ca	O
n't	O
do	O
just	O
by	O
having	O
a	O
paint	O
(	O
)	O
method	O
print	O
a	O
pretty	O
picture	O
.	O
It	O
may	O
not	O
be	O
done	O
the	O
best	O
way	O
however	O
,	O
but	O
it	O
may	O
be	O
a	O
good	O
starting	O
point	O
for	O
you	O
.	O
Edit	O
8/6	O
-	O
If	O
it	O
was	O
n't	O
apparent	O
from	O
the	O
images	O
,	O
each	O
Die	O
is	O
a	O
button	O
you	O
can	O
click	O
.	O
This	O
will	O
move	O
it	O
to	O
the	O
DiceContainer	O
below	O
.	O
Looking	O
at	O
the	O
source	O
code	O
you	O
can	O
see	O
that	O
each	O
Die	O
button	O
is	O
drawn	O
dynamically	O
,	O
based	O
on	O
its	O
value	O
.	O
Here	O
are	O
the	O
basic	O
steps	O
:	O
Create	O
a	O
class	O
that	O
extends	O
JComponent	O
Call	O
parent	O
constructor	O
super	O
(	O
)	O
in	O
your	O
constructors	O
Make	O
sure	O
you	O
class	O
implements	O
MouseListener	O
Put	O
this	O
in	O
the	O
constructor	O
:	O
enableInputMethods	B-API
(	I-API
true	I-API
)	I-API
;	O
addMouseListener	B-API
(	I-API
this	I-API
)	I-API
;	O
Override	O
these	O
methods	O
:	O
public	O
Dimension	O
getPreferredSize	B-API
(	I-API
)	I-API
public	O
Dimension	O
getMinimumSize	B-API
(	I-API
)	I-API
public	O
Dimension	O
getMaximumSize	B-API
(	I-API
)	I-API
Override	O
this	O
method	O
:	O
public	O
void	O
paintComponent	B-API
(	I-API
Graphics	I-API
g	I-API
)	I-API
The	O
amount	O
of	O
space	O
you	O
have	O
to	O
work	O
with	O
when	O
drawing	O
your	O
button	O
is	O
defined	O
by	O
getPreferredSize	B-API
(	I-API
)	I-API
,	O
assuming	O
getMinimumSize	B-API
(	I-API
)	I-API
and	O
getMaximumSize	B-API
(	I-API
)	I-API
return	O
the	O
same	O
value	O
.	O
I	O
have	O
n't	O
experimented	O
too	O
much	O
with	O
this	O
but	O
,	O
depending	O
on	O
the	O
layout	O
you	O
use	O
for	O
your	O
GUI	O
your	O
button	O
could	O
look	O
completely	O
different	O
.	O
And	O
finally	O
,	O
the	O
source	O
code	O
.	O
In	O
case	O
I	O
missed	O
anything	O
.	O
Does	O
doubling	O
the	O
\	O
work	O
?	O
insert	O
into	O
EscapeTest	O
(	O
text	O
)	O
values	O
(	O
'This	O
will	O
be	O
inserted	O
\\n	O
This	O
will	O
not	O
Partially	O
.	O
The	O
text	O
is	O
inserted	O
,	O
but	O
the	O
warning	O
is	O
still	O
generated	O
.	O
I	O
found	O
a	O
discussion	O
that	O
indicated	O
the	O
text	O
needed	O
to	O
be	O
preceded	O
with	O
'E	O
'	O
,	O
as	O
such	O
:	O
insert	O
into	O
EscapeTest	O
(	O
text	O
)	O
values	O
(	O
E'This	O
is	O
the	O
first	O
part	O
\n	O
And	O
this	O
is	O
the	O
second	O
'	O
)	O
;	O
This	O
suppressed	O
the	O
warning	O
,	O
but	O
the	O
text	O
was	O
still	O
not	O
being	O
returned	O
correctly	O
.	O
When	O
I	O
added	O
the	O
additional	O
slash	O
as	O
Michael	O
suggested	O
,	O
it	O
worked	O
.	O
As	O
such	O
:	O
insert	O
into	O
EscapeTest	O
(	O
text	O
)	O
values	O
(	O
E'This	O
is	O
the	O
first	O
part	O
\\n	O
And	O
this	O
is	O
the	O
second	O
'	O
)	O
;	O
Cool	O
.	O
I	O
also	O
found	O
the	O
documentation	O
regarding	O
the	O
E	O
:	O
http	O
:	O
//www.postgresql.org/docs/8.3/interactive/sql-syntax-lexical.html	O
#	O
SQL-SYNTAX-STRINGS	O
PostgreSQL	O
also	O
accepts	O
``	O
escape	O
''	O
string	O
constants	O
,	O
which	O
are	O
an	O
extension	O
to	O
the	O
SQL	O
standard	O
.	O
An	O
escape	O
string	O
constant	O
is	O
specified	O
by	O
writing	O
the	O
letter	O
E	O
(	O
upper	O
or	O
lower	O
case	O
)	O
just	O
before	O
the	O
opening	O
single	O
quote	O
,	O
e.g	O
.	O
E'foo	O
'	O
.	O
(	O
When	O
continuing	O
an	O
escape	O
string	O
constant	O
across	O
lines	O
,	O
write	O
E	O
only	O
before	O
the	O
first	O
opening	O
quote	O
.	O
)	O
Within	O
an	O
escape	O
string	O
,	O
a	O
backslash	O
character	O
(	O
\	O
)	O
begins	O
a	O
C-like	O
backslash	O
escape	O
sequence	O
,	O
in	O
which	O
the	O
combination	O
of	O
backslash	O
and	O
following	O
character	O
(	O
s	O
)	O
represents	O
a	O
special	O
byte	O
value	O
.	O
\b	O
is	O
a	O
backspace	O
,	O
\f	O
is	O
a	O
form	O
feed	O
,	O
\n	O
is	O
a	O
newline	O
,	O
\r	O
is	O
a	O
carriage	O
return	O
,	O
\t	O
is	O
a	O
tab	O
.	O
Also	O
supported	O
are	O
\digits	O
,	O
where	O
digits	O
represents	O
an	O
octal	O
byte	O
value	O
,	O
and	O
\xhexdigits	O
,	O
where	O
hexdigits	O
represents	O
a	O
hexadecimal	O
byte	O
value	O
.	O
(	O
It	O
is	O
your	O
responsibility	O
that	O
the	O
byte	O
sequences	O
you	O
create	O
are	O
valid	O
characters	O
in	O
the	O
server	O
character	O
set	O
encoding	O
.	O
)	O
Any	O
other	O
character	O
following	O
a	O
backslash	O
is	O
taken	O
literally	O
.	O
Thus	O
,	O
to	O
include	O
a	O
backslash	O
character	O
,	O
write	O
two	O
backslashes	O
(	O
\\	O
)	O
.	O
Also	O
,	O
a	O
single	O
quote	O
can	O
be	O
included	O
in	O
an	O
escape	O
string	O
by	O
writing	O
\	O
'	O
,	O
in	O
addition	O
to	O
the	O
normal	O
way	O
of	O
''	O
.	O
Without	O
trying	O
to	O
sound	O
too	O
vague	O
but	O
I	O
think	O
Windows	O
Network	O
Load	O
Balancing	O
(	O
NLB	O
)	O
should	O
handle	O
this	O
for	O
you	O
.	O
Off	O
the	O
top	O
of	O
my	O
head	O
,	O
I	O
would	O
think	O
that	O
you	O
'd	O
need	O
to	O
maintain	O
some	O
form	O
of	O
a	O
data	O
structure	O
in	O
the	O
JavaScript	O
that	O
reflects	O
the	O
items	O
in	O
the	O
current	O
dropdown	O
list	O
.	O
You	O
'd	O
also	O
need	O
a	O
reference	O
to	O
the	O
currently	O
active/selected	O
item	O
.	O
Each	O
time	O
or	O
is	O
fired	O
,	O
update	O
the	O
reference	O
to	O
the	O
active/selected	O
item	O
in	O
the	O
data	O
structure	O
.	O
To	O
provide	O
highlighting	O
information	O
on	O
the	O
UI	O
,	O
add	O
or	O
remove	O
a	O
class	O
name	O
that	O
is	O
styled	O
via	O
CSS	O
based	O
on	O
if	O
the	O
item	O
is	O
active/selected	O
or	O
not	O
.	O
Also	O
,	O
this	O
is	O
n't	O
a	O
biggy	O
,	O
but	O
is	O
not	O
really	O
standard	O
(	O
look	O
into	O
createTextNode	B-API
(	I-API
)	I-API
,	O
createElement	B-API
(	I-API
)	I-API
,	O
and	O
appendChild	B-API
(	I-API
)	I-API
for	O
standard	O
ways	O
of	O
creating	O
data	O
)	O
.	O
You	O
may	O
also	O
want	O
to	O
see	O
about	O
attaching	O
event	O
handlers	O
in	O
the	O
JavaScript	O
rather	O
than	O
doing	O
so	O
in	O
an	O
HTML	O
attribute	O
.	O
A	O
few	O
things	O
:	O
You	O
are	O
creating	O
(	O
and	O
not	O
using	O
)	O
an	O
unnecessary	O
toplevel	O
,	O
named	O
window	O
.	O
You	O
can	O
just	O
delete	O
these	O
lines	O
:	O
window	O
=	O
,	O
``	O
delete_event	O
''	O
,	O
,	O
,	O
``	O
destroy	O
''	O
,	O
,	O
gtk_window_new	B-API
(	I-API
GTK_WINDOW_TOPLEVEL	I-API
)	I-API
;	O
g_signal_connect	B-API
(	I-API
G_OBJECT	B-API
(	I-API
window	I-API
)	I-API
G_CALLBACK	B-API
(	I-API
delete_event	I-API
)	I-API
NULL	I-API
)	I-API
;	O
g_signal_connect	B-API
(	I-API
G_OBJECT	I-API
(	I-API
window	I-API
)	I-API
G_CALLBACK	B-API
(	I-API
destroy	I-API
)	I-API
Also	O
,	O
the	O
flow	O
does	O
n't	O
seem	O
quite	O
right	O
.	O
gtk_main	B-API
(	I-API
)	I-API
starts	O
the	O
GTK	O
main	O
loop	O
,	O
which	O
blocks	O
until	O
something	O
exits	O
it	O
.	O
gtk_dialog_run	B-API
(	I-API
)	I-API
also	O
starts	O
a	O
main	O
loop	O
,	O
but	O
it	O
exits	O
as	O
soon	O
as	O
one	O
of	O
the	O
buttons	O
is	O
clicked	O
.	O
I	O
think	O
it	O
might	O
be	O
enough	O
for	O
you	O
to	O
remove	O
the	O
gtk_init_add	B-API
(	I-API
)	I-API
and	O
gtk_main	B-API
(	I-API
)	I-API
calls	O
,	O
and	O
simply	O
deal	O
with	O
the	O
return	O
value	O
.	O
Also	O
the	O
gtk_widget_destroy	B-API
(	I-API
)	I-API
call	O
is	O
unnecessary	O
,	O
as	O
the	O
dialog	O
window	O
is	O
automatically	O
destroyed	O
when	O
gtk_dialog_run	B-API
(	I-API
)	I-API
returns	O
.	O
Hmm	O
,	O
ok	O
.	O
I	O
'd	O
suggest	O
code	O
like	O
this	O
,	O
then	O
:	O
typedef	O
struct	O
{	O
int	O
type	O
;	O
int	O
result	O
;	O
}	O
DialogData	O
;	O
static	O
{	O
DialogData	O
*dialog_data	O
=	O
user_data	O
;	O
GtkWidget	O
*dialog	O
;	O
if	O
(	O
dialog_data-type	O
MB_YESNO	O
)	O
dialog	O
=	O
;	O
else	O
dialog	O
=	O
;	O
//	O
Set	O
title	O
,	O
etc	O
.	O
dialog_data-result	O
=	O
;	O
;	O
//	O
Quits	O
the	O
main	O
loop	O
run	O
in	O
return	O
FALSE	O
;	O
}	O
int	O
{	O
DialogData	O
dialog_data	O
;	O
dialog_data.type	O
=	O
type	O
;	O
;	O
;	O
//	O
Do	O
stuff	O
based	O
on	O
(	O
gpointer	O
user_data	O
)	O
gtk_message_dialog_new	B-API
(	I-API
...	I-API
)	I-API
gtk_message_dialog_new	B-API
(	I-API
...	I-API
)	I-API
gtk_dialog_run	B-API
(	I-API
...	I-API
)	I-API
gtk_main_quit	B-API
(	I-API
)	I-API
MessageBox	B-API
(	I-API
)	I-API
MessageBox	B-API
(	I-API
...	I-API
)	I-API
(	O
display_dialog	O
,	O
dialog_data	O
)	O
gtk_main	B-API
(	I-API
)	I-API
The	O
struct	O
is	O
because	O
you	O
need	O
to	O
pass	O
around	O
a	O
couple	O
pieces	O
of	O
data	O
.	O
The	O
gtk_idle_add	B-API
(	I-API
)	I-API
call	O
adds	O
a	O
method	O
to	O
be	O
run	O
when	O
the	O
main	O
loop	O
is	O
running	O
and	O
idle	O
,	O
and	O
the	O
return	O
value	O
from	O
the	O
display_dialog	B-API
(	I-API
)	I-API
call	O
means	O
that	O
it	O
's	O
only	O
run	O
once	O
.	O
After	O
we	O
get	O
the	O
result	O
from	O
the	O
dialog	O
,	O
we	O
quit	O
the	O
main	O
loop	O
.	O
That	O
'll	O
cause	O
the	O
gtk_main	B-API
(	I-API
)	I-API
in	O
your	O
main	O
MessageBox	B-API
(	I-API
)	I-API
method	O
to	O
return	O
,	O
and	O
you	O
'll	O
be	O
able	O
to	O
access	O
the	O
result	O
from	O
there	O
.	O
Hope	O
this	O
helps	O
!	O
This	O
may	O
be	O
too	O
basic	O
or	O
limited	O
of	O
a	O
solution	O
,	O
but	O
could	O
n't	O
you	O
do	O
a	O
String.split	B-API
(	I-API
)	I-API
on	O
each	O
line	O
of	O
the	O
file	O
,	O
remembering	O
the	O
result	O
array	O
of	O
the	O
first	O
line	O
to	O
generate	O
the	O
XML	O
,	O
and	O
just	O
spit	O
each	O
line	O
's	O
array	O
data	O
out	O
with	O
the	O
proper	O
XML	O
elements	O
padding	O
each	O
iteration	O
of	O
a	O
loop	O
?	O
Maybe	O
this	O
might	O
help	O
:	O
JSefa	B-API
You	O
can	O
read	O
CSV	O
file	O
with	O
this	O
tool	O
and	O
serialize	O
it	O
to	O
XML	O
.	O
I	O
do	O
n't	O
understand	O
why	O
you	O
would	O
want	O
to	O
do	O
this	O
.	O
It	O
sounds	O
almost	O
like	O
cargo	O
cult	O
coding	O
.	O
Converting	O
a	O
CSV	O
file	O
to	O
XML	O
does	O
n't	O
add	O
any	O
value	O
.	O
Your	O
program	O
is	O
already	O
reading	O
the	O
CSV	O
file	O
,	O
so	O
arguing	O
that	O
you	O
need	O
XML	O
does	O
n't	O
work	O
.	O
On	O
the	O
other	O
hand	O
,	O
reading	O
the	O
CSV	O
file	O
,	O
doing	O
something	O
with	O
the	O
values	O
,	O
and	O
then	O
serializing	O
to	O
XML	O
does	O
make	O
sense	O
(	O
well	O
,	O
as	O
much	O
as	O
using	O
XML	O
can	O
make	O
sense	O
...	O
;	O
)	O
)	O
but	O
you	O
would	O
supposedly	O
already	O
have	O
a	O
means	O
of	O
serializing	O
to	O
XML	O
.	O
As	O
far	O
as	O
I	O
know	O
,	O
there	O
's	O
no	O
ready-made	O
library	O
to	O
do	O
this	O
for	O
you	O
,	O
but	O
producing	O
a	O
tool	O
capable	O
of	O
translating	O
from	O
CSV	O
to	O
XML	O
should	O
only	O
require	O
you	O
to	O
write	O
a	O
crude	O
CSV	O
parser	O
and	O
hook	O
up	O
JDOM	B-API
(	O
or	O
your	O
XML	O
Java	O
library	O
of	O
choice	O
)	O
with	O
some	O
glue	O
code	O
.	O
There	O
is	O
nothing	O
I	O
know	O
of	O
that	O
can	O
do	O
this	O
without	O
you	O
at	O
least	O
writing	O
a	O
little	O
bit	O
of	O
code	O
...	O
You	O
will	O
need	O
2	O
separate	O
library	O
:	O
A	O
CSV	O
Parser	O
Framework	O
An	O
XML	O
Serialization	O
Framework	O
The	O
CSV	O
parser	O
I	O
would	O
recommend	O
(	O
unless	O
you	O
want	O
to	O
have	O
a	O
little	O
bit	O
of	O
fun	O
to	O
write	O
your	O
own	O
CSV	O
Parser	O
)	O
is	O
OpenCSV	O
(	O
A	O
SourceForge	O
Project	O
for	O
parsing	O
CSV	O
Data	O
)	O
The	O
XML	O
Serialization	O
Framework	O
should	O
be	O
something	O
that	O
can	O
scale	O
in	O
case	O
you	O
want	O
to	O
transform	O
large	O
(	O
or	O
huge	O
)	O
CSV	O
file	O
to	O
XML	O
:	O
My	O
recommendation	O
is	O
the	O
Sun	O
Java	O
Streaming	O
XML	O
Parser	O
Framework	O
(	O
See	O
here	O
)	O
which	O
allows	O
pull-parsing	O
AND	O
serialization	O
.	O
IE	O
8	O
is	O
supposed	O
to	O
have	O
better	O
tools	O
,	O
but	O
the	O
IE	O
Developer	O
Toolbar	O
is	O
pretty	O
good	O
.	O
You	O
might	O
find	O
Firebug	O
Lite	O
useful	O
for	O
that	O
.	O
Its	O
bookmarklet	O
should	O
be	O
especially	O
useful	O
when	O
debugging	O
on	O
a	O
user	O
's	O
machine	O
.	O
This	O
has	O
religious	O
war	O
potential	O
,	O
but	O
it	O
seems	O
to	O
me	O
that	O
if	O
you	O
're	O
using	O
a	O
getter/setter	O
,	O
you	O
should	O
use	O
it	O
internally	O
as	O
well	O
-	O
using	O
both	O
will	O
lead	O
to	O
maintenance	O
problems	O
down	O
the	O
road	O
(	O
e.g	O
.	O
somebody	O
adds	O
code	O
to	O
a	O
setter	O
that	O
needs	O
to	O
run	O
every	O
time	O
that	O
property	O
is	O
set	O
,	O
and	O
the	O
property	O
is	O
being	O
set	O
internally	O
w/o	O
that	O
setter	O
being	O
called	O
)	O
.	O
It	O
depends	O
on	O
how	O
the	O
property	O
is	O
used	O
.	O
For	O
example	O
,	O
say	O
you	O
have	O
a	O
student	O
object	O
that	O
has	O
a	O
name	O
property	O
.	O
You	O
could	O
use	O
your	O
Get	O
method	O
to	O
pull	O
the	O
name	O
from	O
the	O
database	O
,	O
if	O
it	O
has	O
n't	O
been	O
retrieved	O
already	O
.	O
This	O
way	O
you	O
are	O
reducing	O
unnecessary	O
calls	O
to	O
the	O
database	O
.	O
Now	O
let	O
's	O
say	O
you	O
have	O
a	O
private	O
integer	O
counter	O
in	O
your	O
object	O
that	O
counts	O
the	O
number	O
of	O
times	O
the	O
name	O
has	O
been	O
called	O
.	O
You	O
may	O
want	O
to	O
not	O
use	O
the	O
Get	O
method	O
from	O
inside	O
the	O
object	O
because	O
it	O
would	O
produce	O
an	O
invalid	O
count	O
.	O
Am	O
I	O
just	O
going	O
overboard	O
here	O
?	O
Perhaps	O
;	O
)	O
Another	O
approach	O
would	O
be	O
to	O
utilize	O
a	O
private/protected	O
method	O
to	O
actually	O
do	O
the	O
getting	O
(	O
caching/db/etc	O
)	O
,	O
and	O
a	O
public	O
wrapper	O
for	O
it	O
that	O
increments	O
the	O
count	O
:	O
PHP	O
:	O
public	O
function	O
{	O
;	O
return	O
;	O
}	O
protected	O
function	O
{	O
return	O
getName	B-API
(	I-API
)	I-API
$	O
this-incrementNameCalled	B-API
(	I-API
)	I-API
$	O
this-_getName	B-API
(	I-API
)	I-API
_getName	B-API
(	I-API
)	I-API
and	O
then	O
from	O
within	O
the	O
object	O
itself	O
:	O
PHP	O
:	O
$	O
name	O
=	O
$	O
this-_getName	B-API
(	I-API
)	I-API
This	O
way	O
you	O
can	O
still	O
use	O
that	O
first	O
argument	O
for	O
something	O
else	O
(	O
like	O
sending	O
a	O
flag	O
for	O
whether	O
or	O
not	O
to	O
used	O
cached	O
data	O
here	O
perhaps	O
)	O
.	O
Well	O
,	O
it	O
seems	O
with	O
C	O
#	O
3.0	O
properties	O
'	O
default	O
implementation	O
,	O
the	O
decision	O
is	O
taken	O
for	O
you	O
;	O
you	O
HAVE	O
to	O
set	O
the	O
property	O
using	O
the	O
(	O
possibly	O
private	O
)	O
property	O
setter	O
.	O
I	O
personally	O
only	O
use	O
the	O
private	O
member-behind	O
when	O
not	O
doing	O
so	O
would	O
cause	O
the	O
object	O
to	O
fall	O
in	O
an	O
less	O
than	O
desirable	O
state	O
,	O
such	O
as	O
when	O
initializing	O
or	O
when	O
caching/lazy	O
loading	O
is	O
involved	O
.	O
As	O
stated	O
in	O
some	O
of	O
the	O
comments	O
:	O
Sometimes	O
you	O
should	O
,	O
sometimes	O
you	O
should	O
n't	O
.	O
The	O
great	O
part	O
about	O
private	O
variables	O
is	O
that	O
you	O
are	O
able	O
to	O
see	O
all	O
the	O
places	O
they	O
are	O
used	O
when	O
you	O
change	O
something	O
.	O
If	O
your	O
getter/setter	O
does	O
something	O
you	O
need	O
,	O
use	O
it	O
.	O
If	O
it	O
does	O
n't	O
matter	O
you	O
decide	O
.	O
The	O
opposite	O
case	O
could	O
be	O
made	O
that	O
if	O
you	O
use	O
the	O
getter/setter	O
and	O
somebody	O
changes	O
the	O
getter/setter	O
they	O
have	O
to	O
analyze	O
all	O
the	O
places	O
the	O
getter	O
and	O
setter	O
is	O
used	O
internally	O
to	O
see	O
if	O
it	O
messes	O
something	O
up	O
.	O
Personally	O
,	O
I	O
feel	O
like	O
it	O
's	O
important	O
to	O
remain	O
consistent	O
.	O
If	O
you	O
have	O
getters	O
and	O
setters	O
,	O
use	O
them	O
.	O
The	O
only	O
time	O
I	O
would	O
access	O
a	O
field	O
directly	O
is	O
when	O
the	O
accessor	O
has	O
a	O
lot	O
of	O
overhead	O
.	O
It	O
may	O
feel	O
like	O
you	O
're	O
bloating	O
your	O
code	O
unnecessarily	O
,	O
but	O
it	O
can	O
certainly	O
save	O
a	O
whole	O
lot	O
of	O
headache	O
in	O
the	O
future	O
.	O
The	O
classic	O
example	O
:	O
Later	O
on	O
,	O
you	O
may	O
desire	O
to	O
change	O
the	O
way	O
that	O
field	O
works	O
.	O
Maybe	O
it	O
should	O
be	O
calculated	O
on-the-fly	O
or	O
maybe	O
you	O
would	O
like	O
to	O
use	O
a	O
different	O
type	O
for	O
the	O
backing	O
store	O
.	O
If	O
you	O
are	O
accessing	O
properties	O
directly	O
,	O
a	O
change	O
like	O
that	O
can	O
break	O
an	O
awful	O
lot	O
of	O
code	O
in	O
one	O
swell	O
foop	O
.	O
i	O
can	O
be	O
wrong	O
because	O
i	O
'm	O
autodidact	O
,	O
but	O
i	O
NEVER	O
user	O
public	O
properties	O
in	O
my	O
Java	O
clases	O
,	O
they	O
are	O
allways	O
private	O
or	O
protected	O
,	O
so	O
that	O
outside	O
code	O
must	O
access	O
by	O
getters/setters	O
.	O
it	O
's	O
better	O
for	O
mainteance	O
/	O
modification	O
purposes	O
.	O
And	O
for	O
inside	O
class	O
code	O
...	O
if	O
getter	O
method	O
is	O
trivial	O
i	O
use	O
the	O
property	O
directly	O
,	O
but	O
i	O
allways	O
use	O
the	O
setter	O
methods	O
because	O
i	O
could	O
easily	O
add	O
code	O
to	O
fire	O
events	O
if	O
i	O
wish	O
Does	O
n't	O
this	O
depend	O
on	O
the	O
hardware	O
as	O
well	O
as	O
number	O
of	O
threads	O
and	O
stuff	O
?	O
I	O
would	O
make	O
a	O
simple	O
test	O
and	O
run	O
it	O
with	O
increasing	O
amounts	O
of	O
threads	O
hammering	O
and	O
see	O
what	O
seems	O
best	O
.	O
It	O
depends	O
on	O
what	O
kind	O
of	O
application	O
you	O
are	O
building	O
.	O
Create	O
a	O
representative	O
test	O
scenario	O
,	O
and	O
start	O
hammering	O
away	O
.	O
Then	O
you	O
will	O
know	O
the	O
definitive	O
answer	O
.	O
Besides	O
your	O
use	O
case	O
,	O
it	O
also	O
depends	O
on	O
CPU	O
,	O
memory	O
,	O
front-side	O
bus	O
,	O
operating	O
system	O
,	O
cache	O
settings	O
,	O
etcetera	O
.	O
Seriously	O
,	O
just	O
test	O
your	O
own	O
scenario	O
.	O
If	O
you	O
need	O
some	O
numbers	O
(	O
that	O
actually	O
may	O
mean	O
nothing	O
in	O
your	O
scenario	O
)	O
:	O
Oracle	O
Berkeley	O
DB	O
:	O
Performance	O
Metrics	O
and	O
Benchmarks	O
Performance	O
Metrics	O
Benchmarks	O
:	O
Berkeley	O
DB	O
What	O
I	O
did	O
when	O
working	O
against	O
a	O
database	O
of	O
unknown	O
performance	O
was	O
to	O
measure	O
turnaround	O
time	O
on	O
my	O
queries	O
.	O
I	O
kept	O
upping	O
the	O
thread	O
count	O
until	O
turn-around	O
time	O
dropped	O
,	O
and	O
dropping	O
the	O
thread	O
count	O
until	O
turn-around	O
time	O
improved	O
(	O
well	O
,	O
it	O
was	O
processes	O
in	O
my	O
environment	O
,	O
but	O
whatever	O
)	O
.	O
There	O
were	O
moving	O
averages	O
and	O
all	O
sorts	O
of	O
metrics	O
involved	O
,	O
but	O
the	O
take-away	O
lesson	O
was	O
:	O
just	O
adapt	O
to	O
how	O
things	O
are	O
working	O
at	O
the	O
moment	O
.	O
You	O
never	O
know	O
when	O
the	O
DBAs	O
will	O
improve	O
performance	O
or	O
hardware	O
will	O
be	O
upgraded	O
,	O
or	O
perhaps	O
another	O
process	O
will	O
come	O
along	O
to	O
load	O
down	O
the	O
system	O
while	O
you	O
're	O
running	O
.	O
So	O
adapt	O
.	O
Oh	O
,	O
and	O
another	O
thing	O
:	O
avoid	O
process	O
switches	O
if	O
you	O
can	O
-	O
batch	O
things	O
up	O
.	O
Oh	O
,	O
I	O
should	O
make	O
this	O
clear	O
:	O
this	O
all	O
happened	O
at	O
run	O
time	O
,	O
not	O
during	O
development	O
.	O
The	O
problem	O
is	O
that	O
the	O
Distinct	O
operator	O
does	O
not	O
grant	O
that	O
it	O
will	O
maintain	O
the	O
original	O
order	O
of	O
values	O
.	O
So	O
your	O
query	O
will	O
need	O
to	O
work	O
like	O
this	O
var	O
names	O
=	O
(	O
from	O
DataRow	O
dr	O
in	O
dataTable.Rows	B-API
select	I-API
(	I-API
string	I-API
)	I-API
dr	I-API
[	I-API
``	I-API
Name	I-API
''	I-API
]	I-API
)	I-API
.Distinct	B-API
(	I-API
)	I-API
.OrderBy	B-API
(	I-API
name	I-API
=	I-API
name	I-API
)	I-API
;	O
Try	O
the	O
following	O
var	O
names	O
=	O
(	O
from	O
dr	O
in	O
dataTable.Rows	B-API
select	I-API
(	I-API
string	I-API
)	I-API
dr	I-API
[	I-API
``	I-API
Name	I-API
''	I-API
]	I-API
)	I-API
.Distinct	B-API
(	I-API
)	I-API
.OrderBy	B-API
(	I-API
name	I-API
=	I-API
name	I-API
)	I-API
;	O
this	O
should	O
work	O
for	O
what	O
you	O
need	O
.	O
ActiveMQ	O
works	O
well	O
with	O
C	O
#	O
using	O
the	O
Spring.NET	O
integrations	O
and	O
NMS	O
.	O
A	O
post	O
with	O
some	O
links	O
to	O
get	O
you	O
started	O
in	O
that	O
direction	O
is	O
here	O
.	O
Also	O
consider	O
using	O
MSMQ	O
(	O
The	O
System.Messaging	O
namespace	O
)	O
or	O
a	O
.NET	O
based	O
asynchronous	O
messaging	O
solution	O
,	O
with	O
some	O
options	O
here	O
.	O
Sorry	O
if	O
this	O
is	O
n't	O
what	O
you	O
are	O
asking	O
for	O
...	O
Have	O
you	O
considered	O
some	O
sort	O
of	O
cache	O
behind	O
the	O
scenes	O
that	O
acts	O
a	O
bit	O
like	O
the	O
``	O
bucket	O
system	O
''	O
when	O
using	O
asynchronous	O
sockets	O
in	O
c/c++	O
using	O
winsock	O
?	O
Basicly	O
,	O
it	O
works	O
by	O
accepting	O
requests	O
,	O
and	O
sends	O
an	O
immediate	O
response	O
back	O
to	O
the	O
web	O
app	O
,	O
and	O
when	O
it	O
finally	O
gets	O
around	O
to	O
finding	O
your	O
record	O
,	O
it	O
updates	O
it	O
on	O
the	O
app	O
via	O
AJAX	O
or	O
any	O
other	O
technology	O
of	O
your	O
choice	O
.	O
Since	O
I	O
'm	O
not	O
a	O
C	O
#	O
programmer	O
I	O
ca	O
n't	O
provide	O
any	O
specific	O
example	O
.	O
Hope	O
this	O
helps	O
!	O
You	O
tried	O
old	O
builds	O
,	O
but	O
is	O
there	O
a	O
reason	O
you	O
ca	O
n't	O
keep	O
going	O
further	O
back	O
in	O
the	O
repository	O
history	O
and	O
seeing	O
exactly	O
when	O
the	O
bug	O
was	O
introduced	O
?	O
Otherwise	O
,	O
I	O
would	O
suggest	O
adding	O
simple	O
logging	O
of	O
some	O
kind	O
to	O
help	O
track	O
down	O
the	O
problem	O
,	O
though	O
I	O
am	O
at	O
a	O
loss	O
of	O
what	O
specifically	O
you	O
might	O
want	O
to	O
log	O
.	O
If	O
you	O
can	O
find	O
out	O
what	O
exactly	O
CAN	O
cause	O
this	O
problem	O
,	O
via	O
google	O
and	O
documentation	O
of	O
the	O
exceptions	O
you	O
are	O
getting	O
,	O
maybe	O
that	O
will	O
give	O
further	O
insight	O
on	O
what	O
to	O
look	O
for	O
in	O
the	O
code	O
.	O
My	O
first	O
choice	O
would	O
be	O
a	O
dedicated	O
heap	O
tool	O
such	O
as	O
pageheap.exe	O
.	O
Rewriting	O
new	O
and	O
delete	O
might	O
be	O
useful	O
,	O
but	O
that	O
does	O
n't	O
catch	O
the	O
allocs	O
committed	O
by	O
lower-level	O
code	O
.	O
If	O
this	O
is	O
what	O
you	O
want	O
,	O
better	O
to	O
Detour	O
the	O
low-level	B-API
alloc	B-API
s	O
using	O
Microsoft	O
Detours	O
.	O
Also	O
sanity	O
checks	O
such	O
as	O
:	O
verify	O
your	O
run-time	O
libraries	O
match	O
(	O
release	O
vs.	O
debug	O
,	O
multi-threaded	O
vs.	O
single-threaded	O
,	O
dll	O
vs.	O
static	O
lib	O
)	O
,	O
look	O
for	O
bad	O
deletes	O
(	O
eg	O
,	O
delete	O
where	O
delete	O
[	O
]	O
should	O
have	O
been	O
used	O
)	O
,	O
make	O
sure	O
you	O
're	O
not	O
mixing	O
and	O
matching	O
your	O
allocs	O
.	O
Also	O
try	O
selectively	O
turning	O
off	O
threads	O
and	O
see	O
when/if	O
the	O
problem	O
goes	O
away	O
.	O
What	O
does	O
the	O
call	O
stack	O
etc	O
look	O
like	O
at	O
the	O
time	O
of	O
the	O
first	O
exception	O
?	O
My	O
first	O
action	O
would	O
be	O
as	O
follows	O
:	O
Build	O
the	O
binaries	O
in	O
``	O
Release	O
''	O
version	O
but	O
creating	O
debug	O
info	O
file	O
(	O
you	O
will	O
find	O
this	O
possibility	O
in	O
project	O
settings	O
)	O
.	O
Use	O
Dr	O
Watson	O
as	O
a	O
defualt	O
debugger	B-API
(	I-API
DrWtsn32	I-API
-I	I-API
)	I-API
on	O
a	O
machine	O
on	O
which	O
you	O
want	O
to	O
reproduce	O
the	O
problem	O
.	O
Repdroduce	O
the	O
problem	O
.	O
Dr	O
Watson	O
will	O
produce	O
a	O
dump	O
that	O
might	O
be	O
helpful	O
in	O
further	O
analysis	O
.	O
Another	O
try	O
might	O
be	O
using	O
WinDebug	O
as	O
a	O
debugging	O
tool	O
which	O
is	O
quite	O
powerful	O
being	O
at	O
the	O
same	O
time	O
also	O
lightweight	O
.	O
Maybe	O
these	O
tools	O
will	O
allow	O
you	O
at	O
least	O
to	O
narrow	O
the	O
problem	O
to	O
certain	O
component	O
.	O
And	O
are	O
you	O
sure	O
that	O
all	O
the	O
components	O
of	O
the	O
project	O
have	O
correct	O
runtime	O
library	O
settings	O
(	O
C/C++	O
tab	O
,	O
Code	O
Generation	O
category	O
in	O
VS	O
6.0	O
project	O
settings	O
)	O
?	O
I	O
have	O
same	O
problems	O
in	O
my	O
work	O
(	O
we	O
also	O
use	O
sometimes	O
)	O
.	O
And	O
there	O
is	O
no	O
easy	O
solution	O
for	O
it	O
.	O
I	O
have	O
only	O
some	O
hints	O
:	O
Try	O
with	O
automatic	O
crash	O
dumps	O
on	O
production	O
machine	O
(	O
see	O
Process	O
Dumper	O
)	O
.	O
My	O
experience	O
says	O
Dr.	O
Watson	O
is	O
not	O
perfect	O
for	O
dumping	O
.	O
Remove	O
all	O
catch	O
(	O
...	O
)	O
from	O
your	O
code	O
.	O
They	O
often	O
hide	O
serious	O
memory	O
exceptions	O
.	O
Check	O
Advanced	O
Windows	O
Debugging	O
-	O
there	O
are	O
lots	O
of	O
great	O
tips	O
for	O
problems	O
like	O
yours	O
.	O
I	O
recomend	O
this	O
with	O
all	O
my	O
heart	O
.	O
If	O
you	O
use	O
try	O
and	O
checked	O
builds	O
.	O
Invalid	O
iterator	O
are	O
hell	O
.	O
Good	O
luck	O
.	O
Problems	O
like	O
yours	O
take	O
us	O
months	O
to	O
solve	O
.	O
Be	O
ready	O
for	O
this	O
...	O
How	O
about	O
using	O
FxCop	O
to	O
check	O
to	O
see	O
if	O
the	O
assembly	O
meets	O
your	O
documentation	O
requirements	O
(	O
though	O
this	O
wont	O
be	O
able	O
to	O
check	O
the	O
grammar	O
,	O
spelling	O
and	O
relevance	O
of	O
the	O
contents	O
of	O
the	O
documentation	O
-	O
only	O
you	O
can	O
check	O
that	O
)	O
.	O
MS	O
have	O
released	O
style	O
cop	O
to	O
compliment	O
FXCop	O
http	O
:	O
//blogs.msdn.com/sourceanalysis/	O
unlike	O
fx	O
cop	O
this	O
has	O
better	O
rules	O
and	O
can	O
check	O
amount	O
of	O
comments	O
etc	O
.	O
To	O
spell	O
check	O
the	O
comment	O
see	O
on	O
my	O
article	O
on	O
spell	O
checking	O
comments	O
and	O
source	O
code	O
for	O
free	O
.	O
On	O
Linux	O
:	O
set	O
raw	O
mode	O
select	O
and	O
read	O
the	O
keystroke	O
restore	O
normal	O
settings	O
import	O
sys	O
import	O
select	O
import	O
termios	O
import	O
tty	O
def	O
getkey	B-API
(	I-API
)	I-API
:	O
old_settings	O
=	O
termios.tcgetattr	B-API
(	I-API
sys.stdin	I-API
)	I-API
tty.setraw	B-API
(	I-API
sys.stdin.fileno	B-API
(	I-API
)	I-API
)	I-API
select.select	O
(	O
[	O
sys.stdin	O
]	O
,	O
[	O
]	O
,	O
[	O
]	O
,	O
0	O
)	O
answer	O
=	O
sys.stdin.read	B-API
(	I-API
1	I-API
)	I-API
termios.tcsetattr	B-API
(	I-API
sys.stdin	I-API
,	I-API
termios.TCSADRAIN	I-API
,	I-API
old_settings	I-API
)	I-API
return	O
answer	O
print	O
``	O
''	O
''	O
Menu	O
1	O
)	O
Say	O
Foo	O
2	O
)	O
Say	O
Bar	O
''	O
''	O
''	O
answer=getkey	O
(	O
)	O
if	O
``	O
1	O
''	O
in	O
answer	O
:	O
print	O
``	O
foo	O
''	O
elif	O
``	O
2	O
''	O
in	O
answer	O
:	O
print	O
``	O
bar	O
''	O
On	O
Windows	O
:	O
import	O
msvcrt	O
answer=msvcrt.getch	B-API
(	I-API
)	I-API
Wow	O
,	O
that	O
took	O
forever	O
.	O
Ok	O
,	O
here	O
's	O
what	O
I	O
've	O
ended	O
up	O
with	O
#	O
!	O
C	O
:	O
\python25\python.exeimport	O
msvcrtprint	O
``	O
``	O
''	O
Menu1	O
)	O
Say	O
Foo	O
2	O
)	O
Say	O
Bar	O
''	O
''	O
''	O
while	O
1	O
:	O
char	O
=	O
if	O
char	O
==	O
:	O
#	O
escape	O
break	O
if	O
char	O
==	O
``	O
1	O
''	O
:	O
print	O
``	O
foo	O
''	O
break	O
if	O
char	O
==	O
``	O
2	O
''	O
:	O
print	O
``	O
Bar	O
''	O
msvcrt.getch	B-API
(	I-API
)	I-API
chr	B-API
(	I-API
27	I-API
)	I-API
It	O
fails	O
hard	O
using	O
IDLE	O
,	O
the	O
python	O
...	O
thing	O
...	O
that	O
comes	O
with	O
python	O
.	O
But	O
once	O
I	O
tried	O
it	O
in	O
DOS	B-API
(	I-API
er	I-API
,	I-API
CMD.exe	I-API
)	I-API
,	O
as	O
a	O
real	O
program	O
,	O
then	O
it	O
ran	O
fine	O
.	O
No	O
one	O
try	O
it	O
in	O
IDLE	O
,	O
unless	O
you	O
have	O
Task	O
Manager	O
handy	O
.	O
I	O
've	O
already	O
forgotten	O
how	O
I	O
lived	O
with	O
menus	O
that	O
ar	O
n't	O
super-instant	O
responsive	O
.	O
The	O
reason	O
msvcrt	O
fails	O
in	O
IDLE	O
is	O
because	O
IDLE	O
is	O
not	O
accessing	O
the	O
library	O
that	O
runs	O
msvcrt	O
.	O
Whereas	O
when	O
you	O
run	O
the	O
program	O
natively	O
in	O
cmd.exe	O
it	O
works	O
nicely	O
.	O
For	O
the	O
same	O
reason	O
that	O
your	O
program	O
blows	O
up	O
on	O
Mac	O
and	O
Linux	O
terminals	O
.	O
But	O
I	O
guess	O
if	O
you	O
're	O
going	O
to	O
be	O
using	O
this	O
specifically	O
for	O
windows	O
,	O
more	O
power	O
to	O
ya	O
.	O
Hmm	O
...	O
off	O
by	O
one	O
hour	O
.	O
DST	O
possibly	O
?	O
Is	O
the	O
date	O
set	O
correctly	O
?	O
What	O
version	O
of	O
the	O
JDK	O
is	O
this	O
running	O
on	O
?	O
(	O
``	O
java	O
-version	O
''	O
)	O
It	O
's	O
a	O
``	O
quirk	O
''	O
in	O
the	O
way	O
the	O
JVM	O
looks	O
up	O
the	O
zoneinfo	O
file	O
.	O
See	O
Bug	O
ID	O
6456628	O
.	O
The	O
easiest	O
workaround	O
is	O
to	O
make	O
/etc/localtime	O
a	O
symlink	O
to	O
the	O
correct	O
zoneinfo	O
file	O
.	O
For	O
Pacific	O
time	O
,	O
the	O
following	O
commands	O
should	O
work	O
:	O
#	B-API
sudo	B-API
cp	B-API
/etc/localtime	B-API
/etc/localtime.dist	B-API
#	I-API
sudo	B-API
ln	B-API
-fs	B-API
/usr/share/zoneinfo/America/Los_Angeles	B-API
I	O
have	O
n't	O
had	O
any	O
problems	O
with	O
the	O
symlink	O
approach	O
.	O
Edit	O
:	O
Added	O
``	O
sudo	O
''	O
to	O
the	O
commands	O
.	O
It	O
may	O
help	O
to	O
double-check	O
the	O
timezone	O
rules	O
your	O
OS	O
is	O
using	O
.	O
/usr/bin/zdump	O
-v	O
/etc/localtime	O
|	O
This	O
file	O
should	O
contain	O
your	O
daylight	O
savings	O
rules	O
,	O
like	O
this	O
one	O
for	O
the	O
year	O
2080	O
:	O
/etc/localtime	O
Sun	O
Mar	O
31	O
01:00:00	O
2080	O
UTC	O
=	O
Sun	O
Mar	O
31	O
02:00:00	O
2080	O
BST	O
isdst=1	O
You	O
can	O
compare	O
this	O
with	O
the	O
timezone	O
rules	O
you	O
think	O
you	O
should	O
be	O
using	O
.	O
They	O
can	O
be	O
found	O
in	O
/usr/share/zoneinfo/	O
.	O
Rex	O
,	O
I	O
suspect	O
a	O
good	O
place	O
to	O
start	O
looking	O
is	O
solutions	O
that	O
compress	O
the	O
ViewState	O
--	O
they	O
're	O
grabbing	O
ViewState	O
on	O
the	O
server	O
before	O
it	O
's	O
sent	O
down	O
to	O
the	O
client	O
and	O
gzipping	O
it	O
.	O
That	O
's	O
exactly	O
where	O
you	O
want	O
to	O
be	O
.	O
Scott	O
Hanselman	O
on	O
ViewState	O
Compression	B-API
(	I-API
2005	I-API
)	I-API
ViewState	O
Compression	O
with	O
System.IO.Compression	B-API
(	I-API
2007	I-API
)	I-API
See	O
this	O
blog	O
post	O
where	O
the	O
author	O
describes	O
a	O
method	O
for	O
overriding	O
the	O
default	O
behavior	O
for	O
generating	O
the	O
ViewState	O
and	O
instead	O
shows	O
how	O
to	O
save	O
it	O
on	O
the	O
server	O
Session	O
object	O
.	O
In	O
ASP.NET	O
2.0	O
,	O
ViewState	O
is	O
saved	O
by	O
a	O
descendant	O
of	O
PageStatePersister	O
class	O
.	O
This	O
class	O
is	O
an	O
abstract	O
class	O
for	O
saving	O
and	O
loading	O
ViewsState	O
and	O
there	O
are	O
two	O
implemented	O
descendants	O
of	O
this	O
class	O
in	O
.Net	O
Framework	O
,	O
named	O
HiddenFieldPageStatePersister	B-API
and	O
SessionPageStatePersister	B-API
.	O
By	O
default	O
HiddenFieldPageStatePersister	B-API
is	O
used	O
to	O
save/load	O
ViewState	O
information	O
,	O
but	O
we	O
can	O
easily	O
get	O
the	O
SessionPageStatePersister	B-API
to	O
work	O
and	O
save	O
ViewState	O
in	O
Session	O
object	O
.	O
Although	O
I	O
did	O
not	O
test	O
his	O
code	O
,	O
it	O
seems	O
to	O
show	O
exactly	O
what	O
you	O
want	O
:	O
a	O
way	O
to	O
gain	O
access	O
to	O
ViewState	O
code	O
while	O
still	O
on	O
the	O
server	O
,	O
before	O
postback	O
.	O
I	O
enabled	O
compression	O
following	O
similar	O
articles	O
to	O
those	O
posted	O
above	O
.	O
The	O
key	O
to	O
accessing	O
the	O
ViewState	O
before	O
the	O
application	O
sends	O
it	O
was	O
overriding	O
this	O
method	O
;	O
protected	B-API
override	B-API
void	B-API
(	O
object	O
viewState	O
)	O
You	O
can	O
call	O
the	O
base	O
method	O
within	O
this	O
override	O
and	O
then	O
add	O
whatever	O
additional	O
logic	O
you	O
require	O
to	O
handle	O
the	O
ViewState	O
.	O
If	O
you	O
use	O
a	O
return	O
type	O
of	O
,	O
you	O
can	O
return	O
your	O
query	O
variable	O
directly	O
.	O
Create	O
a	O
class	O
object	O
and	O
return	O
a	O
list	B-API
(	I-API
T	I-API
)	I-API
of	O
the	O
query	O
.	O
The	O
left	O
one	O
,	O
then	O
stops	O
if	O
it	O
is	O
null	O
.	O
Edit	O
:	O
In	O
vb.net	O
it	O
will	O
evaluate	O
both	O
and	O
possibly	O
throw	O
an	O
error	O
,	O
unless	O
you	O
use	O
AndAlso	O
C	O
#	O
:	O
Left	O
to	O
right	O
,	O
and	O
processing	O
stops	O
if	O
a	O
non-match	O
(	O
evaluates	O
to	O
false	O
)	O
is	O
found	O
.	O
I	O
have	O
heard	O
somewhere	O
that	O
compilers	O
work	O
backwards	O
,	O
but	O
I	O
am	O
unsure	O
how	O
true	O
this	O
is	O
.	O
vb.net	B-API
)	I-API
(	I-API
x	O
isNot	O
Nothing	O
AndAlso	O
x.go	B-API
(	I-API
)	I-API
Evaluation	O
is	O
done	O
left	O
to	O
right	O
AndAlso	O
operator	O
makes	O
sure	O
that	O
only	O
if	O
the	O
left	O
side	O
was	O
TRUE	O
,	O
the	O
right	O
side	O
will	O
be	O
evaluated	O
(	O
very	O
important	O
,	O
since	O
ifx	O
is	O
nothing	O
x.go	O
will	O
crash	O
)	O
You	O
may	O
use	O
And	O
instead	O
ofAndAlso	O
in	O
vb	O
.	O
in	O
which	O
case	O
the	O
left	O
side	O
gets	O
evaluated	O
first	O
as	O
well	O
,	O
but	O
the	O
right	O
side	O
will	O
get	O
evaluated	O
regardless	O
of	O
result	O
.	O
Best	O
Practice	O
:	O
Always	O
use	O
AndAlso	O
,	O
unless	O
you	O
have	O
a	O
very	O
good	O
reason	O
why	O
not	O
to	O
.	O
It	O
was	O
asked	O
in	O
a	O
followup	O
why	O
or	O
when	O
would	O
anyone	O
use	O
And	O
instead	O
of	O
AndAlso	O
(	O
or	O
instead	O
of	O
)	O
:	O
Here	O
is	O
an	O
example	O
:	O
if	O
(	O
And	O
)	O
then	O
end	O
x.init	B-API
(	I-API
)	I-API
y.init	B-API
(	I-API
)	I-API
x.process	B-API
(	I-API
y	I-API
)	I-API
y.doDance	B-API
(	I-API
)	I-API
In	O
this	O
case	O
,	O
I	O
want	O
to	O
init	O
both	O
X	O
and	O
Y.	O
Y	O
must	O
be	O
initialized	O
in	O
order	O
for	O
y.DoDance	O
to	O
be	O
able	O
to	O
execute	O
.	O
However	O
,	O
in	O
the	O
init	B-API
(	I-API
)	I-API
function	O
I	O
am	O
doing	O
also	O
some	O
extra	O
thing	O
like	O
checking	O
a	O
socket	O
is	O
open	O
,	O
and	O
only	O
if	O
that	O
works	O
out	O
ok	O
,	O
for	O
both	O
,	O
I	O
should	O
go	O
ahead	O
and	O
do	O
the	O
x.process	B-API
(	I-API
y	I-API
)	I-API
.	O
Again	O
,	O
this	O
is	O
probably	O
not	O
needed	O
and	O
not	O
elegant	O
in	O
99	O
%	O
of	O
the	O
cases	O
,	O
that	O
is	O
why	O
I	O
said	O
that	O
the	O
default	O
should	O
be	O
to	O
use	O
AndAlso	O
.	O
The	O
concept	O
modesty	O
is	O
referring	O
to	O
is	O
operator	O
overloading	O
.	O
in	O
the	O
statement	O
:	O
if	O
(	O
A	O
B	O
)	O
{	O
//	O
do	O
something	O
}	O
A	O
is	O
evaluated	O
first	O
,	O
if	O
it	O
evaluates	O
to	O
false	O
,	O
B	O
is	O
never	O
evaluated	O
.	O
The	O
same	O
applies	O
toif	O
(	O
A	O
||	O
B	O
)	O
{	O
//do	O
something	O
}	O
A	O
is	O
evaluated	O
first	O
,	O
if	O
it	O
evaluates	O
to	O
true	O
,	O
B	O
is	O
never	O
evaluated	O
.	O
This	O
concept	O
,	O
overloading	O
,	O
applies	O
to	O
(	O
i	O
think	O
)	O
all	O
of	O
the	O
C	O
style	O
languages	O
,	O
and	O
many	O
others	O
as	O
well	O
.	O
ZombieSheep	O
is	O
dead-on	O
.	O
The	O
only	O
``	O
gotcha	O
''	O
that	O
might	O
be	O
waiting	O
is	O
that	O
this	O
is	O
only	O
true	O
if	O
you	O
are	O
using	O
the	O
operator	O
.	O
When	O
using	O
the	O
operator	O
,	O
both	O
expressions	O
will	O
be	O
evaluated	O
every	O
time	O
,	O
regardless	O
if	O
one	O
or	O
both	O
evaluate	O
to	O
false	O
.	O
if	O
(	O
amHungry	O
whiteCastleIsNearby	O
)	O
{	O
//	O
The	O
code	O
will	O
check	O
if	O
White	O
Castle	O
is	O
nearby	O
//	O
even	O
when	O
I	O
am	O
not	O
hungry	O
}	O
if	O
(	O
amHungry	O
whiteCastleIsNearby	O
)	O
{	O
//	O
The	O
code	O
will	O
only	O
check	O
if	O
White	O
Castle	O
is	O
nearby	O
//	O
when	O
I	O
am	O
Note	O
that	O
there	O
is	O
a	O
difference	O
between	O
and	O
regarding	O
how	O
much	O
of	O
your	O
expression	O
is	O
evaluated	O
.	O
is	O
known	O
as	O
a	O
short-circuited	O
boolean	O
AND	O
,	O
and	O
will	O
,	O
as	O
noted	O
by	O
others	O
here	O
,	O
stop	O
early	O
if	O
the	O
result	O
can	O
be	O
determined	O
before	O
all	O
the	O
sub-expressions	O
are	O
evaluated	O
.	O
is	O
known	O
as	O
a	O
logical	O
bitwise	O
operator	O
and	O
will	O
always	O
evaluate	O
all	O
the	O
sub-expressions	O
.	O
As	O
such	O
:	O
if	O
(	O
a	O
(	O
)	O
b	O
(	O
)	O
)	O
Will	O
only	O
call	O
b	O
if	O
a	O
returns	O
true	O
.	O
however	O
,	O
this	O
:	O
if	O
(	O
a	O
(	O
)	O
b	O
(	O
)	O
)	O
Will	O
always	O
call	O
both	O
a	O
and	O
b	O
,	O
even	O
though	O
the	O
result	O
of	O
calling	O
a	O
is	O
false	O
and	O
thus	O
known	O
to	O
be	O
false	O
regardless	O
of	O
the	O
result	O
of	O
calling	O
b	O
.	O
This	O
same	O
difference	O
exists	O
for	O
the	O
||	O
and	O
|	O
operators	O
.	O
Some	O
languages	O
have	O
interesting	O
situations	O
where	O
expressions	O
are	O
executed	O
in	O
a	O
different	O
order	O
.	O
I	O
am	O
specifically	O
thinking	O
of	O
Ruby	O
,	O
but	O
I	O
'm	O
sure	O
they	O
borrowed	O
it	O
from	O
elsewhere	O
(	O
probably	O
Perl	O
)	O
.	O
The	O
expressions	O
in	O
the	O
logic	O
will	O
stay	O
left	O
to	O
right	O
,	O
but	O
for	O
example	O
:	O
puts	O
message	O
unless	O
The	O
above	O
will	O
evaluate	O
``	O
message.nil	B-API
?	O
''	O
first	O
,	O
then	O
if	O
it	O
evaluates	O
to	O
false	O
(	O
unless	O
is	O
like	O
if	O
except	O
it	O
executes	O
when	O
the	O
condition	O
is	O
false	O
instead	O
of	O
true	O
)	O
,	O
``	O
puts	O
message	O
''	O
will	O
execute	O
,	O
which	O
prints	O
the	O
contents	O
of	O
the	O
message	O
variable	O
to	O
the	O
screen	O
.	O
It	O
's	O
kind	O
of	O
an	O
interesting	O
way	O
to	O
structure	O
your	O
code	O
sometimes	O
...	O
I	O
personally	O
like	O
to	O
use	O
it	O
for	O
very	O
short	O
1	O
liners	O
like	O
the	O
above	O
.	O
Edit	O
:	O
To	O
make	O
it	O
a	O
little	O
clearer	O
,	O
the	O
above	O
is	O
the	O
same	O
as	O
:	O
unless	O
message.nil	B-API
?	O
puts	O
Nopes	O
,	O
at	O
least	O
the	O
C	O
#	O
compiler	O
does	O
n't	O
work	O
backwards	O
(	O
in	O
either	O
or	O
||	O
)	O
.	O
It	O
's	O
left	O
to	O
right	O
.	O
What	O
is	O
a	O
good	O
example	O
of	O
when	O
to	O
use	O
the	O
bitwise	O
operator	O
instead	O
of	O
the	O
``	O
short-circuited	O
boolean	O
''	O
?	O
Suppose	O
you	O
have	O
flags	O
,	O
say	O
for	O
file	O
attributes	O
.	O
Suppose	O
you	O
've	O
defined	O
READ	O
as	O
4	O
,	O
WRITE	O
as	O
2	O
,	O
and	O
EXEC	O
as	O
1	O
.	O
In	O
binary	O
,	O
that	O
's	O
:	O
READ	B-API
0100	O
WRITE	B-API
0010	O
EXEC	B-API
Each	O
flag	O
has	O
one	O
bit	O
set	O
,	O
and	O
each	O
one	O
is	O
unique	O
.	O
The	O
bitwise	O
operators	O
let	O
you	O
combine	O
these	O
flags	B-API
:	O
flags	B-API
=	O
READ	B-API
EXEC	B-API
;	O
//	O
value	O
of	O
flags	B-API
is	O
@	O
shsteimer	O
The	O
concept	O
modesty	O
is	O
referring	O
to	O
is	O
operator	O
overloading	O
.	O
in	O
the	O
statement	O
:	O
...	O
A	O
is	O
evaluated	O
first	O
,	O
if	O
it	O
evaluates	O
to	O
false	O
,	O
B	O
is	O
never	O
evaluated	O
.	O
The	O
same	O
applies	O
to	O
That	O
's	O
not	O
operator	O
overloading	O
.	O
Operator	O
overloading	O
is	O
the	O
term	O
given	O
for	O
letting	O
you	O
define	O
custom	O
behaviour	O
for	O
operators	O
,	O
such	O
as	O
*	O
,	O
+	O
,	O
=	O
and	O
so	O
on	O
.	O
This	O
would	O
let	O
you	O
write	O
your	O
own	O
'Log	O
'	O
class	O
,	O
and	O
then	O
do	O
a	O
=	O
new	O
;	O
//	O
Log	O
class	O
overloads	O
the	O
+	O
operatora	O
+	O
``	O
some	O
string	O
''	O
;	O
//	O
Call	O
the	O
overloaded	O
method	O
-	O
otherwise	O
this	O
would	O
n't	O
work	O
because	O
you	O
ca	O
n't	O
normally	O
add	O
strings	O
to	O
Log	B-API
(	I-API
)	I-API
Doing	O
this	O
||	O
//	O
be	O
never	O
runs	O
if	O
a	O
is	O
a	O
(	O
)	O
b	O
(	O
)	O
is	O
actually	O
called	O
Short	O
Circuit	O
Evaluation	O
You	O
use	O
when	O
you	O
specifically	O
want	O
to	O
evaluate	O
all	O
the	O
sub-expressions	O
,	O
most	O
likely	O
because	O
they	O
have	O
side-effects	O
you	O
want	O
,	O
even	O
though	O
the	O
final	O
result	O
will	O
be	O
false	O
and	O
thus	O
not	O
execute	O
your	O
then	O
part	O
of	O
your	O
if-statement	O
.	O
Note	O
that	O
and	O
|	O
operates	O
for	O
both	O
bitwise	O
masks	O
and	O
boolean	O
values	O
and	O
is	O
not	O
just	O
for	O
bitwise	O
operations	O
.	O
They	O
're	O
called	O
bitwise	O
,	O
but	O
they	O
are	O
defined	O
for	O
both	O
integers	O
and	O
boolean	O
data	O
types	O
in	O
C	O
#	O
.	O
When	O
things	O
are	O
all	O
in-line	O
,	O
they	O
're	O
executed	O
left-to-right	O
.	O
When	O
things	O
are	O
nested	O
,	O
they	O
're	O
executed	O
inner-to-outer	O
.	O
This	O
may	O
seem	O
confusing	O
as	O
usually	O
what	O
's	O
``	O
innermost	O
''	O
is	O
on	O
the	O
right-hand	O
side	O
of	O
the	O
line	O
,	O
so	O
it	O
seems	O
like	O
it	O
's	O
going	O
backwards	O
...	O
For	O
example	O
a	B-API
=	B-API
)	B-API
(	O
5	O
,	O
GetSummary	B-API
(	I-API
``	I-API
Orion	I-API
''	I-API
,	I-API
GetAddress	B-API
(	I-API
``	I-API
Orion	I-API
''	I-API
)	I-API
Things	O
happen	O
like	O
this	O
:	O
Call	O
with	O
the	O
literal	O
Call	O
with	O
the	O
literal	O
and	O
the	O
result	O
of	O
Call	O
with	O
the	O
literal	O
and	O
the	O
result	O
of	O
Assign	O
this	O
v	O
lue	O
to	O
a	O
I	O
realise	O
this	O
question	O
has	O
already	O
been	O
answered	O
,	O
but	O
I	O
'd	O
like	O
to	O
throw	O
in	O
another	O
bit	O
of	O
information	O
which	O
is	O
related	O
to	O
the	O
topic	O
.	O
In	O
languages	O
,	O
like	O
C++	O
,	O
where	O
you	O
can	O
actually	O
overload	O
the	O
behaviour	O
of	O
the	O
and	O
||	O
operators	O
,	O
it	O
is	O
highly	O
recommended	O
that	O
you	O
do	O
not	O
do	O
this	O
.	O
This	O
is	O
because	O
when	O
you	O
overload	O
this	O
behaviour	O
,	O
you	O
end	O
up	O
forcing	O
the	O
evaluation	O
of	O
both	O
sides	O
of	O
the	O
operation	O
.	O
This	O
does	O
two	O
things	O
:	O
It	O
breaks	O
the	O
lazy	O
evaluation	O
mechanism	O
because	O
the	O
overload	O
is	O
a	O
function	O
which	O
has	O
to	O
be	O
invoked	O
,	O
and	O
hence	O
both	O
parameters	O
are	O
evaluated	O
before	O
calling	O
the	O
function	O
.	O
The	O
order	O
of	O
evaluation	O
of	O
said	O
parameters	O
is	O
n't	O
guaranteed	O
and	O
can	O
be	O
compiler	O
specific	O
.	O
Hence	O
the	O
objects	O
would	O
n't	O
behave	O
in	O
the	O
same	O
manner	O
as	O
they	O
do	O
in	O
the	O
examples	O
listed	O
in	O
the	O
question/previous	O
answers	O
.	O
For	O
more	O
info	O
,	O
have	O
a	O
read	O
of	O
Scott	O
Meyers	O
'	O
book	O
,	O
More	O
Effective	O
C++	O
.	O
Cheers	O
!	O
I	O
like	O
Orion	O
's	O
responses	O
.	O
I	O
'll	O
add	O
two	O
things	O
:	O
The	O
left-to-right	O
still	O
applies	O
first	O
The	O
inner-to-outer	O
to	O
ensure	O
that	O
all	O
arguments	O
are	O
resolved	O
before	O
calling	O
the	O
function	O
Say	O
we	O
have	O
the	O
following	O
example	O
:	O
a	O
=	O
)	O
,	O
(	O
5	O
,	O
GetSummary	B-API
(	I-API
``	I-API
Orion	I-API
''	I-API
,	I-API
GetAddress	B-API
(	I-API
``	I-API
Orion	I-API
''	I-API
)	I-API
(	O
``	O
Chris	O
''	O
,	O
GetAddress	B-API
(	I-API
``	I-API
Chris	I-API
''	I-API
)	I-API
Here	O
's	O
the	O
order	O
of	O
execution	O
:	O
GetAddress	B-API
(	I-API
``	I-API
Orion	I-API
''	I-API
)	I-API
(	O
``	O
Orion	O
''	O
,	O
...	O
)	O
GetAddress	B-API
(	I-API
``	I-API
Chris	I-API
''	I-API
)	I-API
(	O
``	O
Chris	O
''	O
,	O
...	O
)	O
Foo	O
(	O
...	O
)	O
Assigns	O
to	O
I	O
ca	O
n't	O
speak	O
about	O
C	O
#	O
's	O
legal	O
requirements	O
(	O
although	O
I	O
did	O
test	O
a	O
similar	O
example	O
using	O
Mono	O
before	O
writing	O
this	O
post	O
)	O
,	O
but	O
this	O
order	O
is	O
guaranteed	O
in	O
Java	O
.	O
And	O
just	O
for	O
completeness	O
(	O
since	O
this	O
is	O
a	O
language-agnostic	O
thread	O
as	O
well	O
)	O
,	O
there	O
are	O
languages	O
like	O
C	O
and	O
C++	O
,	O
where	O
the	O
order	O
is	O
not	O
guaranteed	O
unless	O
there	O
is	O
a	O
sequence	O
point	O
.	O
References	O
:	O
1	O
,	O
2	O
.	O
In	O
answering	O
the	O
thread	O
's	O
question	O
,	O
however	O
,	O
and	O
are	O
sequence	O
points	O
in	O
C++	O
(	O
unless	O
overloaded	O
;	O
also	O
see	O
OJ	O
's	O
excellent	O
answer	O
)	O
.	O
So	O
some	O
examples	O
:	O
foo	O
(	O
)	O
bar	O
(	O
)	O
foo	O
(	O
)	O
bar	O
(	O
)	O
In	O
the	O
case	O
,	O
foo	O
(	O
)	O
is	O
guaranteed	O
to	O
run	O
before	O
bar	O
(	O
)	O
(	O
if	O
the	O
latter	O
is	O
run	O
at	O
all	O
)	O
,	O
since	O
is	O
a	O
sequence	O
point	O
.	O
In	O
the	O
case	O
,	O
no	O
such	O
guarantee	O
is	O
made	O
(	O
in	O
C	O
and	O
C++	O
)	O
,	O
and	O
indeed	O
bar	O
(	O
)	O
can	O
run	O
before	O
foo	O
(	O
)	O
,	O
or	O
vice	O
versa	O
.	O
``	O
C	O
#	O
:	O
Left	O
to	O
right	O
,	O
and	O
processing	O
stops	O
if	O
a	O
match	O
(	O
evaluates	O
to	O
true	O
)	O
is	O
found	O
.	O
''	O
Zombie	O
sheep	O
is	O
wrong	O
,	O
not	O
enough	O
rep	O
to	O
down	O
vote	O
it	O
.	O
The	O
question	O
is	O
about	O
the	O
operator	O
,	O
not	O
the	O
||	O
operator	O
.	O
In	O
the	O
case	O
of	O
evaluation	O
will	O
stop	O
if	O
a	O
FALSE	O
is	O
found	O
.	O
In	O
the	O
case	O
of	O
||	O
evaluation	O
stops	O
if	O
a	O
TRUE	O
is	O
found	O
.	O
Do	O
you	O
need	O
to	O
open	O
the	O
locfile	O
in	O
binary	O
using	O
?	O
f	O
=	O
open	B-API
(	I-API
locfile	I-API
,	I-API
``	I-API
rb	I-API
''	I-API
)	I-API
Well	O
if	O
you	O
go	O
under	O
the	O
properties	O
of	O
your	O
file	O
in	O
Windows	O
or	O
a	O
*nix	O
environment	O
,	O
you	O
will	O
notice	O
two	O
sizes	O
.	O
One	O
is	O
the	O
sector	O
size	O
,	O
and	O
one	O
is	O
the	O
actual	O
size	O
.	O
The	O
sector	O
size	O
is	O
the	O
number	O
of	O
sectors	O
in	O
bytes	O
that	O
are	O
used	O
up	O
on	O
your	O
hard	O
disk	O
.	O
That	O
is	O
because	O
two	O
files	O
can	O
not	O
be	O
in	O
the	O
same	O
sector	O
with	O
most	O
modern	O
file	O
systems	O
,	O
so	O
if	O
your	O
file	O
fills	O
up	O
half	O
of	O
the	O
sector	O
the	O
whole	O
sector	O
is	O
marked	O
as	O
filled	O
.	O
So	O
you	O
might	O
be	O
comparing	O
the	O
sector	O
file	O
size	O
to	O
the	O
actual	O
file	O
size	O
on	O
the	O
FTP	O
server	O
or	O
vice	O
versa	O
.	O
Small	O
files	O
take	O
up	O
a	O
whole	O
node	O
on	O
the	O
filesystem	O
whatever	O
size	O
that	O
is	O
.	O
My	O
host	O
tends	O
to	O
report	O
all	O
small	O
files	O
as	O
4kb	O
in	O
ftp	O
but	O
in	O
a	O
shell	O
gives	O
an	O
accurate	O
size	O
so	O
it	O
might	O
be	O
a	O
'feature	O
'	O
common	O
to	O
ftp	O
clients	O
.	O
One	O
possibility	O
is	O
Hudson	O
.	O
It	O
's	O
written	O
in	O
Java	O
,	O
but	O
there	O
's	O
integration	O
with	O
Python	O
projects	O
:	O
Hudson	O
embraces	O
Python	O
I	O
've	O
never	O
tried	O
it	O
myself	O
,	O
however	O
.	O
(	O
Update	O
,	O
Sept.	O
2011	O
:	O
After	O
a	O
trademark	O
dispute	O
Hudson	O
has	O
been	O
renamed	O
to	O
Jenkins	O
.	O
)	O
We	O
run	O
Buildbot	O
-	O
Trac	O
at	O
work	O
,	O
I	O
have	O
n't	O
used	O
it	O
too	O
much	O
since	O
my	O
code	O
base	O
is	O
n't	O
part	O
of	O
the	O
release	O
cycle	O
yet	O
.	O
But	O
we	O
run	O
the	O
tests	O
on	O
different	O
environments	B-API
(	I-API
OSX/Linux/Win	I-API
)	I-API
and	O
it	O
sends	O
emails	O
--	O
and	O
it	O
's	O
written	O
in	O
python	O
.	O
Second	O
the	O
Buildbot	O
-	O
Trac	O
integration	O
.	O
You	O
can	O
find	O
more	O
information	O
about	O
the	O
integration	O
on	O
the	O
Buildbot	O
website	O
.	O
At	O
my	O
previous	O
job	O
,	O
we	O
wrote	O
and	O
used	O
the	O
plugin	O
they	O
mention	B-API
(	I-API
tracbb	I-API
)	I-API
.	O
What	O
the	O
plugin	O
does	O
is	O
rewriting	O
all	O
of	O
the	O
Buildbot	O
urls	O
so	O
you	O
can	O
use	O
Buildbot	O
from	O
within	O
Trac	B-API
.	I-API
(	I-API
http	I-API
:	I-API
//example.com/tracbb	I-API
)	I-API
.	O
The	O
really	O
nice	O
thing	O
about	O
Buildbot	O
is	O
that	O
the	O
configuration	O
is	O
written	O
in	O
Python	O
.	O
You	O
can	O
integrate	O
your	O
own	O
Python	O
code	O
directly	O
to	O
the	O
configuration	O
.	O
It	O
's	O
also	O
very	O
easy	O
to	O
write	O
your	O
own	O
BuildSteps	O
to	O
execute	O
specific	O
tasks	O
.	O
We	O
used	O
BuildSteps	O
to	O
get	O
the	O
source	O
from	O
SVN	O
,	O
pull	O
the	O
dependencies	O
,	O
publish	O
test	O
results	O
to	O
WebDAV	O
,	O
etcetera	O
.	O
I	O
wrote	O
an	O
X10	O
interface	O
so	O
we	O
could	O
send	O
signals	O
with	O
build	O
results	O
.	O
When	O
the	O
build	O
failed	O
,	O
we	O
switched	O
on	O
a	O
red	O
lava	O
lamp	O
.	O
When	O
the	O
build	O
succeeded	O
,	O
a	O
green	O
lava	O
lamp	O
switched	O
on	O
.	O
Good	O
times	O
:	O
-	O
)	O
I	O
'm	O
not	O
sure	O
if	O
this	O
would	O
be	O
handled	O
exactly	O
the	O
same	O
way	O
for	O
webstart	O
,	O
but	O
we	O
ran	O
into	O
this	O
situation	O
in	O
a	O
desktop	O
application	O
when	O
dealing	O
with	O
a	O
set	O
of	O
native	O
libraries	O
(	O
dlls	O
in	O
our	O
case	O
)	O
.	O
Loading	O
libA	O
before	O
libB	O
should	O
work	O
,	O
unless	O
one	O
of	O
those	O
libraries	O
has	O
a	O
dependency	O
that	O
is	O
unaccounted	O
for	O
and	O
not	O
in	O
the	O
path	O
.	O
My	O
understanding	O
is	O
that	O
once	O
it	O
gets	O
to	O
a	O
system	O
loadLibrary	O
call	O
(	O
i.e	O
.	O
Java	O
has	O
found	O
the	O
library	O
in	O
its	O
java.library.path	B-API
and	O
is	O
now	O
telling	O
the	O
OS	O
to	O
load	O
it	O
)	O
-	O
it	O
is	O
completely	O
dependent	O
on	O
the	O
operating	O
system	O
to	O
find	O
any	O
dependent	O
libraries	O
,	O
because	O
at	O
that	O
point	O
it	O
is	O
the	O
operating	O
system	O
that	O
is	O
loading	O
the	O
library	O
for	O
the	O
process	O
,	O
and	O
the	O
OS	O
only	O
knows	O
how	O
to	O
look	O
in	O
the	O
system	O
path	O
.	O
That	O
seems	O
hard	O
to	O
set	O
in	O
the	O
case	O
of	O
a	O
Webstart	O
app	O
,	O
but	O
there	O
is	O
a	O
way	O
around	O
this	O
that	O
does	O
not	O
involve	O
static	O
compiling	O
.	O
You	O
may	O
be	O
able	O
to	O
shuffle	O
where	O
your	O
libraries	O
are	O
-	O
I	O
am	O
unsure	O
If	O
you	O
use	O
a	O
custom	O
classloader	O
,	O
you	O
can	O
override	O
loadLibrary	O
and	O
findLibrary	O
so	O
that	O
it	O
can	O
locate	O
your	O
libraries	O
from	O
within	O
a	O
jar	O
in	O
your	O
classpath	O
,	O
and	O
if	O
you	O
also	O
make	O
it	O
aware	O
of	O
your	O
native	O
library	O
dependencies	O
(	O
i.e	O
.	O
libB	O
depends	O
on	O
libA	O
depends	O
on	O
libX	O
,	O
then	O
when	O
loading	O
libB	O
you	O
can	O
catch	O
yourself	O
and	O
ensure	O
you	O
load	O
libA	O
first	O
,	O
and	O
in	O
checking	O
that	O
notice	O
and	O
load	O
libX	O
first	O
.	O
Then	O
the	O
OS	O
does	O
n't	O
try	O
to	O
find	O
a	O
library	O
that	O
is	O
n't	O
in	O
your	O
path	O
.	O
It	O
's	O
klunky	O
and	O
a	O
bit	O
painful	O
,	O
but	O
ensuring	O
Java	O
finds	O
them	O
and	O
loads	O
them	O
all	O
in	O
the	O
correct	O
order	O
can	O
work	O
.	O
Hrm	O
.	O
I	O
do	O
n't	O
know	O
about	O
yahoo	O
,	O
but	O
there	O
is	O
another	O
mapping	O
website	O
that	O
provides	O
an	O
API	O
for	O
India	O
.	O
http	O
:	O
//biz.mapmyindia.com/APIs.html	O
Open	O
your	O
csproj	O
file	O
in	O
notepad	O
(	O
or	O
notepad++	O
)	O
Find	O
the	O
line	O
:	O
Import	O
Project=	O
''	O
$	O
(	O
MSBuildToolsPath	O
)	O
\Microsoft.CSharp.targets	O
''	O
/	O
and	O
change	O
it	O
to	O
Import	O
Project=	O
''	O
$	O
(	O
MSBuildBinPath	O
)	O
\Microsoft.CSharp.targets	O
''	O
/	O
if	O
its	O
.net	O
on	O
both	O
sides	O
:	O
think	O
you	O
should	O
use	O
binary	O
serialization	O
and	O
send	O
the	O
byte	O
[	O
]	O
result	O
.	O
trusting	O
your	O
struct	O
to	O
be	O
fully	O
blittable	O
can	O
be	O
trouble	O
.	O
you	O
will	O
pay	O
in	O
some	O
overhead	O
(	O
both	O
cpu	O
and	O
network	O
)	O
but	O
will	O
be	O
safe	O
.	O
If	O
you	O
need	O
to	O
populate	O
each	O
member	O
variable	O
by	O
hand	O
you	O
can	O
generalize	O
it	O
a	O
bit	O
as	O
far	O
as	O
the	O
primitives	O
are	O
concerned	O
by	O
using	O
FormatterServices	O
to	O
retrieve	O
in	O
order	O
the	O
list	O
of	O
variable	O
types	O
associated	O
with	O
an	O
object	O
.	O
I	O
've	O
had	O
to	O
do	O
this	O
in	O
a	O
project	O
where	O
I	O
had	O
a	O
lot	O
of	O
different	O
message	O
types	O
coming	O
off	O
the	O
stream	O
and	O
I	O
definitely	O
did	O
n't	O
want	O
to	O
write	O
the	O
serializer/deserializer	O
for	O
each	O
message	O
.	O
Here	O
's	O
the	O
code	O
I	O
used	O
to	O
generalize	O
the	O
deserialization	O
from	O
a	O
byte	O
[	O
]	O
.	O
public	O
virtual	O
bool	O
{	O
MemberInfo	O
[	O
]	O
members	O
=	O
)	O
;	O
object	O
[	O
]	O
values	O
=	O
;	O
int	O
j	O
=	O
0	O
;	O
for	O
(	O
int	O
i	O
=	O
0	O
;	O
i	O
members.Length	B-API
;	O
i++	O
)	O
{	O
string	O
[	O
]	O
var	O
=	O
;	O
switch	O
(	O
var	O
[	O
0	O
]	O
)	O
{	O
case	O
``	O
UInt32	O
''	O
:	O
values	B-API
[	I-API
i	I-API
]	I-API
=	I-API
+	I-API
(	I-API
message	B-API
[	I-API
j	I-API
+	I-API
1	I-API
]	I-API
16	I-API
)	I-API
+	I-API
(	I-API
message	B-API
[	I-API
j	I-API
+	I-API
2	I-API
]	I-API
8	I-API
)	I-API
+	I-API
message	B-API
[	I-API
j	I-API
+	I-API
3	I-API
]	I-API
)	I-API
;	I-API
j	I-API
+=	I-API
4	I-API
;	I-API
break	O
;	O
case	O
``	O
UInt16	O
''	O
:	O
values	B-API
[	I-API
i	I-API
]	I-API
=	I-API
+	I-API
message	B-API
[	I-API
j	I-API
+	I-API
1	I-API
]	I-API
)	I-API
;	I-API
j	I-API
+=	I-API
2	I-API
;	I-API
break	O
;	O
case	O
``	O
Byte	O
''	O
:	O
values	B-API
[	I-API
i	I-API
]	I-API
=	I-API
(	I-API
byte	I-API
)	I-API
message	B-API
[	I-API
j++	I-API
]	I-API
;	I-API
break	O
;	O
case	O
``	O
UInt32	O
[	O
]	O
''	O
:	O
if	O
(	O
values	B-API
[	I-API
i	I-API
]	I-API
!	I-API
=	I-API
null	I-API
)	I-API
{	I-API
int	I-API
len	I-API
=	I-API
values	B-API
[	I-API
i	I-API
]	I-API
)	I-API
.Length	I-API
;	O
byte	O
[	O
]	O
b	O
=	O
new	O
byte	O
[	O
len	O
*	O
4	O
]	O
;	O
;	O
,	O
(	O
UInt32	O
[	O
]	O
)	O
values	B-API
[	I-API
i	I-API
]	I-API
,	I-API
len	I-API
)	I-API
;	I-API
j	I-API
+=	I-API
len	I-API
*	I-API
4	I-API
;	I-API
}	I-API
break	I-API
;	I-API
case	I-API
``	I-API
Byte	B-API
[	I-API
]	I-API
''	O
:	O
if	O
(	O
values	B-API
[	I-API
i	I-API
]	I-API
!	I-API
=	I-API
null	I-API
)	I-API
{	O
int	O
len	O
=	O
values	B-API
[	I-API
i	I-API
]	I-API
)	I-API
.Length	I-API
;	I-API
(	I-API
values	B-API
[	I-API
i	I-API
]	I-API
)	I-API
,	I-API
0	I-API
,	I-API
len	I-API
)	I-API
;	I-API
j	I-API
+=	I-API
len	I-API
;	I-API
}	I-API
break	O
;	O
default	O
:	O
throw	O
new	O
;	O
}	O
}	O
;	O
return	O
true	O
;	O
(	O
byte	O
[	O
]	O
message	B-API
)	I-API
(	O
this.GetType	O
(	O
)	O
(	O
this	O
,	O
members	B-API
)	I-API
[	I-API
i	I-API
]	I-API
.ToString	I-API
(	I-API
)	I-API
.Split	I-API
(	I-API
new	I-API
char	I-API
[	I-API
]	I-API
{	I-API
'	I-API
'	I-API
}	I-API
)	I-API
UInt32	I-API
)	I-API
(	I-API
(	I-API
message	I-API
[	O
j	O
]	O
24	O
)	O
UInt16	O
)	O
(	O
(	O
message	O
[	O
j	O
]	O
8	O
)	O
(	B-API
(	I-API
UInt32	I-API
[	I-API
]	I-API
)	I-API
(	O
message	O
,	O
j	O
,	O
b	O
,	O
0	O
,	O
len	O
*	O
4	O
)	O
Array.Copy	B-API
(	I-API
Utilities.ByteArrayToUInt32Array	I-API
(	I-API
b	I-API
)	I-API
(	I-API
(	I-API
byte	I-API
[	I-API
]	I-API
)	I-API
(	O
message	O
,	O
j	O
,	O
(	O
byte	O
[	O
]	O
)	O
(	O
``	O
ByteExtractable	O
:	O
:SetMessageBytes	O
Unsupported	O
Type	O
:	O
``	O
+	O
var	O
[	O
1	O
]	O
+	O
``	O
is	O
of	O
type	O
``	O
+	O
var	O
[	O
0	O
]	O
)	O
(	O
this	O
,	O
members	O
,	O
values	O
)	O
Most	O
people	O
use	O
.NET	O
serialization	O
(	O
there	O
is	O
faster	O
binary	O
and	O
slower	O
XML	O
formatter	O
,	O
they	O
both	O
depend	O
on	O
reflection	O
and	O
are	O
version	O
tolerant	O
to	O
certain	O
degree	O
)	O
However	O
,	O
if	O
you	O
want	O
the	O
fastest	O
(	O
unsafe	O
)	O
way	O
-	O
why	O
not	O
:	O
Writing	O
:	O
YourStruct	O
o	O
=	O
new	O
YourStruct	O
(	O
)	O
;	O
byte	O
[	O
]	O
buffer	O
=	O
new	O
byte	O
[	O
Marshal.SizeOf	O
(	O
typeof	O
(	O
YourStruct	O
)	O
)	O
]	O
;	O
GCHandle	O
handle	O
=	O
GCHandle.Alloc	B-API
(	I-API
buffer	I-API
,	I-API
GCHandleType.Pinned	I-API
)	I-API
;	O
Marshal.StructureToPtr	B-API
(	I-API
o	I-API
,	I-API
handle.AddrOfPinnedObject	B-API
(	I-API
)	I-API
,	O
false	O
)	O
;	O
handle.Free	O
(	O
)	O
;	O
Reading	O
:	O
handle	O
=	O
GCHandle.Alloc	B-API
(	I-API
buffer	I-API
,	I-API
GCHandleType.Pinned	I-API
)	I-API
;	O
o	O
=	O
(	O
YourStruct	O
)	O
Marshal.PtrToStructure	B-API
(	I-API
handle.AddrOfPinnedObject	I-API
(	I-API
)	I-API
,	O
typeof	O
(	O
YourStruct	O
)	O
)	O
;	O
handle.Free	B-API
(	I-API
)	I-API
;	O
One	O
possibility	O
lies	O
with	O
Win32	O
ANSI/Unicode	O
``	O
name-mangling	O
''	O
,	O
which	O
turns	O
the	O
symbol	O
into	O
either	O
or	O
.	O
There	O
are	O
three	O
possibilities	O
:	O
Windows.h	O
has	O
n't	O
been	O
loaded	O
,	O
so	O
stays	O
Windows.h	O
was	O
loaded	O
with	O
symbols	O
set	O
for	O
ANSI	O
,	O
so	O
becomes	O
Windows.h	O
was	O
loaded	O
with	O
symbols	O
set	O
for	O
Unicode	O
,	O
so	O
becomes	O
If	O
you	O
've	O
compiled	O
two	O
different	O
files	O
in	O
ways	O
that	O
trigger	O
two	O
different	O
scenarios	O
,	O
you	O
'll	O
get	O
a	O
linker	O
error	O
.	O
The	O
error	O
message	O
indicates	O
that	O
the	O
class	O
was	O
an	O
instance	O
of	O
#	O
2	O
,	O
above	O
--	O
perhaps	O
it	O
's	O
used	O
somewhere	O
that	O
windows.h	O
has	O
n't	O
been	O
loaded	O
?	O
Other	O
things	O
I	O
'd	O
do	O
in	O
your	O
place	O
,	O
just	O
as	O
a	O
matter	O
of	O
routine	O
:	O
1	O
)	O
Ensure	O
that	O
my	O
include	O
and	O
library	O
paths	O
do	O
n't	O
contain	O
anything	O
that	O
I	O
'm	O
not	O
expecting	O
.	O
2	O
)	O
Do	O
a	O
``	O
build	O
clean	O
''	O
and	O
then	O
manually	O
verify	O
it	O
,	O
deleting	O
any	O
extra	O
object	O
files	O
if	O
necessary	O
.	O
3	O
)	O
Make	O
sure	O
there	O
are	O
n't	O
any	O
hardcoded	O
paths	O
in	O
include	O
statements	O
that	O
do	O
n't	O
mean	O
what	O
they	O
meant	O
when	O
the	O
project	O
was	O
originally	O
rebuilt	O
.	O
EDIT	O
:	O
Fighting	O
with	O
the	O
formatting	O
:	O
(	O
windows.h	O
is	O
declared	O
at	O
the	O
top	O
of	O
IOCompletionPort.h	O
as	O
an	O
include	O
-	O
I	O
was	O
sick	O
of	O
seeing	O
7	O
lines	O
just	O
to	O
include	O
1	O
file	O
so	O
I	O
have	O
wrapped	O
it	O
its	O
own	O
file	O
and	O
includes	O
that	O
itself	O
.	O
This	O
also	O
contains	O
some	O
additional	O
#	O
defines	O
(	O
ie	O
ULONG_PTR	O
)	O
as	O
our	O
main	O
app	O
wo	O
n't	O
compile	O
with	O
the	O
Platform	O
SDK	O
installed	O
:	O
-	O
(	O
That	O
is	O
confirmed	O
.	O
Nothing	O
is	O
out	O
of	O
place	O
.	O
I	O
've	O
done	O
that	O
-	O
deleted	O
the	O
build	O
directories	O
I	O
never	O
use	O
hard-coded	O
paths	O
.	O
Presuming	O
you	O
have	O
n't	O
futzed	O
around	O
with	O
the	O
Project	O
settings	O
deleting	O
something	O
you	O
ought	O
not	O
have	O
(	O
which	O
is	O
where	O
I	O
'd	O
expect	O
external	O
dependencies	O
like	O
User32.lib	O
to	O
be	O
)	O
:	O
Check	O
Tools	O
|	O
Options	O
|	O
Directories	O
|	O
Libraries	O
(	O
going	O
from	O
memory	O
here	O
)	O
and	O
ensure	O
that	O
you	O
're	O
not	O
missing	O
the	O
common-all-garden	O
variety	O
lib	O
directories	O
(	O
again	O
,	O
without	O
VC6	O
in	O
front	O
of	O
me	O
,	O
I	O
ca	O
n't	O
tell	O
you	O
what	O
they	O
are	O
)	O
