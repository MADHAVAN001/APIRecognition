UnicodeEncodeError:	API
'charmap'	O
codec	O
can't	O
encode	O
character	O
Dictionarystring,	API
%@	O
Register	O
AjaxControlToolkit	API
namespace="AjaxControlToolkit"	O
assembly="AjaxControlToolkit,	O
Version=1.0.299.18064,	O
PublicKeyToken=12345678abcdefgh,	O
Visual	O
Studio	O
98	O
/	O
AKA	O
E6550	O
Core2	O
Dr	O
C/C++	O
raw_input()	O
DoStuff()	O
DoStuff()	O
DoStuff()	O
DoStuff()	O
Application.Run(theForm)	O
Application.Run()	O
Application.Run()	O
Double.(Try)Parse()	O
QueryPerformanceFrequency()	API
Page.ClientScript.RegisterClientScriptBlock()	API
print	API
tvdbinstance[1][23]['episodename']	O
#	O
get	O
the	O
name	O
of	O
episode	O
23	O
of	O
season	O
x[1][2][3][4]	O
=	O
if	O
:	O
x[1][2]	O
=	O
x[1].has_key(2)	O
self.data[show_id][season_number][episode_number][attribute_name]	O
=	O
self.data[seas_no][ep_no]['attribute']	O
=	O
C:\MyApp\MyApp.exe	O
WaitForMultipleObjects()	API
RetryTimer	API
fileIORetryTimer	API
=	O
new	API
);bool	O
success	O
=	O
false;while	O
(!success){	O
try	O
{	O
//	O
do	O
some	O
file	O
IO	O
which	O
may	O
succeed	O
or	O
fail	O
success	O
=	O
true;	O
}	O
catch	O
IOException	API
e)	O
{	O
if	O
fileIORetryTimer.HasExceededRetryTimeout	API
{	O
throw	O
e;	O
}	O
;	O
RetryTimer	O
TimeSpan.FromHours(10)	O
fileIORetryTimer.SleepUntilNextRetry()	API
{	O
//	O
some	O
code	O
block	O
}	O
this.RetryFileIO(delegate()	O
play()	O
stop()	O
pause()	O
record()	O
ListView.DataBind()	API
ListView.DataBind()	API
"Validation	O
of	O
viewstate	O
MAC	O
Print()	O
ShowPrintPreviewDialog()	API
GetTickCount()	O
Sleep()	API
class.patch(obj)	O
class.patch()	O
while	O
drand48()	O
rand()	API
eval("something()	O
foo.bar()	O
Navigate("javascript:fire_event(...)	O
itertools.groupby()	API
itertools.groupby()	O
SQL	O
Server	O
"Hello	O
John	O
Color.FromARGB(255,162,133,255)	O
File.Delete()	API
.NET	O
.NET	O
public	O
class	O
Card056	O
:	O
int('01010101111',2)	O
foreach	O
(DataRow	O
row	O
in	O
myTable.Rows){	O
if	O
(someConditionEvalsToTrue)	O
{	O
break;	O
//what's	O
the	O
difference	O
between	O
this	O
and	O
continue	O
?	O
//continue;	O
foo	O
in	O
iter_attr(arrayofpythonobjects,attributename)	API
body	O
onload=""	O
public	O
static	API
void	O
{	O
;window.location=\"Home.aspx\";");	O
;	O
);	O
;	O
PassthroughAuthentication()	API
System.Web.HttpContext.Current.Response.Write	API
System.Web.HttpContext.Current.Response.Write	API
System.Web.HttpContext.Current.Response.Write(string.Format("inputtype=hiddenname=\"cFName\"value=\"{0}\"","Username")	O
System.Web.HttpContext.Current.Response.Write("/form")	O
System.Web.HttpContext.Current.Response.Write("/body")	O
document.getElementById('whatever')	API
#!/usr/bin/pythonmodule_name	O
=	O
'MySQLdb'head	O
=	O
'''Content-Type:	O
text/html%s	O
is	O
'''	O
%	O
module_nametry:	O
print	O
head	O
+	O
'installed'except	O
ImportError:	API
print	O
head	O
+	O
'not	O
__import__(module_name)	O
Premature	O
end	O
of	O
script	O
import	O
cgiimport	O
cgitb;	O
import	O
cgitb.enable()	O
import	O
MySQLdbimport	API
cgiimport	O
cgitb;	O
cgitb.enable()	O
String	API
command	O
=	O
"kick	O
person"	O
StringTokenizer	API
tokens	O
=	O
new	O
String	API
action	O
=	O
null;if	O
)	O
{	O
action	O
=	O
;}if	O
(action	O
!=	O
null)	O
{	O
StringTokenizer(command)	API
(tokens.hasMoreTokens()	O
tokens.nextToken()	O
doCommand(action,tokens)	O
LoadModule	O
python_module	O
modules/mod_python.soDirectory	O
"/serverbase/htdocs/myapp"	O
AddHandler	API
mod_python	O
.py	O
PythonHandler	O
myapp	O
PythonDebug	O
$	O
/serverbase/htdocs/myapp$	O
ls	O
-ltotal	O
16-r-xr-xr-x	O
1	O
root	O
sys	O
6484	O
May	O
21	O
15:54	O
string[]	API
temp	O
=	O
new	O
int	O
LastCount	O
=	O
mydict[temp[mydict.count	O
-	O
string[mydict.count];mydict.Keys.CopyTo(temp,0)	O
#include	O
{	O
return	O
sys/socket.hintmain()	O
#include	O
sys/socket.hint	O
{	O
return	O
main()	O
#ifdef	O
__cplusplus	O
extern	O
"C"	O
extern	O
extern	O
"C"	O
{#include	O
sys/socket.h//	O
include	O
other	O
similarly	O
non-compliant	O
header	O
extern	O
using	O
System;using	O
System.Drawing;using	O
System.Windows.Forms	API
class	O
Program{	O
static	O
void	O
{	O
Timer	API
timer	O
=	O
new	O
;	O
//	O
timer.Interval	O
=	O
4	O
minutes	O
timer.Interval	O
=	O
;	O
timer.Tick	O
+=	O
(sender,	O
args)	O
=	O
{	O
Cursor.Position	O
=	O
new	O
;	O
};	O
;	O
;	O
Main()	O
Timer()	O
(int)(TimeSpan.TicksPerMinute*4/TimeSpan.TicksPerMillisecond)	O
Point(Cursor.Position.X+1,Cursor.Position.Y+1)	O
timer.Start()	API
Application.Run()	O
double	O
d	O
=	O
5.34	O
i	O
=	O
d	O
as	O
double	O
d	O
=	O
5.34	O
int	API
i	O
=	O
decimal.ToDouble()	API
MyDB	O
db	O
=	O
new	O
;var	O
q	O
=	O
from	O
db.MyTable	O
select	O
c;foreach	O
(var	O
c	O
in	O
q)	O
MyDB("DataSource=...")	O
Console.WriteLine	API
string	API
s	O
=	O
SqlConnection	API
conn	O
=	O
new	O
;SqlDataAdapter	O
da	O
=	O
new	O
DataTable	API
dt	O
=	O
new	O
;for	O
(int	O
i	O
=	O
0;	O
i	O
dt.Rows.Count;	O
i++){	O
s	O
+=	O
+	O
"	O
--	O
"	O
+	O
+	O
SqlConnection	API
("Server=192.168.1.1;Database=master;ConnectTimeout=30;UserID=foobar;Password=raboof;")	O
SqlDataAdapter("SELECTTOP5name,dbidFROMsysdatabases",conn)	O
DataTable();da.Fill(dt)	O
dt.Rows[i]["name"].ToString()	O
dt.Rows[i]["dbid"].ToString()	O
"\n";}MessageBox.Show(s)	O
insert	O
into	O
EscapeTest	O
(text)	O
values	O
('This	O
will	O
be	O
inserted	O
\\n	O
This	O
will	O
not	O
createTextNode()	O
createElement()	O
appendChild()	O
window	O
=	O
,	O
"delete_event",	O
,	O
,	O
"destroy",	O
,	O
gtk_window_new(GTK_WINDOW_TOPLEVEL);g_signal_connect(G_OBJECT(window)	O
G_CALLBACK(delete_event)	O
NULL);g_signal_connect(G_OBJECT(window)	O
G_CALLBACK(destroy)	API
gtk_main()	API
gtk_dialog_run()	API
gtk_init_add()	API
gtk_main()	API
gtk_widget_destroy()	API
typedef	API
struct	API
{	O
int	API
type;	O
int	API
result;}	O
DialogData;static	O
{	O
DialogData	API
*dialog_data	O
=	O
user_data;	O
GtkWidget	O
*dialog;	O
if	O
(dialog_data-type	O
MB_YESNO)	O
dialog	O
=	O
;	O
else	O
dialog	O
=	O
;	O
//	O
Set	API
title,	O
etc.	O
dialog_data-result	O
=	O
;	O
;	O
//	O
Quits	O
the	O
main	O
loop	O
run	O
in	O
return	O
FALSE;}int	O
{	O
DialogData	API
dialog_data;	O
dialog_data.type	O
=	O
type;	O
;	O
;	O
//	O
Do	O
stuff	O
based	O
on	O
gbooleandisplay_dialog(gpointeruser_data)	O
gtk_message_dialog_new(...)	O
gtk_message_dialog_new(...)	O
gtk_dialog_run(...)	O
gtk_main_quit()	API
MessageBox()	API
MessageBox(...)	O
gtk_idle_add(display_dialog,dialog_data)	O
gtk_main()	API
gtk_idle_add()	API
display_dialog()	API
gtk_main()	API
MessageBox()	API
String.split()	API
public	API
function	O
{	O
;	O
return	O
;}protected	O
function	O
{	O
return	O
getName()	API
$this-incrementNameCalled()	O
$this-_getName()	O
_getName()	O
$name	O
=	O
$this-_getName()	O
low-level	O
alloc	O
#!C:\python25\python.exeimport	O
msvcrtprint	O
"""Menu1)	O
Say	O
Foo	O
2)	O
Say	O
Bar"""while	O
1:	O
char	API
=	O
if	O
char	API
==	O
:	O
#escape	O
break	O
if	O
char	API
==	O
"1":	O
print	O
"foo"	O
if	O
char	API
==	O
"2":	O
print	O
"Bar"	O
msvcrt.getch()	API
chr(27)	O
#	O
sudo	API
cp	O
/etc/localtime	O
/etc/localtime.dist#	O
sudo	API
ln	API
-fs	O
/usr/share/zoneinfo/America/Los_Angeles	O
/usr/bin/zdump	O
-v	O
/etc/localtime	O
|	O
/etc/localtime	O
Sun	O
Mar	O
31	O
01:00:00	O
2080	O
UTC	O
=	O
Sun	O
Mar	O
31	O
02:00:00	O
2080	O
BST	O
isdst=1	O
protected	O
override	O
void	O
SavePageStateToPersistenceMedium(objectviewState)	API
list(T)	O
)	O
if(xisNotNothingAndAlsox.go()	O
if	O
(	O
And	O
)	O
then	O
end	O
x.init()	O
y.init()	O
x.process(y)	O
y.doDance()	O
if	O
(amHungry	O
whiteCastleIsNearby){	O
//	O
The	O
code	O
will	O
check	O
if	O
White	O
Castle	O
is	O
nearby	O
//	O
even	O
when	O
I	O
am	O
not	O
hungry}if	O
(amHungry	O
whiteCastleIsNearby){	O
//	O
The	O
code	O
will	O
only	O
check	O
if	O
White	O
Castle	O
is	O
nearby	O
//	O
when	O
I	O
am	O
puts	O
message	O
unless	O
unless	O
message.nil?	O
puts	O
READ	API
0100	O
WRITE	API
0010	O
EXEC	API
flags	O
=	O
READ	API
EXEC;	O
//	O
value	O
of	O
flags	O
is	O
a	O
=	O
new	O
;	O
//	O
Log	O
class	O
overloads	O
the	O
+	O
operatora	O
+	O
"some	O
string";	O
//	O
Call	O
the	O
overloaded	O
method	O
-	O
otherwise	O
this	O
wouldn't	O
work	O
because	O
you	O
can't	O
normally	O
add	O
strings	O
to	O
Log()	O
||	O
//	O
be	O
never	O
runs	O
if	O
a	O
is	O
a()	O
b()	O
a	O
=	O
)	O
Foo(5,GetSummary("Orion",GetAddress("Orion")	O
a	O
=	O
),	O
Foo(5,GetSummary("Orion",GetAddress("Orion")	O
GetSummary("Chris",GetAddress("Chris")	O
GetAddress("Orion")	O
GetSummary("Orion",...)	O
GetAddress("Chris")	O
GetSummary("Chris",...)	O
Foo(...)	O
foo()	O
bar()	O
foo()	O
bar()	O
foo()	O
bar()	O
bar()	O
foo()	O
public	O
virtual	API
bool	O
{	O
MemberInfo[]	O
members	O
=	O
);	O
object[]	O
values	O
=	O
;	O
int	API
j	O
=	O
0;	O
for	O
(int	O
i	O
=	O
0;	O
i	O
members.Length;	O
i++)	O
{	O
string[]	API
var	O
=	O
;	O
switch	O
(var[0])	O
{	O
case	O
"UInt32":	O
values[i]	O
=	O
+	O
(message[j	O
+	O
1]	O
16)	O
+	O
(message[j	O
+	O
2]	O
8)	O
+	O
message[j	O
+	O
3]);	O
j	O
+=	O
4;	O
break;	O
case	O
"UInt16":	O
values[i]	O
=	O
+	O
message[j	O
+	O
1]);	O
j	O
+=	O
2;	O
break;	O
case	O
"Byte":	O
values[i]	O
=	O
(byte)message[j++];	O
break;	O
case	O
"UInt32[]":	O
if	O
(values[i]	O
!=	O
null)	O
{	O
int	O
len	O
=	O
values[i]).Length;	O
byte[]	O
b	O
=	O
new	O
byte[len	O
*	O
4];	O
;	O
,	O
(UInt32[])values[i],	O
len);	O
j	O
+=	O
len	O
*	O
4;	O
}	O
break;	O
case	O
"Byte[]":	O
if	O
(values[i]	O
!=	O
null)	O
{	O
int	O
len	O
=	O
values[i]).Length;	O
(values[i]),	O
0,	O
len);	O
j	O
+=	O
len;	O
}	O
break;	O
default:	O
throw	O
new	O
;	O
}	O
}	O
;	O
return	O
true;	O
SetMessageBytes(byte[]message)	API
FormatterServices.GetSerializableMembers()	API
FormatterServices.GetObjectData(this,members)	O
members[i].ToString().Split(newchar[]{''})	O
(UInt32)((message[j]24)	O
(UInt16)((message[j]8)	O
((UInt32[])	O
Array.Copy(message,j,b,0,len*4)	API
Array.Copy(Utilities.ByteArrayToUInt32Array(b)	API
((byte[])	O
Array.Copy(message,j,(byte[])	API
Exception("ByteExtractable::SetMessageBytesUnsupportedType:"+var[1]+"isoftype"+var[0])	API
FormatterServices.PopulateObjectMembers(this,members,values)	API
.selectedIndex].value	O
document.getElementById('newSkill').options[document.getElementById('newSkill')	API
double	API
d	O
=	O
;//	O
--	O
OR	O
--double	O
d	O
=	O
double.Parse("100.20",CultureInfo.CurrentCulture)	API
double.Parse("100.20",CultureInfo.CurrentUICulture)	API
double	O
d	O
=	O
Double.Parse("5,000.00",NumberStyles.Any,CultureInfo.InvariantCulture)	API
gettimeofday()	O
gettimeofday()	O
clock_gettime(CLOCK_MONOTONIC)	O
clock_getres()	O
gettimeofday()	O
clock_gettime(CLOCK_MONOTONIC)	O
clock_getres()	O
using	O
(FileStream	O
stream	O
=	O
new	O
){	O
BinaryFormatter	O
formatter	O
=	O
new	O
;	O
StructType	O
aStruct	O
=	O
FileStream(fileName,FileMode.Open)	O
BinaryFormatter()	O
(StructType)formatter.Deserialize(filestream)	O
BinaryReader	O
reader	O
=	O
new	O
;StructType	O
o	O
=	O
new	O
;o.FileDate	O
=	O
);o.FileTime	O
=	O
BinaryReader(stream)	O
StructType()	O
Encoding.ASCII.GetString(reader.ReadBytes(8)	API
Encoding.ASCII.GetString(reader.ReadBytes(8)	API
StructType	O
o	O
=	O
new	O
;byte[]	O
buffer	O
=	O
new	O
)];GCHandle	O
handle	O
=	O
,	O
StructType()	O
byte[Marshal.SizeOf(typeof(StructType)	O
GCHandle.Alloc(buffer,GCHandleType.Pinned)	API
;Marshal.StructureToPtr(o,handle.AddrOfPinnedObject()	O
false);handle.Free()	O
public	O
class	O
MyClass	O
:	O
BaseClass{	O
//	O
Your	O
stuff	O
public	O
class	O
MyClass{	O
private	O
BaseClass	O
baseClass;	O
public	O
void	O
{	O
;	O
ExposeThisMethod()	O
baseClass.ExposeThisMethod()	API
public	O
class	O
MyClass{	O
private	O
BaseClass	O
baseClass;	O
public	O
BaseClass	O
BaseClass	O
{	O
get	O
{	O
return	O
baseClass;	O
}	O
]public	O
override	O
void	O
[Obsolete("Thesearenotsupportedinthisclass.",true)	O
dontcallmeanymore()	O
select	O
p.Date,	O
p.Amount,	O
d.SoftwareName,	O
d.DownloadLinkfrom	O
PurchaseDB.dbo.Purchases	O
as	O
pjoin	O
ProductDB.dbo.Products	O
as	O
d	O
on	O
d.sku	O
=	O
p.skuwhere	O
p.UserID	O
=	O
12345	O
public	O
class	O
CustomerDownloadInfo{	O
private	O
string	O
sku;	O
private	O
readonly	O
ICustomer	O
customer;	O
public	O
{	O
customer	O
=	O
Customer;	O
}	O
public	O
void	O
{	O
sku	O
=	O
Sku;	O
}	O
public	O
string	O
Sku{	O
get	O
{	O
return	O
sku;	O
}	O
}	O
public	O
string	O
Link{	O
get{	O
//	O
etc...	O
etc...	O
}	O
CustomerDownloadInfo(ICustomerCustomer)	O
AttachSku(stringSku)	O
episodes	O
=	O
[]episodes.append({'season':1,'episode':2,'name':'Something'})	O
episodes.append({'season':1,'episode':2,'name':'Something','actors':['BillyBob','SeanPenn']})	API
season_1	O
=	O
[e	O
for	O
e	O
in	O
episodes	O
if	O
e['season']	O
==	O
1]billy_bob	O
=	O
[e	O
for	O
e	O
in	O
episodes	O
if	O
'actors'	O
in	O
e	O
and	O
'Billy	O
Bob'	O
in	O
e['actors']]for	O
episode	O
in	O
billy_bob:	O
print	O
"Billy	O
bob	O
was	O
in	O
Season	O
%s	O
Episode	O
%s"	O
%	O
(episode['season'],	O
def	O
all	O
=	O
[""]	O
current_array	O
=	O
all.clone	O
{	O
|iteration|	O
next_array	O
=	O
[]	O
current_array.each	O
{	O
|string|	O
possible_characters.each	O
{	O
|c|	O
value	O
=	O
string	O
+	O
c	O
next_array.insert	O
next_array.length,	O
value	O
all.insert	O
all.length,	O
value	O
}	O
}	O
current_array	O
=	O
next_array	O
}	O
all.delete_if	O
{	O
|string|	O
string.length	O
x	O
perms(x,y,possible_characters)	O
1.upto(y)	O
public	O
class	O
GeneratePermutations	O
{	O
public	O
static	O
void	O
{	O
int	O
lower	O
=	O
;	O
int	O
upper	O
=	O
;	O
if	O
(upper	O
lower	O
||	O
upper	O
==	O
0	O
||	O
lower	O
==	O
0)	O
{	O
;	O
}	O
for	O
(int	O
length	O
=	O
lower;	O
length	O
=	O
upper;	O
length++)	O
{	O
;	O
}	O
}	O
private	O
static	O
void	O
{	O
if	O
(length	O
=	O
0)	O
{	O
;	O
}	O
else	O
{	O
for	O
(char	O
c	O
=	O
'a';	O
c	O
=	O
'z';	O
c++)	O
{	O
;	O
}	O
}	O
main(String[]args)	O
Integer.parseInt(args[0])	API
Integer.parseInt(args[1])	API
System.exit(0)	API
generate(length,"")	O
generate(intlength,Stringpartial)	O
System.out.println(partial)	API
generate(length-1,partial+c)	O
$outlook	O
=	O
COM("Outlook.Application")	O
var	O
element	O
=	O
;element.style.background	O
=	O
document.getElementById('element')	API
$('#fieldID').css('background-color','#FF6600')	O
public	O
class	O
Writer	O
extends	O
Object{	O
Writer	O
()	O
{	O
}	O
public	O
static	O
String[]	O
strings	O
=	O
{	O
"Hello	O
World",	O
"Goodbye	O
World"	O
};	O
public	O
static	O
void	O
throws	O
java.io.IOException	API
{	O
java.io.PrintWriter	API
pw	O
=	O
new	O
,	O
true);	O
{	O
;	O
;	O
}	O
;	O
main(String[]args)	O
java.io.PrintWriter(newjava.io.FileOutputStream("out.txt")	API
for(Strings:strings)	O
pw.println(s)	O
System.in.read()	API
pw.close()	O
public	O
class	O
Reader	O
extends	O
Object{	O
Reader	O
()	O
{	O
}	O
public	O
static	O
void	O
throws	O
Exception	O
{	O
java.io.FileInputStream	API
in	O
=	O
new	O
;	O
java.nio.channels.FileChannel	API
fc	O
=	O
;	O
java.nio.ByteBuffer	API
bb	O
=	O
;	O
=	O
0)	O
{	O
;	O
)	O
{	O
);	O
}	O
;	O
}	O
;	O
main(String[]args)	O
java.io.FileInputStream("out.txt")	API
in.getChannel()	API
java.nio.ByteBuffer.allocate(10)	API
while(fc.read(bb)	O
bb.flip()	O
while(bb.hasRemaining()	O
System.out.println((char)bb.get()	API
bb.clear()	O
System.exit(0)	API
private	O
static	O
IEnumeratorTextBox	O
FindTextBoxes(ControlrootControl)	O
private	O
static	O
IEnumerableTextBox	O
FindTextBoxes(ControlrootControl)	O
public	O
:	O
ClassName(...)	O
base(...)	O
toString()	O
equals()	O
`[(1,'Mark',86),(2,'John',34)	O
public	O
PropertyType	O
PropertyName	O
{	O
get;	O
set;	O
private	O
PropertyType	O
_property;public	O
PropertyType	O
PropertyName{	O
get	O
{	O
//logic	O
here	O
return	O
_property;	O
}	O
set	O
{	O
//logic	O
here	O
_property	O
=	O
value;	O
}	O
public	O
delegate	O
void	O
;	O
public	O
void	O
{	O
;	O
}	O
public	O
void	O
{	O
;	O
}	O
public	O
void	O
{	O
RetryTimer	O
fileIORetryTimer	O
=	O
new	O
);	O
bool	O
success	O
=	O
false;	O
while	O
(!success)	O
{	O
try	O
{	O
;	O
success	O
=	O
true;	O
}	O
catch	O
(IOException	O
e)	O
{	O
if	O
(fileIORetryTimer.HasExceededRetryTimeout)	O
{	O
throw;	O
}	O
;	O
}	O
}	O
}	O
public	O
void	O
{	O
;	O
;	O
IoOperation(paramsstring[]parameters)	O
FileDeleteOperation(paramsstring[]fileName)	O
File.Delete(fileName[0])	API
FileCopyOperation(paramsstring[]fileNames)	O
File.Copy(fileNames[0],fileNames[1])	API
RetryFileIO(IoOperationoperation,paramsstring[]parameters)	O
RetryTimer(TimeSpan.FromHours(10)	O
operation(parameters)	O
fileIORetryTimer.SleepUntilNextRetry()	API
Foo()	O
this.RetryFileIO(FileDeleteOperation,"L:\file.to.delete")	API
this.RetryFileIO(FileCopyOperation,"L:\file.to.copy.source","L:\file.to.copy.destination")	API
DIR	O
/s/b	O
function	O
{	O
;}new	O
Blah()	O
alert('blah')	O
Bla()	O
new	O
var	O
tempObject	O
=	O
{};var	O
result	O
=	O
;if	O
(result	O
is	O
not	O
an	O
object)	O
result	O
=	O
expression.call(tempObject)	API
tempObject.__proto__	O
=	O
htmlbodyscript	O
type="text/javascript"var	O
a	O
=	O
new	O
{	O
;	O
return	O
"test";};var	O
b	O
=	O
{	O
;	O
return	O
;	O
//a	O
is	O
a	O
;	O
//b	O
is	O
a	O
string	O
containing	O
function()	O
alert("method1")	O
(function()	O
alert("method2")	O
"test";})();alert(a)	O
functionalert(b)	O
(function()	O
})()	O
expandNode()	O
value	O
=	O
value	O
+	O
onclick='%#	O
""");"	O
"ToggleDisplay("""DataBinder.Eval(Container.DataItem,"JobCode")	O
if	O
(sb.Length	O
0)	O
sb.Append(",")	API
?php	O
$outputString	O
=	O
implode(',',$array)	O
using	O
(Process	O
printProcess	O
=	O
new	O
){	O
string	O
systemPath	O
=	O
;	O
printProcess.StartInfo.FileName	API
=	O
systemPath	O
+	O
@"\rundll32.exe";	O
printProcess.StartInfo.Arguments	O
=	O
systemPath	O
+	O
@"\mshtml.dll,PrintHTML	O
"""	O
+	O
fileToPrint	O
+	O
@"""";	O
Process()	O
Environment.GetFolderPath(Environment.SpecialFolder.System)	API
printProcess.Start()	API
Visual	O
Studio	O
Visual	O
Rhino	O
from	O
SomeOtherProduct.SomeModule	O
import	O
SomeClassdef	O
:	O
return	O
"ook	O
ook	O
eee	O
eee	O
eee!"SomeClass.speak	O
=	O
speak(self)	O
class	O
Array	O
def	O
print_length	O
puts	O
length	O
array	O
=	O
[1,	O
2,	O
3]def	O
array.print_length	O
puts	O
def	O
:	O
print	O
class	O
A:	O
pass	O
a	O
=	O
#	O
s	O
becomes	O
the	O
implicit	O
'self'	O
variable	O
__	O
main	O
__	O
.	O
A	O
instance	O
at	O
printme(s)	O
repr(s)	O
setattr(A,'printme',printme)	O
A()	O
a.printme()	O
body	O
runat="server"	O
%	O
MasterPageFile="..."	O
Master.FindControl("masterpageBody")	API
char	O
*a	O
=	O
"Hello	O
World!";char	O
*b	O
=	O
;int	O
position	O
=	O
b	O
-	O
strstr(a,"World")	O
a;printf("theoffsetis%i\n",position)	O
the	O
offset	O
is	O
document.onkeydown	API
=	O
TabExample;function	O
{	O
var	O
evt	O
=	O
(evt)	O
?	O
evt	O
:	O
?	O
event	O
:	O
null);	O
{	O
//	O
do	O
work	O
TabExample(evt)	O
((event)	O
if(evt.keycode==9)	O
Process.Start("mailto:name@domain.com?subject=TestCodeBody=TestText")	API
locate	O
public	O
class	O
methodOverloading{	O
public	O
static	O
void	O
{	O
;	O
}	O
public	O
static	O
void	O
{	O
;	O
}	O
public	O
static	O
void	O
{	O
int	O
i	O
=	O
5;	O
;	O
hello(Integerx)	O
System.out.println("Integer")	API
hello(longx)	O
System.out.println("long")	API
main(String[]args)	O
hello(i)	O
using	O
DequeInteger	O
queue;void	O
{	O
;}int	O
{	O
return	O
add(intn)	O
queue.add(n)	API
remove()	O
queue.remove()	API
Deque	O
queue;void	O
{	O
);}int	O
{	O
return	O
add(intn)	O
queue.add(Integer.valueOf(n)	API
remove()	O
((Integer)	O
queue.remove()).intValue()	O
void	O
{	O
5)	O
);	O
);}string	O
{	O
return	O
);}string	O
{	O
return	O
(typeof	O
DoStuff()	O
System.Console.WriteLine(SomeMethod((int)	API
System.Console.WriteLine(GetTypeNameint()	API
SomeMethod(objectsomeParameter)	O
string.Format("Sometext{0}",someParameter.ToString()	API
GetTypeNameT()	O
Integer	O
i1	O
=	O
new	O
;Integer	O
i2	O
=	O
new	O
;	O
//	O
Integer(127)	API
Integer(127);System.out.println(i1==i2)	O
Integer	O
i1	O
=	O
new	O
Integer	API
i2	O
=	O
new	O
;	O
//	O
Integer(128)	API
System.out.println(i1==i2)	API
);	O
//	O
System.out.println(i1.equals(i2)	API
Reset()	API
Console.ReadLine()	API
function	O
{	O
var	O
popup	O
=	O
;	O
;}function	O
{	O
pageLoad()	O
$find('ModalPopupClientID')	API
popup.add_shown(SetFocus)	API
SetFocus()	O
$get('TriggerClientId').focus()	API
procedure	O
InstallIntoRegistry;var	O
Reg:	O
TRegistry;begin	O
Reg	O
:=	O
TRegistry.Create;	O
try	O
Reg.RootKey	API
:=	O
HKEY_CLASSES_ROOT;	O
if	O
then	O
begin	O
;	O
;	O
;	O
;	O
if	O
then	O
begin	O
+	O
'"	O
"%1"');	O
end;	O
end	O
else	O
begin	O
+	O
'Please	O
make	O
sure	O
you	O
are	O
logged	O
in	O
with	O
a	O
user	O
account	O
with	O
administrative	O
rights!',	O
'Access	O
denied',	O
0);	O
Exit;	O
end;	O
finally	O
;	O
end;	O
Reg.OpenKey('moniker',True)	API
Reg.WriteString('','URL:Nameofmoniker')	API
Reg.WriteString('URLProtocol','')	API
Reg.WriteString('SourceFilter','{E436EBB6-524F-11CE-9F53-0020AF0BA770}')	API
Reg.WriteInteger('EditFlags',2)	API
Reg.OpenKey('shell\open\command',True)	API
Reg.WriteString('','"'+ParamStr(0)	API
MessageBox(0,'Youdonothavethenecessaryaccessrightstocompletethisinstallation!'+Chr(13)	API
FreeAndNil(Reg)	API
MessageBox(0,'ApplicationWebStarthasbeeninstalledsuccessfully!','Installed',0)	API
public	O
static	O
class	O
Base{	O
public	O
static	O
virtual	O
int	O
{	O
return	O
5;	O
}}public	O
static	O
class	O
Child1	O
:	O
Base{	O
public	O
static	O
override	O
int	O
{	O
return	O
1;	O
}}public	O
static	O
class	O
Child2	O
:	O
Base{	O
public	O
static	O
override	O
int	O
{	O
return	O
2;	O
GetNumber()	O
GetNumber()	O
GetNumber()	O
public	O
class	O
A{	O
public	O
static	O
void	O
{	O
}}public	O
class	O
B	O
:	O
Test()	O
class	O
Program{	O
static	O
void	O
{	O
;	O
Main(string[]args)	O
B.Test()	O
.entrypoint.maxstack	O
8L0000:	O
nop	O
L0001:	O
call	O
void	O
L0006:	O
nop	O
L0007:	O
ret	O
ConsoleApplication1.A::Test()	API
public	O
static	O
string	O
{	O
string	O
output	O
=	O
String.Empty;	API
if	O
(time.Days	O
0)	O
output	O
+=	O
time.Days	O
+	O
"	O
days	O
";	O
if	O
time.Hours	O
0)	O
output	O
+=	O
time.Hours	O
+	O
"	O
hr	O
";	O
if	O
(time.Days	O
==	O
0	O
time.Minutes	O
0)	O
output	O
+=	O
time.Minutes	O
+	O
"	O
min	O
";	O
if	O
(output.Length	O
==	O
0)	O
output	O
+=	O
time.Seconds	O
+	O
"	O
sec";	O
return	O
ToLongString(thisTimeSpantime)	API
((time.Days==0||time.Days==1)	O
output.Trim()	API
public	O
class	O
RelativeTimeRange	O
:	O
IComparable{	O
public	O
TimeSpan	O
UpperBound	O
{	O
get;	O
set;	O
}	O
public	O
delegate	O
string	O
;	O
public	O
RelativeTimeTextDelegate	O
MessageCreator	O
{	O
get;	O
set;	O
}	O
public	O
int	O
{	O
if	O
)	O
{	O
return	O
1;	O
}	O
//	O
note	O
that	O
this	O
sorts	O
in	O
reverse	O
order	O
to	O
the	O
way	O
you'd	O
expect,	O
//	O
this	O
saves	O
having	O
to	O
reverse	O
a	O
list	O
later	O
return	O
(obj	O
as	O
;	O
}}public	O
class	O
PrintRelativeTime{	O
private	O
static	O
ListRelativeTimeRange	O
timeRanges;	O
static	O
{	O
timeRanges	O
=	O
new	O
ListRelativeTimeRange{	O
new	O
RelativeTimeRange	O
{	O
UpperBound	O
=	O
,	O
MessageCreator	O
=	O
(delta)	O
=	O
{	O
return	O
"one	O
second	O
ago";	O
}	O
},	O
new	O
RelativeTimeRange	O
{	O
UpperBound	O
=	O
,	O
MessageCreator	O
=	O
(delta)	O
=	O
{	O
return	O
delta.Seconds	O
+	O
"	O
seconds	O
ago";	O
}	O
},	O
new	O
RelativeTimeRange	O
{	O
UpperBound	O
=	O
,	O
MessageCreator	O
=	O
(delta)	O
=	O
{	O
return	O
"one	O
minute	O
ago";	O
}	O
},	O
new	O
RelativeTimeRange	O
{	O
UpperBound	O
=	O
,	O
MessageCreator	O
=	O
(delta)	O
=	O
{	O
return	O
delta.Minutes	O
+	O
"	O
minutes	O
ago";	O
}	O
},	O
new	O
RelativeTimeRange	O
{	O
UpperBound	O
=	O
,	O
MessageCreator	O
=	O
(delta)	O
=	O
{	O
return	O
"one	O
hour	O
ago";	O
}	O
},	O
new	O
RelativeTimeRange	O
{	O
UpperBound	O
=	O
,	O
MessageCreator	O
=	O
(delta)	O
=	O
{	O
return	O
delta.Hours	API
+	O
"	O
hours	O
ago";	O
}	O
},	O
new	O
RelativeTimeRange	O
{	O
UpperBound	O
=	O
,	O
MessageCreator	O
=	O
(delta)	O
=	O
{	O
return	O
"yesterday";	O
}	O
},	O
new	O
RelativeTimeRange	O
{	O
UpperBound	O
=	O
),	O
MessageCreator	O
=	O
(delta)	O
=	O
{	O
return	O
delta.Days	API
+	O
"	O
days	O
ago";	O
}	O
},	O
new	O
RelativeTimeRange	O
{	O
UpperBound	O
=	O
),	O
MessageCreator	O
=	O
(delta)	O
=	O
{	O
return	O
"one	O
month	O
ago";	O
}	O
},	O
new	O
RelativeTimeRange	O
{	O
UpperBound	O
=	O
),	O
MessageCreator	O
=	O
(delta)	O
=	O
{	O
return	O
+	O
"	O
months	O
ago";	O
}	O
},	O
new	O
RelativeTimeRange	O
{	O
UpperBound	O
=	O
),	O
MessageCreator	O
=	O
(delta)	O
=	O
{	O
return	O
"one	O
year	O
ago";	O
}	O
},	O
new	O
RelativeTimeRange	O
{	O
UpperBound	O
=	O
TimeSpan.MaxValue,	API
MessageCreator	O
=	O
(delta)	O
=	O
{	O
return	O
+	O
"	O
years	O
ago";	O
}	O
}	O
};	O
;	O
}	O
public	O
static	O
string	O
{	O
RelativeTimeRange	O
postRelativeDateRange	O
=	O
timeRanges[0];	O
foreach	O
(var	O
timeRange	O
in	O
timeRanges)	O
{	O
if	O
=	O
0)	O
{	O
postRelativeDateRange	O
=	O
timeRange;	O
}	O
}	O
return	O
;	O
RelativeTimeTextDelegate(TimeSpantimeDelta)	API
CompareTo(objectobj)	API
(!(objisRelativeTimeRange)	O
RelativeTimeRange).UpperBound.CompareTo(UpperBound)	API
PrintRelativeTime()	API
TimeSpan.FromSeconds(1)	API
TimeSpan.FromSeconds(60)	API
TimeSpan.FromMinutes(2)	API
TimeSpan.FromMinutes(60)	API
TimeSpan.FromHours(2)	API
TimeSpan.FromHours(24)	API
TimeSpan.FromDays(2)	API
DateTime.Now.Subtract(DateTime.Now.AddMonths(-1)	API
DateTime.Now.Subtract(DateTime.Now.AddMonths(-2)	API
DateTime.Now.Subtract(DateTime.Now.AddYears(-1)	API
(int)Math.Floor(delta.TotalDays/30)	API
DateTime.Now.Subtract(DateTime.Now.AddYears(-2)	API
(int)Math.Floor(delta.TotalDays/365.24D)	API
timeRanges.Sort()	API
GetRelativeTimeMessage(TimeSpanago)	API
(ago.CompareTo(timeRange.UpperBound)	API
postRelativeDateRange.MessageCreator(ago)	API
site	O
=	O
meta	O
=	O
print	O
urllib.urlopen("http://python.org")	API
site.info()	API
meta.getheaders("Content-Length")	API
info()	O
import	O
urllib	O
d	O
=	O
print	O
Content-Type:	O
image/gifLast-Modified:	O
Thu,	O
07	O
Aug	O
2008	O
16:20:19	O
GMT	O
Expires:	O
Sun,	O
17	O
Jan	O
2038	O
19:14:07	O
GMT	O
Cache-Control:	O
public	O
Date:	O
Fri,	O
08	O
Aug	O
2008	O
13:40:41	O
GMT	O
Server:	O
gws	O
Content-Length:	O
20172	O
Connection:	O
urllib.urlopen("http://www.google.co.uk/logos/olympics08_opening.gif")	API
d.info()	API
urllibobject.info()	API
print	O
f.info()	API
os.stat("/the/local/file.zip")	API
import	O
urllib,	O
oslink	O
=	O
"http://python.org"print	O
"opening	O
url:",	O
linksite	O
=	O
meta	O
=	O
print	O
"Content-Length:",	O
[0]f	O
=	O
print	O
"File	O
on	O
f	O
=	O
f	O
=	O
print	O
"File	O
on	O
disk	O
after	O
print	O
.st_size	O
returns:",	O
urllib.urlopen(link)	API
site.info()	API
meta.getheaders("Content-Length")	API
open("out.txt","r")	API
disk:",len(f.read())f.close()	O
open("out.txt","w")	O
f.write(site.read()) API
site.close() API
f.close()	API
open("out.txt","r")	O
download:",len(f.read())f.close()	O
"os.stat()	O
os.stat("out.txt")	API
opening	O
url:	O
http://python.orgContent-Length:	O
16535File	O
on	O
disk:	O
16535File	O
on	O
disk	O
after	O
download:	O
.st_size	O
returns:	O
16535os.stat()	O
import	O
urllib,	O
oslink	O
=	O
"http://python.org"print	O
"opening	O
url:",	O
linksite	O
=	O
meta	O
=	O
print	O
"Content-Length:",	O
[0]f	O
=	O
print	O
"File	O
on	O
f	O
=	O
f	O
=	O
print	O
"File	O
on	O
disk	O
after	O
print	O
.st_size	O
returns:",	O
urllib.urlopen(link)	API
site.info()	API
meta.getheaders("Content-Length")	API
open("out.txt","rb")	O
disk:",len(f.read())f.close()	O
open("out.txt","wb")	O
f.write(site.read())site.close()f.close()	O
open("out.txt","rb")	O
download:",len(f.read())f.close()	O
"os.stat()	O
os.stat("out.txt")	API
$	O
python	O
test.pyopening	O
url:	O
http://python.orgContent-Length:	O
16535File	O
on	O
disk:	O
16535File	O
on	O
disk	O
after	O
download:	O
.st_size	O
returns:	O
16535os.stat()	O
//	O
open	O
for	O
binary	O
//	O
open	O
for	O
binary	O
writeopen(filename,"wb")	API
readopen(filename,"rb")	API
if	O
(control.InvokeRequired){	O
;}else{	O
control.Invoke(delegateWithMyCode)	API
delegateWithMyCode()	O
private	O
void	O
{	O
if	O
(this.InvokeRequired)	O
{	O
,	O
someParam);	O
}	O
//	O
Regular	O
handling	O
SomeEventHandler(ObjectsomeParam)	O
this.Invoke(newSomeEventHandlerDelegate(SomeEventHandler)	API
public	O
delegate	O
void	O
;public	O
DataBindDelegate	O
BindData	O
=	O
new	O
;public	O
void	O
{	O
DataBindDelegate()	O
DataBindDelegate(DoDataBind)	O
DoDataBind()	O
DataBind()	O
this.BindData.Invoke()	API
getParameter(StringparamName)	O
function	O
{	O
function	O
{	O
return	O
;	O
Vector(x,y,z)	O
length()	API
Math.sqrt(x*x+...)	API
section	O
name="enterpriseLibrary.ConfigurationSource"	O
type="Microsoft.Practices.EnterpriseLibrary.Common.Configuration.ConfigurationSourceSection,	O
Microsoft.Practices.EnterpriseLibrary.Common,	O
Version=3.1.0.0,	O
Culture=neutral,	O
PublicKeyToken=b03f5f7f11d50a3a"	O
/enterpriseLibrary.ConfigurationSource	O
selectedSource="Common"sources	O
add	O
name="Common"	O
type="Microsoft.Practices.EnterpriseLibrary.Common.Configuration.FileConfigurationSource,	O
Microsoft.Practices.EnterpriseLibrary.Common,	O
Version=3.1.0.0,	O
Culture=neutral,	O
PublicKeyToken=b03f5f7f11d50a3a"	O
filePath="Config\Exception.config"	O
from	O
__future__	O
import	O
with_statementimport	O
re,	O
osprofile	O
=	O
"	O
http://stackoverflow.com/users/30/myProfile.html')with	O
as	O
f:	O
for	O
line	O
in	O
f:	O
profile	O
=	O
profile	O
+	O
p	O
=	O
/div')	O
#Rep	O
is	O
found	O
hereprint	O
pm	O
=	O
print	O
mprint	O
+	O
"	O
""os.system('wget--no-cookies--header"Cookie:soba=(SeCreTCODe)	O
open("myProfile.html")	API
linef.close()	API
re.compile('summarycount"(\d+)	O
p.search(profile)	API
m.group(1)os.system("espeak\"Repisat"+m.group(1)	API
points\""os.remove("myProfile.html")	O
SELECT	O
title	O
from	O
img	O
WHERE	O
$class	O
==	O
var	O
request	O
=	O
new	O
;request.onreadystatechange	O
=	O
process;request.open	O
(	O
'GET',	O
url	O
;function	O
{	O
	O
	O
if	O
(	O
request.readyState	O
==	O
4	O
request.status	O
==	O
200	O
)	O
{	O
	O
	O
	O
var	O
xml	O
=	O
request.responseXML;	API
	O
XMLHttpRequest();request.overrideMimeType('text/xml')	O
);request.send(null)	O
process()	O
document.createElement('div')	API
public	O
static	O
string	O
{	O
return	O
ToTitleCaseInvariant(stringtargetString)	O
System.Threading.Thread.CurrentThread.CurrentCulture.TextInfo.ToTitleCase(targetString)	API
convert	O
first	O
character	O
to	O
uppercase.for	O
each	O
character	O
in	O
string,	O
	O
if	O
the	O
previous	O
character	O
is	O
whitespace,	O
	O
	O
	O
convert	O
character	O
to	O
object	O
result	O
=	O
theObject.GetType().GetProperty("Property"+i)	API
.GetValue(theObject,null)	O
class	O
MyClass	O
{	O
public	O
Point	O
point1,	O
point2,	O
point3;	O
private	O
Point[]	O
points;	O
public	O
{	O
//...	O
this.points	O
=	O
new	O
Point[]	O
{point1,	O
point2,	O
point3};	O
}	O
public	O
void	O
{	O
Point	O
target	O
=	O
this.points[i+1];	O
//	O
do	O
stuff	O
to	O
target	O
MyClass()	O
DoSomethingWith(inti)	O
if	O
)	O
(!String.IsNullOrEmpty(Request.QueryString["css"])	O
Session.Add("CSS",Request.QueryString["css"])	API
if	O
(Request.Querystring["stylesheet"]	O
!=	O
null)	O
{	O
Response.Cookies["stylesheet"].Value	O
=	O
Request.QueryString["stylesheet"];	O
Response.Redirect(CurrentPage)	API
if	O
(Request.Cookies["stylesheet"]	O
!=	O
null)	O
{	O
//	O
New	O
Stylesheet}	O
else	O
{	O
//	O
String[]	O
values	O
=	O
;myObject.StringField	O
=	O
values[0];myObject.IntField	O
=	O
myString.Split(',')	API
Int32.Parse(values[1])	API
public	O
static	O
IListIListstring	O
{	O
IListIListstring	O
records	O
=	O
new	O
;	O
StringReader	O
stringReader	O
=	O
new	O
;	O
bool	O
inQoutedString	O
=	O
false;	O
IListstring	O
record	O
=	O
new	O
;	O
StringBuilder	O
fieldBuilder	O
=	O
new	O
;	O
while	O
!=	O
-1)	O
{	O
char	O
readChar	O
=	O
;	O
if	O
(readChar	O
==	O
'\n'	O
||	O
(readChar	O
==	O
'\r'	O
==	O
'\n'))	O
{	O
//	O
If	O
it's	O
a	O
\r\n	O
combo	O
consume	O
the	O
\n	O
part	O
and	O
throw	O
it	O
away.	O
if	O
(readChar	O
==	O
'\r')	O
{	O
;	O
}	O
if	O
(inQoutedString)	O
{	O
if	O
(readChar	O
==	O
'\r')	O
{	O
;	O
}	O
;	O
}	O
else	O
{	O
);	O
fieldBuilder	O
=	O
new	O
;	O
;	O
record	O
=	O
new	O
;	O
inQoutedString	O
=	O
false;	O
}	O
}	O
else	O
if	O
(fieldBuilder.Length	O
==	O
0	O
!inQoutedString)	O
{	O
if	O
)	O
{	O
//	O
Ignore	O
leading	O
whitespace	O
}	O
else	O
if	O
(readChar	O
==	O
'"')	O
{	O
inQoutedString	O
=	O
true;	O
}	O
else	O
if	O
(readChar	O
==	O
',')	O
{	O
);	O
fieldBuilder	O
=	O
new	O
;	O
}	O
else	O
{	O
;	O
}	O
}	O
else	O
if	O
(readChar	O
==	O
',')	O
{	O
if	O
(inQoutedString)	O
{	O
;	O
}	O
else	O
{	O
);	O
fieldBuilder	O
=	O
new	O
;	O
}	O
}	O
else	O
if	O
(readChar	O
==	O
'"')	O
{	O
if	O
(inQoutedString)	O
{	O
if	O
==	O
'"')	O
{	O
;	O
;	O
}	O
else	O
{	O
inQoutedString	O
=	O
false;	O
}	O
}	O
else	O
{	O
;	O
}	O
}	O
else	O
{	O
;	O
}	O
}	O
);	O
;	O
return	O
Parse(stringcontent)	O
ListIListstring()	O
StringReader(content)	O
Liststring()	O
StringBuilder()	API
(stringReader.Peek()	O
(char)stringReader.Read()	API
stringReader.Peek()	API
stringReader.Read()	API
fieldBuilder.Append('\r')	API
fieldBuilder.Append('\n')	API
record.Add(fieldBuilder.ToString().TrimEnd()	API
StringBuilder()	API
records.Add(record)	API
Liststring()	O
(char.IsWhiteSpace(readChar)	API
record.Add(fieldBuilder.ToString().TrimEnd()	API
StringBuilder()	API
fieldBuilder.Append(readChar)	API
fieldBuilder.Append(',')	API
record.Add(fieldBuilder.ToString().TrimEnd()	API
StringBuilder()	API
(stringReader.Peek()	O
stringReader.Read()	API
fieldBuilder.Append('"')	API
fieldBuilder.Append(readChar)	API
fieldBuilder.Append(readChar)	API
record.Add(fieldBuilder.ToString().TrimEnd()	API
records.Add(record)	API
public	O
static	O
string	O
{	O
//	O
do	O
MyMethod(thisstringinput)	O
"asdfas".MyMethod()	O
public	O
static	O
class	O
StringExtensions{	O
public	O
static	O
String	O
{	O
return	O
;	O
trim(thisStrings)	API
s.Trim()	API
String	O
s	O
=	O
"	O
Test	O
";s	O
=	O
s.trim()	API
String	O
s	O
=	O
"	O
Test	O
";s	O
=	O
StringExtensions.trim(s)	API
public	O
static	O
void	O
{	O
//	O
Trim(thisstrings)	O
namespace	O
System.Runtime.CompilerServices{	O
]	O
public	O
sealed	O
class	O
ExtensionAttribute	O
:	O
Attribute	O
{	O
[AttributeUsage(AttributeTargets.Method|AttributeTargets.Class|AttributeTargets.Assembly)	O
UL	O
{	O
column-count:3;	O
-moz-column-count:3;	O
-webkit-column-count:3;	O
column-gap:2em;	O
-moz-column-gap:2em;	O
public	O
static	O
void	O
;	O
Code:	O
0:	O
iconst_	O
5	O
1:	O
istore_	O
1	O
2:	O
iload_	O
1	O
3:	O
i2l	O
4:	O
invokestatic	O
#6;	O
//Method	O
V	O
7:	O
main(java.lang.String[])	O
hello:(J)	O
public	O
static	O
void	O
;	O
Code:	O
0:	O
iconst_	O
5	O
1:	O
istore_	O
1	O
2:	O
iload_	O
1	O
3:	O
invokestatic	O
#6;	O
//Method	O
Ljava/lang/Integer;	O
6:	O
invokestatic	O
#7;	O
//Method	O
V	O
9:	O
main(java.lang.String[])	O
java/lang/Integer.valueOf:(I)	O
hello:(Ljava/lang/Integer;)	O
//	O
Clear	O
the	O
response	O
buffer	O
incase	O
there	O
is	O
anything	O
already	O
in	O
;Response.Buffer	O
=	O
true;//	O
Read	O
the	O
original	O
file	O
from	O
diskFileStream	O
myFileStream	O
=	O
new	O
;long	O
FileSize	O
=	O
myFileStream.Length;byte[]	O
Buffer	O
=	O
new	O
;//	O
Tell	O
the	O
browse	O
stuff	O
about	O
the	O
);Response.ContentType	O
=	O
;//	O
Send	O
the	O
data	O
to	O
the	O
it.Response.Clear()	O
FileStream(sPath,FileMode.Open)	API
byte[(int)FileSize];myFileStream.Read(Buffer,0,(int)	O
FileSize);myFileStream.Close()	O
fileResponse.AddHeader("Content-Length",FileSize.ToString()	API
);Response.AddHeader("Content-Disposition","inline;filename="+sFilename.Replace("","_")	O
getMimeType(sExtention,oConnection)	O
browserResponse.BinaryWrite(Buffer);Response.End()	API
int*	O
int	O
int	O
*sally	O
=	O
int	O
*bill	O
=	O
int	O
bill	O
=	O
private	O
delegate	O
void	O
;void	O
{	O
//	O
//	O
Make	O
sure	O
this	O
callback	O
is	O
on	O
the	O
correct	O
thread	O
//	O
if	O
(this.InvokeRequired)	O
{	O
,	O
new	O
object[]	O
{	O
sender,	O
ea	O
});	O
return;	O
}	O
//	O
//	O
Do	O
something	O
with	O
the	O
event	O
such	O
as	O
update	O
a	O
control	O
//	O
textBox1.Text	O
=	O
"Something	O
EventArgsDelegate(objectsender,EventArgsea)	O
SomethingHappened(objectsender,EventArgsea)	O
this.Invoke(newEventArgsDelegate(SomethingHappened)	API
double	O
{	O
double	O
years	O
=	O
date2.Year	O
-	O
date1.Year;	O
double	O
fraction	O
=	O
365	O
+	O
date2.DayOfYear	O
=	O
59	O
(date1.DayOfYear	O
59	O
||	O
date1.DayOfYear	O
date2.DayOfYear)	O
?	O
1	O
:	O
0);	O
if	O
==	O
)	O
return	O
years	O
+	O
(date2.DayOfYear	O
-	O
date1.DayOfYear)	O
/	O
fraction;	O
if	O
)	O
{	O
return	O
years	O
+	O
(date2.DayOfYear	O
-	O
date1.DayOfYear	O
-	O
(date1.DayOfYear	O
=	O
59	O
?	O
1	O
:	O
0))	O
/	O
fraction;	O
}	O
if	O
(date1.DayOfYear	O
!=	O
59)	O
{	O
return	O
years	O
+	O
(date2.DayOfYear	O
-	O
date1.DayOfYear	O
+	O
(date1.DayOfYear	O
59	O
?	O
1	O
:	O
0))	O
/	O
fraction;	O
}	O
return	O
years	O
+	O
(date2.DayOfYear	O
-	O
58.5)	O
/	O
AgeDiff(DateTimedate1,DateTimedate2)	O
(DateTime.IsLeapYear(date2.Year)	API
(DateTime.IsLeapYear(date2.Year)	API
DateTime.IsLeapYear(date1.Year)	API
(DateTime.IsLeapYear(date2.Year)	API
DateTime	O
birthDate	O
=	O
new	O
;int	O
age	O
=	O
.TotalDays	O
/	O
DateTime(2000,3,1)	API
(int)Math.Floor((DateTime.Now-birthDate)	API
IDisposable.Dispose()	API
using()	O
Dispose()	API
Dispose()	API
groupby()	O
CREATE	O
FUNCTION	O
SplitString	O
(	O
--	O
Add	O
the	O
parameters	O
for	O
the	O
function	O
here	O
@myString	O
,	O
@deliminator	O
)RETURNS	O
@ReturnTable	O
TABLE	O
(	O
--	O
Add	O
the	O
column	O
definitions	O
for	O
the	O
TABLE	O
variable	O
here	O
[id]	O
[int]	O
NOT	O
NULL,	O
[part]	O
NULL)ASBEGIN	O
Declare	O
@iSpaces	O
int	O
Declare	O
@part	O
--initialize	O
spaces	O
Select	O
@iSpaces	O
=	O
While	O
@iSpaces	O
0	O
Begin	O
Select	O
@part	O
=	O
)	O
Insert	O
Into	O
Select	O
@part	O
Select	O
@myString	O
=	O
+	O
-	O
)	O
Select	O
@iSpaces	O
=	O
end	O
If	O
0	O
Insert	O
Into	O
@ReturnTable	O
Select	O
@myString	O
RETURN	O
varchar(500)	O
varchar(10)	O
IDENTITY(1,1)	O
[varchar](50)	O
varchar(50)	O
charindex(@deliminator,@myString,0)	API
substring(@myString,0,charindex(@deliminator,@myString,0)	O
@ReturnTable(part)	O
substring(@mystring,charindex(@deliminator,@myString,0)	O
len(@deliminator),len(@myString)	O
charindex('',@myString,0)	API
charindex(@deliminator,@myString,0)	API
len(@myString)	API
Select	O
*	O
From	O
SplitString('HelloJohnSmith','')	API
select	O
*	O
From	O
SplitString('Hello**John**Smith','**')	API
CREATE	O
function	O
)returns	O
@t	O
table	O
(	O
Word	O
not	O
null,	O
Position	O
int	O
not	O
null)as	O
begin	O
declare	O
@pos	O
int,	O
@lpos	O
int,	O
@item	O
,	O
@ignore	O
,	O
@dl	O
int,	O
@a1	O
int,	O
@a2	O
int,	O
@z1	O
int,	O
@z2	O
int,	O
@n1	O
int,	O
@n2	O
int,	O
@c	O
,	O
@a	O
smallint	O
select	O
@a1	O
=	O
,	O
@a2	O
=	O
,	O
@z1	O
=	O
,	O
@z2	O
=	O
,	O
@n1	O
=	O
,	O
@n2	O
=	O
set	O
@ignore	O
=	O
'''"'	O
set	O
@pos	O
=	O
1	O
set	O
@dl	O
=	O
set	O
@lpos	O
=	O
1	O
set	O
@item	O
=	O
''	O
while	O
(@pos	O
=	O
@dl)	O
begin	O
set	O
@c	O
=	O
if	O
(@ignore	O
not	O
like	O
'%'	O
+	O
@c	O
+	O
'%')	O
begin	O
set	O
@a	O
=	O
if	O
and	O
(@a	O
=	O
@z1))	O
or	O
and	O
(@a	O
=	O
@z2))	O
or	O
and	O
(@a	O
=	O
@n2))	O
begin	O
set	O
@item	O
=	O
@item	O
+	O
@c	O
end	O
else	O
if	O
(@item	O
'')	O
begin	O
insert	O
into	O
@t	O
values	O
(@item)	O
set	O
@item	O
=	O
''	O
end	O
end	O
set	O
@pos	O
=	O
@pos	O
+	O
1	O
end	O
if	O
(@item	O
'')	O
begin	O
insert	O
into	O
@t	O
values	O
(@item)	O
end	O
[SplitWordList](@listvarchar(8000)	O
varchar(50)	O
identity(1,1)	O
varchar(100)	O
varchar(100)	O
varchar(1)	O
ascii('a')	API
ascii('A')	API
ascii('z')	API
ascii('Z')	API
ascii('0')	API
ascii('9')	API
datalength(@list)	O
substring(@list,@pos,1)	API
ascii(@c)	O
((@a=@a1)	O
((@a=@a2)	O
((@a=@n1)	O
select	O
*	O
from	O
SplitWordList('HelloJohnSmith')	API
Liststring()	O
ListString()	O
Listobject	O
ol	O
=	O
new	O
;Liststring	O
sl;sl	O
=	O
Listobject()	O
Liststring	O
sl	O
=	O
new	O
;//populate	O
slListobject	O
ol	O
=	O
new	O
Liststring()	O
Listobject(sl)	O
Listobject	O
ol	O
=	O
new	O
Listobject();ol.AddRange(sl)	O
r	O
=	O
+	O
(1	O
-	O
g	O
=	O
+	O
(1	O
-	O
b	O
=	O
+	O
(1	O
-	O
alpha=argb.alpha()	O
(alpha/255)*argb.r()	API
alpha/255)*blend.r()	API
(alpha/255)*argb.g()	API
alpha/255)*blend.g()	API
(alpha/255)*argb.b()	API
alpha/255)*blend.b()	API
REGEDT32	O
REGEDIT	O
"\??\"	O
+	O
C:\Long	O
Directory	O
Name\Long	O
File	O
i	O
=	O
i	O
=	O
i	O
=	O
Ask	O
a	O
questionWhile	O
the	O
answer	O
is	O
invalid:	O
Ask	O
the	O
While	O
True:	O
Ask	O
a	O
question	O
If	O
the	O
answer	O
is	O
valid:	O
Do:	O
Ask	O
a	O
question	O
Until	O
the	O
answer	O
is	O
a	O
=	O
5while	O
a	O
10	O
a	O
+	O
a	O
=	O
5b	O
=	O
while	O
a	O
10	O
a	O
+	O
1end	O
#	O
b	O
is	O
now	O
10.times	O
do	O
|x|	O
puts	O
def	O
timesten	O
10.times{	O
|t|	O
puts	O
yield	O
t	O
}endtimesten	O
do	O
|x|	O
x	O
*	O
2end#	O
will	O
print2468	O
...	O
and	O
so	O
ontimesten	O
do	O
|x|	O
break	O
x	O
*	O
2end#	O
won't	O
print	O
anything.	O
The	O
break	O
jumps	O
out	O
of	O
the	O
timesten	O
function	O
entirely,	O
and	O
the	O
call	O
to	O
`puts`	O
inside	O
it	O
gets	O
skippedtimesten	O
do	O
|x|	O
break	O
5	O
x	O
*	O
2end#	O
This	O
is	O
the	O
same	O
as	O
above.	O
it's	O
"returning"	O
5,	O
but	O
nobody	O
is	O
catching	O
it.	O
If	O
you	O
did	O
a	O
=	O
timesten...	O
then	O
a	O
would	O
get	O
assigned	O
to	O
5timesten	O
do	O
|x|	O
next	O
5	O
x	O
*	O
2end	O
#	O
this	O
would	O
print555	O
...	O
and	O
so	O
on,	O
because	O
'next	O
5'	O
skips	O
the	O
'x	O
*	O
2'	O
and	O
'returns'	O
#!/bin/pythonbar	O
in	O
dict(Foo)	O
has_key()	O
in	O
#!/bin/pythonbaz	O
=	O
for	O
key,	O
value	O
in	O
foo	O
if	O
bar	O
in	O
dict([(key,value)	O
if	O
bar	O
in	O
result	O
=	O
[obj	O
for	O
obj	O
in	O
listOfObjs	O
if	O
hasattr(obj,'attributeName')	O
foo	O
=	O
12foo	O
in	O
iter_attr(bar,'id')	O
foo	O
=	O
12foo	O
in	O
[obj.id	O
for	O
obj	O
in	O