I	O
need	O
help	O
finishing	O
my	O
custom	O
built	O
ajax	O
[	O
div	O
]	O
based	O
dynamic	O
dropdown	O
.	O
Basically	O
,	O
I	O
have	O
an	O
[	O
input	O
]	O
box	O
which	O
;	O
onkeyup	O
,	O
runs	O
an	O
Ajax	O
search	O
which	O
returns	O
a	O
bunch	O
of	O
results	O
in	O
divs	O
and	O
are	O
drawn	O
back	O
in	O
using	O
innerHTML	B-API
.	O
These	O
divs	O
all	O
have	O
highlights	O
onmouseover	O
so	O
,	O
a	O
typical	O
successfull	O
search	O
yields	O
the	O
following	O
structure	O
(	O
pardon	O
the	O
semicode	O
)	O
:	O
[	O
input	O
]	O
[	O
div	O
id=results	O
]	O
//this	O
gets	O
overwritten	O
contantly	O
by	O
my	O
AJAX	O
function	O
[	O
div	O
id=result1	O
onmouseover=highlight	O
onclick=input.value=result1	B-API
]	O
[	O
div	O
id=result2	O
onmouseover=highlight	O
onclick=input.value=result2	B-API
]	O
[	O
div	O
id=result2	O
onmouseover=highlight	O
onclick=input.value=result2	B-API
]	O
[	O
/div	O
]	O
It	O
works..	O
beautifully	O
!	O
looks	O
elegant	O
and	O
is	O
way	O
more	O
complete	O
than	O
any	O
regular	O
dropdown	O
(	O
those	O
results	O
div	O
bring	O
in	O
a	O
lot	O
of	O
information	O
)	O
.	O
However	O
,	O
I	O
'm	O
missing	O
the	O
most	O
of	O
important	O
functions	O
behind	O
regular	O
HTML	O
elements	O
,	O
that	O
is	O
,	O
I	O
ca	O
n't	O
keyboard	O
down	O
or	O
up	O
between	O
``	O
options	O
''	O
.	O
How	O
do	O
I	O
do	O
this	O
?	O
I	O
know	O
javascript	O
handles	O
keyboard	O
events	O
but	O
;	O
I	O
have	O
n't	O
been	O
able	O
to	O
find	O
a	O
good	O
guide	O
on	O
how	O
to	O
do	O
this	O
.	O
(	O
Of	O
course	O
,	O
the	O
follow	O
up	O
question	O
to	O
this	O
will	O
eventually	O
end	O
up	O
being	O
:	O
can	O
I	O
use	O
to	O
trigger	O
that	O
onclick	O
event	O
?	O
)	O
