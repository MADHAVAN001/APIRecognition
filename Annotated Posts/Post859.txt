I	O
think	O
:	O
#	O
!	O
/bin/pythonbar	O
in	O
dict	B-API
(	I-API
Foo	I-API
)	I-API
Is	O
what	O
you	O
are	O
thinking	O
of	O
.	O
When	O
trying	O
to	O
see	O
if	O
a	O
certain	O
key	O
exists	O
within	O
a	O
dictionary	O
in	O
python	O
(	O
python	O
's	O
version	O
of	O
a	O
hash	O
table	O
)	O
there	O
are	O
two	O
ways	O
to	O
check	O
.	O
First	O
is	O
the	O
has_key	B-API
(	I-API
)	I-API
method	O
attached	O
to	O
the	O
dictionary	O
and	O
second	O
is	O
the	O
example	O
given	O
above	O
.	O
It	O
will	O
return	O
a	O
boolean	O
value	O
.	O
That	O
should	O
answer	O
your	O
question	O
.	O
And	O
now	O
a	O
little	O
off	O
topic	O
to	O
tie	O
this	O
in	O
to	O
the	O
list	O
comprehension	O
answer	O
previously	O
given	O
(	O
for	O
a	O
bit	O
more	O
clarity	O
)	O
.	O
List	O
Comprehensions	O
construct	O
a	O
list	O
from	O
a	O
basic	O
for	O
loop	O
with	O
modifiers	O
.	O
As	O
an	O
example	O
(	O
to	O
clarify	O
slightly	O
)	O
,	O
a	O
way	O
to	O
use	O
the	O
in	O
language	O
construct	O
in	O
a	O
_list	O
comprehension_	O
:	O
Say	O
you	O
have	O
a	O
two	O
dimensional	O
dictionary	O
and	O
you	O
only	O
want	O
the	O
second	O
dimension	O
dictionaries	O
which	O
contain	O
the	O
key	O
.	O
A	O
relatively	O
straightforward	O
way	O
to	O
do	O
so	O
would	O
be	O
to	O
use	O
a	O
list	O
comprehension	O
with	O
a	O
conditional	O
as	O
follows	O
:	O
#	O
!	O
/bin/pythonbaz	O
=	O
for	O
key	O
,	O
value	O
in	O
foo	O
if	O
bar	O
in	O
(	O
[	O
(	O
key	O
,	O
value	O
)	O
Note	O
the	O
if	O
bar	O
in	O
at	O
the	O
end	O
of	O
the	O
statement	O
,	O
this	O
is	O
a	O
modifying	O
clause	O
which	O
tells	O
the	O
list	O
comprehension	O
to	O
only	O
keep	O
those	O
key-value	O
pairs	O
which	O
meet	O
the	O
conditional	O
.	O
In	O
this	O
case	O
is	O
a	O
new	O
dictionary	O
which	O
contains	O
only	O
the	O
dictionaries	O
from	O
foo	O
which	O
contain	O
bar	O
(	O
Hopefully	O
I	O
did	O
n't	O
miss	O
anything	O
in	O
that	O
code	O
example	O
...	O
you	O
may	O
have	O
to	O
take	O
a	O
look	O
at	O
the	O
list	O
comprehension	O
documentation	O
found	O
in	O
docs.python.org	O
tutorials	O
and	O
at	O
secnetix.de	O
,	O
both	O
sites	O
are	O
good	O
references	O
if	O
you	O
have	O
questions	O
in	O
the	O
future	O
.	O
)	O
.	O
