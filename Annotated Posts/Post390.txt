No	O
,	O
it	O
ca	O
n't	O
do	O
that	O
since	O
there	O
is	O
no	O
way	O
to	O
express	O
constant	O
over	O
time	O
for	O
a	O
value	O
.	O
If	O
the	O
compiler	O
should	O
be	O
able	O
to	O
do	O
that	O
,	O
there	O
would	O
have	O
to	O
be	O
a	O
guarantee	O
from	O
the	O
code	O
returning	O
the	O
value	O
that	O
the	O
value	O
is	O
constant	O
,	O
and	O
for	O
the	O
duration	O
of	O
the	O
loop	O
wo	O
n't	O
change	O
.	O
But	O
,	O
in	O
this	O
case	O
,	O
you	O
're	O
free	O
to	O
add	O
new	O
rows	O
to	O
the	O
data	O
table	O
as	O
part	O
of	O
your	O
loop	O
,	O
and	O
thus	O
it	O
's	O
up	O
to	O
you	O
to	O
make	O
that	O
guarantee	O
,	O
in	O
the	O
way	O
you	O
have	O
done	O
it	O
.	O
So	O
in	O
short	O
,	O
the	O
compiler	O
will	O
not	O
do	O
that	O
optimization	O
if	O
the	O
end-index	O
is	O
anything	O
other	O
than	O
a	O
variable	O
.	O
In	O
the	O
case	O
of	O
a	O
variable	O
,	O
where	O
the	O
compiler	O
can	O
just	O
look	O
at	O
the	O
loop-code	O
and	O
see	O
that	O
this	O
particular	O
variable	O
is	O
not	O
changed	O
,	O
it	O
might	O
do	O
that	O
and	O
load	O
the	O
value	O
into	O
a	O
register	O
before	O
starting	O
the	O
loop	O
,	O
but	O
any	O
performance	O
gain	O
from	O
this	O
would	O
most	O
likely	O
be	O
negligible	O
,	O
unless	O
your	O
loop	O
body	O
is	O
empty	O
.	O
Conclusion	O
:	O
If	O
you	O
know	O
,	O
or	O
is	O
willing	O
to	O
accept	O
,	O
that	O
the	O
end	O
loop	O
index	O
is	O
constant	O
for	O
the	O
duration	O
of	O
the	O
loop	O
,	O
place	O
it	O
into	O
a	O
variable	O
.	O
Edit	O
:	O
Re-read	O
your	O
post	O
,	O
and	O
yes	O
,	O
you	O
might	O
see	O
negligible	O
performance	O
gains	O
for	O
your	O
two	O
cases	O
as	O
well	O
,	O
because	O
the	O
JITter	O
optimizes	O
the	O
code	O
.	O
The	O
JITter	O
might	O
optimize	O
your	O
end-index	O
read	O
into	O
a	O
direct	O
access	O
to	O
the	O
variable	O
inside	O
the	O
data	O
table	O
that	O
contains	O
the	O
row	O
count	O
,	O
and	O
a	O
memory	O
read	O
is	O
n't	O
all	O
that	O
expensive	O
anyway	O
.	O
If	O
,	O
on	O
the	O
other	O
hand	O
,	O
reading	O
that	O
property	O
was	O
a	O
very	O
expensive	O
operation	O
,	O
you	O
'd	O
see	O
a	O
more	O
noticable	O
difference	O
.	O
