Recently	O
our	O
site	O
has	O
been	O
deluged	O
with	O
the	O
resurgence	O
of	O
the	O
Asprox	O
botnet	O
SQL	O
injection	O
attack	O
.	O
Without	O
going	O
into	O
details	O
,	O
the	O
attack	O
attempts	O
to	O
execute	O
SQL	O
code	O
by	O
encoding	O
the	O
T-SQL	O
commands	O
in	O
an	O
ASCII	O
encoded	O
BINARY	O
string	O
.	O
It	O
looks	O
something	O
like	O
this	O
:	O
DECLARE	O
%	O
20	O
@	O
S	O
%	O
20NVARCHAR	O
(	O
4000	O
)	O
;	O
SET	O
%	O
20	O
@	O
S=CAST	O
(	O
0x44004500	O
...	O
06F007200	O
%	O
20AS	O
%	O
20NVARCHAR	O
(	O
4000	O
)	O
)	O
;	O
EXEC	O
(	O
@	O
S	O
)	O
;	O
--	O
I	O
was	O
able	O
to	O
decode	O
this	O
in	O
SQL	O
,	O
but	O
I	O
was	O
a	O
little	O
wary	O
of	O
doing	O
this	O
since	O
I	O
did	O
n't	O
know	O
exactly	O
what	O
was	O
happening	O
at	O
the	O
time	O
.	O
I	O
tried	O
to	O
write	O
a	O
simple	O
decode	O
tool	O
,	O
so	O
I	O
could	O
decode	O
this	O
type	O
of	O
text	O
without	O
even	O
touching	O
SQLServer	O
.	O
The	O
main	O
part	O
I	O
need	O
decoded	O
is	O
:	O
CAST	O
(	O
0x44004500	O
...	O
06F007200	O
AS	O
NVARCHAR	O
(	O
4000	O
)	O
)	O
I	O
've	O
tried	O
all	O
of	O
the	O
following	O
commands	O
with	O
no	O
luck	O
:	O
txtDecodedText.Text	O
=	O
System.Web.HttpUtility.UrlDecode	B-API
(	I-API
txtURLText.Text	I-API
)	I-API
;	O
txtDecodedText.Text	O
=	O
Encoding.ASCII.GetString	B-API
(	I-API
Encoding.ASCII.GetBytes	I-API
(	I-API
txtURLText.Text	I-API
)	I-API
)	I-API
;	O
txtDecodedText.Text	O
=	O
Encoding.Unicode.GetString	B-API
(	I-API
Encoding.Unicode.GetBytes	I-API
(	I-API
txtURLText.Text	I-API
)	I-API
)	I-API
;	O
txtDecodedText.Text	O
=	O
Encoding.ASCII.GetString	B-API
(	I-API
Encoding.Unicode.GetBytes	I-API
(	I-API
txtURLText.Text	I-API
)	I-API
)	I-API
;	O
txtDecodedText.Text	O
=	O
Encoding.Unicode.GetString	B-API
(	I-API
Convert.FromBase64String	I-API
(	I-API
txtURLText.Text	I-API
)	I-API
)	I-API
;	O
What	O
is	O
the	O
proper	O
way	O
to	O
translate	O
this	O
encoding	O
without	O
using	O
SQL	O
Server	O
?	O
Is	O
it	O
possible	O
?	O
I	O
'll	O
take	O
VB.NET	O
code	O
since	O
I	O
'm	O
familiar	O
with	O
that	O
too	O
.	O
Okay	O
,	O
I	O
'm	O
sure	O
I	O
'm	O
missing	O
something	O
here	O
,	O
so	O
here	O
's	O
where	O
I	O
'm	O
at	O
.	O
Since	O
my	O
input	O
is	O
a	O
basic	O
string	O
,	O
I	O
started	O
with	O
just	O
a	O
snippet	O
of	O
the	O
encoded	O
portion	O
-	O
4445434C41	O
(	O
which	O
translates	O
to	O
DECLA	O
)	O
-	O
and	O
the	O
first	O
attempt	O
was	O
to	O
do	O
this	O
...	O
txtDecodedText.Text	O
=	O
Encoding.UTF8.GetString	B-API
(	I-API
Encoding.UTF8.GetBytes	I-API
(	I-API
txtURL.Text	I-API
)	I-API
)	I-API
;	O
...	O
and	O
all	O
it	O
did	O
was	O
return	O
the	O
exact	O
same	O
thing	O
that	O
I	O
put	O
in	O
,	O
since	O
it	O
converted	O
each	O
character	O
into	O
is	O
byte	O
.	O
I	O
realized	O
that	O
I	O
need	O
to	O
parse	O
each	O
two	O
characters	O
into	O
a	O
byte	O
manually	O
since	O
I	O
do	O
n't	O
know	O
of	O
any	O
methods	O
yet	O
that	O
will	O
do	O
that	O
,	O
so	O
now	O
my	O
little	O
decoder	O
looks	O
something	O
like	O
this	O
:	O
while	O
(	O
!	O
boolIsDone	O
)	O
{	O
bytURLChar	O
=	O
byte.Parse	B-API
(	I-API
txtURLText.Text.Substring	I-API
(	I-API
intParseIndex	I-API
,	I-API
2	I-API
)	I-API
)	I-API
;	O
bytURL	O
[	O
intURLIndex	O
]	O
=	O
bytURLChar	O
;	O
intParseIndex	O
+=	O
2	O
;	O
intURLIndex++	O
;	O
if	O
(	O
txtURLText.Text.Length	B-API
-	O
intParseIndex	O
2	O
)	O
{	O
boolIsDone	O
=	O
true	O
;	O
}	O
}	O
txtDecodedText.Text	O
=	O
Encoding.UTF8.GetString	B-API
(	I-API
bytURL	I-API
)	I-API
;	O
Things	O
look	O
good	O
for	O
the	O
first	O
couple	O
of	O
pairs	O
,	O
but	O
then	O
the	O
loop	O
balks	O
when	O
it	O
gets	O
to	O
the	O
``	O
4C	O
''	O
pair	O
and	O
says	O
that	O
the	O
string	O
is	O
in	O
the	O
incorrect	O
format	O
.	O
Interestingly	O
enough	O
,	O
when	O
I	O
step	O
through	O
the	O
debugger	O
and	O
to	O
the	O
GetString	O
method	O
on	O
the	O
byte	O
array	O
that	O
I	O
was	O
able	O
to	O
parse	O
up	O
to	O
that	O
point	O
,	O
I	O
get	O
``	O
,	O
-+	O
''	O
as	O
the	O
result	O
.	O
How	O
do	O
I	O
figure	O
out	O
what	O
I	O
'm	O
missing	O
-	O
do	O
I	O
need	O
to	O
do	O
a	O
``	O
direct	O
cast	O
''	O
for	O
each	O
byte	O
instead	O
of	O
attempting	O
to	O
parse	O
it	O
?	O
