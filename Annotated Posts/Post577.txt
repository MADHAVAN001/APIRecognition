It	O
really	O
depends	O
on	O
your	O
brother	O
's	O
learning	O
style	O
.	O
Many	O
people	O
learn	O
faster	O
by	O
getting	O
their	O
hands	O
dirty	O
just	O
getting	O
into	O
it	O
,	O
crystallising	O
the	O
concepts	O
and	O
the	O
big	O
picture	O
as	O
they	O
progress	O
and	O
build	O
their	O
knowledge	O
.	O
Me	O
,	O
I	O
prefer	O
to	O
start	O
with	O
the	O
big	O
picture	O
and	O
drill	O
down	O
into	O
the	O
nitty-gritty	O
.	O
The	O
first	O
thing	O
I	O
wanted	O
to	O
know	O
was	O
how	O
it	O
all	O
fits	O
together	O
then	O
all	O
that	O
Object-oriented	O
gobbledygook	O
,	O
then	O
about	O
classes	O
instances	O
and	O
so-on	O
.	O
I	O
like	O
to	O
know	O
the	O
underlying	O
concepts	O
and	O
a	O
bit	O
of	O
theory	O
before	O
I	O
learn	O
the	O
syntax	O
.	O
I	O
had	O
a	O
bit	O
of	O
an	O
advantage	O
because	O
I	O
wrote	O
some	O
games	O
in	O
BASIC	O
20	O
years	O
ago	O
but	O
nothing	O
much	O
since	O
.	O
Perhaps	O
it	O
is	O
useful	O
to	O
shadow	O
a	O
production	O
process	O
by	O
starting	O
with	O
an	O
overall	O
mission	O
statement	O
,	O
then	O
a	O
plan	O
and/or	O
flowchart	O
,	O
then	O
elaborate	O
into	O
some	O
pseudo	O
code	O
(	O
leaning	O
towards	O
the	O
syntax	O
you	O
will	O
ultimately	O
use	O
)	O
before	O
actually	O
writing	O
the	O
code	O
.	O
The	O
golden	O
rule	O
here	O
is	O
to	O
suss	O
out	O
your	O
student	O
's	O
leaning	O
style	O
.	O
