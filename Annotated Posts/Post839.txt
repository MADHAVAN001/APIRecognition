Yes	O
,	O
I	O
thought	O
about	O
that	O
,	O
but	O
I	O
soon	O
figured	O
out	O
that	O
another	O
Domain-Specific-Language	O
(	O
DSL	O
)	O
would	O
be	O
a	O
bit	O
too	O
much	O
.	O
Essentially	O
,	O
they	O
need	O
to	O
interact	O
with	O
my	O
gamestate	O
in	O
possibly	O
unpredictable	O
ways	O
.	O
For	O
example	O
,	O
a	O
card	O
could	O
have	O
a	O
rule	O
``	O
When	O
this	O
cards	O
enter	O
play	O
,	O
all	O
your	O
undead	O
minions	O
gain	O
+3	O
attack	O
against	O
flying	O
enemies	O
,	O
except	O
when	O
the	O
enemy	O
is	O
blessed	O
''	O
.	O
As	O
trading	O
card	O
games	O
are	O
turn	O
based	O
,	O
the	O
GameState	O
Manager	O
will	O
fire	O
OnStageX	O
events	O
and	O
let	O
the	O
cards	O
modify	O
other	O
cards	O
or	O
the	O
GameState	O
in	O
whatever	O
way	O
the	O
card	O
needs	O
.	O
If	O
I	O
try	O
to	O
create	O
a	O
DSL	O
,	O
I	O
have	O
to	O
implement	O
a	O
rather	O
large	O
feature	O
set	O
and	O
possibly	O
constantly	O
update	O
it	O
,	O
which	O
shifts	O
the	O
maintenance	O
work	O
to	O
another	O
part	O
without	O
actually	O
removing	O
it	O
.	O
That	O
's	O
why	O
I	O
wanted	O
to	O
stay	O
with	O
a	O
``	O
real	O
''	O
.NET	O
language	O
to	O
essentially	O
be	O
able	O
to	O
just	O
fire	O
the	O
event	O
and	O
let	O
the	O
card	O
manipulate	O
the	O
gamestate	O
in	O
whatever	O
way	O
(	O
within	O
the	O
limits	O
of	O
the	O
code	O
access	O
security	O
)	O
.	O
