Typical	O
way	O
of	O
creating	O
a	O
CSV	O
string	O
(	O
pseudocode	O
)	O
:	O
Create	O
a	O
CSV	O
container	O
object	O
(	O
like	O
a	O
StringBuilder	O
in	O
C	O
#	O
)	O
.	O
Loop	O
through	O
the	O
strings	O
you	O
want	O
to	O
add	O
appending	O
a	O
comma	O
after	O
each	O
one	O
.	O
After	O
the	O
loop	O
,	O
remove	O
that	O
last	O
superfluous	O
comma	O
.	O
Code	O
sample	O
:	O
public	O
string	O
ReturnAsCSV	O
(	O
ContactList	O
contactList	O
)	O
{	O
StringBuilder	O
sb	O
=	O
new	O
StringBuilder	O
(	O
)	O
;	O
foreach	O
(	O
Contact	O
c	O
in	O
contactList	O
)	O
{	O
sb.Append	O
(	O
c.Name	O
+	O
``	O
,	O
''	O
)	O
;	O
}	O
sb.Remove	O
(	O
sb.Length	O
-	O
1	O
,	O
1	O
)	O
;	O
//sb.Replace	O
(	O
``	O
,	O
''	O
,	O
``	O
''	O
,	O
sb.Length	O
-	O
1	O
,	O
1	O
)	O
return	O
sb.ToString	O
(	O
)	O
;	O
}	O
I	O
like	O
the	O
idea	O
of	O
adding	O
the	O
comma	O
by	O
checking	O
if	O
the	O
container	O
is	O
empty	O
,	O
but	O
does	O
n't	O
that	O
mean	O
more	O
processing	O
as	O
it	O
needs	O
to	O
check	O
the	O
length	O
of	O
the	O
string	O
on	O
each	O
occurrence	O
?	O
I	O
feel	O
that	O
there	O
should	O
be	O
an	O
easier/cleaner/more	O
efficient	O
way	O
of	O
removing	O
that	O
last	O
comma	O
.	O
Any	O
ideas	O
?	O
