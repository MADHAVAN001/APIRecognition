Yes	O
,	O
there	O
are	O
differences	O
between	O
the	O
two	O
.	O
Both	O
are	O
anonymous	O
functions	O
and	O
execute	O
in	O
the	O
exact	O
same	O
way	O
.	O
But	O
,	O
the	O
difference	O
between	O
the	O
two	O
is	O
that	O
in	O
the	O
second	O
case	O
scope	O
of	O
the	O
variables	O
is	O
restricted	O
to	O
the	O
anonymous	O
function	O
itself	O
.	O
There	O
is	O
no	O
chance	O
of	O
accidentally	O
adding	O
variables	O
to	O
the	O
global	O
scope	O
.	O
This	O
implies	O
that	O
by	O
using	O
the	O
second	O
method	O
,	O
you	O
are	O
not	O
cluttering	O
up	O
the	O
global	O
variables	O
scope	O
which	O
is	O
good	O
as	O
these	O
global	O
variable	O
values	O
can	O
interfere	O
with	O
some	O
other	O
global	O
variables	O
that	O
you	O
may	O
use	O
in	O
some	O
other	O
library	O
or	O
are	O
being	O
used	O
in	O
a	O
third	O
party	O
library	O
.	O
Example	O
:	O
html	O
body	O
script	O
type=	O
''	O
text/javascript	O
''	O
new	O
function	B-API
(	I-API
)	I-API
{	O
a	O
=	O
``	O
Hello	O
''	O
;	O
alert	B-API
(	I-API
a	I-API
+	O
``	O
Inside	O
Function	O
''	O
)	O
;	O
}	O
;	O
alert	O
(	O
a	O
+	O
``	O
Outside	O
Function	O
''	O
)	O
;	O
(	O
function	B-API
(	I-API
)	I-API
{	O
var	B-API
b	O
=	O
``	O
World	O
''	O
;	O
alert	O
(	O
b	O
+	O
``	O
Inside	O
Function	O
''	O
)	O
;	O
}	O
)	O
(	O
)	O
;	O
alert	O
(	O
b	O
+	O
``	O
Outside	O
Function	O
''	O
)	O
;	O
/script	O
/body	O
/html	O
In	O
the	O
above	O
code	O
the	O
output	O
is	O
something	O
like	O
:	O
Hello	O
Inside	O
Function	O
Hello	O
Outside	O
Function	O
World	O
Inside	O
Function	O
...	O
then	O
,	O
you	O
get	O
an	O
error	O
as	O
'b	O
'	O
is	O
not	O
defined	O
outside	O
the	O
function	O
!	O
Thus	O
,	O
I	O
believe	O
that	O
the	O
second	O
method	O
is	O
better	O
...	O
safer	O
!	O
