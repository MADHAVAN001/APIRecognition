Well	O
,	O
mine	O
is	O
n't	O
all	O
that	O
simpler	O
,	O
but	O
here	O
is	O
the	O
code	O
I	O
use	O
to	O
split	O
a	O
comma-delimited	O
input	O
variable	O
into	O
individual	O
values	O
,	O
and	O
put	O
it	O
into	O
a	O
table	O
variable	O
.	O
I	O
'm	O
sure	O
you	O
could	O
modify	O
this	O
slightly	O
to	O
split	O
based	O
on	O
a	O
space	O
and	O
then	O
to	O
do	O
a	O
basic	O
SELECT	O
query	O
against	O
that	O
table	O
variable	O
to	O
get	O
your	O
results	O
.	O
--	O
Create	O
temporary	O
table	O
to	O
parse	O
the	O
list	O
of	O
accounting	O
cycles	O
.	O
DECLARE	O
@	O
tblAccountingCycles	O
table	O
(	O
AccountingCycle	O
varchar	O
(	O
10	O
)	O
)	O
DECLARE	O
@	O
vchAccountingCycle	O
varchar	O
(	O
10	O
)	O
DECLARE	O
@	O
intPosition	O
int	O
SET	O
@	O
vchAccountingCycleIDs	O
=	O
LTRIM	O
(	O
RTRIM	O
(	O
@	O
vchAccountingCycleIDs	O
)	O
)	O
+	O
'	O
,	O
'	O
SET	O
@	O
intPosition	O
=	O
CHARINDEX	O
(	O
'	O
,	O
'	O
,	O
@	O
vchAccountingCycleIDs	O
,	O
1	O
)	O
IF	O
REPLACE	O
(	O
@	O
vchAccountingCycleIDs	O
,	O
'	O
,	O
'	O
,	O
''	O
)	O
''	O
BEGIN	O
WHILE	O
@	O
intPosition	O
0	O
BEGIN	O
SET	O
@	O
vchAccountingCycle	O
=	O
LTRIM	O
(	O
RTRIM	O
(	O
LEFT	O
(	O
@	O
vchAccountingCycleIDs	O
,	O
@	O
intPosition	O
-	O
1	O
)	O
)	O
)	O
IF	O
@	O
vchAccountingCycle	O
''	O
BEGIN	O
INSERT	O
INTO	O
@	O
tblAccountingCycles	O
(	O
AccountingCycle	O
)	O
VALUES	O
(	O
@	O
vchAccountingCycle	O
)	O
END	O
SET	O
@	O
vchAccountingCycleIDs	O
=	O
RIGHT	O
(	O
@	O
vchAccountingCycleIDs	O
,	O
LEN	O
(	O
@	O
vchAccountingCycleIDs	O
)	O
-	O
@	O
intPosition	O
)	O
SET	O
@	O
intPosition	O
=	O
CHARINDEX	O
(	O
'	O
,	O
'	O
,	O
@	O
vchAccountingCycleIDs	O
,	O
1	O
)	O
END	O
END	O
The	O
concept	O
is	O
pretty	O
much	O
the	O
same	O
.	O
One	O
other	O
alternative	O
is	O
to	O
leverage	O
the	O
.NET	O
compatibility	O
within	O
SQL	O
Server	O
2005	O
itself	O
.	O
You	O
can	O
essentially	O
write	O
yourself	O
a	O
simple	O
method	O
in	O
.NET	O
that	O
would	O
split	O
the	O
string	O
and	O
then	O
expose	O
that	O
as	O
a	O
stored	O
procedure/function	O
.	O
