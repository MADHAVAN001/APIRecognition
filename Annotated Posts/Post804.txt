It	O
's	O
called	O
alpha	O
blending	O
.	O
In	O
psuedocode	O
,	O
assuming	O
the	O
background	O
color	O
(	O
blend	O
)	O
always	O
has	O
255	O
alpha	O
.	O
Also	O
assumes	O
alpha	O
is	O
0-255	O
.	O
r	B
=	B
+	B
(	B
1	I
-	B
g	B
=	B
+	B
(	B
1	I
-	B
b	B
=	B
+	B
(	B
1	I
-	B
alpha=argb.alpha	B
(	I
)	I
(	B
alpha/255	I
)	I
*argb.r	I
(	I
)	I
alpha/255	B
)	I
*blend.r	I
(	I
)	I
(	B
alpha/255	I
)	I
*argb.g	I
(	I
)	I
alpha/255	B
)	I
*blend.g	I
(	I
)	I
(	B
alpha/255	I
)	I
*argb.b	I
(	I
)	I
alpha/255	B
)	I
*blend.b	I
(	I
)	I
note	O
:	O
you	O
probably	O
need	O
to	O
be	O
a	O
bit	O
(	O
more	O
)	O
careful	O
about	O
floating-point/int	O
math	O
and	O
rounding	O
issues	O
,	O
depending	O
on	O
language	O
.	O
Cast	O
intermediates	O
accordingly	O
Edited	O
to	O
add	O
:	O
If	O
you	O
do	O
n't	O
have	O
a	O
background	O
color	O
with	O
an	O
alpha	O
of	O
255	O
,	O
the	O
algebra	O
gets	O
alot	O
more	O
complicated	O
.	O
I	O
've	O
done	O
it	O
before	O
and	O
it	O
's	O
a	O
fun	O
exercise	O
left	O
to	O
the	O
reader	O
(	O
if	O
you	O
really	O
need	O
to	O
know	O
,	O
ask	O
another	O
question	O
:	O
)	O
.	O
In	O
other	O
words	O
,	O
what	O
color	O
C	O
blends	O
into	O
some	O
background	O
the	O
same	O
as	O
blending	O
A	O
,	O
then	O
blending	O
B	O
.	O
This	O
is	O
sort	O
of	O
like	O
calculating	O
A+B	O
(	O
which	O
is	O
n't	O
the	O
same	O
as	O
B+A	O
)	O
.	O
