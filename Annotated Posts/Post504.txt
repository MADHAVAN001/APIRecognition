I	O
would	O
be	O
a	O
bit	O
reluctant	O
to	O
use	O
nested	O
classes	O
here	O
.	O
What	O
if	O
you	O
created	O
an	O
abstract	O
base	O
class	O
for	O
a	O
``	O
multimedia	O
driver	O
''	O
to	O
handle	O
the	O
back-end	O
stuff	O
(	O
workhorse	O
)	O
,	O
and	O
a	O
separate	O
class	O
for	O
the	O
front-end	O
work	O
?	O
The	O
front-end	O
class	O
could	O
take	O
a	O
pointer/reference	O
to	O
an	O
implemented	O
driver	O
class	O
(	O
for	O
the	O
appropriate	O
media	O
type	O
and	O
situation	O
)	O
and	O
perform	O
the	O
abstract	O
operations	O
on	O
the	O
workhorse	O
structure	O
.	O
My	O
philosophy	O
would	O
be	O
to	O
go	O
ahead	O
and	O
make	O
both	O
structures	O
accessible	O
to	O
the	O
client	O
in	O
a	O
polished	O
way	O
,	O
just	O
under	O
the	O
assumption	O
they	O
would	O
be	O
used	O
in	O
tandem	O
.	O
I	O
would	O
reference	O
something	O
like	O
a	O
QTextDocument	O
in	O
Qt	O
.	O
You	O
provide	O
a	O
direct	O
interface	O
to	O
the	O
bare	O
metal	O
data	O
handling	O
,	O
but	O
pass	O
the	O
authority	O
along	O
to	O
an	O
object	O
like	O
a	O
QTextEdit	O
to	O
do	O
the	O
manipulation	O
.	O
