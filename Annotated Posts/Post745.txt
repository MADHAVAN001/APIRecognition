There	O
is	O
no	O
pure	O
CSS/HTML	O
way	O
to	O
achieve	O
this	O
,	O
as	O
far	O
as	O
I	O
know	O
.	O
Your	O
best	O
bet	O
would	O
be	O
to	O
do	O
it	O
in	O
pre-processing	O
(	O
if	O
list	O
length	O
>	O
150	O
,	O
split	O
into	O
3	O
columns	O
,	O
esle	O
if	O
>	O
70	O
,	O
split	O
into	O
2	O
columns	O
,	O
else	O
1	O
)	O
.	O
The	O
other	O
option	O
,	O
using	O
JavaScript	O
(	O
I	O
'm	O
not	O
familiar	O
with	O
the	O
jQuery	O
library	O
specifically	O
)	O
would	O
be	O
to	O
iterate	O
through	O
lists	O
,	O
probably	O
based	O
on	O
them	O
being	O
a	O
certain	O
class	O
,	O
count	O
the	O
number	O
of	O
children	O
,	O
and	O
if	O
it	O
is	O
a	O
high	O
enough	O
number	O
,	O
dynamically	O
create	O
a	O
new	O
list	O
after	O
the	O
first	O
,	O
transferring	O
some	O
number	O
of	O
list	O
items	O
to	O
the	O
new	O
list	O
.	O
As	O
far	O
as	O
implementing	O
the	O
columns	O
,	O
you	O
could	O
probably	O
float	O
them	O
left	O
,	O
followed	O
by	O
an	O
element	O
that	O
had	O
the	O
style	O
or	O
.	O
CSS	O
:	O
ul.column	O
{	O
float	O
:	O
left	O
;	O
width:50	O
%	O
;	O
}	O
div.clear	O
{	O
clear	O
:	O
both	O
;	O
}	O
HTML	O
:	O
ul	O
class=	O
''	O
column	O
''	O
liItem	O
1/li	O
liItem	O
2/li	O
!	O
--	O
...	O
--	O
liItem	O
49/li	O
liItem	O
50/li	O
/ul	O
ul	O
class=	O
''	O
column	O
''	O
liItem	O
51/li	O
liItem	O
52/li	O
!	O
--	O
...	O
--	O
liItem	O
99/li	O
liItem	O
100/li	O
/ul	O
div	O
class=	O
''	O
clear	O
''	O
/	O
