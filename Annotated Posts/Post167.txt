I	O
saw	O
th	O
s	O
in	O
an	O
answer	O
to	O
another	O
question	O
,	O
in	O
reference	O
to	O
shortcomings	O
of	O
the	O
java	O
spec	O
:	O
There	O
are	O
more	O
shortcomings	O
and	O
this	O
is	O
a	O
subtle	O
topic	O
.	O
Check	O
this	O
out	O
:	O
public	O
class	O
methodOverloading	O
{	O
public	O
static	O
void	O
hello	O
(	O
Integer	O
x	O
)	O
{	O
System.out.println	O
(	O
``	O
Integer	O
''	O
)	O
;	O
}	O
public	O
static	O
void	O
hello	O
(	O
long	O
x	O
)	O
{	O
System.out.println	B-API
(	I-API
``	I-API
long	I-API
''	I-API
)	I-API
;	O
}	O
public	O
static	O
void	O
main	O
(	O
String	O
[	O
]	O
args	O
)	O
{	O
int	O
i	O
=	O
5	O
;	O
hello	O
(	O
i	O
)	O
;	O
}	O
}	O
Here	O
``	O
long	O
''	O
would	O
be	O
printed	O
(	O
have	O
n't	O
checked	O
it	O
myself	O
)	O
,	O
because	O
the	O
compiler	O
choses	O
>	O
widening	O
over	O
autoboxing	O
.	O
Be	O
careful	O
when	O
using	O
autoboxing	O
or	O
do	O
n't	O
use	O
it	O
at	O
all	O
!	O
Are	O
we	O
sure	O
that	O
this	O
is	O
actually	O
an	O
example	O
of	O
widening	O
instead	O
of	O
autoboxing	O
,	O
or	O
is	O
it	O
something	O
else	O
entirely	O
?	O
On	O
my	O
initial	O
scanning	O
,	O
I	O
would	O
agree	O
with	O
the	O
statement	O
that	O
the	O
output	O
would	O
be	O
``	O
long	O
''	O
on	O
the	O
basis	O
of	O
i	O
being	O
declared	O
as	O
a	O
primitive	O
and	O
not	O
an	O
object	O
.	O
However	O
,	O
if	O
you	O
changed	O
hello	O
(	O
long	O
x	O
)	O
to	O
hello	O
(	O
Long	O
x	O
)	O
the	O
output	O
would	O
print	O
``	O
Integer	O
''	O
What	O
's	O
really	O
going	O
on	O
here	O
?	O
I	O
know	O
nothing	O
about	O
the	O
compilers/bytecode	O
interpreters	O
for	O
java	O
...	O
