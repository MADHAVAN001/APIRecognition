Why	O
not	O
use	O
SQLite	O
?	O
There	O
is	O
good	O
support	O
in	O
Python	O
and	O
you	O
can	O
write	O
SQL	O
queries	O
to	O
get	O
the	O
data	O
out	O
.	O
Here	O
is	O
the	O
Python	O
docs	O
for	O
sqlite3	O
If	O
you	O
do	O
n't	O
want	O
to	O
use	O
SQLite	O
you	O
could	O
do	O
an	O
array	O
of	O
dicts	O
.	O
episodes	O
=	O
]	O
episodes.append	B-API
(	I-API
{	I-API
'season':1	I-API
,	I-API
'episode	I-API
'	I-API
:	I-API
2	I-API
,	I-API
'name	I-API
'	I-API
:	I-API
'Something	I-API
'	I-API
}	I-API
)	I-API
(	O
{	O
'season':1	O
,	O
'episode	O
'	O
:	O
2	O
,	O
'name	O
'	O
:	O
'Something	O
'	O
,	O
'actors	O
'	O
:	O
[	O
'Billy	O
Bob	O
'	O
,	O
'Sean	O
Penn	O
'	O
]	O
}	O
)	O
That	O
way	O
you	O
add	O
metadata	O
to	O
any	O
record	O
and	O
search	O
it	O
very	O
easily	O
season_1	B-API
=	B-API
[	B-API
e	I-API
for	B-API
e	B-API
in	B-API
episodes	B-API
if	B-API
e	B-API
[	I-API
'season	I-API
'	I-API
]	I-API
==	B-API
1	B-API
]	I-API
billy_bob	I-API
=	B-API
[	B-API
e	I-API
for	B-API
e	B-API
in	B-API
episodes	B-API
if	B-API
'actors	B-API
'	I-API
in	B-API
e	B-API
and	B-API
'Billy	B-API
Bob	B-API
'	I-API
in	B-API
e	B-API
[	I-API
'actors	I-API
'	I-API
]	I-API
]	I-API
for	I-API
episode	B-API
in	B-API
billy_bob	B-API
:	I-API
print	B-API
``	B-API
Billy	I-API
bob	B-API
was	B-API
in	B-API
Season	B-API
%	B-API
s	I-API
Episode	B-API
%	B-API
s	I-API
''	I-API
%	B-API
(	B-API
episode	I-API
[	I-API
'season	I-API
'	I-API
]	I-API
,	I-API
