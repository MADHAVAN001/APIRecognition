Jeff	O
,	O
your	O
code	O
is	O
nice	O
but	O
could	O
be	O
clearer	O
with	O
constants	O
(	O
as	O
suggested	O
in	O
Code	O
Complete	O
)	O
.	O
const	B-API
int	I-API
SECOND	I-API
=	I-API
1	I-API
;	O
const	B-API
int	I-API
MINUTE	I-API
=	I-API
60	I-API
*	I-API
SECOND	I-API
;	O
const	B-API
int	I-API
HOUR	I-API
=	I-API
60	I-API
*	I-API
MINUTE	I-API
;	O
const	B-API
int	I-API
DAY	I-API
=	I-API
24	I-API
*	I-API
HOUR	I-API
;	O
const	B-API
int	I-API
MONTH	I-API
=	I-API
30	I-API
*	I-API
DAY	I-API
;	O
var	O
ts	O
=	O
new	O
TimeSpan	B-API
(	O
DateTime.UtcNow.Ticks	B-API
-	O
yourDate.Ticks	B-API
)	O
;	O
double	O
delta	O
=	O
Math.Abs	B-API
(	I-API
ts.TotalSeconds	I-API
)	I-API
;	O
if	B-API
(	I-API
delta	I-API
1	I-API
*	I-API
MINUTE	I-API
)	I-API
return	O
ts.Seconds	O
==	O
1	O
?	O
``	O
one	O
second	O
ago	O
''	O
:	O
ts.Seconds	O
+	O
``	O
seconds	O
ago	O
''	O
;	O
if	B-API
(	I-API
delta	I-API
2	I-API
*	I-API
MINUTE	I-API
)	I-API
return	O
``	O
a	O
minute	O
ago	O
''	O
;	O
if	B-API
(	I-API
delta	I-API
45	I-API
*	I-API
MINUTE	I-API
)	I-API
return	O
ts.Minutes	O
+	O
``	O
minutes	O
ago	O
''	O
;	O
if	B-API
(	I-API
delta	I-API
90	I-API
*	I-API
MINUTE	I-API
)	I-API
return	O
``	O
an	O
hour	O
ago	O
''	O
;	O
if	B-API
(	I-API
delta	I-API
24	I-API
*	I-API
HOUR	I-API
)	I-API
return	O
ts.Hours	O
+	O
``	O
hours	O
ago	O
''	O
;	O
if	B-API
(	I-API
delta	I-API
48	I-API
*	I-API
HOUR	I-API
)	I-API
return	O
``	O
yesterday	O
''	O
;	O
if	B-API
(	I-API
delta	I-API
30	I-API
*	I-API
DAY	I-API
)	I-API
return	O
ts.Days	O
+	O
``	O
days	O
ago	O
''	O
;	O
if	B-API
(	I-API
delta	I-API
12	I-API
*	I-API
MONTH	I-API
)	I-API
{	O
int	O
months	O
=	O
Convert.ToInt32	B-API
(	O
Math.Floor	B-API
(	O
(	O
double	O
)	O
ts.Days	O
/	O
30	O
)	O
)	O
;	O
return	O
months	O
=	O
1	O
?	O
``	O
one	O
month	O
ago	O
''	O
:	O
months	O
+	O
``	O
months	O
ago	O
''	O
;	O
}	O
else	O
{	O
int	O
years	O
=	O
Convert.ToInt32	B-API
(	O
Math.Floor	B-API
(	O
(	O
double	O
)	O
ts.Days	O
/	O
365	O
)	O
)	O
;	O
return	O
years	O
=	O
1	O
?	O
``	O
one	O
year	O
ago	O
''	O
:	O
years	O
+	O
``	O
years	O
ago	O
''	O
;	O
}	O
