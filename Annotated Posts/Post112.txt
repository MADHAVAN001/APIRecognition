I	O
've	O
read	O
that	O
it	O
is	O
possible	O
to	O
add	O
a	O
method	O
to	O
an	O
existing	O
object	O
(	O
e.g	O
.	O
not	O
in	O
the	O
class	O
definition	O
)	O
in	O
Python	O
,	O
I	O
think	O
this	O
is	O
called	O
Monkey	O
Patching	O
(	O
or	O
in	O
some	O
cases	O
Duck	O
Punching	O
)	O
.	O
I	O
understand	O
that	O
it	O
's	O
not	O
always	O
a	O
good	O
decision	O
to	O
do	O
so	O
.	O
But	O
,	O
how	O
might	O
one	O
do	O
this	O
?	O
UPDATE	O
8/04/2008	O
00:21:01	O
EST	O
:	O
That	O
looks	O
like	O
a	O
good	O
answer	O
John	O
Downey	O
,	O
I	O
tried	O
it	O
but	O
it	O
appears	O
that	O
it	O
ends	O
up	O
being	O
not	O
a	O
true	O
method	O
.	O
Your	O
example	O
defines	O
the	O
new	O
patch	O
function	O
with	O
an	O
argument	O
of	O
,	O
but	O
if	O
you	O
write	O
actual	O
code	O
that	O
way	O
,	O
the	O
now	O
patched	O
class	O
method	O
asks	O
for	O
an	O
argument	O
named	O
(	O
it	O
does	O
n't	O
automagically	O
recognize	O
it	O
as	O
the	O
object	O
to	O
which	O
it	O
is	O
supposed	O
to	O
bind	O
,	O
which	O
is	O
what	O
would	O
happen	O
if	O
defined	O
within	O
the	O
class	O
definition	O
)	O
,	O
meaning	O
you	O
have	O
to	O
call	O
class.patch	B
(	I
obj	I
)	I
instead	O
of	O
just	O
class.patch	B
(	I
)	I
if	O
you	O
want	O
the	O
same	O
functionality	O
as	O
a	O
true	O
method	O
.	O
It	O
looks	O
like	O
Python	O
is	O
n't	O
really	O
treating	O
it	O
as	O
a	O
method	O
,	O
but	O
more	O
just	O
as	O
a	O
variable	O
which	O
happens	O
to	O
be	O
a	O
function	O
(	O
and	O
as	O
such	O
is	O
callable	O
)	O
.	O
Is	O
there	O
any	O
way	O
to	O
attach	O
an	O
actual	O
method	O
to	O
a	O
class	O
?	O
Oh	O
,	O
and	O
Ryan	O
,	O
that	O
is	O
n't	O
exactly	O
what	O
I	O
was	O
looking	O
for	O
(	O
it	O
is	O
n't	O
a	O
builtin	O
functionality	O
)	O
,	O
but	O
it	O
is	O
quite	O
cool	O
nonetheless	O
.	O
