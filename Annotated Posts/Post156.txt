Since	O
the	O
WMI	O
class	O
Win32_OperatingSystem	O
only	O
includes	O
OSArchitecture	O
in	O
Windows	O
Vista	O
,	O
I	O
quickly	O
wrote	O
up	O
a	O
method	O
using	O
the	O
registry	O
to	O
try	O
and	O
determine	O
whether	O
or	O
not	O
the	O
current	O
system	O
is	O
a	O
32	O
or	O
64bit	O
system	O
.	O
private	O
Boolean	O
is64BitOperatingSystem	O
(	O
)	O
{	O
RegistryKey	O
localEnvironment	O
=	O
Registry.LocalMachine.OpenSubKey	O
(	O
``	O
SYSTEM\\CurrentControlSet\\Control\\Session	O
Manager\\Environment	O
''	O
)	O
;	O
String	O
processorArchitecture	O
=	O
(	O
String	O
)	O
localEnvironment.GetValue	O
(	O
``	O
PROCESSOR_ARCHITECTURE	O
''	O
)	O
;	O
if	O
(	O
processorArchitecture.Equals	O
(	O
``	O
x86	O
''	O
)	O
)	O
{	O
return	O
false	O
;	O
}	O
else	O
{	O
return	O
true	O
;	O
}	O
}	O
It	O
's	O
worked	O
out	O
pretty	O
well	O
for	O
us	O
so	O
far	O
,	O
but	O
I	O
'm	O
not	O
sure	O
how	O
much	O
I	O
like	O
looking	O
through	O
the	O
registry	O
.	O
Is	O
this	O
a	O
pretty	O
standard	O
practice	O
or	O
is	O
there	O
a	O
better	O
method	O
?	O
Edit	O
:	O
Wow	O
,	O
that	O
code	O
looks	O
a	O
lot	O
prettier	O
in	O
the	O
preview	O
.	O
I	O
'll	O
consider	O
linking	O
to	O
a	O
pastebin	O
or	O
something	O
,	O
next	O
time	O
.	O
