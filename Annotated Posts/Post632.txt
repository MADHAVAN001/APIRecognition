I	O
thought	O
I	O
'd	O
give	O
this	O
a	O
shot	O
using	O
classes	O
and	O
polymorphism	O
.	O
I	O
had	O
a	O
previous	O
iteration	O
which	O
used	O
sub-classing	O
which	O
ended	O
up	O
having	O
way	O
too	O
much	O
overhead	O
.	O
I	O
've	O
switched	O
to	O
a	O
more	O
flexible	O
delegate	O
/	O
public	O
property	O
object	O
model	O
which	O
is	O
significantly	O
better	O
.	O
My	O
code	O
is	O
very	O
slightly	O
more	O
accurate	O
,	O
I	O
wish	O
I	O
could	O
come	O
up	O
with	O
a	O
better	O
way	O
to	O
generate	O
``	O
months	O
ago	O
''	O
that	O
did	O
n't	O
seem	O
too	O
over-engineered	O
.	O
I	O
think	O
I	O
'd	O
still	O
stick	O
with	O
Jeff	O
's	O
if-then	O
cascade	O
because	O
it	O
's	O
less	O
code	O
and	O
it	O
's	O
simpler	O
(	O
it	O
's	O
definitely	O
easier	O
to	O
ensure	O
it	O
'll	O
work	O
as	O
expected	O
)	O
.	O
For	O
the	O
below	O
code	O
PrintRelativeTime.GetRelativeTimeMessage	O
(	O
TimeSpan	O
ago	O
)	O
returns	O
the	O
relative	O
time	O
message	O
(	O
e.g	O
.	O
``	O
yesterday	O
''	O
)	O
.	O
public	B
class	B
RelativeTimeRange	B
:	B
IComparable	B
{	I
public	B
TimeSpan	B
UpperBound	B
{	B
get	B
;	I
set	B
;	I
}	B
public	B
delegate	B
string	B
;	B
public	B
RelativeTimeTextDelegate	B
MessageCreator	B
{	B
get	B
;	I
set	B
;	I
}	B
public	B
int	B
{	B
if	B
)	B
{	B
return	B
1	B
;	I
}	B
//	B
note	B
that	B
this	B
sorts	B
in	B
reverse	B
order	B
to	B
the	B
way	B
you	B
'd	I
expect	B
,	I
//	B
this	B
saves	B
having	B
to	B
reverse	B
a	B
list	B
later	B
return	B
(	B
obj	I
as	B
;	B
}	B
}	I
public	I
class	B
PrintRelativeTime	B
{	I
private	B
static	B
ListRelativeTimeRange	B
timeRanges	B
;	I
static	B
{	B
timeRanges	B
=	B
new	B
ListRelativeTimeRange	B
{	I
new	B
RelativeTimeRange	B
{	B
UpperBound	B
=	B
,	B
MessageCreator	B
=	B
(	B
delta	I
)	I
=	B
{	B
return	B
``	B
one	I
second	B
ago	B
''	I
;	I
}	B
}	B
,	I
new	B
RelativeTimeRange	B
{	B
UpperBound	B
=	B
,	B
MessageCreator	B
=	B
(	B
delta	I
)	I
=	B
{	B
return	B
delta.Seconds	B
+	B
``	B
seconds	B
ago	B
''	I
;	I
}	B
}	B
,	I
new	B
RelativeTimeRange	B
{	B
UpperBound	B
=	B
,	B
MessageCreator	B
=	B
(	B
delta	I
)	I
=	B
{	B
return	B
``	B
one	I
minute	B
ago	B
''	I
;	I
}	B
}	B
,	I
new	B
RelativeTimeRange	B
{	B
UpperBound	B
=	B
,	B
MessageCreator	B
=	B
(	B
delta	I
)	I
=	B
{	B
return	B
delta.Minutes	B
+	B
``	B
minutes	B
ago	B
''	I
;	I
}	B
}	B
,	I
new	B
RelativeTimeRange	B
{	B
UpperBound	B
=	B
,	B
MessageCreator	B
=	B
(	B
delta	I
)	I
=	B
{	B
return	B
``	B
one	I
hour	B
ago	B
''	I
;	I
}	B
}	B
,	I
new	B
RelativeTimeRange	B
{	B
UpperBound	B
=	B
,	B
MessageCreator	B
=	B
(	B
delta	I
)	I
=	B
{	B
return	B
delta.Hours	B
+	B
``	B
hours	B
ago	B
''	I
;	I
}	B
}	B
,	I
new	B
RelativeTimeRange	B
{	B
UpperBound	B
=	B
,	B
MessageCreator	B
=	B
(	B
delta	I
)	I
=	B
{	B
return	B
``	B
yesterday	I
''	I
;	I
}	B
}	B
,	I
new	B
RelativeTimeRange	B
{	B
UpperBound	B
=	B
)	B
,	I
MessageCreator	B
=	B
(	B
delta	I
)	I
=	B
{	B
return	B
delta.Days	B
+	B
``	B
days	B
ago	B
''	I
;	I
}	B
}	B
,	I
new	B
RelativeTimeRange	B
{	B
UpperBound	B
=	B
)	B
,	I
MessageCreator	B
=	B
(	B
delta	I
)	I
=	B
{	B
return	B
``	B
one	I
month	B
ago	B
''	I
;	I
}	B
}	B
,	I
new	B
RelativeTimeRange	B
{	B
UpperBound	B
=	B
)	B
,	I
MessageCreator	B
=	B
(	B
delta	I
)	I
=	B
{	B
return	B
+	B
``	B
months	B
ago	B
''	I
;	I
}	B
}	B
,	I
new	B
RelativeTimeRange	B
{	B
UpperBound	B
=	B
)	B
,	I
MessageCreator	B
=	B
(	B
delta	I
)	I
=	B
{	B
return	B
``	B
one	I
year	B
ago	B
''	I
;	I
}	B
}	B
,	I
new	B
RelativeTimeRange	B
{	B
UpperBound	B
=	B
TimeSpan.MaxValue	B
,	I
MessageCreator	B
=	B
(	B
delta	I
)	I
=	B
{	B
return	B
+	B
``	B
years	B
ago	B
''	I
;	I
}	B
}	B
}	B
;	I
;	B
}	B
public	B
static	B
string	B
{	B
RelativeTimeRange	B
postRelativeDateRange	B
=	B
timeRanges	B
[	I
0	I
]	I
;	I
foreach	B
(	B
var	I
timeRange	B
in	B
timeRanges	B
)	I
{	B
if	B
=	B
0	B
)	I
{	B
postRelativeDateRange	B
=	B
timeRange	B
;	I
}	B
}	B
return	B
;	B
(	O
TimeSpan	O
timeDelta	O
)	O
(	O
object	O
obj	O
)	O
!	O
(	O
obj	O
is	O
RelativeTimeRange	O
)	O
RelativeTimeRange	B
)	I
.UpperBound.CompareTo	I
(	I
UpperBound	I
)	I
PrintRelativeTime	B
(	I
)	I
TimeSpan.FromSeconds	B
(	I
1	I
)	I
TimeSpan.FromSeconds	B
(	I
60	I
)	I
TimeSpan.FromMinutes	B
(	I
2	I
)	I
TimeSpan.FromMinutes	B
(	I
60	I
)	I
TimeSpan.FromHours	B
(	I
2	I
)	I
TimeSpan.FromHours	B
(	I
24	I
)	I
TimeSpan.FromDays	B
(	I
2	I
)	I
DateTime.Now.Subtract	B
(	I
DateTime.Now.AddMonths	I
(	I
-1	I
)	I
DateTime.Now.Subtract	B
(	I
DateTime.Now.AddMonths	I
(	I
-2	I
)	I
DateTime.Now.Subtract	B
(	I
DateTime.Now.AddYears	I
(	I
-1	I
)	I
int	O
)	O
Math.Floor	O
(	O
delta.TotalDays	O
/	O
30	O
)	O
DateTime.Now.Subtract	B
(	I
DateTime.Now.AddYears	I
(	I
-2	I
)	I
int	O
)	O
Math.Floor	O
(	O
delta.TotalDays	O
/	O
365.24D	O
)	O
timeRanges.Sort	B
(	I
)	I
(	O
TimeSpan	O
ago	O
)	O
(	B
ago.CompareTo	I
(	I
timeRange.UpperBound	I
)	I
postRelativeDateRange.MessageCreator	B
(	I
ago	I
)	I
