You	O
could	O
also	O
make	O
an	O
array	O
of	O
c.Name	O
data	O
and	O
use	O
String.Join	O
method	O
to	O
create	O
your	O
line	O
.	O
public	O
string	O
ReturnAsCSV	O
(	O
ContactList	O
contactList	O
)	O
{	O
ListString	O
tmpList	O
=	O
new	O
Liststring	O
(	O
)	O
;	O
foreach	O
(	O
Contact	O
c	O
in	O
contactList	O
)	O
{	O
tmpList.Add	O
(	O
c.Name	O
)	O
;	O
}	O
return	O
String.Join	O
(	O
``	O
,	O
''	O
,	O
tmpList.ToArray	O
(	O
)	O
)	O
;	O
}	O
This	O
might	O
not	O
be	O
as	O
performant	O
as	O
the	O
StringBuilder	O
approach	O
,	O
but	O
it	O
definitely	O
looks	O
cleaner	O
.	O
Also	O
,	O
you	O
might	O
want	O
to	O
consider	O
using	O
.CurrentCulture.TextInfo.ListSeparator	O
instead	O
of	O
a	O
hard-coded	O
comma	O
--	O
If	O
your	O
output	O
is	O
going	O
to	O
be	O
imported	O
into	O
other	O
applications	O
,	O
you	O
might	O
have	O
problems	O
with	O
it	O
.	O
ListSeparator	O
may	O
be	O
different	O
across	O
different	O
cultures	O
,	O
and	O
MS	O
Excel	O
at	O
the	O
very	O
least	O
,	O
honors	O
this	O
setting	O
.	O
So	O
:	O
return	O
String.Join	O
(	O
System.Globalization.CultureInfo.CurrentCulture.TextInfo.ListSeparator	O
,	O
tmpList.ToArray	O
(	O
)	O
)	O
;	O
