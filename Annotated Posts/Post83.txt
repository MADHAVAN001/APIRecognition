I	O
need	O
to	O
set	O
the	O
height	O
of	O
every	O
textbox	O
on	O
my	O
form	O
,	O
some	O
of	O
which	O
are	O
nested	O
within	O
other	O
controls	O
.	O
I	O
thought	O
I	O
could	O
do	O
something	O
like	O
this	O
:	O
private	O
static	O
IEnumeratorTextBox	O
FindTextBoxes	O
(	O
Control	O
rootControl	O
)	O
{	O
foreach	O
(	O
Control	O
control	O
in	O
rootControl.Controls	O
)	O
{	O
if	O
(	O
control.Controls.Count	O
0	O
)	O
{	O
//	O
Recursively	O
search	O
for	O
any	O
TextBoxes	O
within	O
each	O
child	O
control	O
foreach	O
(	O
TextBox	O
textBox	O
in	O
FindTextBoxes	O
(	O
control	O
)	O
)	O
{	O
yield	O
return	O
textBox	O
;	O
}	O
}	O
TextBox	O
textBox2	O
=	O
control	O
as	O
TextBox	O
;	O
if	O
(	O
textBox2	O
!	O
=	O
null	O
)	O
{	O
yield	O
return	O
textBox2	O
;	O
}	O
}	O
}	O
Using	O
it	O
like	O
this	O
:	O
foreach	O
(	O
TextBox	O
textBox	O
in	O
FindTextBoxes	O
(	O
this	O
)	O
)	O
{	O
textBox.Height	O
=	O
height	O
;	O
}	O
But	O
of	O
course	O
the	O
compiler	O
spits	O
its	O
dummy	O
,	O
because	O
foreach	O
expects	O
an	O
IEnumerable	O
rather	O
than	O
an	O
IEnumerator	O
.	O
Is	O
there	O
a	O
way	O
to	O
do	O
this	O
without	O
having	O
to	O
create	O
a	O
separate	O
class	O
with	O
a	O
GetEnumerator	O
(	O
)	O
method	O
?	O
