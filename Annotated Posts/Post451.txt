The	O
answer	O
seems	O
to	O
be	O
``	O
no	O
''	O
...	O
and	O
``	O
yes	O
''	O
.	O
There	O
seems	O
to	O
be	O
no	O
real	O
way	O
to	O
know	O
if	O
a	O
file	O
is	O
open	O
for	O
writing	O
by	O
another	O
application	O
.	O
So	O
,	O
reading	O
from	O
such	O
a	O
file	O
will	O
just	O
progress	O
until	O
content	O
is	O
exhausted	O
.	O
I	O
took	O
Mike	O
's	O
advice	O
and	O
wrote	O
some	O
test	O
code	O
:	O
Writer.java	O
writes	O
a	O
string	O
to	O
file	O
and	O
then	O
waits	O
for	O
the	O
user	O
to	O
hit	O
enter	O
before	O
writing	O
another	O
line	O
to	O
file	O
.	O
The	O
idea	O
being	O
that	O
it	O
could	O
be	O
started	O
up	O
,	O
then	O
a	O
reader	O
can	O
be	O
started	O
to	O
see	O
how	O
it	O
copes	O
with	O
the	O
``	O
partial	O
''	O
file	O
.	O
The	O
reader	O
I	O
wrote	O
is	O
in	O
Reader.java	O
.	O
Writer.java	O
public	B-API
class	B-API
Writer	B-API
extends	B-API
Object	B-API
{	I-API
Writer	B-API
(	B-API
)	I-API
{	B-API
}	B-API
public	B-API
static	B-API
String	B-API
[	I-API
]	I-API
strings	B-API
=	B-API
{	B-API
``	B-API
Hello	I-API
World	B-API
''	I-API
,	I-API
``	B-API
Goodbye	I-API
World	B-API
''	I-API
}	B-API
;	I-API
public	B-API
static	B-API
void	B-API
throws	B-API
java.io.IOException	B-API
{	B-API
java.io.PrintWriter	B-API
pw	B-API
=	B-API
new	B-API
,	B-API
true	B-API
)	I-API
;	I-API
{	B-API
;	B-API
;	B-API
}	B-API
;	B-API
(	O
String	O
[	O
]	O
args	O
)	O
(	O
new	O
java.io.FileOutputStream	O
(	O
``	O
out.txt	O
''	O
)	O
(	O
String	O
s	O
:	O
strings	O
)	O
pw.println	B-API
(	I-API
s	I-API
)	I-API
System.in.read	B-API
(	I-API
)	I-API
pw.close	B-API
(	I-API
)	I-API
Reader.java	O
public	B-API
class	B-API
Reader	B-API
extends	B-API
Object	B-API
{	I-API
Reader	B-API
(	B-API
)	I-API
{	B-API
}	B-API
public	B-API
static	B-API
void	B-API
throws	B-API
Exception	B-API
{	B-API
java.io.FileInputStream	B-API
in	B-API
=	B-API
new	B-API
;	B-API
java.nio.channels.FileChannel	B-API
fc	B-API
=	B-API
;	B-API
java.nio.ByteBuffer	B-API
bb	B-API
=	B-API
;	B-API
=	B-API
0	B-API
)	I-API
{	B-API
;	B-API
)	B-API
{	B-API
)	B-API
;	I-API
}	B-API
;	B-API
}	B-API
;	B-API
(	O
String	O
[	O
]	O
args	O
)	O
java.io.FileInputStream	B-API
(	I-API
``	I-API
out.txt	I-API
''	I-API
)	I-API
in.getChannel	B-API
(	I-API
)	I-API
java.nio.ByteBuffer.allocate	B-API
(	I-API
10	I-API
)	I-API
while	B-API
(	I-API
fc.read	I-API
(	I-API
bb	I-API
)	I-API
bb.flip	B-API
(	I-API
)	I-API
while	B-API
(	I-API
bb.hasRemaining	I-API
(	I-API
)	I-API
System.out.println	B-API
(	I-API
(	I-API
char	I-API
)	I-API
bb.get	I-API
(	I-API
)	I-API
bb.clear	B-API
(	I-API
)	I-API
System.exit	B-API
(	I-API
0	I-API
)	I-API
No	O
guarantees	O
that	O
this	O
code	O
is	O
best	O
practice	O
.	O
This	O
leaves	O
the	O
option	O
suggested	O
by	O
Mike	O
of	O
periodically	O
checking	O
if	O
there	O
is	O
new	O
data	O
to	O
be	O
read	O
from	O
the	O
file	O
.	O
This	O
then	O
requires	O
user	O
intervention	O
to	O
close	O
the	O
file	O
reader	O
when	O
it	O
is	O
determined	O
that	O
the	O
reading	O
is	O
completed	O
.	O
Or	O
,	O
the	O
reader	O
needs	O
to	O
be	O
made	O
aware	O
the	O
content	O
of	O
the	O
file	O
and	O
be	O
able	O
to	O
determine	O
and	O
end	O
of	O
write	O
condition	O
.	O
If	O
the	O
content	O
were	O
XML	O
,	O
the	O
end	O
of	O
document	O
could	O
be	O
used	O
to	O
signal	O
this	O
.	O
