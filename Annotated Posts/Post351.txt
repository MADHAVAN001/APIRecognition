I	O
realise	O
this	O
question	O
has	O
already	O
been	O
answered	O
,	O
but	O
I	O
'd	O
like	O
to	O
throw	O
in	O
another	O
bit	O
of	O
information	O
which	O
is	O
related	O
to	O
the	O
topic	O
.	O
In	O
languages	O
,	O
like	O
C++	O
,	O
where	O
you	O
can	O
actually	O
overload	O
the	O
behaviour	O
of	O
the	O
and	O
||	O
operators	O
,	O
it	O
is	O
highly	O
recommended	O
that	O
you	O
do	O
not	O
do	O
this	O
.	O
This	O
is	O
because	O
when	O
you	O
overload	O
this	O
behaviour	O
,	O
you	O
end	O
up	O
forcing	O
the	O
evaluation	O
of	O
both	O
sides	O
of	O
the	O
operation	O
.	O
This	O
does	O
two	O
things	O
:	O
It	O
breaks	O
the	O
lazy	O
evaluation	O
mechanism	O
because	O
the	O
overload	O
is	O
a	O
function	O
which	O
has	O
to	O
be	O
invoked	O
,	O
and	O
hence	O
both	O
parameters	O
are	O
evaluated	O
before	O
calling	O
the	O
function	O
.	O
The	O
order	O
of	O
evaluation	O
of	O
said	O
parameters	O
is	O
n't	O
guaranteed	O
and	O
can	O
be	O
compiler	O
specific	O
.	O
Hence	O
the	O
objects	O
would	O
n't	O
behave	O
in	O
the	O
same	O
manner	O
as	O
they	O
do	O
in	O
the	O
examples	O
listed	O
in	O
the	O
question/previous	O
answers	O
.	O
For	O
more	O
info	O
,	O
have	O
a	O
read	O
of	O
Scott	O
Meyers	O
'	O
book	O
,	O
More	O
Effective	O
C++	O
.	O
Cheers	O
!	O
