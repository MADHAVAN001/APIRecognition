Here	O
is	O
a	O
UDF	O
which	O
will	O
do	O
it	O
.	O
It	O
will	O
return	O
a	O
table	O
of	O
the	O
delimited	O
values	O
,	O
have	O
n't	O
tried	O
all	O
scenarios	O
on	O
it	O
but	O
your	O
example	O
works	O
fine	O
.	O
CREATE	B
FUNCTION	B
SplitString	B
(	B
--	B
Add	B
the	B
parameters	B
for	B
the	B
function	B
here	B
@	B
myString	I
,	B
@	B
deliminator	I
)	B
RETURNS	I
@	B
ReturnTable	I
TABLE	B
(	B
--	B
Add	B
the	B
column	B
definitions	B
for	B
the	B
TABLE	B
variable	B
here	B
[	B
id	I
]	I
[	B
int	I
]	I
NOT	B
NULL	B
,	I
[	B
part	I
]	I
NULL	B
)	I
ASBEGIN	I
Declare	B
@	B
iSpaces	I
int	B
Declare	B
@	B
part	I
--	B
initialize	I
spaces	B
Select	B
@	B
iSpaces	I
=	B
While	B
@	B
iSpaces	I
0	B
Begin	B
Select	B
@	B
part	I
=	B
)	B
Insert	B
Into	B
Select	B
@	B
part	I
Select	B
@	B
myString	I
=	B
+	B
-	B
)	B
Select	B
@	B
iSpaces	I
=	B
end	B
If	B
0	B
Insert	B
Into	B
@	B
ReturnTable	I
Select	B
@	B
myString	I
RETURN	B
varchar	B
(	I
500	I
)	I
varchar	B
(	I
10	I
)	I
IDENTITY	B
(	I
1,1	I
)	I
[	B
varchar	I
]	I
(	I
50	I
)	I
varchar	B
(	I
50	I
)	I
charindex	B
(	I
@	I
deliminator	I
,	I
@	I
myString,0	I
)	I
substring	B
(	I
@	I
myString,0	I
,	I
charindex	I
(	I
@	I
deliminator	I
,	I
@	I
myString,0	I
)	I
@	B
ReturnTable	I
(	I
part	I
)	I
substring	B
(	I
@	I
mystring	I
,	I
charindex	I
(	I
@	I
deliminator	I
,	I
@	I
myString,0	I
)	I
len	B
(	I
@	I
deliminator	I
)	I
,	I
len	I
(	I
@	I
myString	I
)	I
(	O
'	O
'	O
,	O
@	O
myString,0	O
)	O
charindex	B
(	I
@	I
deliminator	I
,	I
@	I
myString,0	I
)	I
len	B
(	I
@	I
myString	I
)	I
You	O
would	O
call	O
it	O
like	O
this	O
:	O
Select	B
*	B
From	B
(	O
'Hello	O
John	O
Smith	O
'	O
,	O
'	O
'	O
)	O
Edit	O
:	O
Updated	O
solution	O
to	O
handle	O
delimters	O
with	O
a	O
len1	O
as	O
in	O
:	O
select	B
*	B
From	B
SplitString	B
(	I
'Hello**John**Smith	I
'	I
,	I
'**	I
'	I
)	I
