What	O
would	O
be	O
the	O
best	O
way	O
to	O
fill	O
a	O
C	O
#	O
struct	O
from	O
a	O
byte	O
[	O
]	O
array	O
where	O
the	O
data	O
was	O
from	O
a	O
C/C++	O
struct	O
?	O
The	O
C	O
struct	O
would	O
look	O
something	O
like	O
this	O
(	O
my	O
C	O
is	O
very	O
rusty	O
)	O
:	O
typedef	O
{	O
CHAR	O
Name	O
[	O
8	O
]	O
;	O
UInt32	O
User	O
;	O
CHAR	O
Location	O
[	O
8	O
]	O
;	O
UInt32	O
TimeStamp	O
;	O
UInt32	O
Sequence	O
;	O
CHAR	O
Tracking	O
[	O
16	O
]	O
;	O
CHAR	O
Filler	O
[	O
12	O
]	O
;	O
}	O
And	O
would	O
fill	O
something	O
like	O
this	O
:	O
[	O
StructLayout	O
(	O
LayoutKind.Explicit	O
,	O
Size	O
=	O
56	O
,	O
Pack	O
=	O
1	O
)	O
]	O
public	O
struct	O
{	O
[	O
MarshalAs	O
(	O
UnmanagedType.ByValTStr	O
,	O
SizeConst	O
=	O
8	O
)	O
]	O
[	O
FieldOffset	O
(	O
0	O
)	O
]	O
public	O
string	O
Name	O
;	O
[	O
MarshalAs	O
(	O
UnmanagedType.U4	O
)	O
]	O
[	O
FieldOffset	O
(	O
8	O
)	O
]	O
public	O
uint	O
User	O
;	O
[	O
MarshalAs	O
(	O
UnmanagedType.ByValTStr	O
,	O
SizeConst	O
=	O
8	O
)	O
]	O
[	O
FieldOffset	O
(	O
12	O
)	O
]	O
public	O
string	O
Location	O
;	O
[	O
MarshalAs	O
(	O
UnmanagedType.U4	O
)	O
]	O
[	O
FieldOffset	O
(	O
20	O
)	O
]	O
public	O
uint	O
TimeStamp	O
;	O
[	O
MarshalAs	O
(	O
UnmanagedType.U4	O
)	O
]	O
[	O
FieldOffset	O
(	O
24	O
)	O
]	O
public	O
uint	O
Sequence	O
;	O
[	O
MarshalAs	O
(	O
UnmanagedType.ByValTStr	O
,	O
SizeConst	O
=	O
16	O
)	O
]	O
[	O
FieldOffset	O
(	O
28	O
)	O
]	O
public	O
string	O
Tracking	O
;	O
}	O
What	O
is	O
best	O
way	O
to	O
copy	O
to	O
NewStuff	O
,	O
if	O
OldStuff	O
was	O
passed	O
as	O
byte	O
[	O
]	O
array	O
?	O
I	O
'm	O
currently	O
doing	O
something	O
like	O
the	O
following	O
,	O
but	O
it	O
feels	O
kind	O
of	O
clunky	O
.	O
GCHandle	O
handle	O
;	O
NewStuff	O
MyStuff	O
;	O
int	O
BufferSize	O
=	O
Marshal.SizeOf	O
(	O
typeof	O
(	O
NewStuff	O
)	O
)	O
;	O
byte	O
[	O
]	O
buff	O
=	O
new	O
byte	O
[	O
BufferSize	O
]	O
;	O
Array.Copy	O
(	O
SomeByteArray	O
,	O
0	O
,	O
buff	O
,	O
0	O
,	O
BufferSize	O
)	O
;	O
handle	O
=	O
GCHandle.Alloc	O
(	O
buff	O
,	O
GCHandleType.Pinned	O
)	O
;	O
MyStuff	O
=	O
(	O
NewStuff	O
)	O
Marshal.PtrToStructure	O
(	O
handle.AddrOfPinnedObject	O
(	O
)	O
,	O
typeof	O
(	O
NewStuff	O
)	O
)	O
;	O
handle.Free	O
(	O
)	O
;	O
Is	O
there	O
better	O
way	O
to	O
accomplish	O
this	O
?	O
Would	O
using	O
the	O
class	O
offer	O
any	O
performance	O
gains	O
over	O
pinning	O
the	O
memory	O
and	O
using	O
?	O
