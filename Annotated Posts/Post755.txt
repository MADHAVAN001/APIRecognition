This	O
is	O
part	O
of	O
a	O
solution	O
I	O
use	O
on	O
a	O
local	O
intranet	O
.	O
Some	O
of	O
the	O
variables	O
you	O
will	O
have	O
to	O
collect	O
yourself	O
as	O
I	O
pull	O
them	O
from	O
a	O
database	O
but	O
you	O
may	O
pull	O
them	O
from	O
somewhere	O
else	O
.	O
The	O
only	O
extra	O
but	O
I	O
've	O
got	O
in	O
there	O
is	O
a	O
function	O
called	O
getMimeType	O
which	O
connects	O
to	O
the	O
database	O
and	O
pulls	O
back	O
the	O
correct	O
mine	O
type	O
based	O
on	O
file	O
extension	O
.	O
This	O
defaults	O
to	O
application/octet-stream	O
if	O
none	O
is	O
found	O
.	O
//	B
Clear	B
the	B
response	B
buffer	B
incase	B
there	B
is	B
anything	B
already	B
in	B
;	B
Response.Buffer	I
=	B
true	B
;	I
//	I
Read	B
the	B
original	B
file	B
from	B
diskFileStream	B
myFileStream	B
=	B
new	B
;	B
long	I
FileSize	B
=	B
myFileStream.Length	B
;	I
byte	I
[	I
]	I
Buffer	B
=	B
new	B
;	B
//	I
Tell	B
the	B
browse	B
stuff	B
about	B
the	B
)	B
;	I
Response.ContentType	I
=	B
;	B
//	I
Send	B
the	B
data	B
to	B
the	B
it.Response.Clear	B
(	I
)	I
(	O
sPath	O
,	O
FileMode.Open	O
)	O
[	O
(	O
int	O
)	O
FileSize	O
]	O
;	O
myFileStream.Read	O
(	O
Buffer	O
,	O
0	O
,	O
(	O
int	O
)	O
FileSize	B
)	I
;	I
myFileStream.Close	I
(	I
)	I
(	O
``	O
Content-Length	O
''	O
,	O
FileSize.ToString	O
(	O
)	O
;	O
Response.AddHeader	O
(	O
``	O
Content-Disposition	O
''	O
,	O
``	O
inline	O
;	O
filename=	O
''	O
+	O
sFilename.Replace	O
(	O
``	O
``	O
,	O
''	O
_	O
''	O
)	O
(	O
sExtention	O
,	O
oConnection	O
)	O
browserResponse.BinaryWrite	B
(	I
Buffer	I
)	I
;	I
Response.End	I
(	I
)	I
