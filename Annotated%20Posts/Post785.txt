From	O
what	O
I	O
can	O
see	O
in	O
that	O
context	O
,	O
you	O
do	O
n't	O
need	O
to	O
copy	O
SomeByteArray	O
into	O
a	O
buffer	O
.	O
You	O
simply	O
need	O
to	O
get	O
the	O
handle	O
from	O
SomeByteArray	O
,	O
pin	O
it	O
,	O
copy	O
the	O
IntPtr	O
data	O
using	O
PtrToStructure	B
and	O
then	O
release	O
.	O
No	O
need	O
for	O
a	O
copy	O
.	O
That	O
would	O
be	O
:	O
NewStuff	O
ByteArrayToNewStuff	O
(	O
byte	O
[	O
]	O
bytes	O
)	O
{	O
GCHandle	O
handle	O
=	O
GCHandle.Alloc	B
(	I
bytes	I
,	I
GCHandleType.Pinned	I
)	I
;	O
NewStuff	O
stuff	O
=	O
(	O
NewStuff	O
)	O
Marshal.PtrToStructure	B
(	I
handle.AddrOfPinnedObject	B
(	I
)	I
,	O
typeof	O
(	O
NewStuff	O
)	O
)	O
;	O
handle.Free	B
(	I
)	I
;	O
return	O
stuff	O
;	O
}	O
Generic	O
version	O
:	O
T	O
ByteArrayToStructureT	O
(	O
byte	O
[	O
]	O
bytes	O
)	O
where	O
T	O
:	O
struct	O
{	O
GCHandle	O
handle	O
=	O
GCHandle.Alloc	B
(	I
bytes	I
,	I
GCHandleType.Pinned	I
)	I
;	O
T	O
stuff	O
=	O
(	O
T	O
)	O
Marshal.PtrToStructure	O
(	O
handle.AddrOfPinnedObject	B
(	I
)	I
,	O
typeof	O
(	O
T	O
)	O
)	O
;	O
handle.Free	B
(	I
)	I
;	O
return	O
stuff	O
;	O
}	O
...	O
