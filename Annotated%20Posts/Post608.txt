Regarding	O
Java	B
1.5	O
and	O
autoboxing	O
there	O
is	O
an	O
important	O
``	O
quirk	O
''	O
that	O
comes	O
to	O
play	O
when	O
comparing	O
Integer	B
objects	O
.	O
In	O
Java	B
,	O
Integer	B
objects	O
with	O
the	O
values	O
-128	O
to	O
127	O
are	O
immutable	O
(	O
that	O
is	O
,	O
for	O
one	O
particular	O
integer	O
value	O
,	O
say	O
23	O
,	O
all	O
Integer	B
objects	O
instantiated	O
through	O
your	O
program	O
with	O
the	O
value	O
23	O
points	O
to	O
the	O
exact	O
same	O
object	O
)	O
.	O
Example	O
,	O
this	O
returns	O
true	O
:	O
Integer	B
i1	I
=	I
new	I
;	O
Integer	B
i2	I
=	I
new	I
;	O
//	O
Integer	B
(	I
127	I
)	I
(	O
127	O
)	O
;	O
System.out.println	B
(	I
i1	I
==	I
i2	I
)	I
While	O
this	O
returns	O
false	O
:	O
Integer	B
i1	I
=	I
new	I
;	O
Integer	B
i2	I
=	I
new	I
;	O
//	O
Integer	B
(	I
128	I
)	I
(	O
128	O
)	O
;	O
System.out.println	B
(	I
i1	I
==	I
i2	I
)	I
The	O
==	O
compares	O
by	O
reference	O
(	O
does	O
the	O
variables	O
point	O
to	O
the	O
same	O
object	O
)	O
.	O
This	O
result	O
may	O
or	O
may	O
not	O
differ	O
depending	O
on	O
what	O
JVM	O
you	O
are	O
using	O
.	O
The	O
specification	O
autoboxing	O
for	O
Java	B
1.5	O
requires	O
that	O
integers	O
(	O
-128	O
to	O
127	O
)	O
always	O
box	O
to	O
the	O
same	O
wrapper	O
object	O
.	O
A	O
solution	O
?	O
=	O
)	O
One	O
should	O
always	O
use	O
the	O
Integer.equals	B
(	I
)	I
method	O
when	O
comparing	O
Integer	B
objects	O
.	O
)	O
;	O
//	O
System.out.println	B
(	I
i1.equals	I
(	I
i2	I
)	I
More	O
info	O
at	O
java.net	O
Example	O
at	O
bexhuff.com	O
