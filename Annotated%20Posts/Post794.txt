Here	O
is	O
a	O
UDF	O
which	O
will	O
do	O
it	O
.	O
It	O
will	O
return	O
a	O
table	O
of	O
the	O
delimited	O
values	O
,	O
have	O
n't	O
tried	O
all	O
scenarios	O
on	O
it	O
but	O
your	O
example	O
works	O
fine	O
.	O
CREATE	O
FUNCTION	O
SplitString	O
(	O
--	O
Add	O
the	O
parameters	O
for	O
the	O
function	O
here	O
@	O
myString	O
,	O
@	O
deliminator	O
)	O
RETURNS	O
@	O
ReturnTable	O
TABLE	O
(	O
--	O
Add	O
the	O
column	O
definitions	O
for	O
the	O
TABLE	O
variable	O
here	O
[	O
id	O
]	O
[	O
int	O
]	O
NOT	O
NULL	O
,	O
[	O
part	O
]	O
NULL	O
)	O
ASBEGIN	O
Declare	O
@	O
iSpaces	O
int	O
Declare	O
@	O
part	O
--	O
initialize	O
spaces	O
Select	O
@	O
iSpaces	O
=	O
While	O
@	O
iSpaces	O
0	O
Begin	O
Select	O
@	O
part	O
=	O
)	O
Insert	O
Into	O
Select	O
@	O
part	O
Select	O
@	O
myString	O
=	O
+	O
-	O
)	O
Select	O
@	O
iSpaces	O
=	O
end	O
If	O
0	O
Insert	O
Into	O
@	O
ReturnTable	O
Select	O
@	O
myString	O
RETURN	O
varchar	O
(	O
500	O
)	O
varchar	O
(	O
10	O
)	O
IDENTITY	O
(	O
1,1	O
)	O
[	O
varchar	O
]	O
(	O
50	O
)	O
varchar	O
(	O
50	O
)	O
charindex	B
(	I
@	I
deliminator	I
,	I
@	I
myString,0	I
)	I
substring	B
(	I
@	I
myString,0	I
,	I
charindex	I
(	I
@	I
deliminator	I
,	I
@	I
myString,0	I
)	I
@	O
ReturnTable	O
(	O
part	O
)	O
substring	B
(	I
@	I
mystring	I
,	I
charindex	B
(	I
@	I
deliminator	I
,	I
@	I
myString,0	I
)	I
len	B
(	I
@	I
deliminator	I
)	I
,	O
len	B
(	I
@	I
myString	I
)	I
(	O
'	O
'	O
,	O
@	O
myString,0	O
)	O
charindex	B
(	I
@	I
deliminator	I
,	I
@	I
myString,0	I
)	I
len	B
(	I
@	I
myString	I
)	I
You	O
would	O
call	O
it	O
like	O
this	O
:	O
Select	O
*	O
From	O
(	O
'Hello	O
John	O
Smith	O
'	O
,	O
'	O
'	O
)	O
Edit	O
:	O
Updated	O
solution	O
to	O
handle	O
delimters	O
with	O
a	O
len1	O
as	O
in	O
:	O
select	O
*	O
From	O
SplitString	B
(	I
'Hello**John**Smith	I
'	I
,	I
'**	I
'	I
)	I
