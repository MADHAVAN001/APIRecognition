Why	O
are	O
pointers	O
such	O
a	O
leading	O
factor	O
of	O
confusion	O
for	O
many	O
new	O
,	O
and	O
even	O
old	O
,	O
college	O
level	O
students	O
in	O
the	O
C/C++	O
language	O
?	O
The	O
concept	O
of	O
a	O
placeholder	O
for	O
a	O
value	O
-	O
variables	O
-	O
maps	O
onto	O
something	O
we	O
're	O
taught	O
in	O
school	O
-	O
algebra	O
.	O
There	O
is	O
n't	O
an	O
existing	O
parallel	O
you	O
can	O
draw	O
without	O
understanding	O
how	O
memory	O
is	O
physically	O
laid	O
out	O
within	O
a	O
computer	O
,	O
and	O
no	O
one	O
thinks	O
about	O
this	O
kind	O
of	O
thing	O
until	O
they	O
're	O
dealing	O
with	O
low	O
level	O
things	O
-	O
at	O
the	O
C/C++/byte	O
communications	O
level	O
.	O
Are	O
there	O
any	O
tools	O
or	O
thought	O
processes	O
that	O
helped	O
you	O
understand	O
how	O
pointers	O
work	O
at	O
the	O
variable	O
,	O
function	O
,	O
and	O
beyond	O
level	O
?	O
Addresses	O
boxes	O
.	O
I	O
remember	O
when	O
I	O
was	O
learning	O
to	O
program	O
BASIC	O
into	O
microcomputers	O
,	O
there	O
were	O
these	O
pretty	O
books	O
with	O
games	O
in	O
them	O
,	O
and	O
sometimes	O
you	O
had	O
to	O
poke	O
values	O
into	O
particular	O
addresses	O
.	O
They	O
had	O
a	O
picture	O
of	O
a	O
bunch	O
of	O
boxes	O
,	O
incrementally	O
labelled	O
with	O
0	O
,	O
1	O
,	O
2	O
...	O
and	O
it	O
was	O
explained	O
that	O
only	O
one	O
small	O
thing	O
(	O
a	O
byte	O
)	O
could	O
fit	O
in	O
these	O
boxes	O
,	O
and	O
there	O
were	O
a	O
lot	O
of	O
them	O
-	O
some	O
computers	O
had	O
as	O
many	O
as	O
65535	O
!	O
They	O
were	O
next	O
to	O
each	O
other	O
,	O
and	O
they	O
all	O
had	O
an	O
address	O
.	O
What	O
are	O
some	O
good	O
practice	O
things	O
that	O
can	O
be	O
done	O
to	O
bring	O
somebody	O
to	O
the	O
level	O
of	O
,	O
``	O
Ah-hah	O
,	O
I	O
got	O
it	O
,	O
''	O
without	O
getting	O
them	O
bogged	O
down	O
in	O
the	O
overall	O
concept	O
?	O
Basically	O
,	O
drill	O
like	O
scenarios	O
.	O
For	O
a	O
drill	O
?	O
Make	O
a	O
struct	O
:	O
struct	O
{	O
char	O
a	O
;	O
char	O
b	O
;	O
char	O
c	O
;	O
char	O
d	O
;	O
}	O
mystruct	O
;	O
mystruct.a	O
=	O
'r	O
'	O
;	O
mystruct.b	O
=	O
's	O
'	O
;	O
mystruct.c	O
=	O
't	O
'	O
;	O
mystruct.d	O
=	O
'u	O
'	O
;	O
char*	O
my_pointer	O
;	O
my_pointer	O
=	O
mystruct.b	O
;	O
cout	O
'Start	O
:	O
my_pointer	O
=	O
'	O
*my_pointer	O
endl	O
;	O
my_pointer++	O
;	O
cout	O
'After	O
:	O
my_pointer	O
=	O
'	O
*my_pointer	O
endl	O
;	O
my_pointer	O
=	O
mystruct.a	O
;	O
cout	O
'Then	O
:	O
my_pointer	O
=	O
'	O
*my_pointer	O
endl	O
;	O
my_pointer	O
=	O
my_pointer	O
+	O
3	O
;	O
cout	O
'End	O
:	O
my_pointer	O
=	O
'	O
*my_pointer	O
endl	O
;	O
Same	O
example	O
as	O
above	O
,	O
except	O
in	O
C	O
:	O
//	O
Same	O
example	O
as	O
above	O
,	O
except	O
in	O
C	O
:	O
struct	O
{	O
char	O
a	O
;	O
char	O
b	O
;	O
char	O
c	O
;	O
char	O
d	O
;	O
}	O
mystruct	O
;	O
mystruct.a	O
=	O
'r	O
'	O
;	O
mystruct.b	O
=	O
's	O
'	O
;	O
mystruct.c	O
=	O
't	O
'	O
;	O
mystruct.d	O
=	O
'u	O
'	O
;	O
char*	O
my_pointer	O
;	O
my_pointer	O
=	O
mystruct.b	O
;	O
printf	O
(	O
``	O
Start	O
:	O
my_pointer	O
=	O
%	O
c\n	O
''	O
,	O
*my_pointer	O
)	O
;	O
my_pointer++	O
;	O
printf	O
(	O
``	O
After	O
:	O
my_pointer	O
=	O
%	O
c\n	O
''	O
,	O
*my_pointer	O
)	O
;	O
my_pointer	O
=	O
mystruct.a	O
;	O
printf	O
(	O
``	O
Then	O
:	O
my_pointer	O
=	O
%	O
c\n	O
''	O
,	O
*my_pointer	O
)	O
;	O
my_pointer	O
=	O
my_pointer	O
+	O
3	O
;	O
printf	O
(	O
``	O
End	O
:	O
my_pointer	O
=	O
%	O
c\n	O
''	O
,	O
*my_pointer	O
)	O
;	O
Output	O
:	O
Start	O
:	O
my_pointer	O
=	O
s	O
After	O
:	O
my_pointer	O
=	O
t	O
Then	O
:	O
my_pointer	O
=	O
r	O
End	O
:	O
my_pointer	O
=	O
u	O
Perhaps	O
that	O
explains	O
some	O
of	O
the	O
basics	O
through	O
example	O
?	O
